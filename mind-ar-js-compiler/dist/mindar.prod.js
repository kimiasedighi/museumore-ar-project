/*! For license information please see mindar.prod.js.LICENSE.txt */
(()=>{var e={1113:function(e){e.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"encode",(function(){return N})),n.d(t,"decode",(function(){return U})),n.d(t,"decodeAsync",(function(){return X})),n.d(t,"decodeArrayStream",(function(){return Z})),n.d(t,"decodeStream",(function(){return Q})),n.d(t,"Decoder",(function(){return B})),n.d(t,"Encoder",(function(){return T})),n.d(t,"ExtensionCodec",(function(){return S})),n.d(t,"ExtData",(function(){return p})),n.d(t,"EXT_TIMESTAMP",(function(){return g})),n.d(t,"encodeDateToTimeSpec",(function(){return b})),n.d(t,"encodeTimeSpecToTimestamp",(function(){return y})),n.d(t,"decodeTimestampToTimeSpec",(function(){return x})),n.d(t,"encodeTimestampExtension",(function(){return v})),n.d(t,"decodeTimestampExtension",(function(){return w}));var r=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,s,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(s)throw s.error}}return a},s=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e},i="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function a(e){for(var t=e.length,n=0,r=0;r<t;){var s=e.charCodeAt(r++);if(0!=(4294967168&s))if(0==(4294965248&s))n+=2;else{if(s>=55296&&s<=56319&&r<t){var i=e.charCodeAt(r);56320==(64512&i)&&(++r,s=((1023&s)<<10)+(1023&i)+65536)}n+=0==(4294901760&s)?3:4}else n++}return n}var o=i?new TextEncoder:void 0,l="undefined"!=typeof process?200:0,u=(null==o?void 0:o.encodeInto)?function(e,t,n){o.encodeInto(e,t.subarray(n))}:function(e,t,n){t.set(o.encode(e),n)};function c(e,t,n){for(var r=t,i=r+n,a=[],o="";r<i;){var l=e[r++];if(0==(128&l))a.push(l);else if(192==(224&l)){var u=63&e[r++];a.push((31&l)<<6|u)}else if(224==(240&l)){u=63&e[r++];var c=63&e[r++];a.push((31&l)<<12|u<<6|c)}else if(240==(248&l)){var h=(7&l)<<18|(u=63&e[r++])<<12|(c=63&e[r++])<<6|63&e[r++];h>65535&&(h-=65536,a.push(h>>>10&1023|55296),h=56320|1023&h),a.push(h)}else a.push(l);a.length>=4096&&(o+=String.fromCharCode.apply(String,s(a)),a.length=0)}return a.length>0&&(o+=String.fromCharCode.apply(String,s(a))),o}var h=i?new TextDecoder:null,d="undefined"!=typeof process?200:0,p=function(e,t){this.type=e,this.data=t};function f(e,t,n){var r=Math.floor(n/4294967296),s=n;e.setUint32(t,r),e.setUint32(t+4,s)}function m(e,t){return 4294967296*e.getInt32(t)+e.getUint32(t+4)}var g=-1;function y(e){var t,n=e.sec,r=e.nsec;if(n>=0&&r>=0&&n<=17179869183){if(0===r&&n<=4294967295){var s=new Uint8Array(4);return(t=new DataView(s.buffer)).setUint32(0,n),s}var i=n/4294967296,a=4294967295&n;return s=new Uint8Array(8),(t=new DataView(s.buffer)).setUint32(0,r<<2|3&i),t.setUint32(4,a),s}return s=new Uint8Array(12),(t=new DataView(s.buffer)).setUint32(0,r),f(t,4,n),s}function b(e){var t=e.getTime(),n=Math.floor(t/1e3),r=1e6*(t-1e3*n),s=Math.floor(r/1e9);return{sec:n+s,nsec:r-1e9*s}}function v(e){return e instanceof Date?y(b(e)):null}function x(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var n=t.getUint32(0);return{sec:4294967296*(3&n)+t.getUint32(4),nsec:n>>>2};case 12:return{sec:m(t,4),nsec:t.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+e.length)}}function w(e){var t=x(e);return new Date(1e3*t.sec+t.nsec/1e6)}var k={type:g,encode:v,decode:w},S=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(k)}return e.prototype.register=function(e){var t=e.type,n=e.encode,r=e.decode;if(t>=0)this.encoders[t]=n,this.decoders[t]=r;else{var s=1+t;this.builtInEncoders[s]=n,this.builtInDecoders[s]=r}},e.prototype.tryToEncode=function(e,t){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(r=this.builtInEncoders[n])&&null!=(s=r(e,t)))return new p(-1-n,s);for(n=0;n<this.encoders.length;n++){var r,s;if(null!=(r=this.encoders[n])&&null!=(s=r(e,t)))return new p(n,s)}return e instanceof p?e:null},e.prototype.decode=function(e,t,n){var r=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return r?r(e,t,n):new p(t,e)},e.defaultCodec=new e,e}();function E(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var I=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},T=function(){function e(e,t,n,r,s,i,a){void 0===e&&(e=S.defaultCodec),void 0===n&&(n=100),void 0===r&&(r=2048),void 0===s&&(s=!1),void 0===i&&(i=!1),void 0===a&&(a=!1),this.extensionCodec=e,this.context=t,this.maxDepth=n,this.initialBufferSize=r,this.sortKeys=s,this.forceFloat32=i,this.ignoreUndefined=a,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.encode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth "+t);null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):this.encodeObject(e,t)},e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),n=new Uint8Array(t),r=new DataView(t);n.set(this.bytes),this.view=r,this.bytes=n},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: "+e+" bytes in UTF-8");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){var t=e.length;if(i&&t>l){var n=a(e);this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),u(e,this.bytes,this.pos),this.pos+=n}else n=a(e),this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),function(e,t,n){for(var r=e.length,s=n,i=0;i<r;){var a=e.charCodeAt(i++);if(0!=(4294967168&a)){if(0==(4294965248&a))t[s++]=a>>6&31|192;else{if(a>=55296&&a<=56319&&i<r){var o=e.charCodeAt(i);56320==(64512&o)&&(++i,a=((1023&a)<<10)+(1023&o)+65536)}0==(4294901760&a)?(t[s++]=a>>12&15|224,t[s++]=a>>6&63|128):(t[s++]=a>>18&7|240,t[s++]=a>>12&63|128,t[s++]=a>>6&63|128)}t[s++]=63&a|128}else t[s++]=a}}(e,this.bytes,this.pos),this.pos+=n},e.prototype.encodeObject=function(e,t){var n=this.extensionCodec.tryToEncode(e,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: "+t);this.writeU8(198),this.writeU32(t)}var n=E(e);this.writeU8a(n)},e.prototype.encodeArray=function(e,t){var n,r,s=e.length;if(s<16)this.writeU8(144+s);else if(s<65536)this.writeU8(220),this.writeU16(s);else{if(!(s<4294967296))throw new Error("Too large array: "+s);this.writeU8(221),this.writeU32(s)}try{for(var i=I(e),a=i.next();!a.done;a=i.next()){var o=a.value;this.encode(o,t+1)}}catch(e){n={error:e}}finally{try{a&&!a.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}},e.prototype.countWithoutUndefined=function(e,t){var n,r,s=0;try{for(var i=I(t),a=i.next();!a.done;a=i.next())void 0!==e[a.value]&&s++}catch(e){n={error:e}}finally{try{a&&!a.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}return s},e.prototype.encodeMap=function(e,t){var n,r,s=Object.keys(e);this.sortKeys&&s.sort();var i=this.ignoreUndefined?this.countWithoutUndefined(e,s):s.length;if(i<16)this.writeU8(128+i);else if(i<65536)this.writeU8(222),this.writeU16(i);else{if(!(i<4294967296))throw new Error("Too large map object: "+i);this.writeU8(223),this.writeU32(i)}try{for(var a=I(s),o=a.next();!o.done;o=a.next()){var l=o.value,u=e[l];this.ignoreUndefined&&void 0===u||(this.encodeString(l),this.encode(u,t+1))}}catch(e){n={error:e}}finally{try{o&&!o.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: "+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,n){var r=n/4294967296,s=n;e.setUint32(t,r),e.setUint32(t+4,s)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),f(this.view,this.pos,e),this.pos+=8},e}(),C={};function N(e,t){void 0===t&&(t=C);var n=new T(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined);return n.encode(e,1),n.getUint8Array()}function A(e){return(e<0?"-":"")+"0x"+Math.abs(e).toString(16).padStart(2,"0")}var M=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.get=function(e,t,n){var r=this.caches[n-1],s=r.length;e:for(var i=0;i<s;i++){for(var a=r[i],o=a.bytes,l=0;l<n;l++)if(o[l]!==e[t+l])continue e;return a.value}return null},e.prototype.store=function(e,t){var n=this.caches[e.length-1],r={bytes:e,value:t};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},e.prototype.decode=function(e,t,n){var r=this.get(e,t,n);if(null!=r)return r;var s=c(e,t,n),i=Uint8Array.prototype.slice.call(e,t,t+n);return this.store(i,s),s},e}(),_=function(e,t){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},R=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,s){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,s,(t=e[n](t)).done,t.value)}))}}},D=function(e){return this instanceof D?(this.v=e,this):new D(e)},$=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(e,t||[]),i=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(e){s[e]&&(r[e]=function(t){return new Promise((function(n,r){i.push([e,t,n,r])>1||o(e,t)}))})}function o(e,t){try{(n=s[e](t)).value instanceof D?Promise.resolve(n.value.v).then(l,u):c(i[0][2],n)}catch(e){c(i[0][3],e)}var n}function l(e){o("next",e)}function u(e){o("throw",e)}function c(e,t){e(t),i.shift(),i.length&&o(i[0][0],i[0][1])}},L=new DataView(new ArrayBuffer(0)),F=new Uint8Array(L.buffer),O=function(){try{L.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),z=new O("Insufficient data"),P=new M,B=function(){function e(e,t,n,r,s,i,a,o){void 0===e&&(e=S.defaultCodec),void 0===n&&(n=4294967295),void 0===r&&(r=4294967295),void 0===s&&(s=4294967295),void 0===i&&(i=4294967295),void 0===a&&(a=4294967295),void 0===o&&(o=P),this.extensionCodec=e,this.context=t,this.maxStrLength=n,this.maxBinLength=r,this.maxArrayLength=s,this.maxMapLength=i,this.maxExtLength=a,this.cachedKeyDecoder=o,this.totalPos=0,this.pos=0,this.view=L,this.bytes=F,this.headByte=-1,this.stack=[]}return e.prototype.setBuffer=function(e){this.bytes=E(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=E(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining()){var t=this.bytes.subarray(this.pos),n=E(e),r=new Uint8Array(t.length+n.length);r.set(t),r.set(n,t.length),this.setBuffer(r)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return void 0===e&&(e=1),this.view.byteLength-this.pos>=e},e.prototype.createNoExtraBytesError=function(e){var t=this.view,n=this.pos;return new RangeError("Extra "+(t.byteLength-n)+" byte(s) found at buffer["+e+"]")},e.prototype.decodeSingleSync=function(){var e=this.decodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return e},e.prototype.decodeSingleAsync=function(e){var t,n,r,s;return function(e,t,n,r){return new(n||(n=Promise))((function(s,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,o)}l((r=r.apply(e,t||[])).next())}))}(this,void 0,void 0,(function(){var i,a,o,l,u,c,h,d;return _(this,(function(p){switch(p.label){case 0:i=!1,p.label=1;case 1:p.trys.push([1,6,7,12]),t=R(e),p.label=2;case 2:return[4,t.next()];case 3:if((n=p.sent()).done)return[3,5];if(o=n.value,i)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(o);try{a=this.decodeSync(),i=!0}catch(e){if(!(e instanceof O))throw e}this.totalPos+=this.pos,p.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=p.sent(),r={error:l},[3,12];case 7:return p.trys.push([7,,10,11]),n&&!n.done&&(s=t.return)?[4,s.call(t)]:[3,9];case 8:p.sent(),p.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(i){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,a]}throw c=(u=this).headByte,h=u.pos,d=u.totalPos,new RangeError("Insufficient data in parcing "+A(c)+" at "+d+" ("+h+" in the current buffer)")}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return $(this,arguments,(function(){var n,r,s,i,a,o,l,u,c;return _(this,(function(h){switch(h.label){case 0:n=t,r=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),s=R(e),h.label=2;case 2:return[4,D(s.next())];case 3:if((i=h.sent()).done)return[3,12];if(a=i.value,t&&0===r)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(a),n&&(r=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,D(this.decodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=h.sent())instanceof O))throw o;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=h.sent(),u={error:l},[3,19];case 14:return h.trys.push([14,,17,18]),i&&!i.done&&(c=s.return)?[4,D(c.call(s))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.decodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(r=e-128)){this.pushMapState(r),this.complete();continue e}t={}}else if(e<160){if(0!=(r=e-144)){this.pushArrayState(r),this.complete();continue e}t=[]}else{var n=e-160;t=this.decodeUtf8String(n,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)n=this.lookU8(),t=this.decodeUtf8String(n,1);else if(218===e)n=this.lookU16(),t=this.decodeUtf8String(n,2);else if(219===e)n=this.lookU32(),t=this.decodeUtf8String(n,4);else if(220===e){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue e}t=[]}else if(221===e){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue e}t=[]}else if(222===e){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue e}t={}}else if(223===e){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue e}t={}}else if(196===e){var r=this.lookU8();t=this.decodeBinary(r,1)}else if(197===e)r=this.lookU16(),t=this.decodeBinary(r,2);else if(198===e)r=this.lookU32(),t=this.decodeBinary(r,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)r=this.lookU8(),t=this.decodeExtension(r,1);else if(200===e)r=this.lookU16(),t=this.decodeExtension(r,2);else{if(201!==e)throw new Error("Unrecognized type byte: "+A(e));r=this.lookU32(),t=this.decodeExtension(r,4)}this.complete();for(var s=this.stack;s.length>0;){var i=s[s.length-1];if(0===i.type){if(i.array[i.position]=t,i.position++,i.position!==i.size)continue e;s.pop(),t=i.array}else{if(1===i.type){if(void 0,"string"!=(a=typeof t)&&"number"!==a)throw new Error("The type of key must be string or number but "+typeof t);i.key=t,i.type=2;continue e}if(i.map[i.key]=t,i.readCount++,i.readCount!==i.size){i.key=null,i.type=1;continue e}s.pop(),t=i.map}}return t}var a},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new Error("Unrecognized array type byte: "+A(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new Error("Max length exceeded: map length ("+e+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+e+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var n;if(e>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+e+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+t+e)throw z;var r,s=this.pos+t;return r=this.stateIsMapKey()&&(null===(n=this.cachedKeyDecoder)||void 0===n?void 0:n.canBeCached(e))?this.cachedKeyDecoder.decode(this.bytes,s,e):i&&e>d?function(e,t,n){var r=e.subarray(t,t+n);return h.decode(r)}(this.bytes,s,e):c(this.bytes,s,e),this.pos+=t+e,r},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+e+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(e+t))throw z;var n=this.pos+t,r=this.bytes.subarray(n,n+e);return this.pos+=t+e,r},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+e+") > maxExtLength ("+this.maxExtLength+")");var n=this.view.getInt8(this.pos+t),r=this.decodeBinary(e,t+1);return this.extensionCodec.decode(r,n,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,n=(e=this.view,t=this.pos,4294967296*e.getUint32(t)+e.getUint32(t+4));return this.pos+=8,n},e.prototype.readI64=function(){var e=m(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),V={};function U(e,t){void 0===t&&(t=V);var n=new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength);return n.setBuffer(e),n.decodeSingleSync()}var H=function(e,t){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},W=function(e){return this instanceof W?(this.v=e,this):new W(e)},G=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(e,t||[]),i=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(e){s[e]&&(r[e]=function(t){return new Promise((function(n,r){i.push([e,t,n,r])>1||o(e,t)}))})}function o(e,t){try{(n=s[e](t)).value instanceof W?Promise.resolve(n.value.v).then(l,u):c(i[0][2],n)}catch(e){c(i[0][3],e)}var n}function l(e){o("next",e)}function u(e){o("throw",e)}function c(e,t){e(t),i.shift(),i.length&&o(i[0][0],i[0][1])}};function j(e){return null!=e[Symbol.asyncIterator]?e:function(e){return G(this,arguments,(function(){var t,n,r,s;return H(this,(function(i){switch(i.label){case 0:t=e.getReader(),i.label=1;case 1:i.trys.push([1,,9,10]),i.label=2;case 2:return[4,W(t.read())];case 3:return n=i.sent(),r=n.done,s=n.value,r?[4,W(void 0)]:[3,5];case 4:return[2,i.sent()];case 5:return function(e){if(null==e)throw new Error("Assertion Failure: value must not be null nor undefined")}(s),[4,W(s)];case 6:return[4,i.sent()];case 7:return i.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}var q=function(e,t,n,r){return new(n||(n=Promise))((function(s,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,o)}l((r=r.apply(e,t||[])).next())}))},K=function(e,t){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}};function X(e,t){return void 0===t&&(t=V),q(this,void 0,void 0,(function(){var n;return K(this,(function(r){return n=j(e),[2,new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeSingleAsync(n)]}))}))}function Z(e,t){void 0===t&&(t=V);var n=j(e);return new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(n)}function Q(e,t){void 0===t&&(t=V);var n=j(e);return new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(n)}}])},2563:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>Ge,Acos:()=>je,Acosh:()=>qe,AdadeltaOptimizer:()=>Po,AdagradOptimizer:()=>Vo,AdamOptimizer:()=>Wo,AdamaxOptimizer:()=>Zo,Add:()=>Ke,AddN:()=>Xe,All:()=>Ze,Any:()=>Qe,ArgMax:()=>Ye,ArgMin:()=>Je,Asin:()=>et,Asinh:()=>tt,Atan:()=>nt,Atan2:()=>st,Atanh:()=>rt,AvgPool:()=>it,AvgPool3D:()=>ot,AvgPool3DGrad:()=>lt,AvgPoolGrad:()=>at,BatchMatMul:()=>ut,BatchToSpaceND:()=>ct,Bincount:()=>ht,BroadcastTo:()=>dt,Callback:()=>Ck,CallbackList:()=>Ny,Cast:()=>pt,Ceil:()=>ft,ClipByValue:()=>mt,Complex:()=>gt,ComplexAbs:()=>yt,Concat:()=>bt,Conv2D:()=>vt,Conv2DBackpropFilter:()=>xt,Conv2DBackpropInput:()=>wt,Conv3D:()=>kt,Conv3DBackpropFilterV2:()=>St,Conv3DBackpropInputV2:()=>Et,Cos:()=>It,Cosh:()=>Tt,CropAndResize:()=>Nt,Cumsum:()=>Ct,CustomCallback:()=>_y,DataStorage:()=>H,DenseBincount:()=>At,DepthToSpace:()=>Mt,DepthwiseConv2dNative:()=>_t,DepthwiseConv2dNativeBackpropFilter:()=>Rt,DepthwiseConv2dNativeBackpropInput:()=>Dt,Diag:()=>$t,Dilation2D:()=>Lt,Dilation2DBackpropFilter:()=>Ot,Dilation2DBackpropInput:()=>Ft,ENV:()=>Ue,EarlyStopping:()=>Mk,Elu:()=>Pt,EluGrad:()=>Bt,Environment:()=>Pe,Equal:()=>Ut,Erf:()=>Vt,Exp:()=>Ht,ExpandDims:()=>Wt,Expm1:()=>Gt,FFT:()=>jt,Fill:()=>qt,FlipLeftRight:()=>Kt,Floor:()=>Xt,FloorDiv:()=>Zt,FromPixels:()=>Fr,FusedBatchNorm:()=>Qt,FusedConv2D:()=>Pr,FusedDepthwiseConv2D:()=>Br,GatherNd:()=>Jt,GatherV2:()=>Yt,GraphModel:()=>aE,Greater:()=>en,GreaterEqual:()=>tn,History:()=>My,IFFT:()=>rn,Identity:()=>nn,Imag:()=>sn,InputSpec:()=>my,IsFinite:()=>an,IsInf:()=>on,IsNan:()=>ln,KernelBackend:()=>W,LRN:()=>vn,LRNGrad:()=>xn,LayerVariable:()=>dy,LayersModel:()=>zb,LeakyRelu:()=>un,Less:()=>cn,LessEqual:()=>hn,LinSpace:()=>dn,Log:()=>pn,Log1p:()=>fn,LogSoftmax:()=>bn,LogicalAnd:()=>mn,LogicalNot:()=>gn,LogicalOr:()=>yn,Max:()=>wn,MaxPool:()=>Sn,MaxPool3D:()=>In,MaxPool3DGrad:()=>Tn,MaxPoolGrad:()=>En,MaxPoolWithArgmax:()=>Cn,Maximum:()=>kn,Mean:()=>Nn,Min:()=>An,Minimum:()=>Mn,MirrorPad:()=>_n,Mod:()=>Rn,MomentumOptimizer:()=>Yo,Multinomial:()=>Dn,Multiply:()=>$n,Neg:()=>Ln,NonMaxSuppressionV3:()=>On,NonMaxSuppressionV4:()=>zn,NonMaxSuppressionV5:()=>Pn,NotEqual:()=>Fn,OP_SCOPE_SUFFIX:()=>qs,OneHot:()=>Vn,OnesLike:()=>Bn,Optimizer:()=>zo,Pack:()=>Un,PadV2:()=>Hn,Pool:()=>Wn,Pow:()=>Gn,Prelu:()=>jn,Prod:()=>qn,RMSPropOptimizer:()=>Jo,RNN:()=>Uv,Range:()=>Kn,Rank:()=>ws,Real:()=>Xn,RealDiv:()=>zt,Reciprocal:()=>Zn,Reduction:()=>Rd,Relu:()=>Qn,Relu6:()=>rr,Reshape:()=>Yn,ResizeBilinear:()=>tr,ResizeBilinearGrad:()=>nr,ResizeNearestNeighbor:()=>Jn,ResizeNearestNeighborGrad:()=>er,Reverse:()=>sr,RotateWithOffset:()=>Or,Round:()=>ir,Rsqrt:()=>ar,SGDOptimizer:()=>Qo,ScatterNd:()=>or,Select:()=>lr,Selu:()=>ur,Sequential:()=>Vb,Sigmoid:()=>fr,Sign:()=>pr,Sin:()=>hr,Sinh:()=>dr,Slice:()=>cr,Softmax:()=>xr,Softplus:()=>mr,SpaceToBatchND:()=>br,SparseToDense:()=>Er,SplitV:()=>vr,Sqrt:()=>gr,Square:()=>kr,SquaredDifference:()=>wr,Step:()=>Lr,StridedSlice:()=>Ir,Sub:()=>Sr,Sum:()=>yr,SymbolicTensor:()=>gy,Tan:()=>Tr,Tanh:()=>Cr,Tensor:()=>vs,TensorBuffer:()=>ms,Tile:()=>Nr,TopK:()=>Ar,Transpose:()=>Mr,Unique:()=>_r,Unpack:()=>Rr,UnsortedSegmentSum:()=>Dr,Variable:()=>xs,ZerosLike:()=>$r,_FusedMatMul:()=>zr,abs:()=>Go,acos:()=>el,acosh:()=>tl,add:()=>So,addN:()=>nl,addStrict:()=>_h,all:()=>rl,any:()=>sl,argMax:()=>il,argMin:()=>al,asin:()=>ol,asinh:()=>ll,atan:()=>ul,atan2:()=>cl,atanh:()=>hl,avgPool:()=>Tl,avgPool3d:()=>Cl,backend:()=>wo,backend_util:()=>g,basicLSTMCell:()=>Rl,batchNorm:()=>$l,batchNorm2d:()=>Ll,batchNorm3d:()=>Fl,batchNorm4d:()=>Ol,batchToSpaceND:()=>Dl,bincount:()=>zl,booleanMaskAsync:()=>Eh,broadcastTo:()=>Pl,browser:()=>l,buffer:()=>Wi,callbacks:()=>_k,cast:()=>Gi,ceil:()=>Bl,clipByValue:()=>Vl,clone:()=>ji,complex:()=>Xs,concat:()=>Nl,concat1d:()=>Ul,concat2d:()=>Hl,concat3d:()=>Wl,concat4d:()=>Gl,constraints:()=>b,conv1d:()=>ql,conv2d:()=>jl,conv2dTranspose:()=>Xl,conv3d:()=>Zl,conv3dTranspose:()=>Yl,copyRegisteredKernels:()=>Zr,cos:()=>Jl,cosh:()=>eu,cosineWindow:()=>Kh,cumsum:()=>tu,customGrad:()=>Lo,data:()=>V,denseBincount:()=>nu,deprecationWarn:()=>so,depthToSpace:()=>ru,depthwiseConv2d:()=>su,deregisterOp:()=>Ok,device_util:()=>i,diag:()=>iu,dilation2d:()=>au,disableDeprecationWarnings:()=>ro,dispose:()=>co,disposeVariables:()=>io,div:()=>Io,divNoNan:()=>uu,divStrict:()=>Rh,dot:()=>cu,dropout:()=>jh,elu:()=>hu,enableDebugMode:()=>no,enableProdMode:()=>to,enclosingPowerOfTwo:()=>qh,engine:()=>ao,env:()=>Be,equal:()=>ou,equalStrict:()=>Ih,erf:()=>du,exp:()=>pu,expandDims:()=>fu,expm1:()=>mu,eye:()=>yu,fft:()=>eh,fill:()=>Bo,findBackend:()=>bo,findBackendFactory:()=>vo,floor:()=>bu,floorDiv:()=>Eo,fused:()=>f,gather:()=>vu,gatherND:()=>Gh,gather_util:()=>u,getBackend:()=>go,getGradient:()=>Wr,getKernel:()=>Hr,getKernelsForBackend:()=>Gr,grad:()=>Mo,grads:()=>_o,greater:()=>xu,greaterEqual:()=>wu,greaterEqualStrict:()=>Th,greaterStrict:()=>Ch,ifft:()=>th,imag:()=>ku,image:()=>Wd,inTopKAsync:()=>Xh,initializers:()=>v,input:()=>Gb,io:()=>a,irfft:()=>nh,isFinite:()=>Su,isInf:()=>Eu,isNaN:()=>Iu,keep:()=>ho,kernel_impls:()=>y,layers:()=>x,leakyRelu:()=>Tu,less:()=>Cu,lessEqual:()=>Nu,lessEqualStrict:()=>Nh,lessStrict:()=>Ah,linalg:()=>Gd,linspace:()=>Au,loadGraphModel:()=>oE,loadLayersModel:()=>Wb,localResponseNormalization:()=>Mu,log:()=>_u,log1p:()=>Ru,logSigmoid:()=>Lu,logSoftmax:()=>zu,logSumExp:()=>qu,logicalAnd:()=>Ku,logicalNot:()=>Xu,logicalOr:()=>Zu,logicalXor:()=>Qu,losses:()=>jd,matMul:()=>ha,math:()=>o,max:()=>Fu,maxPool:()=>Yu,maxPool3d:()=>Ju,maxPoolWithArgmax:()=>ec,maximum:()=>Xo,maximumStrict:()=>Dh,mean:()=>tc,memory:()=>oo,metrics:()=>w,min:()=>nc,minimum:()=>rc,minimumStrict:()=>$h,mirrorPad:()=>sc,mod:()=>ic,modStrict:()=>Lh,model:()=>Ub,models:()=>k,moments:()=>ac,movingAverage:()=>Uh,mul:()=>To,mulStrict:()=>Fh,multiRNNCell:()=>oc,multinomial:()=>lc,neg:()=>Du,nextFrame:()=>Zd,norm:()=>Vh,notEqual:()=>uc,notEqualStrict:()=>Mh,oneHot:()=>da,ones:()=>hc,onesLike:()=>dc,op:()=>Ks,outerProduct:()=>pc,pad:()=>fc,pad1d:()=>mc,pad2d:()=>gc,pad3d:()=>yc,pad4d:()=>bc,pool:()=>xc,pow:()=>Uo,powStrict:()=>Oh,prelu:()=>wc,print:()=>qi,prod:()=>kc,profile:()=>lo,rand:()=>Sc,randomGamma:()=>Nc,randomNormal:()=>Ac,randomUniform:()=>Mc,range:()=>_c,ready:()=>mo,real:()=>Rc,reciprocal:()=>Dc,registerBackend:()=>xo,registerCallbackConstructor:()=>jb,registerGradient:()=>qr,registerKernel:()=>jr,registerOp:()=>Lk,regularizers:()=>S,relu:()=>$c,relu6:()=>Lc,removeBackend:()=>yo,reshape:()=>Il,reverse:()=>Fc,reverse1d:()=>Oc,reverse2d:()=>zc,reverse3d:()=>Pc,reverse4d:()=>Bc,rfft:()=>sh,round:()=>Vc,rsqrt:()=>Uc,scalar:()=>Oo,scatterND:()=>Hh,scatter_util:()=>c,selu:()=>Hc,separableConv2d:()=>Wc,sequential:()=>Hb,serialization:()=>d,setBackend:()=>fo,setPlatform:()=>ko,setdiff1dAsync:()=>Gc,sigmoid:()=>Al,sign:()=>jc,signal:()=>Hd,sin:()=>qc,sinh:()=>Kc,slice:()=>Ml,slice1d:()=>Xc,slice2d:()=>Zc,slice3d:()=>Qc,slice4d:()=>Yc,slice_util:()=>h,softmax:()=>Jc,softplus:()=>$u,spaceToBatchND:()=>vc,sparseToDense:()=>Wh,spectral:()=>Ud,split:()=>rh,sqrt:()=>Co,square:()=>No,squaredDifference:()=>ih,squaredDifferenceStrict:()=>zh,squeeze:()=>ah,stack:()=>oh,step:()=>lh,stridedSlice:()=>uh,sub:()=>Ho,subStrict:()=>Ph,sum:()=>Ou,sumOutType:()=>Ns,tan:()=>ch,tanh:()=>_l,tensor:()=>Qs,tensor1d:()=>hh,tensor2d:()=>dh,tensor3d:()=>ma,tensor4d:()=>ph,tensor5d:()=>fh,tensor6d:()=>mh,tensor_util:()=>s,test_util:()=>p,tidy:()=>uo,tile:()=>gu,time:()=>po,topk:()=>gh,train:()=>Kd,transpose:()=>pa,truncatedNormal:()=>yh,unique:()=>bh,unregisterGradient:()=>Xr,unregisterKernel:()=>Kr,unsortedSegmentSum:()=>vh,unstack:()=>xh,upcastType:()=>Cs,util:()=>r,valueAndGrad:()=>Ro,valueAndGrads:()=>Do,variable:()=>wh,variableGrads:()=>$o,version:()=>kP,version_converter:()=>lE,version_core:()=>eo,version_layers:()=>db,where:()=>lu,whereAsync:()=>Sh,zeros:()=>cc,zerosLike:()=>Ao});var r={};n.r(r),n.d(r,{arraysEqual:()=>se,assert:()=>Y,assertNonNegativeIntegerDimensions:()=>$e,assertNonNull:()=>ee,assertShapesMatch:()=>J,bytesFromStringArray:()=>we,bytesPerElement:()=>xe,checkConversionForErrors:()=>ge,clamp:()=>q,computeStrides:()=>Ne,createScalarValue:()=>us,createShuffledIndices:()=>le,decodeString:()=>fs,distSquared:()=>Q,encodeString:()=>ps,fetch:()=>ds,flatten:()=>te,getArrayFromDType:()=>me,getTypedArrayFromDType:()=>fe,hasEncodingLoss:()=>be,indexToLoc:()=>Fe,inferDtype:()=>Ie,inferFromImplicitShape:()=>he,isBoolean:()=>Se,isFunction:()=>Te,isInt:()=>ie,isNumber:()=>Ee,isPromise:()=>Oe,isScalarShape:()=>re,isString:()=>ke,isTypedArray:()=>ve,isValidDtype:()=>ye,locToIndex:()=>Le,makeOnesTypedArray:()=>_e,makeZerosNestedTypedArray:()=>De,makeZerosTypedArray:()=>Re,nearestDivisor:()=>Ce,nearestLargerEven:()=>K,now:()=>hs,parseAxisParam:()=>de,randUniform:()=>Z,repeatedTry:()=>ce,rightPad:()=>ue,shuffle:()=>j,sizeFromShape:()=>ne,sizeToSquarishShape:()=>oe,squeezeShape:()=>pe,sum:()=>X,tanh:()=>ae,toNestedArray:()=>Me,toTypedArray:()=>cs});var s={};n.r(s),n.d(s,{assertTypesMatch:()=>Ms,getTensorsInContainer:()=>Rs,isTensorInList:()=>_s,makeTypesMatch:()=>As});var i={};n.r(i),n.d(i,{isBrowser:()=>Bs,isMobile:()=>Ps});var a={};n.r(a),n.d(a,{browserFiles:()=>Qi,browserHTTPRequest:()=>aa,concatenateArrayBuffers:()=>ii,copyModel:()=>Bi,decodeWeights:()=>ti,encodeWeights:()=>ei,fromMemory:()=>ua,getLoadHandlers:()=>pi,getModelArtifactsInfoForJSON:()=>oi,getSaveHandlers:()=>di,http:()=>ia,isHTTPScheme:()=>ra,listModels:()=>zi,loadWeights:()=>ea,moveModel:()=>Vi,registerLoadRouter:()=>hi,registerSaveRouter:()=>ci,removeModel:()=>Pi,weightsLoaderFactory:()=>ta,withSaveHandler:()=>ca});var o={};n.r(o),n.d(o,{confusionMatrix:()=>fa});var l={};n.r(l),n.d(l,{fromPixels:()=>ba,toPixels:()=>ya});var u={};n.r(u),n.d(u,{prepareAndValidate:()=>va});var c={};n.r(c),n.d(c,{calculateShapes:()=>ka,validateInput:()=>wa,validateUpdateShape:()=>xa});var h={};n.r(h),n.d(h,{assertParamsValid:()=>Sa,computeFlatOffset:()=>Fa,computeOutShape:()=>Ia,getNormalizedAxes:()=>Aa,isSliceContinous:()=>La,maskToAxes:()=>Ea,parseSliceParams:()=>Oa,sliceInfo:()=>za,startForAxis:()=>Da,startIndicesWithElidedDims:()=>Ma,stopForAxis:()=>$a,stopIndicesWithElidedDims:()=>_a,stridesForAxis:()=>Ra,stridesWithElidedDims:()=>Ta});var d={};n.r(d),n.d(d,{Serializable:()=>Pa,SerializationMap:()=>Ba,registerClass:()=>Va});var p={};n.r(p),n.d(p,{TEST_EPSILON_FLOAT16:()=>Ha,encodeStrings:()=>Ja,expectArrayBuffersEqual:()=>Ya,expectArraysClose:()=>Wa,expectArraysEqual:()=>Ka,expectNumbersClose:()=>Xa,expectPromiseToFail:()=>qa,expectValuesInRange:()=>Qa,testEpsilon:()=>Ga});var f={};n.r(f),n.d(f,{conv2d:()=>td,depthwiseConv2d:()=>sd,matMul:()=>id});var m={};n.r(m),n.d(m,{collectGatherOpShapeInfo:()=>Np,computeOutShape:()=>Cp,segOpComputeOptimalWindowSize:()=>Tp});var g={};n.r(g),n.d(g,{ERF_A1:()=>cp,ERF_A2:()=>hp,ERF_A3:()=>dp,ERF_A4:()=>pp,ERF_A5:()=>fp,ERF_P:()=>up,PARALLELIZE_THRESHOLD:()=>Jd,SELU_SCALE:()=>lp,SELU_SCALEALPHA:()=>op,applyActivation:()=>Jh,assertAndGetBroadcastShape:()=>Ko,assertAxesAreInnerMostDims:()=>Hu,assertParamsConsistent:()=>Qd,assignToTypedArray:()=>kp,axesAreInnerMostDims:()=>Pu,calculateShapes:()=>ka,castTensor:()=>Ap,combineLocations:()=>Bu,complexWithEvenIndex:()=>vp,complexWithOddIndex:()=>xp,computeConv2DInfo:()=>ml,computeConv3DInfo:()=>gl,computeDefaultPad:()=>yl,computeDilation2DInfo:()=>dl,computeOptimalWindowSize:()=>ep,computeOutAndReduceShapes:()=>Vu,computeOutShape:()=>Yd,computePool2DInfo:()=>pl,computePool3DInfo:()=>fl,convertConv2DDataFormat:()=>El,eitherStridesOrDilationsAreOne:()=>Sl,expandShapeToKeepDim:()=>Uu,exponent:()=>Ep,exponents:()=>Sp,fromStringArrayToUint8:()=>Rp,fromUint8ToStringArray:()=>_p,getAxesPermutation:()=>Wu,getBroadcastDims:()=>jo,getComplexWithIndex:()=>wp,getFusedBiasGradient:()=>Yh,getFusedDyActivation:()=>Qh,getImageCenter:()=>tp,getInnerMostAxes:()=>ju,getPermuted:()=>rp,getReductionAxes:()=>qo,getReshaped:()=>np,getReshapedPermuted:()=>sp,getSliceBeginCoords:()=>ip,getSliceSize:()=>ap,getUndoAxesPermutation:()=>Gu,log:()=>gp,mergeRealAndImagArrays:()=>yp,prepareAndValidate:()=>va,prepareSplitSize:()=>Ip,reshapeTensor:()=>Mp,segment_util:()=>m,shouldFuse:()=>ed,slice_util:()=>h,splitRealAndImagArrays:()=>bp,tupleValuesAreOne:()=>kl,upcastType:()=>Cs,validateInput:()=>wa,validateUpdateShape:()=>xa,warn:()=>mp});var y={};n.r(y),n.d(y,{nonMaxSuppressionV3Impl:()=>yd,nonMaxSuppressionV4Impl:()=>bd,nonMaxSuppressionV5Impl:()=>vd,whereImpl:()=>kh});var b={};n.r(b),n.d(b,{maxNorm:()=>Rm,minMaxNorm:()=>Lm,nonNeg:()=>$m,unitNorm:()=>Dm});var v={};n.r(v),n.d(v,{constant:()=>Hg,glorotNormal:()=>Zg,glorotUniform:()=>Xg,heNormal:()=>Qg,heUniform:()=>Yg,identity:()=>qg,leCunNormal:()=>Jg,leCunUniform:()=>ey,ones:()=>Ug,orthogonal:()=>ty,randomNormal:()=>Gg,randomUniform:()=>Wg,truncatedNormal:()=>jg,varianceScaling:()=>Kg,zeros:()=>Vg});var x={};n.r(x),n.d(x,{Layer:()=>xy,RNN:()=>Uv,RNNCell:()=>Hv,activation:()=>lw,add:()=>yw,alphaDropout:()=>ok,average:()=>bw,averagePooling1d:()=>Cw,averagePooling2d:()=>Mw,averagePooling3d:()=>Dw,avgPool1d:()=>Nw,avgPool2d:()=>_w,avgPool3d:()=>$w,avgPooling1d:()=>Aw,avgPooling2d:()=>Rw,avgPooling3d:()=>Lw,batchNormalization:()=>Ew,bidirectional:()=>Jw,concatenate:()=>vw,conv1d:()=>ew,conv2d:()=>tw,conv2dTranspose:()=>nw,conv3d:()=>rw,convLstm2d:()=>Xw,convLstm2dCell:()=>Zw,cropping2D:()=>iw,dense:()=>uw,depthwiseConv2d:()=>ow,dot:()=>Sw,dropout:()=>cw,elu:()=>Kx,embedding:()=>gw,flatten:()=>dw,gaussianDropout:()=>ak,gaussianNoise:()=>ik,globalAveragePooling1d:()=>Fw,globalAveragePooling2d:()=>Ow,globalMaxPool1d:()=>tk,globalMaxPool2d:()=>nk,globalMaxPooling1d:()=>zw,globalMaxPooling2d:()=>Pw,gru:()=>Hw,gruCell:()=>Ww,input:()=>Gb,inputLayer:()=>qx,layerNormalization:()=>Iw,leakyReLU:()=>Zx,lstm:()=>Gw,lstmCell:()=>jw,masking:()=>lk,maxPool1d:()=>rk,maxPool2d:()=>sk,maxPooling1d:()=>Bw,maxPooling2d:()=>Vw,maxPooling3d:()=>Uw,maximum:()=>xw,minimum:()=>ww,multiply:()=>kw,permute:()=>mw,prelu:()=>Qx,reLU:()=>Xx,repeatVector:()=>pw,reshape:()=>fw,rnn:()=>Qw,separableConv2d:()=>sw,simpleRNN:()=>qw,simpleRNNCell:()=>Kw,softmax:()=>Yx,spatialDropout1d:()=>hw,stackedRNNCells:()=>Yw,thresholdedReLU:()=>Jx,timeDistributed:()=>ek,upSampling2d:()=>aw,zeroPadding2d:()=>Tw});var w={};n.r(w),n.d(w,{MAPE:()=>vk,MSE:()=>kk,binaryAccuracy:()=>uk,binaryCrossentropy:()=>ck,categoricalAccuracy:()=>dk,categoricalCrossentropy:()=>pk,cosineProximity:()=>gk,mape:()=>xk,meanAbsoluteError:()=>yk,meanAbsolutePercentageError:()=>bk,meanSquaredError:()=>wk,mse:()=>Sk,precision:()=>fk,recall:()=>mk,sparseCategoricalAccuracy:()=>hk});var k={};n.r(k),n.d(k,{modelFromJSON:()=>Bb});var S={};n.r(S),n.d(S,{l1:()=>Ik,l1l2:()=>Ek,l2:()=>Tk});var E={};n.r(E),n.d(E,{json:()=>Gk});var I={};n.r(I),n.d(I,{json:()=>jk});var T={};n.r(T),n.d(T,{json:()=>qk});var C={};n.r(C),n.d(C,{json:()=>Kk});var N={};n.r(N),n.d(N,{json:()=>Xk});var A={};n.r(A),n.d(A,{json:()=>Zk});var M={};n.r(M),n.d(M,{json:()=>Qk});var _={};n.r(_),n.d(_,{json:()=>Yk});var R={};n.r(R),n.d(R,{json:()=>Jk});var D={};n.r(D),n.d(D,{json:()=>eS});var $={};n.r($),n.d($,{json:()=>tS});var L={};n.r(L),n.d(L,{json:()=>nS});var F={};n.r(F),n.d(F,{json:()=>rS});var O={};n.r(O),n.d(O,{json:()=>sS});var z={};n.r(z),n.d(z,{json:()=>iS});var P={};n.r(P),n.d(P,{json:()=>aS});var B={};n.r(B),n.d(B,{json:()=>oS});var V={};n.r(V),n.d(V,{CSVDataset:()=>ZE,Dataset:()=>zE,FileDataSource:()=>lI,TextLineDataset:()=>HE,URLDataSource:()=>uI,array:()=>BE,csv:()=>cI,func:()=>hI,generator:()=>dI,microphone:()=>fI,version_data:()=>mI,webcam:()=>pI,zip:()=>VE});var U={};n.r(U),n.d(U,{addImpl:()=>GI,bincountImpl:()=>OT,bincountReduceImpl:()=>zT,ceilImpl:()=>VT,concatImpl:()=>qT,expImpl:()=>DC,expm1Impl:()=>zC,floorImpl:()=>iN,gatherV2Impl:()=>fN,greaterImpl:()=>gN,lessImpl:()=>AN,linSpaceImpl:()=>LN,logImpl:()=>ON,maxImpl:()=>YN,maximumImpl:()=>tA,minimumImpl:()=>pA,multiplyImpl:()=>VC,negImpl:()=>SA,notEqualImpl:()=>_A,prodImpl:()=>WA,rangeImpl:()=>jA,rsqrtImpl:()=>sM,simpleAbsImpl:()=>eT,sliceImpl:()=>DT,squaredDifferenceImpl:()=>_M,stridedSliceImpl:()=>FM,subImpl:()=>KC,tileImpl:()=>VM,topKImpl:()=>HM,transposeImpl:()=>oT,uniqueImpl:()=>GM});class H{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class W{decComplexRef(e){}time(e){return G("time")}read(e){return G("read")}readSync(e){return G("readSync")}numDataIds(){return G("numDataIds")}disposeData(e){return G("disposeData")}write(e,t,n){return G("write")}move(e,t,n,r){return G("move")}memory(){return G("memory")}floatPrecision(){return G("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return G("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:a}){return G("fusedBatchMatMul")}slice(e,t,n){return G("slice")}stridedSlice(e,t,n,r){return G("stridedSlice")}unstack(e,t){return G("unstack")}reverse(e,t){return G("reverse")}concat(e,t){return G("concat")}neg(e){return G("neg")}add(e,t){return G("add")}addN(e){return G("addN")}subtract(e,t){return G("subtract")}multiply(e,t){return G("multiply")}realDivide(e,t){return G("realDivide")}floorDiv(e,t){return G("floorDiv")}sum(e,t){return G("sum")}prod(e,t){return G("prod")}unsortedSegmentSum(e,t,n){return G("unsortedSegmentSum")}argMin(e,t){return G("argMin")}argMax(e,t){return G("argMax")}equal(e,t){return G("equal")}notEqual(e,t){return G("notEqual")}less(e,t){return G("less")}lessEqual(e,t){return G("lessEqual")}greater(e,t){return G("greater")}greaterEqual(e,t){return G("greaterEqual")}logicalNot(e){return G("logicalNot")}logicalAnd(e,t){return G("logicalAnd")}logicalOr(e,t){return G("logicalOr")}where(e){return G("where")}select(e,t,n){return G("select")}topk(e,t,n){return G("topk")}min(e,t){return G("min")}minimum(e,t){return G("minimum")}mod(e,t){return G("mod")}max(e,t){return G("max")}maximum(e,t){return G("maximum")}all(e,t){return G("all")}any(e,t){return G("any")}squaredDifference(e,t){return G("squaredDifference")}ceil(e){return G("ceil")}floor(e){return G("floor")}round(e){return G("round")}sign(e){return G("sign")}isNaN(e){return G("isNaN")}isInf(e){return G("isInf")}isFinite(e){return G("isFinite")}pow(e,t){return G("pow")}exp(e){return G("exp")}expm1(e){return G("expm1")}softmax(e,t){return G("softmax")}log(e){return G("log")}log1p(e){return G("log1p")}sqrt(e){return G("sqrt")}rsqrt(e){return G("rsqrt")}square(e){return G("square")}reciprocal(e){return G("reciprocal")}relu(e){return G("relu")}relu6(e){return G("relu6")}prelu(e,t){return G("prelu")}elu(e){return G("elu")}eluDer(e,t){return G("eluDer")}selu(e){return G("selu")}int(e){return G("int")}clip(e,t,n){return G("clip")}abs(e){return G("abs")}complexAbs(e){return G("complexAbs")}sigmoid(e){return G("sigmoid")}softplus(e){return G("softplus")}sin(e){return G("sin")}cos(e){return G("cos")}tan(e){return G("tan")}asin(e){return G("asin")}acos(e){return G("acos")}atan(e){return G("atan")}atan2(e,t){return G("atan2")}sinh(e){return G("sinh")}cosh(e){return G("cosh")}tanh(e){return G("tanh")}asinh(e){return G("asinh")}acosh(e){return G("acosh")}atanh(e){return G("atanh")}erf(e){return G("erf")}step(e,t){return G("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return G("fusedConv2d")}conv2d(e,t,n){return G("conv2d")}conv2dDerInput(e,t,n){return G("conv2dDerInput")}conv2dDerFilter(e,t,n){return G("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return G("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return G("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return G("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return G("depthwiseConv2DDerFilter")}conv3d(e,t,n){return G("conv3d")}conv3dDerInput(e,t,n){return G("conv3dDerInput")}conv3dDerFilter(e,t,n){return G("conv3dDerFilter")}maxPool(e,t){return G("maxPool")}maxPoolBackprop(e,t,n,r){return G("maxPoolBackprop")}avgPool(e,t){return G("avgPool")}avgPoolBackprop(e,t,n){return G("avgPoolBackprop")}avgPool3d(e,t){return G("avgPool3d")}avgPool3dBackprop(e,t,n){return G("avgPool3dBackprop")}maxPool3d(e,t){return G("maxPool3d")}maxPool3dBackprop(e,t,n,r){return G("maxPool3dBackprop")}reshape(e,t){return G("reshape")}cast(e,t){return G("cast")}tile(e,t){return G("tile")}pad(e,t,n){return G("pad")}transpose(e,t){return G("transpose")}gather(e,t,n,r=0){return G("gather")}gatherND(e,t){return G("gatherND")}scatterND(e,t,n){return G("scatterND")}batchToSpaceND(e,t,n){return G("batchToSpaceND")}spaceToBatchND(e,t,n){return G("spaceToBatchND")}resizeBilinear(e,t,n,r,s){return G("resizeBilinear")}resizeBilinearBackprop(e,t,n){return G("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r,s){return G("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return G("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,s,i){return G("batchNorm")}localResponseNormalization4D(e,t,n,r,s){return G("localResponseNormalization4D")}LRNGrad(e,t,n,r,s,i,a){return G("LRNGrad")}multinomial(e,t,n,r){return G("multinomial")}oneHot(e,t,n,r){return G("oneHot")}cumsum(e,t,n,r){return G("cumsum")}nonMaxSuppression(e,t,n,r,s){return G("nonMaxSuppression")}fft(e){return G("fft")}ifft(e){return G("ifft")}complex(e,t){return G("complex")}real(e){return G("real")}imag(e){return G("imag")}cropAndResize(e,t,n,r,s,i){return G("cropAndResize")}depthToSpace(e,t,n){return G("depthToSpace")}split(e,t,n){return G("split")}sparseToDense(e,t,n,r){return G("sparseToDense")}diag(e){return G("diag")}fill(e,t,n){return G("fill")}onesLike(e){return G("onesLike")}zerosLike(e){return G("zerosLike")}linspace(e,t,n){return G("linspace")}dispose(){return G("dispose")}}function G(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function j(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function q(e,t,n){return Math.max(e,Math.min(t,n))}function K(e){return e%2==0?e:e+1}function X(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Z(e,t){const n=Math.random();return t*n+(1-n)*e}function Q(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function Y(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function J(e,t,n=""){Y(se(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ee(e){Y(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function te(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||ve(e)&&!n)for(let r=0;r<e.length;++r)te(e[r],t,n);else t.push(e);return t}function ne(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function re(e){return 0===e.length}function se(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ie(e){return e%1==0}function ae(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function oe(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function le(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return j(t),t}function ue(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ce(e,t=(e=>0),n){return new Promise(((r,s)=>{let i=0;const a=()=>{if(e())return void r();i++;const o=t(i);null!=n&&i>=n?s():setTimeout(a,o)};a()}))}function he(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function de(e,t){const n=t.length;return Y((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Y(e.every((e=>ie(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function pe(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||s?null:de(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[a]||i[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),i[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function fe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function me(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ge(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function ye(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function be(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ve(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function xe(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function we(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function ke(e){return"string"==typeof e||e instanceof String}function Se(e){return"boolean"==typeof e}function Ee(e){return"number"==typeof e}function Ie(e){return Array.isArray(e)?Ie(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Ee(e)?"float32":ke(e)?"string":Se(e)?"bool":"float32"}function Te(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ce(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ne(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Ae(e,t,n){const r=new Array;if(1===t.length){const s=t[0];for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],i=t.slice(1),a=i.reduce(((e,t)=>e*t));for(let t=0;t<s;t++)r[t]=Ae(e+t*a,i,n)}return r}function Me(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return Ae(0,e,t)}function _e(e,t){const n=Re(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Re(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function De(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Me(e,new Float32Array(n));if("int32"===t)return Me(e,new Int32Array(n));if("bool"===t)return Me(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function $e(e){e.forEach((t=>{Y(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Le(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Fe(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Oe(e){return e&&e.then&&"function"==typeof e.then}const ze="tfjsflags";class Pe{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Oe(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);ze in e&&e[ze].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Be(){return Ue}let Ve,Ue=null;function He(){if(null==Ve){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ve=e}return Ve}function We(e,t){const n=function(){const e=He();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Ge="Abs",je="Acos",qe="Acosh",Ke="Add",Xe="AddN",Ze="All",Qe="Any",Ye="ArgMax",Je="ArgMin",et="Asin",tt="Asinh",nt="Atan",rt="Atanh",st="Atan2",it="AvgPool",at="AvgPoolGrad",ot="AvgPool3D",lt="AvgPool3DGrad",ut="BatchMatMul",ct="BatchToSpaceND",ht="Bincount",dt="BroadcastTo",pt="Cast",ft="Ceil",mt="ClipByValue",gt="Complex",yt="ComplexAbs",bt="Concat",vt="Conv2D",xt="Conv2DBackpropFilter",wt="Conv2DBackpropInput",kt="Conv3D",St="Conv3DBackpropFilterV2",Et="Conv3DBackpropInputV2",It="Cos",Tt="Cosh",Ct="Cumsum",Nt="CropAndResize",At="DenseBincount",Mt="DepthToSpace",_t="DepthwiseConv2dNative",Rt="DepthwiseConv2dNativeBackpropFilter",Dt="DepthwiseConv2dNativeBackpropInput",$t="Diag",Lt="Dilation2D",Ft="Dilation2DBackpropInput",Ot="Dilation2DBackpropFilter",zt="RealDiv",Pt="Elu",Bt="EluGrad",Vt="Erf",Ut="Equal",Ht="Exp",Wt="ExpandDims",Gt="Expm1",jt="FFT",qt="Fill",Kt="FlipLeftRight",Xt="Floor",Zt="FloorDiv",Qt="FusedBatchNorm",Yt="GatherV2",Jt="GatherNd",en="Greater",tn="GreaterEqual",nn="Identity",rn="IFFT",sn="Imag",an="IsFinite",on="IsInf",ln="IsNan",un="LeakyRelu",cn="Less",hn="LessEqual",dn="LinSpace",pn="Log",fn="Log1p",mn="LogicalAnd",gn="LogicalNot",yn="LogicalOr",bn="LogSoftmax",vn="LRN",xn="LRNGrad",wn="Max",kn="Maximum",Sn="MaxPool",En="MaxPoolGrad",In="MaxPool3D",Tn="MaxPool3DGrad",Cn="MaxPoolWithArgmax",Nn="Mean",An="Min",Mn="Minimum",_n="MirrorPad",Rn="Mod",Dn="Multinomial",$n="Multiply",Ln="Neg",Fn="NotEqual",On="NonMaxSuppressionV3",zn="NonMaxSuppressionV4",Pn="NonMaxSuppressionV5",Bn="OnesLike",Vn="OneHot",Un="Pack",Hn="PadV2",Wn="Pool",Gn="Pow",jn="Prelu",qn="Prod",Kn="Range",Xn="Real",Zn="Reciprocal",Qn="Relu",Yn="Reshape",Jn="ResizeNearestNeighbor",er="ResizeNearestNeighborGrad",tr="ResizeBilinear",nr="ResizeBilinearGrad",rr="Relu6",sr="Reverse",ir="Round",ar="Rsqrt",or="ScatterNd",lr="Select",ur="Selu",cr="Slice",hr="Sin",dr="Sinh",pr="Sign",fr="Sigmoid",mr="Softplus",gr="Sqrt",yr="Sum",br="SpaceToBatchND",vr="SplitV",xr="Softmax",wr="SquaredDifference",kr="Square",Sr="Sub",Er="SparseToDense",Ir="StridedSlice",Tr="Tan",Cr="Tanh",Nr="Tile",Ar="TopK",Mr="Transpose",_r="Unique",Rr="Unpack",Dr="UnsortedSegmentSum",$r="ZerosLike",Lr="Step",Fr="FromPixels",Or="RotateWithOffset",zr="_FusedMatMul",Pr="FusedConv2D",Br="FusedDepthwiseConv2D",Vr=We("kernelRegistry",(()=>new Map)),Ur=We("gradRegistry",(()=>new Map));function Hr(e,t){const n=Qr(e,t);return Vr.get(n)}function Wr(e){return Ur.get(e)}function Gr(e){const t=Vr.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===e&&n.push(a)}return n}function jr(e){const{kernelName:t,backendName:n}=e,r=Qr(t,n);Vr.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Vr.set(r,e)}function qr(e){const{kernelName:t}=e;Ur.has(t)&&Be().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Ur.set(t,e)}function Kr(e,t){const n=Qr(e,t);if(!Vr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Vr.delete(n)}function Xr(e){if(!Ur.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Ur.delete(e)}function Zr(e,t){Gr(e).forEach((e=>{jr(Object.assign({},e,{backendName:t}))}))}function Qr(e,t){return`${t}_${e}`}class Yr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new es)}profileKernel(e,t,n){let r;const s=this.backendTimer.time((()=>{r=n()}));if(Be().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Jr(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Jr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class es{logKernelProfile(e,t,n,r,s,i){const a="number"==typeof r?ue(`${r}ms`,9):r.error,o=ue(e,25),l=t.rank,u=t.size,c=ue(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const ts=20,ns=3,rs=7;function ss(e,t,n,r){const s=Ne(t),i=function(e,t,n,r){const s=ne(t),i=r[r.length-1],a=new Array(i).fill(0),o=t.length,l="complex64"===n?ls(e):e;if(o>1)for(let e=0;e<s/i;e++){const t=e*i;for(let e=0;e<i;e++)a[e]=Math.max(a[e],is(l[t+e],0,n).length)}return a}(e,t,n,s),a=t.length,o=os(e,t,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function is(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(rs))} + ${parseFloat(e[1].toFixed(rs))}j`:ke(e)?`'${e}'`:"bool"===n?as(e):parseFloat(e.toFixed(rs)).toString(),ue(r,t)}function as(e){return 0===e?"false":"true"}function os(e,t,n,r,s,i=!0){const a="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[is(ls(e)[0],0,n)]:"bool"===n?[as(e[0])]:[e[0].toString()];if(1===l){if(o>ts){const t=ns*a;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-ns)*a,o*a));return"complex64"===n&&(r=ls(r),i=ls(i)),["["+r.map(((e,t)=>is(e,s[t],n))).join(", ")+", ..., "+i.map(((e,t)=>is(e,s[o-ns+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ls(e):Array.from(e)).map(((e,t)=>is(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>ts){for(let t=0;t<ns;t++){const r=t*h,i=r+h;d.push(...os(e.slice(r,i),u,n,c,s,!1))}d.push("...");for(let t=o-ns;t<o;t++){const r=t*h,i=r+h;d.push(...os(e.slice(r,i),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,i=r+h;d.push(...os(e.slice(r,i),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function ls(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function us(e,t){return"string"===t?ps(e):cs([e],t)}function cs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=te(e)),Be().getBool("DEBUG")&&ge(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function hs(){return Be().platform.now()}function ds(e,t){return Be().platform.fetch(e,t)}function ps(e,t="utf-8"){return t=t||"utf-8",Be().platform.encode(e,t)}function fs(e,t="utf-8"){return t=t||"utf-8",Be().platform.decode(e,t)}class ms{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ne(e),null!=n){const e=n.length;Y(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||me(t,this.size),this.strides=Ne(e)}set(e,...t){0===t.length&&(t=[0]),Y(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return gs().makeTensor(this.values,this.shape,this.dtype)}}let gs=null,ys=null,bs=null;class vs{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ne(e),this.strides=Ne(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ys.buffer(this.shape,this.dtype,e)}bufferSync(){return ys.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Me(this.shape,e)}arraySync(){return Me(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=gs().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>fs(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=gs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>fs(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await gs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(gs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ys.print(this,e)}clone(){return this.throwIfDisposed(),ys.clone(this)}toString(e=!1){return ss(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ys.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),gs().makeVariable(this,e,t,n)}}Object.defineProperty(vs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class xs extends vs{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!se(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);gs().disposeTensor(this),this.dataId=e.dataId,gs().incRef(this,null)}dispose(){gs().disposeVariable(this),this.isDisposedInternal=!0}}var ws,ks,Ss,Es,Is;Object.defineProperty(xs,Symbol.hasInstance,{value:e=>e instanceof vs&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ws||(ws={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ks||(ks={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ss||(Ss={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Es||(Es={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Is||(Is={}));const Ts={float32:Es,int32:ks,bool:Ss,complex64:Is};function Cs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ts[e][t]}function Ns(e){return Cs(e,"int32")}function As(e,t){if(e.dtype===t.dtype)return[e,t];const n=Cs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ms(e,t){Y(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function _s(e,t){return t.some((t=>t.id===e.id))}function Rs(e){const t=[];return Ds(e,t,new Set),t}function Ds(e,t,n){if(null==e)return;if(e instanceof vs)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Ds(r,t,n))}}class $s{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ls{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new $s}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Yr(this.backendInstance),!0}setupRegisteredKernels(){Gr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Gr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof W||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ls.nextTensorId++}nextVariableId(){return Ls.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return Os.runKernelFunc((n=>n.cast(e,t)),n,null,pt,r)}})),[],{}),t}runKernel(e,t,n,r,s){return this.runKernelFunc(null,t,null,e,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,s,i,a){let o,l=[];const u=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const p=Hr(r,this.backendName);let f,m;if(null!=p)d=()=>{const e=this.backend.numDataIds();f=p.kernelFunc({inputs:t,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const o=n.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(u){let e=this.getTensorsForGradient(r,t,o);if(null==e){null==a&&(a=[]);const t=o.filter(((e,t)=>a[t]));e=(i||[]).slice().concat(t)}l=this.saveTensorsForBackwardMode(e)}return o};else{if(null==e)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const t=e=>{u&&(l=e.map((e=>this.keep(this.clone(e)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>e(this.backend,t)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,t,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=d()})),u&&this.addTapeNode(r,t,o,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:o.map((e=>e.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Wr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(Y(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const a=n.filter(((e,t)=>s[t]));return i.concat(a)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&ke(e[0])&&(s=e.map((e=>ps(e))));const i=r.write(s,t,n),a=new vs(t,n,i,this.nextTensorId());if(this.incRef(a,r),"string"===n){const e=this.state.tensorInfo.get(i),t=we(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const s=new vs(t,n=n||"float32",e,this.nextTensorId());return this.incRef(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new xs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*xe(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof xs||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Wr(e);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Re(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Rs(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(Y(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Y(s instanceof vs,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],a=i.inputs;for(const e in a){const n=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){i.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,a[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=_e(ne(e),"float32");return Os.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const i=t[s],a=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[t];if(!se(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=s;else{const t=e[a.id];e[a.id]=r(t,s),t.dispose()}}}}(e,i,(e=>this.tidy(e)),zs);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return Y(Te(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;Y(t.every((e=>e instanceof vs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc(((r,s)=>(n=e(...t,s),Y(n.value instanceof vs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Y(Te(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((e,r)=>{const s=n.gradFunc(e,r),i=Array.isArray(s)?s:[s];Y(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Y(i.every((e=>e instanceof vs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((e,t)=>{a[t]=()=>e})),a}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=hs(),n=await this.backend.time(e);return n.wallMs=hs()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new $s;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Fs(){const e=He();if(null==e._tfengine){const t=new Pe(e);e._tfengine=new Ls(t)}var t;return t=e._tfengine.ENV,Ue=t,gs=()=>e._tfengine,e._tfengine}Ls.nextTensorId=0,Ls.nextVariableId=0;const Os=Fs();function zs(e,t){const n={a:e,b:t};return Os.runKernel(Ke,n)}function Ps(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Bs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Vs=Be();function Us(e,t){let n=e;if(ve(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||ve(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Be().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Hs(e,r,[]),r}function Hs(e,t,n){if(n=n||[],!Array.isArray(e)&&!ve(e))return void Y(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Y(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Y(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Hs(e[t],r,n.concat(t))}function Ws(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Gs(e,t,n,r="numeric"){if(e instanceof vs)return Ws(r,e.dtype,t,n),e;let s=Ie(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ws(r,s,t,n),null==e||!ve(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=Us(e,s);ve(e)||Array.isArray(e)||(e=[e]);const a="string"!==s?cs(e,s):te(e,[],!0);return Os.makeTensor(a,i,s)}function js(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Gs(e,`${t}[${s}]`,n,r)))}Vs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Vs.registerFlag("IS_BROWSER",(()=>Bs())),Vs.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Vs.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Vs.registerFlag("PROD",(()=>!1)),Vs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Vs.getBool("DEBUG"))),Vs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Vs.registerFlag("IS_TEST",(()=>!1)),Vs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));const qs="__op";function Ks(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=qs;const s=(...e)=>{Os.startScope(n);try{const t=r(...e);return Oe(t)&&console.error("Cannot return a Promise inside of tidy."),Os.endScope(t),t}catch(e){throw Os.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Xs=Ks({complex_:function(e,t){const n=Gs(e,"real","complex"),r=Gs(t,"imag","complex");J(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Os.runKernel(gt,s)}});function Zs(e,t,n,r){if(null==r&&(r=Ie(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ve(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){$e(t);const e=ne(t),r=ne(n);Y(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==ne(t.slice(e));Y(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return ve(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?cs(e,r):te(e,[],!0),Os.makeTensor(e,t,r)}function Qs(e,t,n){return Zs(e,t,Us(e,n),n)}const Ys={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Js=4;async function ei(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<s.length;++i){const a=s[i],o=Array.isArray(e)?e[i].tensor:e[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Js*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=Js,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:ni(await Promise.all(r)),specs:n}}function ti(e,t){const n={};let r,s=0;for(const i of t){const t=i.name,a=i.dtype,o=i.shape,l=ne(o);let u;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const o=Ys[n.dtype],c=e.slice(s,s+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=li()),u=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}s+=l*o}else if("string"===a){const t=ne(i.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+Js))[0];s+=Js;const n=new Uint8Array(e.slice(s,s+t));u.push(n),s+=t}}else{const r=Ys[a],i=e.slice(s,s+l*r);if("float32"===a)u=new Float32Array(i);else if("int32"===a)u=new Int32Array(i);else if("bool"===a)u=new Uint8Array(i);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);{u=new Float32Array(i);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const s=Qs(e,o,"float32"),a=Qs(r,o,"float32");n[t]=Xs(s,a),s.dispose(),a.dispose()}}s+=l*r}"complex64"!==a&&(n[t]=Qs(u,o,a))}return n}function ni(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const ri="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function si(e){return ri?Buffer.byteLength(e):new Blob([e]).size}function ii(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function ai(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function oi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:si(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:si(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function li(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let s=0;s<r.length;s++){const a=r[s],o=e[n[a>>10]+(1023&a)]+t[a>>10];i[s]=o}return new Float32Array(s)}}class ui{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ui.instance&&(ui.instance=new ui),ui.instance}static registerSaveRouter(e){ui.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ui.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ui.getHandlers(e,"save")}static getLoadHandlers(e,t){return ui.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?ui.getInstance().loadRouters:ui.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const ci=e=>ui.registerSaveRouter(e),hi=e=>ui.registerLoadRouter(e),di=e=>ui.getSaveHandlers(e),pi=(e,t)=>ui.getLoadHandlers(e,t),fi="tensorflowjs",mi="models_store",gi="model_info_store";function yi(){if(!Be().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function bi(e){const t=e.result;t.createObjectStore(mi,{keyPath:"modelPath"}),t.createObjectStore(gi,{keyPath:"modelPath"})}class vi{constructor(e){if(this.indexedDB=yi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(fi,1);r.onupgradeneeded=()=>bi(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(mi,"readonly"),r=t.objectStore(mi).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=oi(t),i=s.transaction(gi,"readwrite");let a=i.objectStore(gi);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(mi,"readwrite");const o=l.objectStore(mi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{a=i.objectStore(gi);const t=a.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}vi.URL_SCHEME="indexeddb://";const xi=e=>{return Be().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(vi.URL_SCHEME)?(t=e.slice(vi.URL_SCHEME.length),new vi(t)):null;var t};ui.registerSaveRouter(xi),ui.registerLoadRouter(xi);class wi{constructor(){this.indexedDB=yi()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(fi,1);n.onupgradeneeded=()=>bi(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(gi,"readonly"),i=s.objectStore(gi).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(vi.URL_SCHEME)?t.slice(vi.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(fi,1);r.onupgradeneeded=()=>bi(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(gi,"readwrite"),a=i.objectStore(gi),o=a.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),i=()=>{l=s.transaction(mi,"readwrite");const r=l.objectStore(mi).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const ki="/",Si="tensorflowjs_models",Ei="info",Ii="model_topology",Ti="weight_specs",Ci="weight_data",Ni="model_metadata";function Ai(e){return{info:[Si,e,Ei].join(ki),topology:[Si,e,Ii].join(ki),weightSpecs:[Si,e,Ti].join(ki),weightData:[Si,e,Ci].join(ki),modelMetadata:[Si,e,Ni].join(ki)}}function Mi(e){const t=e.split(ki);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ki)}class _i{constructor(e){if(!Be().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ai(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=oi(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(ri)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(ri){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}}_i.URL_SCHEME="localstorage://";const Ri=e=>{return Be().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_i.URL_SCHEME)?(t=e.slice(_i.URL_SCHEME.length),new _i(t)):null;var t};ui.registerSaveRouter(Ri),ui.registerLoadRouter(Ri);class Di{constructor(){Y(Be().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Y("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Si+ki,n=ki+Ei;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[Mi(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Ai(e=(t=e).startsWith(_i.URL_SCHEME)?t.slice(_i.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const $i="://";class Li{constructor(){this.managers={}}static getInstance(){return null==Li.instance&&(Li.instance=new Li),Li.instance}static registerManager(e,t){Y(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith($i)&&(e=e.slice(0,e.indexOf($i))),Y(e.length>0,(()=>"scheme must not be an empty string."));const n=Li.getInstance();Y(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Fi(e){if(-1===e.indexOf($i))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Li.getSchemes().join(",")}`);return{scheme:e.split($i)[0],path:e.split($i)[1]}}async function Oi(e,t,n=!1){Y(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=ui.getLoadHandlers(e);Y(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Y(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],i=ui.getSaveHandlers(t);Y(i.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Y(i.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const a=i[0],o=Fi(e).scheme,l=Fi(e).path,u=o===Fi(e).scheme,c=await s.load();n&&u&&await Li.getManager(o).removeModel(l);const h=await a.save(c);return n&&!u&&await Li.getManager(o).removeModel(l),h.modelArtifactsInfo}async function zi(){const e=Li.getSchemes(),t={};for(const n of e){const e=await Li.getManager(n).listModels();for(const r in e)t[n+$i+r]=e[r]}return t}async function Pi(e){const t=Fi(e);return Li.getManager(t.scheme).removeModel(t.path)}async function Bi(e,t){return Oi(e,t,!1)}async function Vi(e,t){return Oi(e,t,!0)}class Ui{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Be().get("IS_BROWSER")){Be().setPlatform("browser",new Ui);try{Li.registerManager(_i.URL_SCHEME,new Di)}catch(e){}try{Li.registerManager(vi.URL_SCHEME,new wi)}catch(e){}}let Hi;function Wi(e,t="float32",n){return t=t||"float32",$e(e),new ms(e,t,n)}Be().get("IS_NODE")&&Be().setPlatform("node",new class{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Be().global.fetch?Be().global.fetch(e,t):(null==Hi&&(Hi=n(8352)),Hi(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Gi=Ks({cast_:function(e,t){const n=Gs(e,"x","cast");if(!ye(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Os.runKernel(pt,r,s)}}),ji=Ks({clone_:function(e){const t={x:Gs(e,"x","clone","string_or_numeric")};return Os.runKernel(nn,t)}});function qi(e,t=!1){console.log(e.toString(t))}function Ki(e){return new Promise((e=>setTimeout(e))).then(e)}Fs(),ys={buffer:Wi,cast:Gi,clone:ji,print:qi};class Xi{constructor(e){if(!Be().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Xi.URL_SCHEME)&&(e=e.slice(Xi.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=s,await Ki((()=>i.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ki((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:oi(e)}}}}Xi.URL_SCHEME="downloads://";class Zi{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{const s=new FileReader;s.onload=s=>{const i=JSON.parse(s.target.result),a=i.modelTopology;if(null==a)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:a});const o=i.weightsManifest;if(null==o)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let l;try{l=this.checkManifestAndWeightFiles(o,t)}catch(e){return void r(e)}const u=[],c=[],h=[];o.forEach((e=>{e.paths.forEach((e=>{c.push(e),h.push(null)})),u.push(...e.weights)})),o.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,s=c.indexOf(e);if(h[s]=r,-1===h.indexOf(null)){const e={modelTopology:a,weightSpecs:u,weightData:ii(h),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy};null!=i.signature&&(e.signature=i.signature),null!=i.userDefinedMetadata&&(e.userDefinedMetadata=i.userDefinedMetadata),null!=i.modelInitializer&&(e.modelInitializer=i.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(l[e])}))}))},s.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],r=t.map((e=>ai(e.name))),s={};for(const i of e)i.paths.forEach((e=>{const i=ai(e);if(-1!==n.indexOf(i))throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(n.push(i),-1===r.indexOf(i))throw new Error(`Weight file with basename '${i}' is not provided.`);s[e]=t[r.indexOf(i)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return s}}function Qi(e){return new Zi(e)}function Yi(e,t,n,r){!function(e){Y(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Y(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Y(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Y(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((i=>(i.then((i=>{const a=n+ ++s/e.length*(r-n);return t(a),i})),i))))}async function Ji(e,t){null==t&&(t={});const n=null==t.fetchFunc?Be().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Yi(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Yi(s,t.onProgress,.5,1)}async function ea(e,t="",n,r){return ta((e=>Ji(e,{requestInit:r})))(e,t,n)}function ta(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),i={},a=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Ys[l]*ne(e.shape),c=()=>{s[t]=!0,null==i[t]&&(i[t]=[]),i[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),a[n]=!0)})):c(),o.push(e.name),n+=u}))})),!a.every((e=>e))){const e=r.filter(((e,t)=>!a[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let d=0;return l.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[d+e].byteLength;const s=new ArrayBuffer(r),a=new Uint8Array(s);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[d+e]);a.set(t,o),o+=t.byteLength}i[e].forEach((e=>{const t=ti(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),d+=n})),h}}ui.registerSaveRouter((e=>Be().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Xi.URL_SCHEME)?function(e="model"){return new Xi(e)}(e.slice(Xi.URL_SCHEME.length)):null));class na{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Y("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Be().platform.fetch,Y(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Y(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:oi(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,i=t.convertedBy,a=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:i,format:a};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,i=[];for(const t of e)i.push(...t.weights);const a=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,ii(await Ji(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ra(e){return null!=e.match(na.URL_SCHEME_REGEX)}na.URL_SCHEME_REGEX=/^https?:\/\//;const sa=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ra(e))):ra(e),n)return ia(e,t)}return null};function ia(e,t){return new na(e,t)}function aa(e,t){return ia(e,t)}ui.registerSaveRouter(sa),ui.registerLoadRouter(sa);class oa{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class la{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function ua(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new oa(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new oa({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new oa({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function ca(e){return new la(e)}const ha=Ks({matMul_:function(e,t,n=!1,r=!1){let s=Gs(e,"a","matMul"),i=Gs(t,"b","matMul");[s,i]=As(s,i);const a={a:s,b:i},o={transposeA:n,transposeB:r};return Os.runKernel(ut,a,o)}}),da=Ks({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Gs(e,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:r};return Os.runKernel(Vn,s,i)}}),pa=Ks({transpose_:function(e,t){const n=Gs(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),Y(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{Y(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Os.runKernel(Mr,r,s)}}),fa=Ks({confusionMatrix_:function(e,t,n){const r=Gs(e,"labels","confusionMatrix"),s=Gs(t,"predictions","confusionMatrix");Y(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Y(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Y(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),Y(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),Y(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const i=da(Gi(r,"int32"),n),a=da(Gi(s,"int32"),n),o=pa(i),l=ha(o,a);return Gi(l,"int32")}});function ma(e,t,n){if(ee(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Us(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Zs(e,t,r,n)}let ga;async function ya(e,t){let n=Gs(e,"img","toPixels");if(!(e instanceof vs)){const e=n;n=Gi(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2];if(i>4||2===i)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${i}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const a=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<i;r++){const s=a[e*i+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===i?(t[0]=s*o,t[1]=s*o,t[2]=s*o):t[r]=s*o}const r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const ba=Ks({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,i=!1,a=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else if(null!=e.getContext)a=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Hr(Fr,Os.backendName)){const n={pixels:e},r={numChannels:t};return Os.runKernel(Fr,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(a?c=e.getContext("2d").getImageData(0,0,l,u).data:r||n?c=e.data:(i||s||o)&&(null==ga&&(ga=document.createElement("canvas").getContext("2d")),ga.canvas.width=l,ga.canvas.height=u,ga.drawImage(e,0,0,l,u),c=ga.getImageData(0,0,l,u).data),4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return ma(h,[u,l,t],"int32")}});function va(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ne(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,i=s[s.length-1];let a=1;for(let e=0;e<s.length-1;++e)a*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=i;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Ne(e.shape).map((e=>e/u)),1].slice(0,i);return[l,a,u,c]}function xa(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(i+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(i+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function wa(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}xa(n,t,e)}function ka(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,i=n.length;let a=1;for(let e=s;e<i;++e)a*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:ne(t.shape)/o,sliceSize:a,strides:[...Ne(n.slice(0,s)),1],outputSize:ne(n)}}function Sa(e,t,n){const r=e.shape.length;Y(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Y(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)Y(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Ea(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ia(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Ta(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Ca(e,t,n){return n<=e?n:n-(t-1)}function Na(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Aa(e,t,n,r,s,i,a,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Ma(a,l,u,r,e),h=_a(o,l,u,s,e),d=Ta(i,l,u,e)}else for(let t=0;t<u;t++)c[t]=Da(a,r,i,e,t,l),h[t]=$a(o,s,i,e,t,l),d[t]=Ra(i,t,l);return{begin:c,end:h,strides:d}}function Ma(e,t,n,r,s){const i=[...s],a=Na(n,t);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=0;else{const a=Ca(t,n,s);let o=r[a];e&1<<a&&(o=0),i[s]=o}return i}function _a(e,t,n,r,s){const i=[...s],a=Na(n,t);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=Ca(t,n,s);let o=r[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let e=0;e<i.length;e++){const t=s[e];i[e]<0&&(i[e]+=t),i[e]=q(0,i[e],s[e])}return i}function Ra(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Da(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=q(0,a,l-1),a}function $a(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=o>0?q(0,a,l):q(-1,a,l-1),a}function La(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Fa(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Oa(e,t,n){let r;const s=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Y(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(Y(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function za(e,t,n,r,s,i,a,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=Ea(a);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=Ea(o),m=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:y,strides:b}=Aa(m,d,p,u,c,h,s,i,a);u=g,c=y,h=b;const v=Ea(l);v.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const x=Ia(u,c,h),w=x.filter(((e,t)=>-1===v.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:x,newShape:m,outShape:w}}class Pa{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ba{constructor(){this.classNameMap={}}static getMap(){return null==Ba.instance&&(Ba.instance=new Ba),Ba.instance}static register(e){Ba.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Va(e){Y(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Y("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Y(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ba.register(e)}const Ua=.001,Ha=.1;function Wa(e,t,n){return null==n&&(n=Ga()),ja(e,t,((e,t)=>Za(e,t,n)))}function Ga(){return 32===Os.backend.floatPrecision()?Ua:Ha}function ja(e,t,n){let r=!0;if((ve(e)||ve(t))&&(r=!1),ve(e)&&ve(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Us(e),r=Us(t);if(!se(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=ve(e)?e:te(e),i=ve(t)?t:te(t);if(s.length!==i.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${i.length}.\nActual:   ${s}.\nExpected: ${i}.`);for(let e=0;e<i.length;++e){const t=s[e],r=i[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${i}.`)}}function qa(e,t){e().then((()=>t.fail()),(()=>t()))}function Ka(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ke(e)||ke(e[0])||ke(t)||ke(t[0])?ja(e,n,((e,t)=>e==t)):ja(e,t,((e,t)=>Za(e,t,0)))}function Xa(e,t,n){if(null==n&&(n=Ga()),!Za(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Za(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Qa(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Ya(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Ja(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Ja(n):e[t]=ps(n)}return e}const eo="2.8.6";function to(){Be().set("PROD",!0)}function no(){Be().set("DEBUG",!0)}function ro(){Be().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function so(e){Be().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function io(){Os.disposeVariables()}function ao(){return Os}function oo(){return Os.memory()}function lo(e){return Os.profile(e)}function uo(e,t){return Os.tidy(e,t)}function co(e){Rs(e).forEach((e=>e.dispose()))}function ho(e){return Os.keep(e)}function po(e){return Os.time(e)}function fo(e){return Os.setBackend(e)}function mo(){return Os.ready()}function go(){return Os.backendName}function yo(e){Os.removeBackend(e)}function bo(e){return Os.findBackend(e)}function vo(e){return Os.findBackendFactory(e)}function xo(e,t,n=1){return Os.registerBackend(e,t,n)}function wo(){return Os.backend}function ko(e,t){Be().setPlatform(e,t)}bs=so;const So=Ks({add_:function(e,t){let n=Gs(e,"a","add"),r=Gs(t,"b","add");[n,r]=As(n,r);const s={a:n,b:r};return Os.runKernel(Ke,s)}}),Eo=Ks({floorDiv_:function(e,t){let n=Gs(e,"a","floorDiv"),r=Gs(t,"b","floorDiv");[n,r]=As(n,r);const s={a:n,b:r};return Os.runKernel(Zt,s)}}),Io=Ks({div_:function(e,t){let n=Gs(e,"a","div"),r=Gs(t,"b","div");if([n,r]=As(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Eo(n,r);const s={a:n,b:r};return Os.runKernel(zt,s,{})}}),To=Ks({mul_:function(e,t){let n=Gs(e,"a","mul"),r=Gs(t,"b","mul");[n,r]=As(n,r);const s={a:n,b:r};return Os.runKernel($n,s)}}),Co=Ks({sqrt_:function(e){const t={x:Gs(e,"x","sqrt")};return Os.runKernel(gr,t)}}),No=Ks({square_:function(e){const t=Gs(e,"x","square");return Os.runKernel("Square",{x:t},{})}}),Ao=Ks({zerosLike_:function(e){const t={x:Gs(e,"x","zerosLike")};return Os.runKernel($r,t)}});function Mo(e){return Y(Te(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Gs(t,"x","tf.grad","string_or_numeric"),s=null!=n?Gs(n,"dy","tf.grad"):null;return Os.tidy((()=>{const{value:t,grads:n}=Os.gradients((()=>e(r)),[r],s);return null!=s&&J(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Fo(n),n[0]}))}}function _o(e){return Y(Te(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Y(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=js(t,"args","tf.grads","string_or_numeric"),s=null!=n?Gs(n,"dy","tf.grads"):null;return Os.tidy((()=>{const{value:t,grads:n}=Os.gradients((()=>e(...r)),r,s);return null!=s&&J(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Fo(n),n}))}}function Ro(e){return Y(Te(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Y(t instanceof vs,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Y(null==n||n instanceof vs,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=Os.gradients((()=>e(t)),[t],n);return Fo(r),{grad:r[0],value:s}}}function Do(e){return Y(Te(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Y(Array.isArray(t)&&t.every((e=>e instanceof vs)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Y(null==n||n instanceof vs,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=Os.gradients((()=>e(...t)),t,n);return null!=n&&J(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Fo(r.grads),r}}function $o(e,t){Y(Te(e),(()=>"The f passed in variableGrads(f) must be a function")),Y(null==t||Array.isArray(t)&&t.every((e=>e instanceof xs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Os.registeredVariables)t.push(Os.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),Y(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:i,grads:a}=Os.gradients(e,t,null,!0);Y(a.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Y(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=a[t]&&(o[e.name]=a[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:i,grads:o}}function Lo(e){return Os.customGrad(e)}function Fo(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Oo(e,t){if((ve(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ve(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Zs(e,[],[],t)}class zo extends Pa{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return co(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return $o(e,t)}dispose(){null!=this.iterations_&&co(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Oo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(zo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Po extends zo{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Os.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Os.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:uo((()=>Ao(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:uo((()=>Ao(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;uo((()=>{const e=So(To(i,this.rho),To(No(s),1-this.rho)),t=To(Io(Co(So(a,this.epsilon)),Co(So(i,this.epsilon))),s),n=So(To(a,this.rho),To(No(t),1-this.rho));i.assign(e),a.assign(n);const o=So(To(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(co(this.accumulatedGrads.map((e=>e.variable))),co(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Bo(e,t,n){const r={shape:e,value:t,dtype:n};return Os.runKernel(qt,{},r)}Po.className="Adadelta",Va(Po);class Vo extends zo{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Os.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:uo((()=>Bo(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable;uo((()=>{const e=So(i,No(s));i.assign(e);const t=So(To(Io(s,Co(So(e,Os.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&co(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Vo.className="Adagrad",Va(Vo);const Uo=Ks({pow_:function(e,t){let n=Gs(e,"base","pow"),r=Gs(t,"exp","pow");[n,r]=As(n,r);const s={a:n,b:r};return Os.runKernel(Gn,s)}}),Ho=Ks({sub_:function(e,t){let n=Gs(e,"a","sub"),r=Gs(t,"b","sub");[n,r]=As(n,r);const s={a:n,b:r};return Os.runKernel(Sr,s)}});class Wo extends zo{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],uo((()=>{this.accBeta1=Oo(t).variable(),this.accBeta2=Oo(n).variable()})),null==r&&(this.epsilon=Os.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);uo((()=>{const n=Ho(1,this.accBeta1),r=Ho(1,this.accBeta2);t.forEach(((t,s)=>{const i=Os.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:uo((()=>Ao(i).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:uo((()=>Ao(i).variable(!1)))});const a=Array.isArray(e)?e[s].tensor:e[t];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=So(To(o,this.beta1),To(a,1-this.beta1)),c=So(To(l,this.beta2),To(No(a),1-this.beta2)),h=Io(u,n),d=Io(c,r);o.assign(u),l.assign(c);const p=So(To(Io(h,So(Co(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(To(this.accBeta1,this.beta1)),this.accBeta2.assign(To(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&co(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&co(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),uo((()=>{this.accBeta1.assign(Uo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Uo(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Wo.className="Adam",Va(Wo);const Go=Ks({abs_:function(e){const t=Gs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Os.runKernel(yt,e)}{const e={x:t};return Os.runKernel(Ge,e)}}});function jo(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=e[i]||1;(t[t.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function qo(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],i=t.length-r-1,a=t[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function Ko(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Xo=Ks({maximum_:function(e,t){let n=Gs(e,"a","maximum"),r=Gs(t,"b","maximum");[n,r]=As(n,r),"bool"===n.dtype&&(n=Gi(n,"int32"),r=Gi(r,"int32")),Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(kn,s)}});class Zo extends zo{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],uo((()=>{this.iteration=Oo(0).variable(),this.accBeta1=Oo(t).variable()})),null==r&&(this.epsilon=Os.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);uo((()=>{const n=Ho(1,this.accBeta1),r=Io(-this.learningRate,So(To(this.iteration,this.decay),1));t.forEach(((t,s)=>{const i=Os.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ao(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Ao(i).variable(!1)});const a=Array.isArray(e)?e[s].tensor:e[t];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=So(To(o,this.beta1),To(a,1-this.beta1)),c=To(l,this.beta2),h=Go(a),d=Xo(c,h);o.assign(u),l.assign(d);const p=So(To(Io(r,n),Io(u,So(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(So(this.iteration,1)),this.accBeta1.assign(To(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&co(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&co(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Zo.className="Adamax",Va(Zo);class Qo extends zo{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Os.registeredVariables[t];uo((()=>{const e=So(To(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ho(Oo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Qo.className="SGD",Va(Qo);class Yo extends Qo{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Oo(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Os.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:uo((()=>Ao(r).variable(e)))}}const s=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&uo((()=>{let e;const t=So(To(this.m,s),i);e=this.useNesterov?So(To(this.c,So(i,To(t,this.m))),r):So(To(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&co(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Yo.className="Momentum",Va(Yo);class Jo extends zo{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Os.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Os.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:uo((()=>Ao(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:uo((()=>Ao(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:uo((()=>Ao(r).variable(s)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;uo((()=>{const e=So(To(a,this.decay),To(No(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=So(To(t,this.decay),To(i,1-this.decay)),l=Io(To(i,this.learningRate),Co(Ho(e,So(No(s),this.epsilon)))),u=So(To(o,this.momentum),l);a.assign(e),t.assign(s),o.assign(u);const c=Ho(r,u);r.assign(c)}else{const e=So(To(a,this.decay),To(No(i),1-this.decay)),t=So(To(o,this.momentum),Io(To(i,this.learningRate),Co(So(e,this.epsilon))));a.assign(e),o.assign(t);const n=Ho(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&co(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&co(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&co(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Jo.className="RMSProp",Va(Jo);const el=Ks({acos_:function(e){const t={x:Gs(e,"x","acos")};return Os.runKernel(je,t)}}),tl=Ks({acosh_:function(e){const t={x:Gs(e,"x","acosh")};return Os.runKernel(qe,t)}}),nl=Ks({addN_:function(e){Y(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Y(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Gs(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!se(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Os.runKernel(Xe,r)}}),rl=Ks({all_:function(e,t=null,n=!1){const r={x:Gs(e,"x","all","bool")},s={axis:t,keepDims:n};return Os.runKernel(Ze,r,s)}}),sl=Ks({any_:function(e,t=null,n=!1){const r={x:Gs(e,"x","any","bool")},s={axis:t,keepDims:n};return Os.runKernel(Qe,r,s)}}),il=Ks({argMax_:function(e,t=0){const n={x:Gs(e,"x","argMax")},r={axis:t};return Os.runKernel(Ye,n,r)}}),al=Ks({argMin_:function(e,t=0){const n={x:Gs(e,"x","argMin")},r={axis:t};return Os.runKernel(Je,n,r)}}),ol=Ks({asin_:function(e){const t={x:Gs(e,"x","asin")};return Os.runKernel(et,t)}}),ll=Ks({asinh_:function(e){const t={x:Gs(e,"x","asinh")};return Os.runKernel(tt,t)}}),ul=Ks({atan_:function(e){const t={x:Gs(e,"x","atan")};return Os.runKernel(nt,t)}}),cl=Ks({atan2_:function(e,t){let n=Gs(e,"a","atan2"),r=Gs(t,"b","atan2");[n,r]=As(n,r);const s={a:n,b:r};return Os.runKernel(st,s)}}),hl=Ks({atanh_:function(e){const t={x:Gs(e,"x","atanh")};return Os.runKernel(rt,t)}});function dl(e,t,n,r,s="NHWC",i){return ml(e,[...t,e[3]],n,i,r,null,null,El(s))}function pl(e,t,n,r,s,i,a="channelsLast"){const[o,l]=bl(t);let u;if("channelsLast"===a)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,e[1],e[1]]}return ml(e,u,n,r,s,i,!1,a)}function fl(e,t,n,r,s,i,a="NDHWC"){const[o,l,u]=vl(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return gl(e,c,n,r,s,!1,h,i)}function ml(e,t,n,r,s,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=bl(n),[y,b]=bl(r),v=xl(d,y),x=xl(p,b),{padInfo:w,outHeight:k,outWidth:S}=function(e,t,n,r,s,i,a,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=yl(e,t,n));const i=e[1];return[wl((e[0]-t+2*r)/n+1,s),wl((i-t+2*r)/n+1,s)]}([t,n],i,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+i-t),o=Math.max(0,(h-1)*s+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=wl((t-i+d+p)/r+1,o),h=wl((n-a+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,v,x,i,o),E=a?f*h:f;let I;return"channelsFirst"===o?I=[l,E,k,S]:"channelsLast"===o&&(I=[l,k,S,E]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:S,outChannels:E,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:e,outShape:I,filterShape:t}}function gl(e,t,n,r,s,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[y,b,v]=vl(n),[x,w,k]=vl(r),S=xl(p,x),E=xl(f,w),I=xl(m,k),{padInfo:T,outDepth:C,outHeight:N,outWidth:A}=function(e,t,n,r,s,i,a,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const i=function(e,t,n,r,s,i){null==s&&(s=yl(e,t,r));const a=e[1],o=e[2];return[wl((e[0]-t+2*s)/r+1,i),wl((a-t+2*s)/r+1,i),wl((o-t+2*s)/r+1,i),1]}([t,n,r,1],o,0,s,e,c);d=i[0],p=i[1],f=i[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const e=(d-1)*s+o-t,c=(p-1)*i+l-n,m=(f-1)*a+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),v=c-b,x=Math.floor(m/2);h={top:b,bottom:v,left:x,right:m-x,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/i),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,v,S,E,I,o),M=i?g*d:g;let _;return"channelsFirst"===a?_=[l,M,C,N,A]:"channelsLast"===a&&(_=[l,C,N,A,M]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:N,outWidth:A,outChannels:M,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:E,effectiveFilterWidth:I,dilationDepth:x,dilationHeight:w,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function yl(e,t,n,r=1){const s=xl(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function bl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function vl(e){return"number"==typeof e?[e,e,e]:e}function xl(e,t){return t<=1?e:e+(e-1)*(t-1)}function wl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function kl(e){const[t,n,r]=bl(e);return 1===t&&1===n&&1===r}function Sl(e,t){return kl(e)||kl(t)}function El(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const Il=Ks({reshape_:function(e,t){const n={x:Gs(e,"x","reshape","string_or_numeric")},r={shape:t};return Os.runKernel(Yn,n,r)}}),Tl=Ks({avgPool_:function(e,t,n,r,s){const i=Gs(e,"x","avgPool","float32");Y(Sl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=Il(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Y(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),null!=s&&Y(ie(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:a},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Os.runKernel(it,l,u);return c=Gi(c,i.dtype),o?Il(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Cl=Ks({avgPool3d_:function(e,t,n,r,s,i="NDHWC",a){null==a?a=[1,1,1]:so("dilations is deprecated, this field will be gone in v3.0.0.");const o=Gs(e,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=Il(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Y(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),Y("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Y(Sl(n,a),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=s&&Y(ie(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i,dilations:a};let d=Os.runKernel(ot,c,h);return d=Gi(d,l.dtype),u?Il(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Nl=Ks({concat_:function(e,t=0){Y(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=js(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return ji(n[0]);const r=n,s={axis:t};return Os.runKernel(bt,r,s)}}),Al=Ks({sigmoid_:function(e){const t={x:Gs(e,"x","sigmoid")};return Os.runKernel(fr,t)}}),Ml=Ks({slice_:function(e,t,n){const r=Gs(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:t,size:n};return Os.runKernel(cr,s,i)}}),_l=Ks({tanh_:function(e){const t={x:Gs(e,"x","tanh")};return Os.runKernel(Cr,t)}}),Rl=Ks({basicLSTMCell_:function(e,t,n,r,s,i){const a=Gs(e,"forgetBias","basicLSTMCell"),o=Gs(t,"lstmKernel","basicLSTMCell"),l=Gs(n,"lstmBias","basicLSTMCell"),u=Gs(r,"data","basicLSTMCell"),c=Gs(s,"c","basicLSTMCell"),h=Gs(i,"h","basicLSTMCell"),d=Nl([u,h],1),p=ha(d,o),f=So(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Ml(f,[0,0],y),v=Ml(f,[0,g],y),x=Ml(f,[0,2*g],y),w=Ml(f,[0,3*g],y),k=So(To(Al(b),_l(v)),To(c,Al(So(a,x))));return[k,To(_l(k),Al(w))]}}),Dl=Ks({batchToSpaceND_:function(e,t,n){const r=Gs(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));Y(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Y(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Y(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const i={x:r},a={blockShape:t,crops:n};return Os.runKernel(ct,i,a)}}),$l=Ks({batchNorm_:function(e,t,n,r,s,i){null==i&&(i=.001);const a=Gs(e,"x","batchNorm"),o=Gs(t,"mean","batchNorm"),l=Gs(n,"variance","batchNorm");let u,c;null!=s&&(u=Gs(s,"scale","batchNorm")),null!=r&&(c=Gs(r,"offset","batchNorm")),Y(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Il(e,[1,1,1,e.size]):2===e.rank?Il(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Il(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(a),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:i},p=Os.runKernel(Qt,h,d);return Il(p,a.shape)}}),Ll=Ks({batchNorm2d_:function(e,t,n,r,s,i){const a=Gs(e,"x","batchNorm"),o=Gs(t,"mean","batchNorm"),l=Gs(n,"variance","batchNorm");let u,c;return null!=s&&(u=Gs(s,"scale","batchNorm")),null!=r&&(c=Gs(r,"offset","batchNorm")),Y(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),Y(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),Y(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&Y(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&Y(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),$l(a,o,l,c,u,i)}}),Fl=Ks({batchNorm3d_:function(e,t,n,r,s,i){const a=Gs(e,"x","batchNorm"),o=Gs(t,"mean","batchNorm"),l=Gs(n,"variance","batchNorm");let u,c;return null!=s&&(u=Gs(s,"scale","batchNorm")),null!=r&&(c=Gs(r,"offset","batchNorm")),Y(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),Y(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),Y(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&Y(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&Y(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),$l(a,o,l,c,u,i)}}),Ol=Ks({batchNorm4d_:function(e,t,n,r,s,i){const a=Gs(e,"x","batchNorm"),o=Gs(t,"mean","batchNorm"),l=Gs(n,"variance","batchNorm");let u,c;return null!=s&&(u=Gs(s,"scale","batchNorm")),null!=r&&(c=Gs(r,"offset","batchNorm")),Y(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),Y(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),Y(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&Y(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&Y(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),$l(a,o,l,c,u,i)}}),zl=Ks({bincount_:function(e,t,n){const r=Gs(e,"x","bincount"),s=Gs(t,"weights","bincount");Y("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Y(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},a={size:n};return Os.runKernel(ht,i,a)}}),Pl=Ks({broadcastTo_:function(e,t){let n=Gs(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Il(n,e)}const s=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ji(n);const a={x:n},o={reps:i};return Os.runKernel(Nr,a,o)}}),Bl=Ks({ceil_:function(e){const t={x:Gs(e,"x","ceil")};return Os.runKernel(ft,t)}}),Vl=Ks({clipByValue_:function(e,t,n){const r=Gs(e,"x","clipByValue");Y(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},i={clipValueMin:t,clipValueMax:n};return Os.runKernel(mt,s,i)}}),Ul=Ks({concat1d_:function(e){return Nl(e,0)}}),Hl=Ks({concat2d_:function(e,t){return Nl(e,t)}}),Wl=Ks({concat3d_:function(e,t){return Nl(e,t)}}),Gl=Ks({concat4d_:function(e,t){return Nl(e,t)}}),jl=Ks({conv2d_:function(e,t,n,r,s="NHWC",i=[1,1],a){const o=Gs(e,"x","conv2d"),l=Gs(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Il(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Y(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=a&&Y(ie(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];Y(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Y(Sl(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=Os.runKernel(vt,d,p);return c?Il(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ql=Ks({conv1d_:function(e,t,n,r,s="NWC",i=1,a){const o=Gs(e,"x","conv1d"),l=Gs(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Il(o,[1,o.shape[0],o.shape[1]])),Y(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Y(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=a&&Y(ie(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`)),Y(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Y(Sl(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),Y("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Il(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Il(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=jl(d,h,[1,n],r,"NHWC",[1,i],a);return Il(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Kl=Ks({conv2DBackpropInput_:function(e,t,n,r,s,i="NHWC",a){Y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Il(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Y(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Y(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Y(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];Y(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Y(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=a&&Y(ie(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},f=Os.runKernel(wt,d,p);return u?Il(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Xl=Ks({conv2dTranspose_:function(e,t,n,r,s,i){const a=Gs(e,"x","conv2dTranspose"),o=Gs(t,"filter","conv2dTranspose");return Kl(n,a,o,r,s,"NHWC",i)}}),Zl=Ks({conv3d_:function(e,t,n,r,s="NDHWC",i=[1,1,1]){const a=Gs(e,"x","conv3d"),o=Gs(t,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=Il(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),Y(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Y(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Y(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Y(Sl(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Y("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:i},d=Os.runKernel(kt,c,h);return u?Il(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ql=Ks({conv3DBackpropInput_:function(e,t,n,r,s){Y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,a=t,o=!1;4===t.rank&&(o=!0,a=Il(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const l=i[4],u=a.shape[4];Y(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),Y(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),Y(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Y(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Y(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:s,strides:r,inputShape:i},d=Os.runKernel(Et,c,h);return o?Il(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Yl=Ks({conv3dTranspose_:function(e,t,n,r,s){const i=Gs(e,"x","conv3dTranspose"),a=Gs(t,"filter","conv3dTranspose");return Ql(n,i,a,r,s)}}),Jl=Ks({cos_:function(e){const t={x:Gs(e,"x","cos")};return Os.runKernel(It,t)}}),eu=Ks({cosh_:function(e){const t={x:Gs(e,"x","cosh")};return Os.runKernel(Tt,t)}}),tu=Ks({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Gs(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return Os.runKernel(Ct,s,i)}}),nu=Ks({denseBincount_:function(e,t,n,r=!1){const s=Gs(e,"x","denseBincount"),i=Gs(t,"weights","denseBincount");Y("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),Y(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),Y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Y(i.size===s.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`));const a={x:s,weights:i},o={size:n,binaryOutput:r};return Os.runKernel(At,a,o)}}),ru=Ks({depthToSpace_:function(e,t,n="NHWC"){const r=Gs(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];Y(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Y(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Y(a%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Os.runKernel(Mt,o,l)}}),su=Ks({depthwiseConv2d_:function(e,t,n,r,s="NHWC",i=[1,1],a){const o=Gs(e,"x","depthwiseConv2d"),l=Gs(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Il(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Y(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),Y(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=a&&Y(ie(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},p=Os.runKernel(_t,h,d);return c?Il(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),iu=Ks({diag_:function(e){const t={x:Gs(e,"x","diag")};return Os.runKernel($t,t)}}),au=Ks({dilation2d_:function(e,t,n,r,s=[1,1],i="NHWC"){const a=Gs(e,"x","dilation2d"),o=Gs(t,"filter","dilation2d");Y(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),Y(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Y("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=Il(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Os.runKernel(Lt,c,h);return u?Il(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ou=Ks({equal_:function(e,t){let n=Gs(e,"a","equal"),r=Gs(t,"b","equal");[n,r]=As(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(Ut,s)}}),lu=Ks({where_:function(e,t,n){const r=Gs(t,"a","where"),s=Gs(n,"b","where"),i=Gs(e,"condition","where","bool"),a=Ko(r.shape,s.shape),o=Pl(r,a),l=Pl(s,a);1===i.rank&&Y(i.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==i.rank&&J(i.shape,l.shape,"Error in where: ");const u={condition:i,t:o,e:l};return Os.runKernel(lr,u)}}),uu=Ks({divNoNan_:function(e,t){let n=Gs(e,"a","div"),r=Gs(t,"b","div");[n,r]=As(n,r);const s=Io(n,r),i=Ao(s),a=ou(r,i);return lu(a,i,s)}}),cu=Ks({dot_:function(e,t){const n=Gs(e,"t1","dot"),r=Gs(t,"t2","dot");Y(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(Y(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const e=Il(n,[1,-1]),t=Il(r,[-1,1]),s=ha(e,t);return Il(s,[])}if(1===n.rank&&2===r.rank){const e=Il(n,[1,-1]),t=Il(r,[r.shape[0],r.shape[1]]),s=ha(e,t);return Il(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Il(r,[-1,1]),t=ha(n,e);return Il(t,[t.size])}{const e=Il(r,[r.shape[0],r.shape[1]]);return ha(n,e)}}}),hu=Ks({elu_:function(e){const t={x:Gs(e,"x","elu")};return Os.runKernel(Pt,t)}}),du=Ks({erf_:function(e){let t=Gs(e,"x","erf");Y("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Gi(t,"float32"));const n={x:t};return Os.runKernel(Vt,n)}}),pu=Ks({exp_:function(e){const t={x:Gs(e,"x","exp")};return Os.runKernel(Ht,t)}}),fu=Ks({expandDims_:function(e,t=0){const n=Gs(e,"x","expandDims","string_or_numeric");Y(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Os.runKernel(Wt,r,s)}}),mu=Ks({expm1_:function(e){const t={x:Gs(e,"x","expm1")};return Os.runKernel(Gt,t)}}),gu=Ks({tile_:function(e,t){const n=Gs(e,"x","tile","string_or_numeric");Y(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Os.runKernel(Nr,r,s)}}),yu=Ks({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=Wi([e,t],r),i=e<=t?e:t;for(let e=0;e<i;++e)s.set(1,e,e);const a=Il(s.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return gu(fu(a,0),[n[0],1,1]);if(2===n.length)return gu(fu(fu(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return gu(fu(fu(fu(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),bu=Ks({floor_:function(e){const t={x:Gs(e,"x","floor")};return Os.runKernel(Xt,t)}}),vu=Ks({gather_:function(e,t,n=0,r=0){const s={x:Gs(e,"x","gather"),indices:Gs(t,"indices","gather","int32")},i={axis:n,batchDims:r};return Os.runKernel(Yt,s,i)}}),xu=Ks({greater_:function(e,t){let n=Gs(e,"a","greater"),r=Gs(t,"b","greater");[n,r]=As(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(en,s)}}),wu=Ks({greaterEqual_:function(e,t){let n=Gs(e,"a","greaterEqual"),r=Gs(t,"b","greaterEqual");[n,r]=As(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(tn,s)}}),ku=Ks({imag_:function(e){const t={input:Gs(e,"input","imag")};return Os.runKernel(sn,t)}}),Su=Ks({isFinite_:function(e){const t={x:Gs(e,"x","isFinite")};return Os.runKernel(an,t)}}),Eu=Ks({isInf_:function(e){const t={x:Gs(e,"x","isInf")};return Os.runKernel(on,t)}}),Iu=Ks({isNaN_:function(e){const t={x:Gs(e,"x","isNaN")};return Os.runKernel(ln,t)}}),Tu=Ks({leakyRelu_:function(e,t=.2){const n={x:Gs(e,"x","leakyRelu")},r={alpha:t};return Os.runKernel(un,n,r)}}),Cu=Ks({less_:function(e,t){let n=Gs(e,"a","less"),r=Gs(t,"b","less");[n,r]=As(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(cn,s)}}),Nu=Ks({lessEqual_:function(e,t){let n=Gs(e,"a","lessEqual"),r=Gs(t,"b","lessEqual");[n,r]=As(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(hn,s)}});function Au(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Os.runKernel(dn,{},r)}const Mu=Ks({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const i=Gs(e,"x","localResponseNormalization");Y(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),Y(ie(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=Il(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:t,bias:n,alpha:r,beta:s},c=Os.runKernel(vn,l,u);return o?Il(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),_u=Ks({log_:function(e){const t={x:Gs(e,"x","log")};return Os.runKernel(pn,t)}}),Ru=Ks({log1p_:function(e){const t={x:Gs(e,"x","log1p")};return Os.runKernel(fn,t)}}),Du=Ks({neg_:function(e){const t={x:Gs(e,"x","neg")};return Os.runKernel(Ln,t)}}),$u=Ks({softplus_:function(e){const t={x:Gs(e,"x","softplus")};return Os.runKernel(mr,t)}}),Lu=Ks({logSigmoid_:function(e){const t=Gs(e,"x","logSigmoid");return Lo((e=>({value:Du($u(Du(e))),gradFunc:t=>To(t,Al(Du(e)))})))(t)}}),Fu=Ks({max_:function(e,t=null,n=!1){const r={x:Gs(e,"x","max")},s={reductionIndices:t,keepDims:n};return Os.runKernel(wn,r,s)}}),Ou=Ks({sum_:function(e,t=null,n=!1){let r=Gs(e,"x","sum");"bool"===r.dtype&&(r=Gi(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return Os.runKernel(yr,s,i)}}),zu=Ks({logSoftmax_:function(e,t=-1){const n=Gs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Lo(((e,n)=>{const r=Fu(e,t,!0),s=Ho(e,r),i=Ho(Gi(s,"float32"),_u(Ou(pu(s),t,!0)));return n([i]),{value:i,gradFunc:(e,n)=>{const[r]=n,s=pu(r);return Ho(e,To(Ou(e,t,!0),s))}}}));return r(n)}});function Pu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Bu(e,t,n){const r=e.length+t.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[i++]):s.push(t[a++]);return s}function Vu(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Uu(e,t){return Bu(e,t.map((e=>1)),t)}function Hu(e,t,n){Y(Pu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Wu(e,t){if(Pu(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Gu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function ju(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const qu=Ks({logSumExp_:function(e,t=null,n=!1){const r=Gs(e,"x","logSumExp"),s=de(t,r.shape),i=Fu(r,s,!0),a=Ho(r,i),o=pu(a),l=Ou(o,s),u=_u(l),c=So(Il(i,u.shape),u);if(n){const e=Uu(c.shape,s);return Il(c,e)}return c}}),Ku=Ks({logicalAnd_:function(e,t){const n=Gs(e,"a","logicalAnd","bool"),r=Gs(t,"b","logicalAnd","bool");Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(mn,s)}}),Xu=Ks({logicalNot_:function(e){const t={x:Gs(e,"x","logicalNot","bool")};return Os.runKernel(gn,t)}}),Zu=Ks({logicalOr_:function(e,t){const n=Gs(e,"a","logicalOr","bool"),r=Gs(t,"b","logicalOr","bool");Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(yn,s)}}),Qu=Ks({logicalXor_:function(e,t){const n=Gs(e,"a","logicalXor","bool"),r=Gs(t,"b","logicalXor","bool");return Ko(n.shape,r.shape),Ku(Zu(e,t),Xu(Ku(e,t)))}}),Yu=Ks({maxPool_:function(e,t,n,r,s){const i=Gs(e,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=Il(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Y(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),Y(Sl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&Y(ie(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:a},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Os.runKernel(Sn,l,u);return o?Il(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ju=Ks({maxPool3d_:function(e,t=[1,1,1],n,r,s,i="NDHWC",a){null==a?a=[1,1,1]:so("dilations is deprecated, this field will be gone in v3.0.0.");const o=Gs(e,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=Il(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Y(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),Y("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Y(Sl(n,a),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=s&&Y(ie(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i,dilations:a},d=Os.runKernel(In,c,h);return u?Il(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ec=Ks({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const i={x:Gs(e,"x","maxPoolWithArgmax")},a={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=Os.runKernel(Cn,i,a);return{result:o[0],indexes:o[1]}}}),tc=Ks({mean_:function(e,t=null,n=!1){const r={x:Gs(e,"x","mean")},s={axis:t,keepDims:n};return Os.runKernel(Nn,r,s)}}),nc=Ks({min_:function(e,t=null,n=!1){const r={x:Gs(e,"x","min")},s={axis:t,keepDims:n};return Os.runKernel(An,r,s)}}),rc=Ks({minimum_:function(e,t){let n=Gs(e,"a","minimum"),r=Gs(t,"b","minimum");[n,r]=As(n,r),"bool"===n.dtype&&(n=Gi(n,"int32"),r=Gi(r,"int32")),Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(Mn,s)}}),sc=Ks({mirrorPad_:function(e,t,n){Y("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Gs(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Y(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Y(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Y(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},a={x:r};return Os.runKernel(_n,a,i)}}),ic=Ks({mod_:function(e,t){let n=Gs(e,"a","mod"),r=Gs(t,"b","mod");[n,r]=As(n,r);const s={a:n,b:r};return Os.runKernel(Rn,s)}}),ac=Ks({moments_:function(e,t=null,n=!1){const r=de(t,(e=Gs(e,"x","moments")).shape),s=tc(e,r,n);let i=s.shape;n||(i=Uu(s.shape,r));const a=No(Ho(Gi(e,"float32"),Il(s,i)));return{mean:s,variance:tc(a,r,n)}}}),oc=Ks({multiRNNCell_:function(e,t,n,r){const s=Gs(t,"data","multiRNNCell"),i=js(n,"c","multiRNNCell"),a=js(r,"h","multiRNNCell");let o=s;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,i[t],a[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}}),lc=Ks({multinomial_:function(e,t,n,r=!1){const s=Gs(e,"logits","multinomial"),i=s.size,a=s.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const o={logits:1===a?Il(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=Os.runKernel(Dn,o,l);return 1===a?Il(u,[u.size]):u}}),uc=Ks({notEqual_:function(e,t){let n=Gs(e,"a","notEqual"),r=Gs(t,"b","notEqual");[n,r]=As(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(Fn,s)}});function cc(e,t="float32"){if("complex64"===t){const t=cc(e,"float32"),n=cc(e,"float32");return Xs(t,n)}const n=Re(ne(e),t);return Os.makeTensor(n,e,t)}function hc(e,t="float32"){if("complex64"===t){const t=hc(e,"float32"),n=cc(e,"float32");return Xs(t,n)}const n=_e(ne(e),t);return Os.makeTensor(n,e,t)}const dc=Ks({onesLike_:function(e){const t={x:Gs(e,"x","onesLike")};return Os.runKernel(Bn,t)}}),pc=Ks({outerProduct_:function(e,t){const n=Gs(e,"v1","outerProduct"),r=Gs(t,"v2","outerProduct");Y(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=Il(n,[-1,1]),i=Il(r,[1,-1]);return ha(s,i)}}),fc=Ks({pad_:function(e,t,n=0){const r=Gs(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},i={x:r};return Os.runKernel(Hn,i,s)}}),mc=Ks({pad1d_:function(e,t,n=0){return Y(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),fc(e,[t],n)}}),gc=Ks({pad2d_:function(e,t,n=0){return Y(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),fc(e,t,n)}}),yc=Ks({pad3d_:function(e,t,n=0){return Y(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),fc(e,t,n)}}),bc=Ks({pad4d_:function(e,t,n=0){return Y(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),fc(e,t,n)}}),vc=Ks({spaceToBatchND_:function(e,t,n){const r=Gs(e,"x","spaceToBatchND");Y(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Y(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Y(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},i={blockShape:t,paddings:n};return Os.runKernel(br,s,i)}}),xc=Ks({pool_:function(e,t,n,r,s,i){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const a=Gs(e,"x","maxPool");let o=a,l=!1;3===a.rank&&(l=!0,o=Il(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Y(Sl(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const u=pl(o.shape,t,i,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),i=e.concat(r,s),a=t.map(((e,t)=>(e-i[t]%e)%e)),o=s.map(((e,t)=>e+a[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,a[t]]))]}([u.inHeight,u.inWidth],c,h),m=d?r:"valid",g=d?o:vc(o,c,p),y=("avg"===n?()=>Tl(g,t,i,m):()=>Yu(g,t,i,m))(),b=d?y:Dl(y,c,f);return l?Il(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),wc=Ks({prelu_:function(e,t){const n={x:Gs(e,"x","prelu"),alpha:Gs(t,"alpha","prelu")};return Os.runKernel(jn,n)}}),kc=Ks({prod_:function(e,t=null,n=!1){let r=Gs(e,"x","prod");"bool"===r.dtype&&(r=Gi(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return Os.runKernel(qn,s,i)}}),Sc=Ks({rand_:function(e,t,n){const r=ne(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return Os.makeTensor(s,e,n)}});var Ec=n(6377);class Ic{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=Ec.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Tc{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Ec.alea(s.toString()),this.randn=new Ic(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,i;for(;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),s=this.randu(),s<t||Math.log(s)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Cc{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ec.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Nc=Ks({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const i=new Tc(t,n,r,s),a=Wi(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Ac=Ks({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new Ic(t,n,r,!1,s),a=Wi(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Mc=Ks({randomUniform_:function(e,t=0,n=1,r="float32",s){const i=Wi(e,r),a=new Cc(t,n,null,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});function _c(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Os.runKernel(Kn,{},s)}const Rc=Ks({real_:function(e){const t={input:Gs(e,"input","real")};return Os.runKernel(Xn,t)}}),Dc=Ks({reciprocal_:function(e){const t={x:Gs(e,"x","reciprocal")};return Os.runKernel(Zn,t)}}),$c=Ks({relu_:function(e){const t={x:Gs(e,"x","relu")};return Os.runKernel(Qn,t)}}),Lc=Ks({relu6_:function(e){const t={x:Gs(e,"x","relu6")};return Os.runKernel(rr,t)}}),Fc=Ks({reverse_:function(e,t){const n={x:Gs(e,"x","reverse")},r={dims:t};return Os.runKernel(sr,n,r)}}),Oc=Ks({reverse1d_:function(e){const t=Gs(e,"x","reverse");return Y(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Fc(t,0)}}),zc=Ks({reverse2d_:function(e,t){const n=Gs(e,"x","reverse");return Y(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Fc(n,t)}}),Pc=Ks({reverse3d_:function(e,t){const n=Gs(e,"x","reverse");return Y(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Fc(n,t)}}),Bc=Ks({reverse4d_:function(e,t){const n=Gs(e,"x","reverse");return Y(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Fc(n,t)}}),Vc=Ks({round_:function(e){const t={x:Gs(e,"x","round")};return Os.runKernel(ir,t)}}),Uc=Ks({rsqrt_:function(e){const t={x:Gs(e,"x","rsqrt")};return Os.runKernel(ar,t)}}),Hc=Ks({selu_:function(e){const t={x:Gs(e,"x","selu")};return Os.runKernel(ur,t)}}),Wc=Ks({separableConv2d_:function(e,t,n,r,s,i=[1,1],a="NHWC"){const o=Gs(e,"x","separableConv2d"),l=Gs(t,"depthwiseFilter","separableConv2d"),u=Gs(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Il(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Y(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Y(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Y(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Y(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Y(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];Y(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=su(c,l,r,s,a,i),m=jl(f,u,1,"valid",a);return h?Il(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Gc=async function(e,t){const n=Gs(e,"x","setdiff1d"),r=Gs(t,"y","setdiff1d");Y(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Y(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Y(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),i=await r.data(),a=new Set(i);let o=0;for(let e=0;e<s.length;e++)a.has(s[e])||o++;const l=new ms([o],n.dtype),u=new ms([o],"int32");for(let e=0,t=0;e<s.length;e++)a.has(s[e])||(l.values[t]=s[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},jc=Ks({sign_:function(e){const t={x:Gs(e,"x","sign")};return Os.runKernel(pr,t)}}),qc=Ks({sin_:function(e){const t={x:Gs(e,"x","sin")};return Os.runKernel(hr,t)}}),Kc=Ks({sinh_:function(e){const t={x:Gs(e,"x","sinh")};return Os.runKernel(dr,t)}}),Xc=Ks({slice1d_:function(e,t,n){const r=Gs(e,"x","slice1d");return Y(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Ml(r,[t],[n])}}),Zc=Ks({slice2d_:function(e,t,n){const r=Gs(e,"x","slice2d");return Y(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Ml(r,t,n)}}),Qc=Ks({slice3d_:function(e,t,n){const r=Gs(e,"x","slice3d");return Y(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Ml(r,t,n)}}),Yc=Ks({slice4d_:function(e,t,n){const r=Gs(e,"x","slice4d");return Y(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Ml(r,t,n)}}),Jc=Ks({softmax_:function(e,t=-1){const n=Gs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Os.runKernel(xr,r,s)}}),eh=Ks({fft_:function(e){Y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Os.runKernel(jt,t)}}),th=Ks({ifft_:function(e){Y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Os.runKernel(rn,t)}}),nh=Ks({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Il(e,[n,t]);r=th(s)}else{const s=[n,2*(t-1)],i=Il(Rc(e),[n,t]),a=Il(ku(e),[n,t]),o=Fc(Ml(i,[0,1],[n,t-2]),1),l=To(Fc(Ml(a,[0,1],[n,t-2]),1),Oo(-1)),u=Nl([i,o],1),c=Nl([a,l],1),h=Il(Xs(u,c),[s[0],s[1]]);r=th(h)}if(r=Rc(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Il(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),rh=Ks({split_:function(e,t,n=0){const r={x:Gs(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Os.runKernel(vr,r,s)}}),sh=Ks({rfft_:function(e,t){Y("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,s=Ml(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Nl([e,cc(r)],e.shape.length-1),n=t}else s=e;const i=Ao(s),a=Il(Xs(s,i),[r,n]),o=eh(a),l=Math.floor(n/2)+1,u=Rc(o),c=ku(o),h=rh(u,[l,n-l],u.shape.length-1),d=rh(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,Il(Xs(h[0],d[0]),p)}}),ih=Ks({squaredDifference_:function(e,t){let n=Gs(e,"a","squaredDifference"),r=Gs(t,"b","squaredDifference");[n,r]=As(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(wr,s,{})}}),ah=Ks({squeeze_:function(e,t){const n=Gs(e,"x","squeeze");return Il(n,pe(n.shape,t).newShape)}}),oh=Ks({stack_:function(e,t=0){const n=js(e,"tensors","stack","string_or_numeric");Y(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Y(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Os.runKernel(Un,r,s)}}),lh=Ks({step_:function(e,t=0){const n={x:Gs(e,"x","step")},r={alpha:t};return Os.runKernel(Lr,n,r)}}),uh=Ks({stridedSlice_:function(e,t,n,r,s=0,i=0,a=0,o=0,l=0){const u={x:Gs(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return Os.runKernel(Ir,u,c)}}),ch=Ks({tan_:function(e){const t={x:Gs(e,"x","tan")};return Os.runKernel(Tr,t)}});function hh(e,t){ee(e);const n=Us(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Zs(e,null,n,t)}function dh(e,t,n){if(ee(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Us(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Zs(e,t,r,n)}function ph(e,t,n){if(ee(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Us(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Zs(e,t,r,n)}function fh(e,t,n){if(ee(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Us(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Zs(e,t,r,n)}function mh(e,t,n){if(ee(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Us(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Zs(e,t=t||r,r,n)}const gh=Ks({topk_:function(e,t=1,n=!0){const r=Gs(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const i={x:r},a={k:t,sorted:n},[o,l]=Os.runKernel(Ar,i,a);return{values:o,indices:l}}}),yh=Ks({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new Ic(t,n,r,!0,s),a=Wi(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),bh=Ks({unique_:function(e,t=0){const n=Gs(e,"x","unique","string_or_numeric");Y(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[i,a]=Os.runKernel(_r,r,s);return{values:i,indices:a}}}),vh=Ks({unsortedSegmentSum_:function(e,t,n){const r=Gs(e,"x","unsortedSegmentSum"),s=Gs(t,"segmentIds","unsortedSegmentSum","int32");Y(ie(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},a={numSegments:n};return Os.runKernel(Dr,i,a)}}),xh=Ks({unstack_:function(e,t=0){const n=Gs(e,"x","unstack","string_or_numeric");Y(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Os.runKernel(Rr,r,s)}});function wh(e,t=!0,n,r){return Os.makeVariable(e,t,n,r)}function kh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Wi(e,"int32"),s=Wi([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const i=r.indexToLoc(n[t]),a=t*e.length;s.values.set(i,a)}return s.toTensor()}const Sh=async function(e){const t=Gs(e,"condition","whereAsync","bool"),n=await t.data(),r=kh(t.shape,n);return e!==t&&t.dispose(),r},Eh=async function(e,t,n){const r=Gs(e,"tensor","boolMask"),s=Gs(t,"mask","boolMask","bool"),i=null==n?0:n,a=s.rank,o=r.shape;Y(a>0,(()=>"mask cannot be scalar")),J(o.slice(i,i+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=i;e<i+a;e++)l*=o[e];const u=o.slice(0,i).concat([l],o.slice(i+a)),c=Il(r,u),h=Il(s,[-1]),d=await Sh(h),p=ah(d,[1]),f=vu(c,p,i);return e!==r&&r.dispose(),t!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f},Ih=Ks({equalStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","equalStrict"),r=Gs(t,"b","equalStrict");return J(n.shape,r.shape,"Error in equalStrict: "),ou(n,r)}}),Th=Ks({greaterEqualStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","greaterEqualStrict"),r=Gs(t,"b","greaterEqualStrict");return J(n.shape,r.shape,"Error in greaterEqualStrict: "),wu(n,r)}}),Ch=Ks({greaterStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","greaterStrict"),r=Gs(t,"b","greaterStrict");return J(n.shape,r.shape,"Error in greaterStrict: "),xu(n,r)}}),Nh=Ks({lessEqualStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","lessEqualStrict"),r=Gs(t,"b","lessEqualStrict");return J(n.shape,r.shape,"Error in lessEqualStrict: "),Nu(n,r)}}),Ah=Ks({lessStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","lessStrict"),r=Gs(t,"b","lessStrict");return J(n.shape,r.shape,"Error in lessStrict: "),Cu(n,r)}}),Mh=Ks({notEqualStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","notEqualStrict"),r=Gs(t,"b","notEqualStrict");return J(n.shape,r.shape,"Error in notEqualStrict: "),uc(n,r)}}),_h=Ks({addStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","addStrict"),r=Gs(t,"b","addStrict");return J(n.shape,r.shape,"Error in addStrict: "),So(n,r)}}),Rh=Ks({divStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","div"),r=Gs(t,"b","div");return J(n.shape,r.shape,"Error in divideStrict: "),Io(n,r)}}),Dh=Ks({maximumStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","maximumStrict"),r=Gs(t,"b","maximumStrict");return J(n.shape,r.shape,"Error in maximumStrict: "),Xo(n,r)}}),$h=Ks({minimumStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","minimumStrict"),r=Gs(t,"b","minimumStrict");return J(n.shape,r.shape,"Error in minimumStrict: "),rc(n,r)}}),Lh=Ks({modStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","modStrict"),r=Gs(t,"b","modStrict");return J(n.shape,r.shape,"Error in modStrict: "),ic(n,r)}}),Fh=Ks({mulStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","mul"),r=Gs(t,"b","mul");return J(n.shape,r.shape,"Error in multiplyStrict: "),To(n,r)}}),Oh=Ks({powStrict_:function(e,t){return so("strict variants of ops have been deprecated and will be removed in future"),J(e.shape,t.shape,"Error in powStrict: "),Uo(e,t)}}),zh=Ks({squaredDifferenceStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","squaredDifferenceStrict"),r=Gs(t,"b","squaredDifferenceStrict");return J(n.shape,r.shape,"Error in squaredDifferenceStrict: "),ih(n,r)}}),Ph=Ks({subStrict_:function(e,t){so("strict variants of ops have been deprecated and will be removed in future");const n=Gs(e,"a","subStrict"),r=Gs(t,"b","subStrict");return J(n.shape,r.shape,"Error in subStrict: "),Ho(n,r)}});function Bh(e,t,n=null){if(0===e.rank)return Go(e);if(1!==e.rank&&null===n)return Bh(Il(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Ou(Go(e),n);if(t===1/0)return Fu(Go(e),n);if(t===-1/0)return nc(Go(e),n);if("euclidean"===t||2===t)return Co(Ou(Uo(Go(e),Oo(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Fu(Ou(Go(e),n[0]),n[1]-1);if(t===1/0)return Fu(Ou(Go(e),n[1]),n[0]);if(t===-1/0)return nc(Ou(Go(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Co(Ou(No(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Vh=Ks({norm_:function(e,t="euclidean",n=null,r=!1){const s=Bh(e=Gs(e,"x","norm"),t,n);let i=s.shape;if(r){const t=de(n,e.shape);i=Uu(s.shape,t)}return Il(s,i)}}),Uh=Ks({movingAverage_:function(e,t,n,r,s=!0){const i=Gs(e,"v","movingAverage"),a=Gs(t,"x","movingAverage"),o=Gs(n,"decay","movingAverage");Ms(i,a),Y(se(i.shape,a.shape),(()=>"Shape mismatch in v and x"));const l=Oo(1),u=Ho(l,o);let c=To(Ho(a,i),u);if(s){Y(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Gs(r,"step","movingAverage");c=Io(c,Ho(l,Uo(o,e)))}return So(i,c)}}),Hh=Ks({scatterND_:function(e,t,n){const r=Gs(e,"indices","scatterND","int32"),s=Gs(t,"updates","scatterND");wa(s,r,n);const i={indices:r,updates:s},a={shape:n};return Os.runKernel(or,i,a)}}),Wh=Ks({sparseToDense_:function(e,t,n,r=0){const s=Gs(e,"sparseIndices","sparseToDense","int32"),i=Gs(t,"sparseValues","sparseToDense"),a=Gs(r,"defaultValue","sparseToDense",i.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const a=t.size;if(0!==t.rank&&(1!==t.rank||a!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,i,n,a);const o={sparseIndices:s,sparseValues:i,defaultValue:a},l={outputShape:n};return Os.runKernel(Er,o,l)}}),Gh=Ks({gatherND_:function(e,t){const n=Gs(t,"indices","gatherND","int32"),r={params:Gs(e,"x","gatherND"),indices:n};return Os.runKernel(Jt,r)}}),jh=Ks({dropout_:function(e,t,n,r){const s=Gs(e,"x","dropout");if(Y("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),Y(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof vs?s.clone():s;const i=function(e,t){if(null==t)return e.shape.slice();if(se(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),a=1-t,o=Io(bu(So(Mc(i,0,1,"float32",r),a)),a);return To(s,o)}});function qh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Kh(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let i=0;i<e;++i){const a=2*Math.PI*i/(e+r-1);s[i]=t-n*Math.cos(a)}return hh(s,"float32")}const Xh=async function(e,t,n=1){const r=Gs(e,"predictions","inTopK"),s=Gs(t,"targets","inTopK");Y(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Y(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),J(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];Y(n>0&&n<=i,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`));const a=await r.data(),o=await s.data(),[l,u]=[a.length/i,i],c=fe("bool",l);for(let e=0;e<l;e++){const t=e*u,r=a.subarray(t,t+u),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),Qs(c,s.shape,"bool")},Zh=Ks({conv2DBackpropFilter_:function(e,t,n,r,s,i="NHWC",a){let o=e;3===e.rank&&(o=Il(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Il(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Y(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Y(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Y(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];Y(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Y(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=a&&Y(ie(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:n};return Os.runKernel(xt,h,d)}});function Qh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return To(e,lh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Yh(e,t){let n=t;const r=qo(e.shape,t.shape);return r.length>0&&(n=Ou(n,r)),Il(n,e.shape)}function Jh(e,t,n,r){if("linear"===t)return e;if("relu"===t)return $c(e);if("elu"===t)return hu(e);if("relu6"===t)return Lc(e);if("prelu"===t)return wc(e,n);if("leakyrelu"===t)return Tu(e,r);throw new Error(`Unknown fused activation ${t}.`)}const ed=(e,t)=>!(e>0)||"linear"===t,td=Ks({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===ed(Os.state.gradientDepth,l)){let h=jl(e,t,n,r,s,i,a);return null!=o&&(h=So(h,o)),Jh(h,l,u,c)}const h=Gs(e,"x","conv2d"),d=Gs(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=Il(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Y(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),Y(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=a&&Y(ie(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`)),Y(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),Y(Sl(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Y("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=ml(p.shape,d.shape,n,i,r,a);let g,y;null!=o&&(g=Gs(o,"bias","fused conv2d"),[g]=As(g,h),Ko(m.outShape,g.shape)),null!=u&&(y=Gs(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[s,a,o,u]=t,c=Qh(e,o,l);Y(kl(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[Kl(a.shape,c,s,n,r),Zh(a,c,s.shape,n,r)];if(null!=u){const e=Yh(u,c);h.push(e)}return h},v={x:p,filter:d,bias:g,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const e=Lo(((e,t,n)=>{let r=Os.runKernel(Pr,v,x);return n([t,e,r]),f&&(r=Il(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,d)}{const e=Lo(((e,t,n,r)=>{let s=Os.runKernel(Pr,v,x);return r([t,e,s,n]),f&&(s=Il(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(p,d,g)}}}),nd=Ks({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,i=[1,1],a){let o=e;3===e.rank&&(o=Il(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Il(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:n};return Os.runKernel(Rt,u,c)}}),rd=Ks({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,i=[1,1],a){let o=t,l=!1;3===t.rank&&(l=!0,o=Il(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:e},h=Os.runKernel(Dt,u,c);return l?Il(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),sd=Ks({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===ed(Os.state.gradientDepth,l)){let h=su(e,t,n,r,s,i,a);return null!=o&&(h=So(h,o)),Jh(h,l,u,c)}const h=Gs(e,"x","depthwiseConv2d"),d=Gs(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=Il(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Y(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),Y(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),Y(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==i&&(i=[1,1]),Y(Sl(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=a&&Y(ie(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${r}.`));const m=ml(p.shape,d.shape,n,i,r,a,!0);let g,y;null!=o&&(g=Gs(o,"bias","fused conv2d"),[g]=As(g,h),Ko(m.outShape,g.shape)),null!=u&&(y=Gs(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{Y(kl(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[s,o,u,c]=t,h=Qh(e,u,l),d=rd(o.shape,h,s,n,r,i,a),p=nd(o,h,s.shape,n,r,i,a);return null!=c?[d,p,Yh(g,h)]:[d,p]},v={x:p,filter:d,bias:g,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const e=Lo(((e,t,n)=>{let r=Os.runKernel(Br,v,x);return n([t,e,r]),f&&(r=Il(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,d)}{const e=Lo(((e,t,n,r)=>{let s=Os.runKernel(Br,v,x);return r([t,e,s,n]),f&&(s=Il(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(p,d,g)}}}),id=Ks({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o}){if(!1===ed(Os.state.gradientDepth,i)){let l=ha(e,t,n,r);return null!=s&&(l=So(l,s)),Jh(l,i,a,o)}let l=Gs(e,"a","fused matMul"),u=Gs(t,"b","fused matMul");[l,u]=As(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ne(f),y=ne(m);Y(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),Y(se(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),Y(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=l.shape.slice(0,-2).concat([d,p]),v=Il(l,n?[g,c,d]:[g,d,c]),x=Il(u,r?[y,p,h]:[y,h,p]);let w,k;null!=s&&(w=Gs(s,"bias","fused matMul"),[w]=As(w,l),Ko(b,w.shape)),null!=a&&(k=Gs(a,"prelu weights","fused matMul"));const S=(e,t)=>{const[a,o,l,u]=t,c=Qh(Il(e,l.shape),l,i);let h,d;return n||r?!n&&r?(h=ha(c,o,!1,!1),d=ha(c,a,!0,!1)):n&&!r?(h=ha(o,c,!1,!0),d=ha(a,c,!1,!1)):(h=ha(o,c,!0,!0),d=ha(c,a,!0,!0)):(h=ha(c,o,!1,!0),d=ha(a,c,!0,!1)),null!=s?[h,d,Yh(u,c)]:[h,d]},E={a:v,b:x,bias:w,preluActivationWeights:k},I={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==s){const e=Lo(((e,t,n)=>{const r=Os.runKernel(zr,E,I);return n([e,t,r]),{value:Il(r,b),gradFunc:S}}));return e(v,x)}{const e=Lo(((e,t,n,r)=>{const s=Os.runKernel(zr,E,I);return r([e,t,s,n]),{value:Il(s,b),gradFunc:S}}));return e(v,x,w)}}}),ad=Ks({hammingWindow_:function(e){return Kh(e,.54,.46)}}),od=Ks({hannWindow_:function(e){return Kh(e,.5,.5)}}),ld=Ks({frame_:function(e,t,n,r=!1,s=0){let i=0;const a=[];for(;i+t<=e.size;)a.push(Ml(e,i,t)),i+=n;if(r)for(;i<e.size;){const r=i+t-e.size,o=Nl([Ml(e,i,t-r),Bo([r],s)]);a.push(o),i+=n}return 0===a.length?dh([],[0,t]):Il(Nl(a),[a.length,t])}}),ud=Ks({stft_:function(e,t,n,r,s=od){null==r&&(r=qh(t));const i=ld(e,t,n),a=To(i,s(t)),o=[];for(let e=0;e<i.shape[0];e++)o.push(sh(Ml(a,[e,0],[1,t]),r));return Nl(o)}}),cd=Ks({cropAndResize_:function(e,t,n,r,s="bilinear",i=0){const a=Gs(e,"image","cropAndResize"),o=Gs(t,"boxes","cropAndResize","float32"),l=Gs(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Y(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),Y(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Y(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Y(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Y(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Y("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:a,boxes:o,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r};return Os.runKernel(Nt,c,h)}}),hd=Ks({flipLeftRight_:function(e){const t=Gs(e,"image","flipLeftRight","float32");Y(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Os.runKernel(Kt,n,{})}}),dd=Ks({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Gs(e,"image","rotateWithOffset","float32");Y(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},a={radians:t,fillValue:n,center:r};return Os.runKernel(Or,i,a)}});function pd(e,t,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=e.shape[0];return n=Math.min(n,a),Y(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Y(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Y(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Y(1===t.rank,(()=>"scores must be a 1D tensor")),Y(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),Y(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}const fd=Ks({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=Gs(e,"boxes","nonMaxSuppression"),a=Gs(t,"scores","nonMaxSuppression"),o=pd(i,a,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Os.runKernel(On,{boxes:i,scores:a},l)}});function md(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(e,t,n||gd)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function gd(e,t){return e>t?1:e<t?-1:0}function yd(e,t,n,r,s){return xd(e,t,n,r,s,0)}function bd(e,t,n,r,s,i){return xd(e,t,n,r,s,0,!1,i,!0)}function vd(e,t,n,r,s,i){return xd(e,t,n,r,s,i,!0)}function xd(e,t,n,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Sd);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=wd(e,i,h[n]);if(a>=r){o=!0;break}if(t.score=t.score*kd(r,c,a),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>s&&md(u,t,Sd))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function wd(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,u),g=Math.max(a,c),y=Math.min(o,h),b=Math.min(l,d),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function kd(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Sd(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Ed=Ks({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=Gs(e,"boxes","nonMaxSuppression"),o=Gs(t,"scores","nonMaxSuppression"),l=pd(a,o,n,r,s,i),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=Os.runKernel(Pn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Id=Ks({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=Gs(e,"boxes","nonMaxSuppression"),o=Gs(t,"scores","nonMaxSuppression"),l=pd(a,o,n,r,s,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=Os.runKernel(zn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Td=Ks({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Gs(e,"images","resizeBilinear");Y(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),Y(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Y(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=Il(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:t},u=Os.runKernel(tr,o,l);return a?Il(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Cd=Ks({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Gs(e,"images","resizeNearestNeighbor");Y(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),Y(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Y("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Y(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=Il(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:t},u=Os.runKernel(Jn,o,l);return a?Il(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Nd=Ks({bandPart_:function(e,t,n){Y(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Y(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Gs(e,"a","bandPart");Y(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,a]=r.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);t<0&&(t=i),n<0&&(n=a);const o=Il(_c(0,i,1,"int32"),[-1,1]),l=_c(0,a,1,"int32"),u=Ho(o,l),c=Ku(Nu(u,Oo(+t,"int32")),wu(u,Oo(-n,"int32"))),h=cc([i,a],r.dtype);return Il(oh(xh(Il(r,[-1,i,a])).map((e=>lu(c,e,h)))),s)}}),Ad=Ks({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Y(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Y(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=rh(e,e.shape[0],0).map((e=>ah(e,[0])));Y(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Os.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=To(Ou(To(n[r],e)),n[r]);e=Ho(e,t)}return Io(e,Vh(e,"euclidean"))})));return t?oh(n,0):n}});function Md(e,t=!1){return Os.tidy((()=>{Y(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=yu(n),i=ji(e);const a=dh([[1]],[1,1]);let o=ji(a);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=i,l=o,u=s;[o,i,s]=Os.tidy((()=>{const t=Ml(i,[e,e],[n-e,1]),l=Vh(t),u=Ml(i,[e,e],[1,1]),c=lu(xu(u,0),dh([[-1]]),dh([[1]])),h=Ho(u,To(c,l)),d=Io(t,h);o=1===d.shape[0]?ji(a):Nl([a,Ml(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Du(Io(ha(c,h),l)),f=Ml(i,[e,0],[n-e,r]),m=To(p,o),g=pa(o);if(0===e)i=Ho(f,ha(m,ha(g,f)));else{const t=Ho(f,ha(m,ha(g,f)));i=Nl([Ml(i,[0,0],[e,r]),t],0)}const y=pa(m),b=Ml(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Ho(b,ha(ha(b,o),y));else{const t=Ho(b,ha(ha(b,o),y));s=Nl([Ml(s,[0,0],[n,e]),t],1)}return[o,i,s]})),co([t,l,u])}return!t&&n>r&&(s=Ml(s,[0,0],[n,r]),i=Ml(i,[0,0],[r,r])),[s,i]}))}const _d=Ks({qr_:function(e,t=!1){if(Y(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Md(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=xh(Il(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],i=[];return r.forEach((e=>{const[n,r]=Md(e,t);s.push(n),i.push(r)})),[Il(oh(s,0),e.shape),Il(oh(i,0),e.shape)]}}});var Rd;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Rd||(Rd={}));const Dd=Ks({computeWeightedLoss_:function(e,t,n=Rd.SUM_BY_NONZERO_WEIGHTS){const r=Gs(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Gs(t,"weights","computeWeightedLoss"));const i=null==s?r:To(r,s);if(n===Rd.NONE)return i;if(n===Rd.SUM)return Ou(i);if(n===Rd.MEAN){if(null==s)return tc(i);{const e=r.size/s.size,t=Io(Ou(i),Ou(s));return e>1?Io(t,Oo(e)):t}}if(n===Rd.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Io(Ou(i),Oo(r.size));{const e=To(s,hc(r.shape)),t=Gi(Ou(uc(e,Oo(0))),"float32");return Io(Ou(i),t)}}throw Error(`Unknown reduction: ${n}`)}}),$d=Ks({absoluteDifference_:function(e,t,n,r=Rd.SUM_BY_NONZERO_WEIGHTS){const s=Gs(e,"labels","absoluteDifference"),i=Gs(t,"predictions","absoluteDifference");let a=null;null!=n&&(a=Gs(n,"weights","absoluteDifference")),J(s.shape,i.shape,"Error in absoluteDifference: ");const o=Go(Ho(s,i));return Dd(o,a,r)}}),Ld=Ks({cosineDistance_:function(e,t,n,r,s=Rd.SUM_BY_NONZERO_WEIGHTS){const i=Gs(e,"labels","cosineDistance"),a=Gs(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Gs(r,"weights","cosineDistance")),J(i.shape,a.shape,"Error in cosineDistance: ");const l=Oo(1),u=Ho(l,Ou(To(i,a),n,!0));return Dd(u,o,s)}}),Fd=Ks({hingeLoss_:function(e,t,n,r=Rd.SUM_BY_NONZERO_WEIGHTS){let s=Gs(e,"labels","hingeLoss");const i=Gs(t,"predictions","hingeLoss");let a=null;null!=n&&(a=Gs(n,"weights","hingeLoss")),J(s.shape,i.shape,"Error in hingeLoss: ");const o=Oo(1);s=Ho(To(Oo(2),s),o);const l=$c(Ho(o,To(s,i)));return Dd(l,a,r)}}),Od=Ks({huberLoss_:function(e,t,n,r=1,s=Rd.SUM_BY_NONZERO_WEIGHTS){const i=Gs(e,"labels","huberLoss"),a=Gs(t,"predictions","huberLoss");let o=null;null!=n&&(o=Gs(n,"weights","huberLoss")),J(i.shape,a.shape,"Error in huberLoss: ");const l=Oo(r),u=Go(Ho(a,i)),c=rc(u,l),h=Ho(u,c),d=So(To(Oo(.5),No(c)),To(l,h));return Dd(d,o,s)}}),zd=Ks({logLoss_:function(e,t,n,r=1e-7,s=Rd.SUM_BY_NONZERO_WEIGHTS){const i=Gs(e,"labels","logLoss"),a=Gs(t,"predictions","logLoss");let o=null;null!=n&&(o=Gs(n,"weights","logLoss")),J(i.shape,a.shape,"Error in logLoss: ");const l=Oo(1),u=Oo(r),c=Du(To(i,_u(So(a,u)))),h=To(Ho(l,i),_u(So(Ho(l,a),u))),d=Ho(c,h);return Dd(d,o,s)}}),Pd=Ks({meanSquaredError_:function(e,t,n,r=Rd.SUM_BY_NONZERO_WEIGHTS){const s=Gs(e,"labels","meanSquaredError"),i=Gs(t,"predictions","meanSquaredError");let a=null;null!=n&&(a=Gs(n,"weights","meanSquaredError")),J(s.shape,i.shape,"Error in meanSquaredError: ");const o=ih(s,i);return Dd(o,a,r)}}),Bd=Ks({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Rd.SUM_BY_NONZERO_WEIGHTS){let i=Gs(e,"multiClassLabels","sigmoidCrossEntropy");const a=Gs(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Gs(n,"weights","sigmoidCrossEntropy")),J(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Oo(r),t=Oo(1),n=Oo(.5);i=So(To(i,Ho(t,e)),To(n,e))}const l=function(e,t){const n=Gs(e,"labels","sigmoidCrossEntropyWithLogits"),r=Gs(t,"logits","sigmoidCrossEntropyWithLogits");J(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=$c(r),i=To(r,n),a=Ru(pu(Du(Go(r))));return So(Ho(s,i),a)}(i,a);return Dd(l,o,s)}}),Vd=Ks({softmaxCrossEntropy_:function(e,t,n,r=0,s=Rd.SUM_BY_NONZERO_WEIGHTS){let i=Gs(e,"onehotLabels","softmaxCrossEntropy");const a=Gs(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Gs(n,"weights","softmaxCrossEntropy")),J(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Oo(r),t=Oo(1),n=Oo(i.shape[1]);i=So(To(i,Ho(t,e)),Io(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Lo(((e,t,r)=>{const s=qu(t,[n],!0),i=Ho(Gi(t,"float32"),s);r([e,i]);const a=Du(To(i,e));return{value:Ou(a,[n]),gradFunc:(e,t)=>{const[r,s]=t,i=Uu(e.shape,[n]);return[To(Il(e,i),Ho(Gi(r,"float32"),pu(s))),To(Il(e,i),Ho(pu(s),Gi(r,"float32")))]}}}));return r(e,t)}(i,a);return Dd(l,o,s)}}),Ud={fft:eh,ifft:th,rfft:sh,irfft:nh},Hd={hammingWindow:ad,hannWindow:od,frame:ld,stft:ud},Wd={flipLeftRight:hd,resizeNearestNeighbor:Cd,resizeBilinear:Td,rotateWithOffset:dd,cropAndResize:cd,nonMaxSuppression:fd,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=Gs(e,"boxes","nonMaxSuppressionAsync"),a=Gs(t,"scores","nonMaxSuppressionAsync"),o=pd(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=yd(u,c,n,r,s);return i!==e&&i.dispose(),a!==t&&a.dispose(),hh(h,"int32")},nonMaxSuppressionWithScore:Ed,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=Gs(e,"boxes","nonMaxSuppressionAsync"),o=Gs(t,"scores","nonMaxSuppressionAsync"),l=pd(a,o,n,r,s,i);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=vd(c,h,n,r,s,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:hh(d,"int32"),selectedScores:hh(p)}},nonMaxSuppressionPadded:Id,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=Gs(e,"boxes","nonMaxSuppressionAsync"),o=Gs(t,"scores","nonMaxSuppressionAsync"),l=pd(a,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:m}=bd(d,p,u,c,h,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:hh(f,"int32"),validOutputs:Oo(m,"int32")}}},Gd={bandPart:Nd,gramSchmidt:Ad,qr:_d},jd={absoluteDifference:$d,computeWeightedLoss:Dd,cosineDistance:Ld,hingeLoss:Fd,huberLoss:Od,logLoss:zd,meanSquaredError:Pd,sigmoidCrossEntropy:Bd,softmaxCrossEntropy:Vd};class qd{static sgd(e){return new Qo(e)}static momentum(e,t,n=!1){return new Yo(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Jo(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Wo(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Po(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Zo(e,t,n,r,s)}static adagrad(e,t=.1){return new Vo(e,t)}}const Kd={sgd:qd.sgd,momentum:qd.momentum,adadelta:qd.adadelta,adagrad:qd.adagrad,rmsprop:qd.rmsprop,adamax:qd.adamax,adam:qd.adam},Xd="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Zd(){return new Promise((e=>Xd((()=>e()))))}function Qd(e,t){const n=e[0].length;e.forEach(((e,t)=>{Y(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Y(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let i=0;i<n;i++)Y(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Yd(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Jd=30;function ep(e){return e<=Jd?e:Ce(e,Math.floor(Math.sqrt(e)))}function tp(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function np(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function rp(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function sp(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function ip(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function ap(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const op=1.7580993408473768,lp=1.0507009873554805,up=.3275911,cp=.254829592,hp=-.284496736,dp=1.421413741,pp=-1.453152027,fp=1.061405429;function mp(...e){Be().getBool("IS_TEST")||console.warn(...e)}function gp(...e){Be().getBool("IS_TEST")||console.log(...e)}function yp(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function bp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function vp(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function xp(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function wp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function kp(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Sp(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const i=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function Ep(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Ip(e,t,n=0){let r=[];if("number"==typeof t)Y(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Y(s<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}Y(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Tp(e,t){let n,r=!1;for(e<=Jd?(n=e,r=!0):n=Ce(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Ce(e,n+1);return n}function Cp(e,t,n){const r=[],s=e.length;for(let i=0;i<s;i++)i!==t?r.push(e[i]):r.push(n);return r}function Np(e,t,n,r){const s=t.shape.length,i=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const a=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function Ap(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=cc(e.shape),r=Gi(e,"float32"),s=n.complex(r,t);return t.dispose(),r.dispose(),s}if(!be(e.dtype,t))return Os.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),s=Gi(r,t);return r.dispose(),s}if("int32"===t)return n.int(e);if("bool"===t){const t=Oo(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function Mp(e,t){return Os.makeTensorFromDataId(e.dataId,t,e.dtype)}function _p(e){try{return e.map((e=>fs(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Rp(e){return e.map((e=>ps(e)))}const Dp={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,lh(Gi(n,"float32"),-1))}}},$p={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=No(Gi(n,"float32")),r=Co(Ho(Oo(1),t));return Du(Io(e,r))}}}},Lp={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Co(Ho(No(Gi(n,"float32")),1));return Io(e,t)}}}},Fp={kernelName:Ke,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{let t=e;const r=qo(n.shape,s);return r.length>0&&(t=Ou(t,r)),Il(t,n.shape)},b:()=>{let t=e;const n=qo(r.shape,s);return n.length>0&&(t=Ou(t,n)),Il(t,r.shape)}}}},Op={kernelName:Xe,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},zp={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(n)}}},Pp={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(n)}}},Bp={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Io(e,Co(Ho(Oo(1),No(Gi(n,"float32")))))}}},Vp={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Co(So(Oo(1),No(Gi(n,"float32"))));return Io(e,t)}}}},Up={kernelName:st,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{const t=So(No(n),No(r));let i=To(e,Io(r,t));const a=qo(n.shape,s);return a.length>0&&(i=Ou(i,a)),Il(i,n.shape)},b:()=>{const t=So(No(n),No(r));let i=Du(To(e,Io(n,t)));const a=qo(r.shape,s);return a.length>0&&(i=Ou(i,a)),Il(i,r.shape)}}}},Hp={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Io(e,So(No(Gi(n,"float32")),1))}}},Wp={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Io(e,Ho(Oo(1),No(Gi(n,"float32"))))}}},Gp=Ks({avgPool3dGrad_:function(e,t,n,r,s=[1,1,1],i,a){const o=Gs(e,"dy","avgPool3dGrad"),l=Gs(t,"input","avgPool3dGrad");let u=o,c=l,h=!1;4===l.rank&&(h=!0,u=Il(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=Il(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),Y(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),Y(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),Y(Sl(r,s),(()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=a&&Y(ie(i),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const d={dy:u,input:c},p={filterSize:n,strides:r,dilations:s,pad:i,dimRoundingMode:a},f=Os.runKernel(lt,d,p);return h?Il(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),jp={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,dilations:a,pad:o,dimRoundingMode:l}=n,u=null==a?[1,1,1]:a;return{x:()=>Gp(e,r,s,i,u,o,l)}}},qp=Ks({avgPoolGrad_:function(e,t,n,r,s){const i=Gs(e,"dy","avgPoolGrad"),a=Gs(t,"input","avgPoolGrad");Y(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=Il(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=Il(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Y(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Y(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Os.runKernel(at,c,h);return u?Il(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Kp={kernelName:it,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a}=n;return{x:()=>qp(e,r,s,i,a)}}},Xp={kernelName:ut,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>ha(e,s,!1,!1),b:()=>ha(e,r,!0,!1)}:i&&!a?{a:()=>ha(s,e,!1,!0),b:()=>ha(r,e,!1,!1)}:{a:()=>ha(s,e,!0,!0),b:()=>ha(e,r,!0,!0)}:{a:()=>ha(e,s,!1,!0),b:()=>ha(r,e,!0,!1)}}},Zp={kernelName:ct,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>vc(e,r,s)}}},Qp={kernelName:dt,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let e=s.length-1;e>=0;e--)if(s[e]===i[e])a[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let e=0;e<a.length;e++)a[e]>1&&o.push(e);return{x:()=>Ou(e,o,!0)}}},Yp={kernelName:pt,gradFunc:e=>({x:()=>e.clone()})},Jp={kernelName:ft,gradFunc:e=>({x:()=>Ao(e)})},ef={kernelName:mt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>lu(Ku(wu(r,s),Nu(r,i)),e,Ao(e))}}},tf={kernelName:yt,inputsToSave:["x"],gradFunc:Dp.gradFunc},nf={kernelName:bt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,i=de(s,t[0].shape)[0],a=r.map((e=>e[i]));return rh(e,a,i).map((e=>()=>e))}},rf={kernelName:vt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return Y(kl(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Kl(r.shape,e,s,a,o,l),filter:()=>Zh(r,e,s.shape,a,o,l)}}},sf={kernelName:wt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>jl(e,s,i,a,o,1,l),filter:()=>Zh(e,r,s.shape,i,a,o,l)}}},af=Ks({conv3DBackpropFilter_:function(e,t,n,r,s){let i=e;4===e.rank&&(i=Il(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=Il(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Y(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),Y(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),Y(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Y(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),Y(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:r,pad:s,filterShape:n};return Os.runKernel(St,o,l)}}),of={kernelName:kt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i}=n;Y(kl(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=t;return{x:()=>Ql(a.shape,e,o,s,i),filter:()=>af(a,e,o.shape,s,i)}}},lf={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(Du(qc(Gi(n,"float32"))),e)}}},uf={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(Kc(Gi(n,"float32")),e)}}},cf={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const t=Wu([s],r.rank);let n=tu(e,s,i,!a);return null!=t&&(n=pa(n,t)),n}}}},hf={kernelName:_t,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;Y(kl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return Y(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Y(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Y(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Y(Sl(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=a&&Y(ie(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`)),{x:()=>rd(l.shape,e,u,s,i,r,a),filter:()=>nd(l,e,u.shape,s,i,r,a)}}},df={kernelName:Lt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,i={x:r,filter:s,dy:e},a={x:r,filter:s,dy:e};return{x:()=>Os.runKernel(Ft,i,n),filter:()=>Os.runKernel(Ot,a,n)}}},pf={kernelName:Pt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Os.runKernel(Bt,r)}}},ff={kernelName:Vt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=To(pu(Du(No(n))),2/Math.sqrt(Math.PI));return{x:()=>To(e,r)}}},mf={kernelName:Ht,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,n)}}},gf={kernelName:Wt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Il(e,n.shape)}}},yf={kernelName:Gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,pu(n))}}},bf={kernelName:Xt,gradFunc:e=>({x:()=>Ao(e)})},vf={kernelName:Zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{const t=Io(e,Gi(r,"float32")),i=qo(n.shape,s);return i.length>0?Il(Ou(t,i),n.shape):t},b:()=>{let t=To(e,Gi(n,"float32"));const i=qo(r.shape,s);i.length>0&&(t=Il(Ou(t,i),r.shape));const a=No(r);return Du(Io(t,Gi(a,"float32")))}}}},xf={kernelName:Qt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=t,l=null==o?Oo(1):o,u=qo(i.shape,s.shape),c=[];if(1===i.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Ho(s,i),d=To(e,l),p=Uc(So(a,Oo(r))),f=To(To(To(p,p),p),Oo(-.5));return{x:()=>1===i.rank?Il(To(To(e,gu(Il(p,[1,1,1,i.shape[0]]),c)),l),s.shape):Il(To(To(e,p),l),s.shape),mean:()=>{let e=To(To(p,Oo(-1)),d);return 1===i.rank&&(e=Ou(e,u)),Il(e,i.shape)},variance:()=>{let e=To(To(f,h),d);return 1===i.rank&&(e=Ou(e,u)),Il(e,i.shape)},scale:()=>{const t=To(h,p);let n=To(e,t);return 1===i.rank&&(n=Ou(n,u)),Il(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=Ou(t,u)),Il(t,i.shape)}}}},wf={kernelName:Yt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:i}=n,a=de(i,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,a),l=o.length,u=t.slice(i,t.length).slice(1),c=u.length,h=kf(0,l),d=kf(l+1,l+1+c),p=Sf([o,[n],u]),f=Il(e,p),m=Il(s,[n]),g=Sf([[l],h,d]),y=pa(f,g);let b=vh(y,m,r.shape[a]);const v=Gu(g);return b=pa(b,v),b},indices:()=>s}}};function kf(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Sf(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Ef={kernelName:tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ao(n),b:()=>Ao(r)}}},If={kernelName:nn,gradFunc:e=>({x:()=>Gi(e,"float32")})},Tf={kernelName:an,gradFunc:e=>({x:()=>Ao(e)})},Cf={kernelName:on,gradFunc:e=>({x:()=>Ao(e)})},Nf={kernelName:ln,gradFunc:e=>({x:()=>Ao(e)})},Af={kernelName:un,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,i=xu(r,0);return{x:()=>lu(i,e,To(e,s))}}},Mf={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Io(e,So(n,1))}}},_f={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Io(e,Gi(n,"float32"))}}},Rf={kernelName:bn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=pu(r);return Ho(e,To(Ou(e,s,!0),t))}}}},Df=Ks({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,i=1,a=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:i,beta:a};return Os.runKernel(xn,o,l)}}),$f={kernelName:vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Df(r,s,e,i,a,o,l)}}};function Lf(e,t,n,r){return t.rank<n.rank&&(t=Il(t,Uu(t.shape,r))),e.rank<n.rank&&(e=Il(e,Uu(e.shape,r))),{x:()=>To(e,Gi(ou(n,t),e.dtype))}}const Ff={kernelName:wn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,i=t[0],a=Lf(e,t[1],i,de(s,i.shape));return{x:()=>a.x()}}},Of={kernelName:kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>To(e,Gi(wu(n,r),"float32")),b:()=>To(e,Gi(Cu(n,r),"float32"))}}},zf=Ks({maxPool3dGrad_:function(e,t,n,r,s,i=[1,1,1],a,o){const l=Gs(e,"dy","maxPool3dGrad"),u=Gs(t,"input","maxPool3dGrad"),c=Gs(n,"output","maxPool3dGrad");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=Il(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Il(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Il(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),Y(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),Y(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),Y(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),Y(Sl(s,i),(()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`)),null!=o&&Y(ie(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const m={dy:h,input:d,output:p},g={filterSize:r,strides:s,dilations:i,pad:a,dimRoundingMode:o},y=Os.runKernel(Tn,m,g);return f?Il(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Pf={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>zf(e,r,s,i,a,c,l,u)}}},Bf=Ks({maxPoolGrad_:function(e,t,n,r,s,i,a){const o=Gs(e,"dy","maxPoolGrad"),l=Gs(t,"input","maxPoolGrad"),u=Gs(n,"output","maxPoolGrad");Y(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Y(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Y(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=a&&Y(ie(i),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return Os.runKernel(En,c,h)}}),Vf={kernelName:Sn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Bf(e,r,s,i,a,o)}}},Uf={kernelName:_n,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map((e=>e[0]));return{x:()=>Ml(e,i,r.shape)}}},Hf={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map((e=>e[0]));return{x:()=>Ml(e,i,r.shape)}}},Wf={kernelName:Gn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,i=n,a=r,o=Ko(i.shape,a.shape);return{a:()=>{const t=Gi(a,"float32");let n=To(e,To(t,Uo(i,Ho(t,Oo(1)))));const r=qo(i.shape,o);return r.length>0&&(n=Ou(n,r)),Il(n,i.shape)},b:()=>{const t=xu(i,0),n=lu(t,_u(i),Ao(i));let r=To(e,To(s,n));const l=qo(a.shape,o);return l.length>0&&(r=Ou(r,l)),Il(r,a.shape)}}}},Gf={kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=xu(n,Oo(0)),r=Oo(op),s=Oo(lp),i=To(e,s),a=To(To(e,r),pu(Gi(n,"float32")));return lu(t,i,a)}}}},jf={kernelName:br,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Dl(e,r,s)}}},qf={kernelName:vr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Nl(e,r)}}},Kf=[Dp,$p,Lp,Fp,Op,zp,Pp,Bp,Vp,Up,Hp,Wp,jp,Kp,Xp,Zp,Qp,Yp,Jp,ef,tf,nf,sf,rf,of,lf,uf,cf,hf,df,{kernelName:zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{const t=Io(e,Gi(r,"float32")),i=qo(n.shape,s);return i.length>0?Il(Ou(t,i),n.shape):t},b:()=>{let t=To(e,Gi(n,"float32"));const i=qo(r.shape,s);i.length>0&&(t=Il(Ou(t,i),r.shape));const a=No(r);return Du(Io(t,Gi(a,"float32")))}}}},pf,ff,mf,gf,yf,vf,bf,xf,wf,Ef,If,Tf,Cf,Nf,Af,Mf,_f,Rf,$f,Ff,Ff,Of,Pf,Vf,{kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,i=de(s,r.shape),a=ne(Vu(r.shape,i)[1]);return{x:()=>{const t=r.shape.slice();i.forEach((e=>{t[e]=1}));const n=Il(e,t);return Io(To(n,hc(r.shape,"float32")),a)}}}},{kernelName:An,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[i,a]=t,o=Lf(e,a,i,de(s,i.shape));return{x:()=>o.x()}}},{kernelName:Mn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>To(e,Gi(Nu(n,r),"float32")),b:()=>To(e,Gi(xu(n,r),"float32"))}}},Uf,{kernelName:Rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{const t=qo(n.shape,s);return t.length>0?Il(Ou(e,t),n.shape):e},b:()=>{const t=To(e,Du(bu(Io(n,r)))),i=qo(r.shape,s);return i.length>0?Il(Ou(t,i),r.shape):t}}}},{kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{const t=To(e,Gi(r,"float32")),i=qo(n.shape,s);return i.length>0?Il(Ou(t,i),n.shape):t},b:()=>{const t=To(e,Gi(n,"float32")),i=qo(r.shape,s);return i.length>0?Il(Ou(t,i),r.shape):t}}}},{kernelName:Ln,gradFunc:e=>({x:()=>Du(e)})},{kernelName:Vn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>cc(n.shape,"float32")}}},{kernelName:Bn,gradFunc:e=>({x:()=>Ao(e)})},{kernelName:Un,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return xh(e,r).map((e=>()=>e))}},Hf,Hf,Wf,{kernelName:jn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=xu(n,0);return{x:()=>lu(s,e,To(e,r)),alpha:()=>{let t=lu(s,Ao(e),To(e,n));const i=qo(r.shape,e.shape);return i.length>0&&(t=Ou(t,i)),Il(t,r.shape)}}}},{kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Io(e,Du(No(n)))}}},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=To(Nu(n,6),lh(n));return{x:()=>To(e,Gi(r,"float32"))}}},{kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,Gi(lh(n),"float32"))}}},{kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(e,n.shape)}}},{kernelName:tr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Os.runKernel(nr,s,n)}}},{kernelName:Jn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Os.runKernel(er,s,n)}}},{kernelName:sr,gradFunc:(e,t,n)=>{const{dims:r}=n,s=de(r,e.shape);return{x:()=>Fc(e,s)}}},{kernelName:ir,gradFunc:e=>({x:()=>Ao(e)})},{kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Du(Io(e,To(Uo(n,1.5),2)))}}},{kernelName:lr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Gi(Ao(n),"float32"),t:()=>To(e,Gi(n,e.dtype)),e:()=>To(e,Gi(Xu(n),e.dtype))}}},Gf,{kernelName:fr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,To(n,Ho(Oo(1),n)))}}},{kernelName:pr,gradFunc:e=>({x:()=>Ao(e)})},{kernelName:hr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(Jl(Gi(n,"float32")),e)}}},{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(eu(Gi(n,"float32")),e)}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:i}=n,a=r.shape,[o,l]=Oa(r,s,i),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],a[t]-o[t]-l[t]]);return{x:()=>fc(e,u)}}},{kernelName:xr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,i=To(e,r);return{logits:()=>Ho(i,To(Ou(i,[s],!0),r))}}},{kernelName:mr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,Al(n))}}},jf,jf,qf,qf,{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Io(e,To(Co(Gi(n,"float32")),2))}}},{kernelName:wr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Oo(2);return{a:()=>To(e,To(s,Ho(n,r))),b:()=>To(e,To(s,Ho(r,n)))}}},{kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,To(Gi(n,"float32"),2))}}},{kernelName:Lr,gradFunc:e=>({x:()=>Ao(e)})},{kernelName:Sr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{let t=e;const r=qo(n.shape,s);return r.length>0&&(t=Ou(t,r)),Il(t,n.shape)},b:()=>{let t=e;const n=qo(r.shape,s);return n.length>0&&(t=Ou(t,n)),Il(Du(t),r.shape)}}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:i}=n;de(i,r.shape).forEach((e=>{s[e]=1}));const a=Il(e,s),o=To(a,hc(r.shape,"float32"));return{x:()=>o}}},{kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Io(e,No(Jl(n)))}}},{kernelName:Cr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(Ho(Oo(1),No(n)),e)}}},{kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Ao(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=So(t,Ml(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)t=So(t,Ml(e,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)t=So(t,Ml(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)t=So(t,Ml(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Mr,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,i=Gu(s);return{x:()=>pa(e,i)}}},{kernelName:Rr,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>oh(e,s)}}},{kernelName:Dr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Xo(t,Ao(t)),r=vu(e,n);let s=wu(t,Oo(0,"int32"));const i=r.rank-s.rank;for(let e=0;e<i;++e)s=fu(s,e+1);s=Ku(s,hc(r.shape,"bool"));const a=Ao(r);return lu(s,r,a)}(e,n)}}},{kernelName:$r,gradFunc:e=>({x:()=>Ao(e)})}];for(const e of Kf)qr(e);let Xf;function Zf(){return null==Xf&&(Xf=wo().epsilon()),Xf}vs.prototype.abs=function(){return this.throwIfDisposed(),Go(this)},vs.prototype.acos=function(){return this.throwIfDisposed(),el(this)},vs.prototype.acosh=function(){return this.throwIfDisposed(),tl(this)},vs.prototype.addStrict=function(e){return this.throwIfDisposed(),_h(this,e)},vs.prototype.add=function(e){return this.throwIfDisposed(),So(this,e)},vs.prototype.all=function(e,t){return this.throwIfDisposed(),rl(this,e,t)},vs.prototype.any=function(e,t){return this.throwIfDisposed(),sl(this,e,t)},vs.prototype.argMax=function(e){return this.throwIfDisposed(),il(this,e)},vs.prototype.argMin=function(e){return this.throwIfDisposed(),al(this,e)},vs.prototype.asScalar=function(){return this.throwIfDisposed(),Y(1===this.size,(()=>"The array must have only 1 element.")),Il(this,[])},vs.prototype.asType=function(e){return this.throwIfDisposed(),Gi(this,e)},vs.prototype.as1D=function(){return this.throwIfDisposed(),Il(this,[this.size])},vs.prototype.as2D=function(e,t){return this.throwIfDisposed(),Il(this,[e,t])},vs.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Il(this,[e,t,n])},vs.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Il(this,[e,t,n,r])},vs.prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Il(this,[e,t,n,r,s])},vs.prototype.asin=function(){return this.throwIfDisposed(),ol(this)},vs.prototype.asinh=function(){return this.throwIfDisposed(),ll(this)},vs.prototype.atan=function(){return this.throwIfDisposed(),ul(this)},vs.prototype.atan2=function(e){return this.throwIfDisposed(),cl(this,e)},vs.prototype.atanh=function(){return this.throwIfDisposed(),hl(this)},vs.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Tl(this,e,t,n,r)},vs.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Dl(this,e,t)},vs.prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),$l(this,e,t,n,r,s)},vs.prototype.broadcastTo=function(e){return this.throwIfDisposed(),Pl(this,e)},vs.prototype.cast=function(e){return this.throwIfDisposed(),Gi(this,e)},vs.prototype.ceil=function(){return this.throwIfDisposed(),Bl(this)},vs.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Vl(this,e,t)},vs.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof vs&&(e=[e]),Nl([this,...e],t)},vs.prototype.conv1d=function(e,t,n,r,s,i){return this.throwIfDisposed(),ql(this,e,t,n,r,s,i)},vs.prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Xl(this,e,t,n,r,s)},vs.prototype.conv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),jl(this,e,t,n,r,s,i)},vs.prototype.cos=function(){return this.throwIfDisposed(),Jl(this)},vs.prototype.cosh=function(){return this.throwIfDisposed(),eu(this)},vs.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),tu(this,e,t,n)},vs.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),ru(this,e,t)},vs.prototype.depthwiseConv2D=function(e,t,n,r,s,i){return so("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),su(this,e,t,n,r,s,i)},vs.prototype.depthwiseConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),su(this,e,t,n,r,s,i)},vs.prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),au(this,e,t,n,r,s)},vs.prototype.divNoNan=function(e){return this.throwIfDisposed(),uu(this,e)},vs.prototype.divStrict=function(e){return this.throwIfDisposed(),Rh(this,e)},vs.prototype.div=function(e){return this.throwIfDisposed(),Io(this,e)},vs.prototype.dot=function(e){return this.throwIfDisposed(),cu(this,e)},vs.prototype.elu=function(){return this.throwIfDisposed(),hu(this)},vs.prototype.equalStrict=function(e){return this.throwIfDisposed(),Ih(this,e)},vs.prototype.equal=function(e){return this.throwIfDisposed(),ou(this,e)},vs.prototype.erf=function(){return this.throwIfDisposed(),du(this)},vs.prototype.exp=function(){return this.throwIfDisposed(),pu(this)},vs.prototype.expandDims=function(e){return this.throwIfDisposed(),fu(this,e)},vs.prototype.expm1=function(){return this.throwIfDisposed(),mu(this)},vs.prototype.fft=function(){return this.throwIfDisposed(),eh(this)},vs.prototype.flatten=function(){return this.throwIfDisposed(),Il(this,[this.size])},vs.prototype.floor=function(){return this.throwIfDisposed(),bu(this)},vs.prototype.floorDiv=function(e){return this.throwIfDisposed(),Eo(this,e)},vs.prototype.gather=function(e,t){return this.throwIfDisposed(),vu(this,e,t)},vs.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Th(this,e)},vs.prototype.greaterEqual=function(e){return this.throwIfDisposed(),wu(this,e)},vs.prototype.greaterStrict=function(e){return this.throwIfDisposed(),Ch(this,e)},vs.prototype.greater=function(e){return this.throwIfDisposed(),xu(this,e)},vs.prototype.ifft=function(){return this.throwIfDisposed(),th(this)},vs.prototype.irfft=function(){return this.throwIfDisposed(),nh(this)},vs.prototype.isFinite=function(){return this.throwIfDisposed(),Su(this)},vs.prototype.isInf=function(){return this.throwIfDisposed(),Eu(this)},vs.prototype.isNaN=function(){return this.throwIfDisposed(),Iu(this)},vs.prototype.leakyRelu=function(e){return this.throwIfDisposed(),Tu(this,e)},vs.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Nh(this,e)},vs.prototype.lessEqual=function(e){return this.throwIfDisposed(),Nu(this,e)},vs.prototype.lessStrict=function(e){return this.throwIfDisposed(),Ah(this,e)},vs.prototype.less=function(e){return this.throwIfDisposed(),Cu(this,e)},vs.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Mu(this,e,t,n,r)},vs.prototype.logSigmoid=function(){return this.throwIfDisposed(),Lu(this)},vs.prototype.logSoftmax=function(e){return this.throwIfDisposed(),zu(this,e)},vs.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),qu(this,e,t)},vs.prototype.log=function(){return this.throwIfDisposed(),_u(this)},vs.prototype.log1p=function(){return this.throwIfDisposed(),Ru(this)},vs.prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ku(this,e)},vs.prototype.logicalNot=function(){return this.throwIfDisposed(),Xu(this)},vs.prototype.logicalOr=function(e){return this.throwIfDisposed(),Zu(this,e)},vs.prototype.logicalXor=function(e){return this.throwIfDisposed(),Qu(this,e)},vs.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ha(this,e,t,n)},vs.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Yu(this,e,t,n,r)},vs.prototype.max=function(e,t){return this.throwIfDisposed(),Fu(this,e,t)},vs.prototype.maximumStrict=function(e){return this.throwIfDisposed(),Dh(this,e)},vs.prototype.maximum=function(e){return this.throwIfDisposed(),Xo(this,e)},vs.prototype.mean=function(e,t){return this.throwIfDisposed(),tc(this,e,t)},vs.prototype.min=function(e,t){return this.throwIfDisposed(),nc(this,e,t)},vs.prototype.minimumStrict=function(e){return this.throwIfDisposed(),$h(this,e)},vs.prototype.minimum=function(e){return this.throwIfDisposed(),rc(this,e)},vs.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),sc(this,e,t)},vs.prototype.modStrict=function(e){return this.throwIfDisposed(),Lh(this,e)},vs.prototype.mod=function(e){return this.throwIfDisposed(),ic(this,e)},vs.prototype.mulStrict=function(e){return this.throwIfDisposed(),Fh(this,e)},vs.prototype.mul=function(e){return this.throwIfDisposed(),To(this,e)},vs.prototype.neg=function(){return this.throwIfDisposed(),Du(this)},vs.prototype.norm=function(e,t,n){return this.throwIfDisposed(),Vh(this,e,t,n)},vs.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Mh(this,e)},vs.prototype.notEqual=function(e){return this.throwIfDisposed(),uc(this,e)},vs.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),da(this,e,t,n)},vs.prototype.onesLike=function(){return this.throwIfDisposed(),dc(this)},vs.prototype.pad=function(e,t){return this.throwIfDisposed(),fc(this,e,t)},vs.prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),xc(this,e,t,n,r,s)},vs.prototype.powStrict=function(e){return this.throwIfDisposed(),Oh(this,e)},vs.prototype.pow=function(e){return this.throwIfDisposed(),Uo(this,e)},vs.prototype.prelu=function(e){return this.throwIfDisposed(),wc(this,e)},vs.prototype.prod=function(e,t){return this.throwIfDisposed(),kc(this,e,t)},vs.prototype.reciprocal=function(){return this.throwIfDisposed(),Dc(this)},vs.prototype.relu=function(){return this.throwIfDisposed(),$c(this)},vs.prototype.relu6=function(){return this.throwIfDisposed(),Lc(this)},vs.prototype.reshapeAs=function(e){return this.throwIfDisposed(),Il(this,e.shape)},vs.prototype.reshape=function(e){return this.throwIfDisposed(),Il(this,e)},vs.prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Td(this,e,t,n)},vs.prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Cd(this,e,t,n)},vs.prototype.reverse=function(e){return this.throwIfDisposed(),Fc(this,e)},vs.prototype.rfft=function(){return this.throwIfDisposed(),sh(this)},vs.prototype.round=function(){return this.throwIfDisposed(),Vc(this)},vs.prototype.rsqrt=function(){return this.throwIfDisposed(),Uc(this)},vs.prototype.selu=function(){return this.throwIfDisposed(),Hc(this)},vs.prototype.separableConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Wc(this,e,t,n,r,s,i)},vs.prototype.sigmoid=function(){return this.throwIfDisposed(),Al(this)},vs.prototype.sign=function(){return this.throwIfDisposed(),jc(this)},vs.prototype.sin=function(){return this.throwIfDisposed(),qc(this)},vs.prototype.sinh=function(){return this.throwIfDisposed(),Kc(this)},vs.prototype.slice=function(e,t){return this.throwIfDisposed(),Ml(this,e,t)},vs.prototype.softmax=function(e){return this.throwIfDisposed(),Jc(this,e)},vs.prototype.softplus=function(){return this.throwIfDisposed(),$u(this)},vs.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),vc(this,e,t)},vs.prototype.split=function(e,t){return this.throwIfDisposed(),rh(this,e,t)},vs.prototype.sqrt=function(){return this.throwIfDisposed(),Co(this)},vs.prototype.square=function(){return this.throwIfDisposed(),No(this)},vs.prototype.squaredDifference=function(e){return this.throwIfDisposed(),ih(this,e)},vs.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),zh(this,e)},vs.prototype.squeeze=function(e){return this.throwIfDisposed(),ah(this,e)},vs.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof vs?[this,e]:[this,...e];return oh(n,t)},vs.prototype.step=function(e){return this.throwIfDisposed(),lh(this,e)},vs.prototype.stridedSlice=function(e,t,n,r,s,i,a,o){return this.throwIfDisposed(),uh(this,e,t,n,r,s,i,a,o)},vs.prototype.subStrict=function(e){return this.throwIfDisposed(),Ph(this,e)},vs.prototype.sub=function(e){return this.throwIfDisposed(),Ho(this,e)},vs.prototype.sum=function(e,t){return this.throwIfDisposed(),Ou(this,e,t)},vs.prototype.tan=function(){return this.throwIfDisposed(),ch(this)},vs.prototype.tanh=function(){return this.throwIfDisposed(),_l(this)},vs.prototype.tile=function(e){return this.throwIfDisposed(),gu(this,e)},vs.prototype.toBool=function(){return this.throwIfDisposed(),Gi(this,"bool")},vs.prototype.toFloat=function(){return this.throwIfDisposed(),Gi(this,"float32")},vs.prototype.toInt=function(){return this.throwIfDisposed(),Gi(this,"int32")},vs.prototype.topk=function(e,t){return this.throwIfDisposed(),gh(this,e,t)},vs.prototype.transpose=function(e){return this.throwIfDisposed(),pa(this,e)},vs.prototype.unique=function(e){return this.throwIfDisposed(),bh(this,e)},vs.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),vh(this,e,t)},vs.prototype.unstack=function(e){return this.throwIfDisposed(),xh(this,e)},vs.prototype.where=function(e,t){return this.throwIfDisposed(),lu(e,this,t)},vs.prototype.zerosLike=function(){return this.throwIfDisposed(),Ao(this)};class Qf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qf.prototype)}}class Yf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yf.prototype)}}class Jf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jf.prototype)}}class em extends Error{constructor(e){super(e),Object.setPrototypeOf(this,em.prototype)}}class tm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tm.prototype)}}class nm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nm.prototype)}}function rm(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function sm(e,t){if(!e)throw new tm(t)}function im(e,t){let n=0;for(const r of e)r===t&&n++;return n}function am(e){return 1===e.length?e[0]:e}function om(e){return Array.isArray(e)?e:[e]}function lm(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function um(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let cm={};function hm(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function dm(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>dm(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?dm(t):e[n]=t.value)}}}function pm(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let i;if(s in n)i=n[s];else if(s in cm)i=cm[s];else if(i=t[s],null==i)throw new Jf(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new Jf(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in cm?[o,l]=cm.className:a in t&&([o,l]=t[a]),null==o)throw new Jf(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(cm))e[t]=cm[t];for(const t of Object.keys(n))e[t]=n[t];i.config.customObjects=e;const t=Object.assign({},cm);for(const e of Object.keys(n))cm[e]=n[e];dm(i.config);const r=l(o,i.config,n,s);return cm=Object.assign({},t),r}{const e=Object.assign({},cm);for(const e of Object.keys(n))cm[e]=n[e];const t=new o(i.config);return cm=Object.assign({},e),t}}}function fm(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function mm(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function gm(e){if(null==e)throw new Jf(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function ym(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Jf(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function bm(e,t,n=0,r=1/0){return sm(n>=0),sm(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function vm(e,t){Array.isArray(e)?(Y(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>vm(e,`element ${n+1} of ${t}`)))):Y(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${xm(e)}.`))}function xm(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>xm(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function wm(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function km(e,t){return uo((()=>Co(Ou(To(e,e),t,!0))))}class Sm extends Pa{getConfig(){return{}}}class Em extends Sm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return uo((()=>{const t=km(e,this.axis),n=Vl(t,0,this.maxValue);return To(e,Io(n,So(Zf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Em.className="MaxNorm",Va(Em);class Im extends Sm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return uo((()=>Io(e,So(Zf(),km(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Im.className="UnitNorm",Va(Im);class Tm extends Sm{apply(e){return $c(e)}}Tm.className="NonNeg",Va(Tm);class Cm extends Sm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return uo((()=>{const t=km(e,this.axis),n=So(To(this.rate,Vl(t,this.minValue,this.maxValue)),To(1-this.rate,t));return To(e,Io(n,So(Zf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Cm.className="MinMaxNorm",Va(Cm);const Nm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Am(e){return hm(e)}function Mm(e,t={}){return pm(e,Ba.getMap().classNameMap,t,"constraint")}function _m(e){return null==e?null:"string"==typeof e?Mm({className:e in Nm?Nm[e]:e,config:{}}):e instanceof Sm?e:Mm(e)}function Rm(e){return new Em(e)}function Dm(e){return new Im(e)}function $m(){return new Tm}function Lm(e){return new Cm(e)}const Fm=["channelsFirst","channelsLast"],Om=["nearest","bilinear"],zm=["valid","same","causal"],Pm=["max","avg"],Bm=["sum","mul","concat","ave"],Vm=new Map;function Um(e){ym(Fm,"DataFormat",e)}function Hm(e){ym(zm,"PaddingMode",e)}function Wm(e){ym(Pm,"PoolMode",e)}const Gm=[],jm="/";function qm(e,t){Gm.push(e);try{const e=t();return Gm.pop(),e}catch(e){throw Gm.pop(),e}}function Km(e){if(!Qm(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Gm.length?"":Gm.join(jm)+jm)+e}function Xm(e){if(!Qm(e))throw new Error("Not a valid tensor name: '"+e+"'");Vm.has(e)||Vm.set(e,0);const t=Vm.get(e);if(Vm.set(e,Vm.get(e)+1),t>0){const n=`${e}_${t}`;return Vm.set(n,1),n}return e}const Zm=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Qm(e){return!!e.match(Zm)}function Ym(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Jm(e){return hh(e=Array.isArray(e)?new Float32Array(e):e)}function eg(e){return nc(Jm(e)).dataSync()[0]}function tg(e){return Fu(Jm(e)).dataSync()[0]}function ng(e,t){if(t<e)throw new Jf(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function rg(e,t){return e.asType(t)}function sg(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function ig(e,t,n){return uo((()=>{switch(e.rank){case 1:return Xc(e,t,n);case 2:return Zc(e,[t,0],[n,e.shape[1]]);case 3:return Qc(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Yc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ml(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ml(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Jf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ag(e,t,n){return uo((()=>{switch(e.rank){case 1:return Xc(e,t,n);case 2:return Zc(e,[0,t],[e.shape[0],n]);case 3:return Qc(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Yc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Jf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function og(e,t,n,r){return uo((()=>{switch(e.rank){case 1:return Xc(e,t,n);case 2:switch(r){case 1:return ig(e,t,n);case 2:return ag(e,t,n);default:throw new Jf(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ig(e,t,n);case 2:return Qc(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ag(e,t,n);default:throw new Jf(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ig(e,t,n);case 2:return Yc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Yc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ag(e,t,n);default:throw new Jf(`The axis is not within the rank of the tensor ${r}`)}default:throw new Jf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function lg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Nl(e,t)}function ug(e,t){switch(e.rank){case 1:return Ul([e,t]);case 2:return Hl([e,t],0);case 3:return Wl([e,t],0);case 4:return Gl([e,t],0);default:throw new Jf(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function cg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Jf(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return gu(e,t)}function hg(e,t=0,n=1,r,s){return Ac(e,t,n,r,s)}function dg(e,t,n,r){if(e.rank<2||t.rank<2)throw new em(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new em(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return id({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?mg(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),i=s.pop();e=e.reshape([-1,i]);const a=t.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([l,-1]);const h=[...s,...u];return id({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?mg(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function pg(e,t,n){return uo((()=>(t=Array.isArray(t)?hh(t,"int32"):t.toInt(),vu(e,t,n))))}function fg(e){return To(e,e)}function mg(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Jf(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new Jf(`Unsupported input rank by biasAdd: ${t.rank}`)}function gg(e,t,n){return uo((()=>(null==n&&(n="channelsLast"),Um(n),e.add(mg(e.rank,t,n)))))}function yg(e,t,n,r){return uo((()=>jh(e,t,n,r)))}function bg(e,t,n=!1){return n?e():t()}const vg=["fanIn","fanOut","fanAvg"],xg=["normal","uniform","truncatedNormal"];class wg extends Pa{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class kg extends wg{apply(e,t){return cc(e,t)}}kg.className="Zeros",Va(kg);class Sg extends wg{apply(e,t){return hc(e,t)}}Sg.className="Ones",Va(Sg);class Eg extends wg{constructor(e){if(super(),"object"!=typeof e)throw new Jf(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Jf(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return uo((()=>To(Oo(this.value),hc(e,t))))}getConfig(){return{value:this.value}}}Eg.className="Constant",Va(Eg);class Ig extends wg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Mc(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ig.className="RandomUniform",Va(Ig);class Tg extends wg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new em(`randomNormal does not support dType ${t}.`);return hg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Tg.className="RandomNormal",Va(Tg);class Cg extends wg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new em(`truncatedNormal does not support dType ${t}.`);return yh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Cg.className="TruncatedNormal",Va(Cg);class Ng extends wg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return uo((()=>{if(2!==e.length||e[0]!==e[1])throw new Jf("Identity matrix initializer can only be used for 2D square matrices.");return To(this.gain,yu(e[0]))}))}getConfig(){return{gain:this.gain}}}Ng.className="Identity",Va(Ng);class Ag extends wg{constructor(e){if(super(),e.scale<0)throw new Jf(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,ym(vg,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){ym(xg,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Um(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Ym(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Ym(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Ym(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new em(`${this.getClassName()} does not support dType ${t}.`);return yh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return Mc(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ag.className="VarianceScaling",Va(Ag);class Mg extends Ag{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ag.className}}Mg.className="GlorotUniform",Va(Mg);class _g extends Ag{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ag.className}}_g.className="GlorotNormal",Va(_g);class Rg extends Ag{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ag.className}}Rg.className="HeNormal",Va(Rg);class Dg extends Ag{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ag.className}}Dg.className="HeUniform",Va(Dg);class $g extends Ag{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ag.className}}$g.className="LeCunNormal",Va($g);class Lg extends Ag{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ag.className}}Lg.className="LeCunNormal",Va(Lg);class Fg extends wg{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new em("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return uo((()=>{if(e.length<2)throw new em("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=hg(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Gd.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),To(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Fg.className="Orthogonal",Va(Fg);const Og={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function zg(e,t={}){return pm(e,Ba.getMap().classNameMap,t,"initializer")}function Pg(e){return hm(e)}function Bg(e){if("string"==typeof e){const t=e in Og?Og[e]:e;if("GlorotNormal"===t)return new _g;if("GlorotUniform"===t)return new Mg;if("HeNormal"===t)return new Rg;if("HeUniform"===t)return new Dg;if("LeCunNormal"===t)return new $g;if("LeCunUniform"===t)return new Lg;{const e={};return e.className=t,e.config={},zg(e)}}return e instanceof wg?e:zg(e)}function Vg(){return new kg}function Ug(){return new Sg}function Hg(e){return new Eg(e)}function Wg(e){return new Ig(e)}function Gg(e){return new Tg(e)}function jg(e){return new Cg(e)}function qg(e){return new Ng(e)}function Kg(e){return new Ag(e)}function Xg(e){return new Mg(e)}function Zg(e){return new _g(e)}function Qg(e){return new Rg(e)}function Yg(e){return new Dg(e)}function Jg(e){return new $g(e)}function ey(e){return new Lg(e)}function ty(e){return new Fg(e)}let ny=0;function ry(){return ny++}const sy={};function iy(e=""){return e in sy||(sy[e]=0),sy[e]+=1,e+sy[e].toString()}function ay(e){return Array.isArray(e)&&Array.isArray(e[0])}function oy(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function ly(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Jf(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function uy(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Jf(`Expected exactly 1 Shape; got ${e.length}`)}return e}function cy(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const hy="Variable";class dy{constructor(e,t="float32",n=hy,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=ry(),n=null==n?hy:n,this.originalName=Km(n),this.name=Xm(this.originalName),this.trainable_=r,this.constraint=s,this.val=wh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function py(e){return e.map((e=>e.read()))}function fy(e){e.forEach((e=>{e[0].write(e[1])}))}class my{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class gy{constructor(e,t,n,r,s,i,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=ry(),null!=i&&(this.originalName=Km(i),this.name=Xm(this.originalName)),this.rank=t.length}}let yy=0;class by{constructor(e,t){this.callArgs=t,this.id=yy++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let vy=0;class xy extends Pa{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=vy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=lm(e)+"_"+iy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Yf(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Jf(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return am(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return am(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Qf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Qf(`Layer ${this.name} is not connected, no input to return.`);return am(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Qf(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Qf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return am(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=om(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=om(this.inputSpec);if(e.length!==t.length)throw new Jf(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new Jf(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new Jf(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new Jf(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Jf(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),i=s.axes[t],a=r>=0?e[r]:e[e.length+r];if(null!=i&&-1===[i,null].indexOf(a))throw new Jf(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],i=r.shape[e];if(null!=t&&null!=i&&t!==i)throw new Jf(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=om(e);let r=!0;for(const e of n)if(!(e instanceof gy)){r=!1;break}let s=!0;for(const e of n)if(e instanceof gy){s=!1;break}if(r===s)throw new Jf("Arguments to apply() must be all SymbolicTensors or all Tensors");return qm(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of om(e))t.push(n.shape);this.build(am(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=om(r),i=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(r=am(i),null!=this.activityRegularizer)throw new em("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=om(e);const t=[];for(const n of e)t.push(n.shape);return am(t)}(e),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new gy(i,n,this,om(e),t,this.name,r))):new gy(i,r,this,om(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new em("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Qf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Qf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Yf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return cy(this.weights)}build(e){this.built=!0}getWeights(e=!1){return py(e?this.trainableWeights:this.weights)}setWeights(e){uo((()=>{const t=this.weights;if(t.length!==e.length)throw new Jf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=py(t);for(let s=0;s<r.length;++s){const i=r[s],a=t[s],o=e[s];if(!se(i.shape,o.shape))throw new Jf(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}fy(n)}))}addWeight(e,t,n,r,s,i,a){if(-1!==this._addedWeightNames.indexOf(e))throw new Jf(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Bg("zeros"));const o=r.apply(t,n),l=new dy(o,n,e,i,a);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=om(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,i,a=null){const o=om(e);t=om(t),n=om(n),r=om(r),s=oy(s),i=oy(i);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new by({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function wy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=wy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class ky extends xy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:iy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Jf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Jf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Jf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new gy(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new by({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Jf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Sy(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Jf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new ky({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Ey(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const i=e[s];if("number"!=typeof i){const e=i;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];co(r)}}function Iy(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Ty;ky.className="InputLayer",Va(ky),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Ty||(Ty={}));class Cy{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Ny{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Ay extends Cy{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=uo((()=>So(this.totals[e],To(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:uo((()=>{const n=To(Io(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ho(t[e])})))}}class My extends Cy{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const a=s[i];e.push(a.data()),t.push(r),n.push(i)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class _y extends Cy{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ee(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=hs();return(...s)=>{const i=hs();return i-r<t||(r=i,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Ey(n),r.push(this.yield(e,t,n))),r.push(Zd()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ey(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Ey(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Zd()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ey(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Ey(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Zd()):Ee(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ey(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ey(e),await this.trainEnd(e))}}function Ry(e,t){return null==e&&(e={}),e instanceof Cy?[e]:Array.isArray(e)&&e[0]instanceof Cy?e:om(e).map((e=>new _y(e,t)))}class Dy{constructor(){}static registerCallbackConstructor(e,t){Y(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Dy.checkForDuplicate(t),null==Dy.constructors[e]&&(Dy.constructors[e]=[]),Dy.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Dy.constructors)Dy.constructors[+t].forEach((t=>{if(t===e)throw new Jf("Duplicate callback constructor.")}))}static clear(){Dy.constructors={}}static createCallbacks(e){const t=[];for(const n in Dy.constructors){const r=+n;e>=r&&t.push(...Dy.constructors[r])}return t.map((e=>new e))}}function $y(e,t,n,r,s,i,a,o,l){const u=new My,c=[new Ay,...Dy.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Ny(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Ly(e,t={},n=!1){return pm(e,Ba.getMap().classNameMap,t,"layer",n)}function Fy(e,t){return uo((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=Ou(fg(e),t,!0),r=Bo(n.shape,Zf()),s=Co(Xo(n,r));return Io(e,s)}))}function Oy(e,t){return uo((()=>tc(fg(Ho(t,e)),-1)))}function zy(e,t){return uo((()=>tc(Go(Ho(t,e)),-1)))}function Py(e,t){return uo((()=>{const n=Ho(e,t),r=Vl(Go(e),Zf(),Number.MAX_VALUE),s=Go(Io(n,r));return To(100,tc(s,-1))}))}function By(e,t,n=!1){return uo((()=>{if(n)t=Jc(t);else{const e=Ou(t,t.shape.length-1,!0);t=Io(t,e)}return t=Vl(t,Zf(),1-Zf()),Du(Ou(To(e.toFloat(),_u(t)),t.shape.length-1))}))}function Vy(e,t,n=!1){return uo((()=>{const r=bu(function(e){const t=[Ym(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=Vl(t,Zf(),1-Zf())).shape;return By(da(r,s[s.length-1]).reshape(s),t,n)}))}function Uy(e,t){return uo((()=>{let n;return n=Vl(t,Zf(),1-Zf()),n=_u(Io(n,Ho(1,n))),tc(function(e,t){if(!se(e.shape,t.shape))throw new Jf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return uo((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Hy(e,t){return uo((()=>{const n=Fy(e,-1),r=Fy(t,-1),s=To(n,r);return Du(Ou(s,-1))}))}Dy.constructors={};const Wy={meanSquaredError:Oy,meanAbsoluteError:zy,meanAbsolutePercentageError:Py,meanSquaredLogarithmicError:function(e,t){return uo((()=>{const n=Vl(t,Zf(),Number.MAX_VALUE),r=_u(So(1,n)),s=Vl(e,Zf(),Number.MAX_VALUE),i=_u(So(1,s));return tc(fg(Ho(r,i)),-1)}))},squaredHinge:function(e,t){return uo((()=>{const n=Xo(0,Ho(1,To(e,t)));return tc(fg(n),-1)}))},hinge:function(e,t){return uo((()=>{const n=Xo(0,Ho(1,To(e,t)));return tc(n,-1)}))},categoricalHinge:function(e,t){return uo((()=>{const n=Ou(To(e,t),-1),r=Fu(To(Ho(1,e),t),-1);return Xo(0,So(1,Ho(r,n)))}))},logcosh:function(e,t){return uo((()=>{const n=Math.log(2),r=Ho(t,e),s=Ho(So(r,$u(To(-2,r))),n);return tc(s,-1)}))},categoricalCrossentropy:By,sparseCategoricalCrossentropy:Vy,binaryCrossentropy:Uy,kullbackLeiblerDivergence:function(e,t){return uo((()=>{const n=Vl(e,Zf(),1),r=Vl(t,Zf(),1);return Ou(To(e,_u(Io(n,r))),-1)}))},poisson:function(e,t){return uo((()=>{const n=_u(So(Zf(),t));return tc(Ho(t,To(e,n)),-1)}))},cosineProximity:Hy};function Gy(e){if("string"==typeof e){if(e in Wy)return Wy[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Jf(t)}return e}function jy(e,t){return uo((()=>{const n=To(.5,dc(t)),r=rg(xu(t,n),e.dtype);return tc(ou(e,r),-1)}))}function qy(e,t){return uo((()=>rg(ou(il(e,-1),il(t,-1)),"float32")))}function Ky(e,t){return uo((()=>Ku(e.equal(1),t.equal(1)).sum().cast("float32")))}function Xy(e,t){return uo((()=>{const n=Ky(e,t),r=function(e,t){return uo((()=>Ku(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),s=n.add(r);return lu(xu(s,0),n.div(s),0).cast("float32")}))}function Zy(e,t){return Uy(e,t)}function Qy(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),ou(e,t).asType("float32")}const Yy=By,Jy=Vy,eb={binaryAccuracy:jy,categoricalAccuracy:qy,precision:Xy,categoricalCrossentropy:Yy,sparseCategoricalCrossentropy:Jy,mse:Oy,MSE:Oy,mae:zy,MAE:zy,mape:Py,MAPE:Py,cosine:Hy};function tb(e){if("string"==typeof e&&e in eb)return eb[e];if("string"!=typeof e&&null!=e)return e;throw new Jf(`Unknown metric ${e}`)}function nb(e){if(sm(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Wy))if(Wy[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(eb))if(eb[n]===e){t=n;break}return void 0!==t?t:e.name}}const rb=1048576;function sb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!ib(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>rb&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${rb}.`)}}function ib(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!ib(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!ib(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function ab(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function ob(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}ab([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function lb(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const a=e.name,o=e.getClassName(),l=0===i.length?"":i[0];ab([`${a} (${o})`,s,e.countParams().toString(),l],t,r);for(let e=1;e<i.length;++e)ab(["","","",i[e]],t,r)}function ub(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function cb(e,t){if(null===e)return null;if("string"==typeof e)return um(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];ub(t,s,r)?n.push(r):n.push(cb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=um(n);t[e]=cb(r,e)}}return t}}function hb(e,t){if(null==e)return null;if("string"==typeof e)return lm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];ub(t,s,r)?n.push(r):n.push(hb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[lm(n)]="name"!==n&&"className"!==n||"string"!=typeof r?hb(r,n):r}return t}}const db="2.8.6";class pb{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof pb)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Jf(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Gi(t,e.dtype)}catch(n){throw new Jf(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof gy){if(null==this.id2Value[e.id])throw new Jf(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Jf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof gy){if(null==this.id2Value[e.id])throw new Jf(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Jf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&co(this.id2Mask)}}const fb={},mb={};function gb(e,t,n,r){const s=null!=n&&n.training,i=Array.isArray(e),a=i?e:[e],o=a.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==fb[c]){const e=function(e,t){Y(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=bb(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of e){const{sorted:e,recipientMap:a}=bb(i,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in a)null==r[e]&&(r[e]=new Set),a[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:yb(r)}}(a,t);h=e.sorted,d=e.recipientCounts,fb[c]=h,mb[c]=d}h=fb[c],d={},s||Object.assign(d,mb[c]);const p=new pb(t);for(let e=0;e<h.length;++e){if(null!=r){const e=oo().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const i=h[e],a=i.sourceLayer;if(a instanceof ky)continue;const u=[],c=[],f=[];let m=!1;for(const e of i.inputs){const n=p.getValue(e),r=p.getMask(e);u.push(n),c.push(r),null!=r&&(m=!0),s||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=om(a.apply(u,n));let y=null;a.supportsMasking&&(y=a.computeMask(u,c));const b=vb(i),v=Array.isArray(b)?b:[b];for(let e=0;e<v.length;++e){p.hasKey(v[e])||p.add(v[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(v[e].name);-1!==t&&(l[t]=g[e])}s||co(f)}return p.disposeMasks(),i?l:l[0]}function yb(e){const t={};for(const n in e)t[n]=e[n].size;return t}function bb(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const i=[],a=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=a[a.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),r.push(e),n.add(e.name),t&&a.pop();else{a.push(i.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:r,recipientMap:s}}function vb(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class xb extends xy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=iy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],mm(this.inputs).length!==this.inputs.length)throw new Jf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);mm(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;sm(0===n,"input layer has >1 nodes"),sm(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof ky))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},i={},a=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Yf(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(xb.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],i=u.nodeIndices[e],a=u.tensorIndices[e];o(r,t,n,s,i,a)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=a.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];const a=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];i=Math.max(i,a),r[e.outboundLayer.id]=i,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.nodeIndices[r],o=s.inboundNodes[a],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(i+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(fm);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof xb&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(fm);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Yf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Yf(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new by({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Jf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Jf(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let i=r;if(null==n[r]){const e=r.split("/");i=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[i])s.push([n[i],e[r]]);else if(t)throw new Jf(`Provided weight data has no target variable: ${r}`);delete n[i]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Jf(`${e.length} of ${r} weights are not set: ${e}`)}fy(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${db}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=hb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return uo((()=>{e=om(e);const n=new pb;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return gb(this.outputs,n,t)}))}computeMask(e,t){return uo((()=>{let n;return e=om(e),n=null==t?rm(null,e.length):om(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=oy(e);if(t.length!==this.inputLayers.length)throw new Jf(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(fm);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],i=e.nodeIndices[t],a=e.tensorIndices[t],o=n[`${s.name}_${i}_${a}`];r.push(o)}const s=oy(t.computeOutputShape(am(r))),i=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${i}_${e}`]=s[e]}}const s=[],i=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;i.push(s)}for(let e=0;e<i.length;e++){const t=i[e];sm(t in n),s.push(n[t])}return am(s)}runInternalGraph(e,t){null==t&&(t=rm(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],i=e[r],a=t[r];n[s.id]=[i,a]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(fm);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,i=new Array;for(const e of r)e.id in n&&i.push(n[e.id]);if(i.length===r.length){let r,a,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===i.length){const[e,n]=i[0];null==u.mask&&(u.mask=n),o=om(t.call(e,u)),l=om(t.computeMask(e,n)),r=[e],a=[n]}else r=i.map((e=>e[0])),a=i.map((e=>e[1])),null==u.mask&&(u.mask=a),o=om(t.call(r,u)),l=om(t.computeMask(r,a));if(t.activityRegularizer)throw new em("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],i=l[e];n[t.id]=[r,i]}}}}const s=[],i=[],a=[];for(const e of this.outputs){sm(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];a.push(t.shape),s.push(t),i.push(r)}return[s,i,a]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof xb?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=xb.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Jf(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Jf("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Jf(`No such layer: ${e}`)}calculateLosses(){return uo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=xb.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),i=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=xb.nodeKey(e,n);let a={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[xb.nodeKey(s,i)];null==l&&(l=0),e.push([s.name,l,o,a])}i.push(e)}}}const a={};a.name=e.name,a.className=r,a.config=s,a.inboundNodes=i,n.push(a)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],i=xb.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=t[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,a,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],i=xb.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=t[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,a,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},i={};function a(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let r;for(const i of t){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void a(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(am(n),r)}function l(e){const n=e.name,i=Ly(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Jf(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!gm(i);)for(const e of c){const t=s[e.name];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];sm(t in s);const i=s[t].inboundNodes[n].outputTensors;h.push(i[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];sm(t in s);const i=s[t].inboundNodes[n].outputTensors;d.push(i[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Jf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){uo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function wb(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function kb(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=uo((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());co(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),hh(s,"float32")}return null}function Sb(e,t){return To(e,t)}const Eb=32;function Ib(e,t){let n,r;const s=t;n=s.xs,r=s.ys,Y(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=Tb("input",e.inputNames,n),a=Tb("output",e.outputNames,r),o=i[0].shape[0];Y(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),Y(a.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)Y(i[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<a.length;t++)Y(a[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:a}}function Tb(e,t,n){if(n instanceof vs)return[n];if(Array.isArray(n))return Y(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Jf(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function Cb(e){return"function"==typeof e.iterator}function Nb(e){Y(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Ab(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ig(e,t,n-t))):ig(e,t,n-t)}function Mb(e,t){return uo((()=>null==e?null:Array.isArray(e)?e.map((e=>Mb(e,t))):pg(e,"int32"===t.dtype?t:t.toInt())))}function _b(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Rb(e){const t=[];e instanceof vs&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(sg(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Db(e,t){if(null==e)return;const n=[];if(t instanceof vs)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof vs)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function $b(e){return Array.isArray(e)}function Lb(e){return!function(e){return e instanceof vs}(e)&&!$b(e)}function Fb(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if($b(e)&&e.length>0)t=!0;else if(Lb(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Jf(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if(Lb(e)){i=[];for(const n of t){if(null==e[n])throw new Jf(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if($b(e)){if(e.length!==t.length)throw new Jf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new Jf(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=Rb(i),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const a=i[e];if(a.shape.length!==n[e].length)throw new Jf(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${a.shape}`);for(let i=0;i<n[e].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[e][i];if(null!=l&&l>=0&&o!==l)throw new Jf(`Error when checking ${s}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${a.shape}].`)}}return i}function Ob(e,t,n,r=!0,s=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new Jf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new Jf(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const a=i[e];if(a.shape.length!==n[e].length)throw new Jf(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[e].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[e][i];if(null!=l&&l!==o)throw new Jf(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class zb extends xb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Jf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Output shape","Param #"];let a;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(const t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),ab(i,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?ob(o[e],n,r):lb(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?cy(e.collectedTrainableWeights):cy(e.trainableWeights),t}(e),u=cy(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Kd.adagrad(.01),Adadelta:()=>Kd.adadelta(1,.95,Zf()),Adam:()=>Kd.adam(.001,.9,.999,Zf()),Adamax:()=>Kd.adamax(.002,.9,.999,Zf(),0),RMSProp:()=>Kd.rmsprop(.001,.9,0,Zf()),SGD:()=>Kd.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Jf(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof zo))throw new Jf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Jf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Gy(e)))}else{const n=Gy(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Jf(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Gy(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],qm("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};qm("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,i;for(const a of t){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Uy?-1!==["accuracy","acc"].indexOf(a)?r=jy:-1!==["crossentropy","ce"].indexOf(a)&&(r=Zy):this.lossFunctions[e]===Vy?-1!==["accuracy","acc"].indexOf(a)?r=Qy:-1!==["crossentropy","ce"].indexOf(a)&&(r=Jy):-1!==["accuracy","acc"].indexOf(a)?r=qy:-1!==["crossentropy","ce"].indexOf(a)&&(r=Yy),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),i=r,n=""+s}else{const e=tb(a);i=e,n=""+nb(a)}let t;qm(n,(()=>{t=i})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Nb(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return am(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Db(s[0],e),Db(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new em("Verbose mode is not implemented yet.");Y(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await a.next();if(i=uo((()=>{if(t.value){const{xs:n,ys:r}=Ib(e,t.value),a=n.concat(r),u=uo((()=>s(a)));if(co(a),0===l)for(let e=0;e<u.length;++e)i.push(Oo(0));const c=a[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=i[e];i[e]=uo((()=>So(i[e],To(c,t)))),l>0&&co(n)}co(u),o+=c,++l}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=Io(i[e],o),co(t)}return am(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Jf(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Jf(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Jf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),i=new pb;if(e instanceof vs&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Jf(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Jf(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const a=gb(s,i);return n?a:a[0]}retrieveSymbolicTensors(e){const t=rm(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((e=>e.name));for(let r=0;r<e.length;++r){const a=i.indexOf(e[r]);if(-1!==a&&(t[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Jf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return uo((()=>{const r=this.checkNumSamples(e);if(n)throw new em("Verbose predictLoop() is not implemented yet.");const s=_b(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)uo((()=>{const n=s[t][0],r=s[t][1],i=Ab(e,n,r),a=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)a.push({key:this.inputs[e],value:i[e]});else a.push({key:this.inputs[0],value:i});const o=new pb(a);return gb(this.outputs,o)})).forEach(((e,t)=>i[t].push(e)));return am(i.map((e=>Nl(e,0))))}))}predict(e,t={}){const n=Rb(e);Ob(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Nb(e),this.predictLoop(n,e)}finally{Db(n,e)}}predictOnBatch(e){Ob(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Yf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Vy?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=mm(e.map((e=>e.shape[0])));r.sort();const s=mm(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new Jf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new Jf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!se(r,s))throw new Jf(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Fb(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Fb(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[Oy,Uy,By];for(let s=0;s<e.length;++s){const i=e[s],a=t[s],o=n[s];if(null!=a){if(a===By&&1===i.shape[i.shape.length-1])throw new Jf(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Jf(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Jf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,i){const[a,o]=this.standardizeUserDataXY(e,t,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=wb(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await kb(o[t],null,e[t]))}return[a,o,l]}testLoop(e,t,n,r=0,s){return uo((()=>{const i=this.checkNumSamples(t,n,s,"steps"),a=[];if(r>0)throw new em("Verbose mode is not implemented yet.");if(null!=s)throw new em("steps mode in testLoop() is not implemented yet");{const r=_b(i,n),s=hh(ng(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],l=ig(s,i,o-i),u=Mb(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)a.push(Oo(0));for(let e=0;e<c.length;++e){const t=c[e];a[e]=So(a[e],To(o-i,t))}}for(let e=0;e<a.length;++e)a[e]=Io(a[e],i)}return a}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;im(e,r)>1&&(s+=`_${im(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const a=new pb(e),o=gb(this.outputs,a,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Sb(n,s[e]));const i=tc(n);t.push(i),l=0===e?n:So(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=tc(t(r[s],o[s]))}ho(n),i.push(n)}return l=tc(l),this.calculateLosses().forEach((e=>{l=So(l,e)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=e=>uo((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const a=new pb(i),o=gb(this.outputs,a);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=tc(r(s[e],o[e]));n=0===e?i:So(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=tc(n(s[r],o[r]));t.push(i)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,a,o,l,u,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;Nb(h);const d=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,h);s=p[0],i=p[1],c=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new em("validationData including sample weights is not supported yet."):new Jf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);a=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(a,o,null,null,t,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];l=Ab(s,e,t),s=Ab(s,0,e),u=Ab(i,e,t),i=Ab(i,0,e),f=l.concat(u)}else null!=r.validationSteps&&(m=!0);const g=s.concat(i).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let v,x;m?(e.makeTestFunction(),v=e.testFunction,x=b.slice().concat(b.map((e=>"val_"+e)))):(v=null,f=[],x=b.slice());const w=Ry(r.callbacks,r.yieldEvery),k=await async function(e,t,n,r,s,i,a,o,l,u,c,h,d,p,f){null==s&&(s=32),null==i&&(i=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=e.checkNumSamples(n,s,p,"steps_per_epoch");let y;null!=g&&(y=ng(0,g)),null==a&&(a=1);const{callbackList:b,history:v}=$y(o,a,i,d,g,p,s,m,h);b.setModel(e),e.history=v,await b.onTrainBegin(),e.stopTraining_=!1;for(let a=d;a<i;++a){await b.onEpochBegin(a);const i={};{if("batch"===c)throw new em("batch shuffling is not implemneted yet");c&&j(y);const a=hh(y),o=_b(g,s);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),uo((()=>{const d=o[c][0],p=o[c][1],f=ig(a,d,p-d);h.batch=c,h.size=p-d;const g=Mb(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,ho(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];ho(s),i["val_"+n]=s}}})),await b.onBatchEnd(c,h),Iy(h),e.stopTraining_)break}a.dispose()}if(await b.onEpochEnd(a,i),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,h,r.epochs,r.verbose,w,v,f,r.shuffle,x,r.initialEpoch,null);return k}finally{e.isTraining=!1,Db(s,t),Db(i,n),Db(l,a),Db(u,o),null!=c&&co(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(Y(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Y(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Y(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Y(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Y(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(Cb(n.validationData))Y(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new em("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,a=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Ry(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=$y(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Ib(e,t.value),i={};i.batch=h,i.size=r[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const t=wb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)a.push(await kb(s[e],null,t[e]))}const u=r.concat(s).concat(a),p=o(u);co(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];i[t]=n,ho(n)}await d.onBatchEnd(h,i),Iy(i),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Cb(n.validationData)?om(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):om(e.evaluate(i,a,{batchSize:null==n.validationBatchSize?Eb:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),a=[];for(const e of i){const t=await e.data();a.push(t[0])}return co(i),am(a)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=oo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-oo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=lm(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>lm(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=lm(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[lm(nb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>lm(nb(e))));{const e={};for(const t in this.metrics)e[t]=lm(nb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ly(cb(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=um(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>um(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=um(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>um(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=um(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=di(e);if(0===t.length)throw new Jf(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Jf(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Jf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ei(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${db}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await ei(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=ii([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;sb(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){sb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}zb.className="Model",Va(zb);class Pb extends zb{}async function Bb(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=Ly(cb(n),t);if(null!=e.weightsManifest){const t=await ea(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),co(t)}return r}Pb.className="Functional",Va(Pb);class Vb extends zb{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:iy("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Jf(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Vb||e instanceof zb;let n;if(t){if(n=e,1!==n.outputs.length)throw new Jf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Jf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Jf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Sy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Jf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Jf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=wy(this.outputs[0])}this.inboundNodes=[],new by({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:rm(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(uy(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zb({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Yf("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Yf("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Yf("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Yf("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Jf("Legacy serialization format not supported yet.");s=t}else Y(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof Vb))throw new em(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const e of s){const t=Ly(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(e){if(null==this.model)throw new Jf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Jf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Ub(e){return new zb(e)}function Hb(e){return new Vb(e)}function Wb(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=pi(e,t);if(0===n.length)n.push(aa(e,t));else if(n.length>1)throw new Jf(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Jf("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const i=null==n.strict||n.strict,a=null!=r.weightData&&null!=r.weightSpecs&&i,o=Ly(cb(s),void 0,a),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Jf("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=ti(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,i),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),co(e),co(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function Gb(e){return Sy(e)}function jb(e,t){Dy.registerCallbackConstructor(e,t)}Vb.className="Sequential",Va(Vb);class qb extends Pa{getConfig(){return{}}}class Kb extends qb{apply(e,t=1){return function(e,t=1){if(1!==t)throw new em(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return hu(e)}(e,t)}}Kb.className="elu",Va(Kb);class Xb extends qb{apply(e){return Hc(e)}}Xb.className="selu",Va(Xb);class Zb extends qb{apply(e){return $c(e)}}Zb.className="relu",Va(Zb);class Qb extends qb{apply(e){return uo((()=>rc(6,$c(e))))}}Qb.className="relu6",Va(Qb);class Yb extends qb{apply(e){return e}}Yb.className="linear",Va(Yb);class Jb extends qb{apply(e){return Al(e)}}Jb.className="sigmoid",Va(Jb);class ev extends qb{apply(e){return function(e){return uo((()=>{const t=So(.5,To(.2,e));return Vl(t,0,1)}))}(e)}}ev.className="hardSigmoid",Va(ev);class tv extends qb{apply(e){return $u(e)}}tv.className="softplus",Va(tv);class nv extends qb{apply(e){return function(e){return uo((()=>Io(e,Go(e).add(1))))}(e)}}nv.className="softsign",Va(nv);class rv extends qb{apply(e){return _l(e)}}rv.className="tanh",Va(rv);class sv extends qb{apply(e,t=-1){return Jc(e,t)}}sv.className="softmax",Va(sv);class iv extends qb{apply(e,t=-1){return zu(e,t)}}iv.className="logSoftmax",Va(iv);class av extends qb{apply(e,t=1){return uo((()=>Al(e.mul(t)).mul(e)))}}function ov(e){return e.getClassName()}function lv(e,t={}){return pm(e,Ba.getMap().classNameMap,t,"activation")}function uv(e){if(null==e){return lv({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},lv(t)}return e instanceof qb?e:lv(e)}function cv(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}av.className="swish",Va(av);class hv extends Pa{}class dv extends hv{constructor(e){super(),cv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return uo((()=>{let t=cc([1]);return this.hasL1&&(t=So(t,Ou(To(this.l1,Go(e))))),this.hasL2&&(t=So(t,Ou(To(this.l2,fg(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}dv.className="L1L2",Va(dv);const pv={l1l2:"L1L2"};function fv(e){return hm(e)}function mv(e,t={}){return pm(e,Ba.getMap().classNameMap,t,"regularizer")}function gv(e){return null==e?null:"string"==typeof e?mv({className:e in pv?pv[e]:e,config:{}}):e instanceof hv?e:mv(e)}class yv extends xy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=ly(e);let n=$c(e);return null!=this.maxValue&&(n=Vl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}yv.className="ReLU",Va(yv);class bv extends xy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ly(e);return Tu(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}bv.className="LeakyReLU",Va(bv);class vv extends xy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Bg(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gv(e.alphaRegularizer),this.alphaConstraint=_m(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Jf(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=uy(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new my({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=ly(e),wc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Pg(this.alphaInitializer),alphaRegularizer:fv(this.alphaRegularizer),alphaConstraint:Am(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}vv.className="PReLU",Va(vv);class xv extends xy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new em(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ly(e);return hu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}xv.className="ELU",Va(xv);class wv extends xy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=ly(e);return n.mul(rg(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}wv.className="ThresholdedReLU",Va(wv);class kv extends xy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new sv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=ly(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Sv(e,t,n){if("number"==typeof e)return rm(e,t);if(e.length!==t)throw new Jf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const i=e[s];if((r=i)!==parseInt(r.toString(),10))throw new Jf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${i}`)}return e;var r}function Ev(e,t,n,r,s=1){if(null==e)return e;let i;return i="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((i+r-1)/r)}function Iv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+tg([n-t,0]);else{if("same"!==r)throw new Jf(`Unsupport padding mode: ${r}.`);e*=t}return e}function Tv(e,t){return uo((()=>(Um(t),"channelsFirst"===t?pa(e,[0,2,3,1]):e)))}function Cv(e,t){return uo((()=>(Um(t),"channelsFirst"===t?pa(e,[0,2,3,4,1]):e)))}function Nv(e,t,n,r=[1,1],s="valid",i,a,o=null){return uo((()=>{if(null==i&&(i="channelsLast"),Um(i),3!==e.rank&&4!==e.rank)throw new Jf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Jf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Tv(e,i);if("causal"===s)throw new em("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=td({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=pa(l,[0,3,1,2])),l}))}kv.className="Softmax",Va(kv);class Av extends xy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Av.verifyArgs(t),this.rank=e,vm(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new em(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Sv(t.kernelSize,e,"kernelSize"),this.strides=Sv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Hm(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Um(this.dataFormat),this.activation=uv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Bg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=_m(t.biasConstraint),this.biasRegularizer=gv(t.biasRegularizer),this.activityRegularizer=gv(t.activityRegularizer),this.dilationRate=Sv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Jf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Jf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Jf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(sm("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!bm(e.kernelSize,"number",1,3))throw new Jf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ov(this.activation),useBias:this.useBias,biasInitializer:Pg(this.biasInitializer),biasRegularizer:fv(this.biasRegularizer),activityRegularizer:fv(this.activityRegularizer),biasConstraint:Am(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Mv extends Av{constructor(e,t){super(e,t),this.kernel=null,Mv.verifyArgs(t),this.filters=t.filters,vm(this.filters,"filters"),this.kernelInitializer=Bg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=_m(t.kernelConstraint),this.kernelRegularizer=gv(t.kernelRegularizer)}build(e){e=uy(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jf(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return uo((()=>{let t;e=ly(e);const n=null==this.bias?null:this.bias.read(),r=wm(this.activation.getClassName());if(null!=r&&2===this.rank)t=Nv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",i,a=1){return uo((()=>{if(null==i&&(i="channelsLast"),Um(i),3!==e.shape.length)throw new Jf(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Jf(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Jf(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=pa(e,[0,2,1])),"causal"===s)throw new em("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ql(e,t,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=gg(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Nv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new em("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",i,a){return uo((()=>{if(null==i&&(i="channelsLast"),Um(i),4!==e.rank&&5!==e.rank)throw new Jf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Jf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Cv(e,i);if("causal"===s)throw new em("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Zl(o,t,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=gg(o,n)),"channelsFirst"===i&&(o=pa(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=uy(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Ev(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Pg(this.kernelInitializer),kernelRegularizer:fv(this.kernelRegularizer),kernelConstraint:Am(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Jf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class _v extends Mv{constructor(e){super(2,e),_v.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!bm(e.kernelSize,"number",1,2))throw new Jf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}_v.className="Conv2D",Va(_v);class Rv extends Mv{constructor(e){super(3,e),Rv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Jf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Rv.className="Conv3D",Va(Rv);class Dv extends _v{constructor(e){if(super(e),this.inputSpec=[new my({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Jf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=uy(e)).length)throw new Jf("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new my({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return uo((()=>{let t=ly(e);if(4!==t.shape.length)throw new Jf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Iv(a,c,l,this.padding),Iv(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=pa(t,[0,2,3,1]));let p=Xl(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=pa(p,[0,3,1,2])),null!=this.bias&&(p=gg(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=uy(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Iv(t[r],o,i,this.padding),t[s]=Iv(t[s],l,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Dv.className="Conv2DTranspose",Va(Dv);class $v extends Mv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Jf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Jf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Jf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Bg(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gv(t.depthwiseRegularizer),this.depthwiseConstraint=_m(t.depthwiseConstraint),this.pointwiseInitializer=Bg(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gv(t.pointwiseRegularizer),this.pointwiseConstraint=_m(t.pointwiseConstraint)}build(e){if((e=uy(e)).length<this.rank+2)throw new Jf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Jf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new my({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return uo((()=>{let t;if(e=ly(e),1===this.rank)throw new em("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=pa(e,[0,2,3,1])),t=Wc(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=gg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=pa(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Pg(this.depthwiseInitializer),e.pointwiseInitializer=Pg(this.pointwiseInitializer),e.depthwiseRegularizer=fv(this.depthwiseRegularizer),e.pointwiseRegularizer=fv(this.pointwiseRegularizer),e.depthwiseConstraint=Am(this.depthwiseConstraint),e.pointwiseConstraint=Am(this.pointwiseConstraint),e}}$v.className="SeparableConv";class Lv extends $v{constructor(e){super(2,e)}}Lv.className="SeparableConv2D",Va(Lv);class Fv extends Mv{constructor(e){super(1,e),Fv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!bm(e.kernelSize,"number",1,1))throw new Jf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Fv.className="Conv1D",Va(Fv);class Ov extends xy{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return uo((()=>{if(e=ly(e),"channelsLast"===this.dataFormat){const t=og(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return og(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=og(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return og(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Ov.className="Cropping2D",Va(Ov);class zv extends xy{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Um(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,ym(Om,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return uo((()=>{let t=ly(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=pa(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return pa(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}zv.className="UpSampling2D",Va(zv);class Pv extends Av{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Bg(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=_m(e.depthwiseConstraint),this.depthwiseRegularizer=gv(e.depthwiseRegularizer)}build(e){if((e=uy(e)).length<4)throw new Jf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Jf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return uo((()=>{let t=function(e,t,n=[1,1],r="valid",s,i){return uo((()=>{null==s&&(s="channelsLast"),Um(s);let a=Tv(e,s);if(4!==e.rank)throw new Jf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Jf(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=su(a,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=pa(a,[0,3,1,2])),a}))}(e=ly(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=gg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=uy(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Ev(t,this.kernelSize[0],this.padding,this.strides[0]),i=Ev(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,i]:[e[0],s,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Pg(this.depthwiseInitializer),e.depthwiseRegularizer=fv(this.depthwiseRegularizer),e.depthwiseConstraint=Am(this.depthwiseRegularizer),e}}function Bv(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Jf("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Vv(e,t,n,r=!1,s,i,a=!1,o=!1){return uo((()=>{const l=t.shape.length;if(l<3)throw new Jf(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(ng(2,l));if(t=pa(t,u),null!=i)throw new em("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=fu(s,-1)),s=pa(s,u)),r&&(t=Fc(t,0),null!=s&&(s=Fc(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=xh(t);let m,g;null!=s&&(m=xh(s));for(let t=0;t<p;++t){const n=f[t],r=uo((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=uo((()=>{const e=m[t],n=dc(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,s)=>r[1][s].mul(e).add(t.mul(n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=oh(c,1)),[h,g,d]}))}Pv.className="DepthwiseConv2D",Va(Pv);class Uv extends xy{constructor(e){let t;if(super(e),null==e.cell)throw new Jf("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Zv({cells:e.cell}):e.cell,null==t.stateSize)throw new Jf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new my({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?ng(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){ay(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return uo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new em("Constants support is not implemented in RNN yet.");ay(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new my({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!se(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Jf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new my({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){uo((()=>{if(!this.stateful)throw new Qf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Jf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>cc([n,e]))):this.states_=[cc([n,this.cell.stateSize])];else if(null==e)co(this.states_),null!=this.keptStates&&(co(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>cc([n,e]))):this.states_[0]=cc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Jf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):co(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!se(r.shape,i))throw new Jf(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>ho(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Bv(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new my({shape:e.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof gy){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return uo((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=ly(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new Jf(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=Vv(((e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return uo((()=>{let t=cc(e.shape);return t=Ou(t,[1,2]),t=sg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?cg(t,[1,e]):t)):this.cell.stateSize>1?[cg(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Uv.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Ly(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Uv.className="RNN",Va(Uv);class Hv extends xy{}class Wv extends Hv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,vm(this.units,"units"),this.activation=uv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Bg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gv(e.kernelRegularizer),this.recurrentRegularizer=gv(e.recurrentRegularizer),this.biasRegularizer=gv(e.biasRegularizer),this.kernelConstraint=_m(e.kernelConstraint),this.recurrentConstraint=_m(e.recurrentConstraint),this.biasConstraint=_m(e.biasConstraint),this.dropout=eg([1,tg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=eg([1,tg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=uy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return uo((()=>{if(2!==e.length)throw new Jf(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qv({ones:()=>dc(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qv({ones:()=>dc(n),rate:this.recurrentDropout,training:r}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=dg(null!=i?To(e,i):e,this.kernel.read()),null!=this.bias&&(s=gg(s,this.bias.read())),null!=a&&(n=To(n,a));let o=So(s,dg(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ov(this.activation),useBias:this.useBias,kernelInitializer:Pg(this.kernelInitializer),recurrentInitializer:Pg(this.recurrentInitializer),biasInitializer:Pg(this.biasInitializer),kernelRegularizer:fv(this.kernelRegularizer),recurrentRegularizer:fv(this.recurrentRegularizer),biasRegularizer:fv(this.biasRegularizer),activityRegularizer:fv(this.activityRegularizer),kernelConstraint:Am(this.kernelConstraint),recurrentConstraint:Am(this.recurrentConstraint),biasConstraint:Am(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Wv.className="SimpleRNNCell",Va(Wv);class Gv extends Uv{constructor(e){e.cell=new Wv(e),super(e)}call(e,t){return uo((()=>{null!=this.cell.dropoutMask&&(co(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(co(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Gv.className="SimpleRNN",Va(Gv);class jv extends Hv{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Jf("GRUCell does not support reset_after parameter set to true.");this.units=e.units,vm(this.units,"units"),this.activation=uv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=uv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Bg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gv(e.kernelRegularizer),this.recurrentRegularizer=gv(e.recurrentRegularizer),this.biasRegularizer=gv(e.biasRegularizer),this.kernelConstraint=_m(e.kernelConstraint),this.recurrentConstraint=_m(e.recurrentConstraint),this.biasConstraint=_m(e.biasConstraint),this.dropout=eg([1,tg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=eg([1,tg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=uy(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return uo((()=>{if(2!==e.length)throw new Jf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qv({ones:()=>dc(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qv({ones:()=>dc(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(e=To(e,s[0]));let u=dg(e,this.kernel.read());this.useBias&&(u=gg(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=To(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=rh(c,[2*this.units,this.units],c.rank-1),p=dg(r,h),[f,m,g]=rh(u,3,u.rank-1),[y,b]=rh(p,2,p.rank-1);a=this.recurrentActivation.apply(So(f,y)),o=this.recurrentActivation.apply(So(m,b));const v=dg(To(o,r),d);l=this.activation.apply(So(g,v));const x=So(To(a,r),To(So(1,Du(a)),l));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ov(this.activation),recurrentActivation:ov(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pg(this.kernelInitializer),recurrentInitializer:Pg(this.recurrentInitializer),biasInitializer:Pg(this.biasInitializer),kernelRegularizer:fv(this.kernelRegularizer),recurrentRegularizer:fv(this.recurrentRegularizer),biasRegularizer:fv(this.biasRegularizer),activityRegularizer:fv(this.activityRegularizer),kernelConstraint:Am(this.kernelConstraint),recurrentConstraint:Am(this.recurrentConstraint),biasConstraint:Am(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}jv.className="GRUCell",Va(jv);class qv extends Uv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new jv(e),super(e)}call(e,t){return uo((()=>{null!=this.cell.dropoutMask&&(co(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(co(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}qv.className="GRU",Va(qv);class Kv extends Hv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,vm(this.units,"units"),this.activation=uv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=uv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Bg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=gv(e.kernelRegularizer),this.recurrentRegularizer=gv(e.recurrentRegularizer),this.biasRegularizer=gv(e.biasRegularizer),this.kernelConstraint=_m(e.kernelConstraint),this.recurrentConstraint=_m(e.recurrentConstraint),this.biasConstraint=_m(e.biasConstraint),this.dropout=eg([1,tg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=eg([1,tg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=uy(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends wg{apply(t,r){const s=e.apply([n]),i=(new Sg).apply([n]),a=e.apply([2*n]);return ug(ug(s,i),a)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return uo((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Jf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qv({ones:()=>dc(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qv({ones:()=>dc(r),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=To(e,i[0]));let h=dg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=To(r,a[0])),h=So(h,dg(r,this.recurrentKernel.read())),this.useBias&&(h=gg(h,this.bias.read()));const[d,p,f,m]=rh(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=So(To(l,s),To(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=To(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ov(this.activation),recurrentActivation:ov(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pg(this.kernelInitializer),recurrentInitializer:Pg(this.recurrentInitializer),biasInitializer:Pg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:fv(this.kernelRegularizer),recurrentRegularizer:fv(this.recurrentRegularizer),biasRegularizer:fv(this.biasRegularizer),activityRegularizer:fv(this.activityRegularizer),kernelConstraint:Am(this.kernelConstraint),recurrentConstraint:Am(this.recurrentConstraint),biasConstraint:Am(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Kv.className="LSTMCell",Va(Kv);class Xv extends Uv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kv(e),super(e)}call(e,t){return uo((()=>{null!=this.cell.dropoutMask&&(co(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(co(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Xv.className="LSTM",Va(Xv);class Zv extends Hv{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return uo((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),s.push(i.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;ay(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{qm(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Ly(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return py(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}fy(t)}}function Qv(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,i=()=>yg(t(),n),a=()=>bg(i,t,r);return!s||s<=1?ho(a().clone()):Array(s).fill(void 0).map(a).map((e=>ho(e.clone())))}Zv.className="StackedRNNCells",Va(Zv);class Yv extends Uv{constructor(e){if(e.unroll)throw new em("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new em("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new my({ndim:5})]}call(e,t){return uo((()=>{if(null!=this.cell.dropoutMask&&(co(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(co(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Jf("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return uo((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=cc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){uo((()=>{if(!this.stateful)throw new Qf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Jf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>cc(s))):this.states_=[cc(s)];else if(null==e)co(this.states_),null!=this.keptStates&&(co(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>cc(s))):this.states_[0]=cc(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Jf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):co(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!se(n.shape,r))throw new Jf(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ho(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Ev(l,r[0],s,i[0],a[0]),h=Ev(u,r[1],s,i[1],a[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Yv.className="ConvRNN2D";class Jv extends Kv{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=e;super(Object.assign({},e,{units:t})),this.filters=t,vm(this.filters,"filters"),this.kernelSize=Sv(n,2,"kernelSize"),this.kernelSize.forEach((e=>vm(e,"kernelSize"))),this.strides=Sv(r||1,2,"strides"),this.strides.forEach((e=>vm(e,"strides"))),this.padding=s||"valid",Hm(this.padding),this.dataFormat=i||"channelsLast",Um(this.dataFormat),this.dilationRate=Sv(a||1,2,"dilationRate"),this.dilationRate.forEach((e=>vm(e,"dilationRate")))}build(e){var t;e=uy(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Jf(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends wg{apply(e,t){return lg([n.apply([r]),hc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return uo((()=>{if(3!==e.length)throw new Jf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qv({ones:()=>dc(r),rate:this.dropout,training:n,count:4}));const a=this.dropoutMask,o=(e,t,n)=>t&&t[n]?To(t[n],e):e;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qv({ones:()=>dc(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[y,b,v,x]=rh(this.kernel.read(),4,3),[w,k,S,E]=this.useBias?rh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,v,S,this.padding),h=this.inputConv(h,x,E,this.padding);const[I,T,C,N]=rh(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,I),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,N);const A=this.recurrentActivation.apply(So(l,p)),M=this.recurrentActivation.apply(So(u,f)),_=So(To(M,i),To(A,this.activation.apply(So(c,m)))),R=To(this.recurrentActivation.apply(So(h,g)),this.activation.apply(_));return[R,R,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=jl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?gg(s,n,this.dataFormat):s}recurrentConv(e,t){return jl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Jv.className="ConvLSTM2DCell",Va(Jv);class ex extends Yv{constructor(e){const t=new Jv(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}ex.className="ConvLSTM2D",Va(ex);class tx extends xy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return bg((()=>yg(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}tx.className="Dropout",Va(tx);class nx extends tx{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}nx.className="SpatialDropout1D",Va(nx);class rx extends xy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,vm(this.units,"units"),this.activation=uv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Bg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Bg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=_m(e.kernelConstraint),this.biasConstraint=_m(e.biasConstraint),this.kernelRegularizer=gv(e.kernelRegularizer),this.biasRegularizer=gv(e.biasRegularizer),this.activityRegularizer=gv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=uy(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=uy(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e),r=wm(this.activation.getClassName());let s;return null!=r?s=dg(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=dg(n,this.kernel.read()),null!=this.bias&&(s=gg(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:ov(this.activation),useBias:this.useBias,kernelInitializer:Pg(this.kernelInitializer),biasInitializer:Pg(this.biasInitializer),kernelRegularizer:fv(this.kernelRegularizer),biasRegularizer:fv(this.biasRegularizer),activityRegularizer:fv(this.activityRegularizer),kernelConstraint:Am(this.kernelConstraint),biasConstraint:Am(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}rx.className="Dense",Va(rx);class sx extends xy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=uy(e);for(const t of e.slice(1))if(null==t)throw new Jf(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ym(e,1)]}call(e,t){return uo((()=>{this.invokeCallHook(e,t);let n=ly(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Jf(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Ym(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}sx.className="Flatten",Va(sx);class ix extends xy{constructor(e){super(e),this.supportsMasking=!0,this.activation=uv(e.activation)}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ov(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ix.className="Activation",Va(ix);class ax extends xy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return uo((()=>{return e=ly(e),t=e,n=this.n,uo((()=>{if(2!==t.shape.length)throw new Jf(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return cg(sg(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ax.className="RepeatVector",Va(ax);class ox extends xy{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,i=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==i)throw new Jf("Can only specifiy one unknown dimension.");i=e}else s*=t}const a=Ym(e);if(null!==i){if(0===s||a%s!=0)throw new Jf(n);r[i]=a/s}else if(a!==s)throw new Jf(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ox.className="Reshape",Va(ox);class lx extends xy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=ng(1,e.dims.length+1);if(!se(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new my({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=uy(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return pa(ly(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}lx.className="Permute",Va(lx);class ux extends xy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=ly(e);return sl(uc(n,this.maskValue),-1)}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e),r=sl(uc(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}ux.className="Masking",Va(ux);class cx extends xy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(om(e.inputLength))}this.inputDim=e.inputDim,vm(this.inputDim,"inputDim"),this.outputDim=e.outputDim,vm(this.outputDim,"outputDim"),this.embeddingsInitializer=Bg(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gv(e.embeddingsRegularizer),this.activityRegularizer=gv(e.activityRegularizer),this.embeddingsConstraint=_m(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return uo((()=>this.maskZero?(e=ly(e),uc(e,Ao(e))):null))}computeOutputShape(e){if(e=uy(e),null==this.inputLength)return[...e,this.outputDim];const t=om(this.inputLength);if(t.length!==e.length-1)throw new Jf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],i=e[r+1];if(null!=s&&null!=i&&s!==i)throw new Jf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return uo((()=>{this.invokeCallHook(e,t);let n=ly(e);return"int32"!==n.dtype&&(n=rg(n,"int32")),pg(this.embeddings.read(),n.as1D()).reshape(uy(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Pg(this.embeddingsInitializer),embeddingsRegularizer:fv(this.embeddingsRegularizer),activityRegularizer:fv(this.activityRegularizer),embeddingsConstraint:Am(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}cx.className="Embedding",Va(cx);class hx extends xy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new em}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],i=t[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new Jf("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[uy(e)]),e.length<2)throw new Jf(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=mm(t),t.length>1)throw new Jf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===mm(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return uo((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=tg(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=sg(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],i=e.slice(1).concat([s]);let a=r.reshape([s].concat(Ym(e.slice(1))));a=pa(a,[1,0]),a=a.reshape(i),t.push(a),n=!0}else if(e>1){const s=ng(1,e).concat([0]);t.push(pa(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=pa(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(ng(0,s-1));r=pa(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=mm(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return uo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Jf("`mask` should be an Array");if(!Array.isArray(e))throw new Jf("`inputs` should be an Array");if(t.length!==e.length)throw new Jf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:fu(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Ku(n,t[e]);return n}))}}class dx extends hx{constructor(e){super(e)}mergeFunction(e){return uo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=So(t,e[n]);return t}))}}dx.className="Add",Va(dx);class px extends hx{constructor(e){super(e)}mergeFunction(e){return uo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=To(t,e[n]);return t}))}}px.className="Multiply",Va(px);class fx extends hx{constructor(e){super(e)}mergeFunction(e){return uo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=So(t,e[n]);return To(1/e.length,t)}))}}fx.className="Average",Va(fx);class mx extends hx{constructor(e){super(e)}mergeFunction(e){return uo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Xo(t,e[n]);return t}))}}mx.className="Maximum",Va(mx);class gx extends hx{constructor(e){super(e)}mergeFunction(e){return uo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=rc(t,e[n]);return t}))}}gx.className="Minimum",Va(gx);class yx extends hx{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Jf("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(se(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Jf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return uo((()=>lg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Jf("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Jf("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Jf("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Jf(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return uo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(dc(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(fu(t[n],-1)):r.push(t[n]);const s=Nl(r,this.axis);return rl(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function bx(e,t){for(;e<0;)e+=t;return e}yx.className="Concatenate",Va(yx);class vx extends hx{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Y(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new em("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Jf(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Jf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>bx(t,e[n].shape.length))):[bx(this.axes,n.shape.length),bx(this.axes,r.shape.length)],this.normalize&&(n=Fy(n,t[0]),r=Fy(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new em("batchDot is not implemented for tensors of 4D or higher rank yet");if(Y(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),Y(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new em("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return uo((()=>{let n,a;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)a=i[0]===i[1]?e.mul(t).sum(i[0]):e.transpose([1,0]).mul(t).sum(i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;a=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);a=a.squeeze(t)}return 1===a.shape.length&&(a=a.expandDims(1)),a}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[bx(this.axes,e.length),bx(this.axes,t.length)],n}computeOutputShape(e){Y(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new em("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}vx.className="Dot",Va(vx);class xx extends xy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e);return bg((()=>hg(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}xx.className="GaussianNoise",Va(xx);class wx extends xy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e);return this.rate>0&&this.rate<1?bg((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(hg(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}wx.className="GaussianDropout",Va(wx);class kx extends xy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||ly(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return uo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=ly(e),r=-1.7580993408473766;let s=wu(Mc(n),this.rate);s=rg(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-i*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(i).add(a)};return bg(r,(()=>ly(e)),t.training||!1)}return e}))}}function Sx(e,t,n,r,s,i=.001){let a;if(2===e.rank)a=Ll(e,t,n,r,s,i);else if(3===e.rank)a=Fl(e,t,n,r,s,i);else{if(4!==e.rank)throw new em(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=Ol(e,t,n,r,s,i)}return a}kx.className="AlphaDropout",Va(kx);class Ex extends xy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Bg(e.betaInitializer||"zeros"),this.gammaInitializer=Bg(e.gammaInitializer||"ones"),this.movingMeanInitializer=Bg(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Bg(e.movingVarianceInitializer||"ones"),this.betaConstraint=_m(e.betaConstraint),this.gammaConstraint=_m(e.gammaConstraint),this.betaRegularizer=gv(e.betaRegularizer),this.gammaRegularizer=gv(e.gammaRegularizer)}build(e){e=uy(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Jf(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new my({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return uo((()=>{const n=null!=t.training&&t.training,r=ly(e),s=r.shape,i=s.length,a=ng(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=rm(1,i);l[o]=s[o];const u=a.slice();u.sort();const c=!se(u,ng(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return Sx(r,e,t,n,s,this.epsilon)}return Sx(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return se(r.slice().sort(),ng(0,e.rank-1))?function(e,t,n,r,s=.001){return uo((()=>{const i=ac(e,r),a=i.mean,o=i.variance;return[Sx(e,a,o,n,t,s),a,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return uo((()=>{const i=ac(e,r),a=i.mean,o=i.variance,l=[];for(const t of ng(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=a.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[Sx(e,u,c,d,h,s),a,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(e,t,n)=>{uo((()=>{const r=1-n,s=e.read(),i=s.sub(t).mul(r);e.write(s.sub(i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pg(this.betaInitializer),gammaInitializer:Pg(this.gammaInitializer),movingMeanInitializer:Pg(this.movingMeanInitializer),movingVarianceInitializer:Pg(this.movingVarianceInitializer),betaRegularizer:fv(this.betaRegularizer),gammaRegularizer:fv(this.gammaRegularizer),betaConstraint:Am(this.betaConstraint),gammaConstraint:Am(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ex.className="BatchNormalization",Va(Ex);class Ix extends xy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Bg(e.betaInitializer||"zeros"),this.gammaInitializer=Bg(e.gammaInitializer||"ones"),this.betaRegularizer=gv(e.betaRegularizer),this.gammaRegularizer=gv(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=uy(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==mm(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=ly(e),r=n.shape,s=r.length;return uo((()=>{let{mean:e,variance:t}=ac(n,this.axis,!0);const i=rm(1,s);for(const e of this.axis)i[e]=r[e];const a=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(i):e;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),Sx(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pg(this.betaInitializer),gammaInitializer:Pg(this.gammaInitializer),betaRegularizer:fv(this.betaRegularizer),gammaRegularizer:fv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ix.className="LayerNormalization",Va(Ix);class Tx extends xy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Jf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Jf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Jf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new my({ndim:4})]}computeOutputShape(e){let t,n;return e=uy(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return uo((()=>{return t=ly(e),n=this.padding,r=this.dataFormat,uo((()=>{if(4!==t.rank)throw new Jf(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Jf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Jf(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],fc(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Cx(e,t,n,r,s,i){return uo((()=>{let a;Um(s),Wm(i),Hm(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=Tv(e,s);const o="same"===r?"same":"valid";return a="max"===i?Yu(e,t,n,o):Tl(e,t,n,o),"channelsFirst"===s&&(a=pa(a,[0,3,1,2])),a}))}function Nx(e,t,n,r,s,i){return uo((()=>{let a;Um(s),Wm(i),Hm(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=Cv(e,s);const o="same"===r?"same":"valid";return a="max"===i?Ju(e,t,n,o):Cl(e,t,n,o),"channelsFirst"===s&&(a=pa(a,[0,4,1,2,3])),a}))}Tx.className="ZeroPadding2D",Va(Tx);class Ax extends xy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Jf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(vm(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Jf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}vm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Hm(this.padding),this.inputSpec=[new my({ndim:3})]}computeOutputShape(e){const t=Ev((e=uy(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return uo((()=>{this.invokeCallHook(e,t),e=sg(ly(e),2);const n=this.poolingFunction(ly(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ah(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Mx extends Ax{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Um(s),Hm(r),Cx(e,t,n,r,s,"max")}}Mx.className="MaxPooling1D",Va(Mx);class _x extends Ax{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Um(s),Hm(r),Cx(e,t,n,r,s,"avg")}}_x.className="AveragePooling1D",Va(_x);class Rx extends xy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Jf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];vm(this.poolSize,"poolSize"),vm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Um(this.dataFormat),Hm(this.padding),this.inputSpec=[new my({ndim:4})]}computeOutputShape(e){e=uy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Ev(t,this.poolSize[0],this.padding,this.strides[0]),n=Ev(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return uo((()=>(this.invokeCallHook(e,t),this.poolingFunction(ly(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Dx extends Rx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Um(s),Hm(r),Cx(e,t,n,r,s,"max")}}Dx.className="MaxPooling2D",Va(Dx);class $x extends Rx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Um(s),Hm(r),Cx(e,t,n,r,s,"avg")}}$x.className="AveragePooling2D",Va($x);class Lx extends xy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Jf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];vm(this.poolSize,"poolSize"),vm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Um(this.dataFormat),Hm(this.padding),this.inputSpec=[new my({ndim:5})]}computeOutputShape(e){e=uy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Ev(t,this.poolSize[0],this.padding,this.strides[0]),n=Ev(n,this.poolSize[1],this.padding,this.strides[1]),r=Ev(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return uo((()=>(this.invokeCallHook(e,t),this.poolingFunction(ly(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Fx extends Lx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Um(s),Hm(r),Nx(e,t,n,r,s,"max")}}Fx.className="MaxPooling3D",Va(Fx);class Ox extends Lx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Um(s),Hm(r),Nx(e,t,n,r,s,"avg")}}Ox.className="AveragePooling3D",Va(Ox);class zx extends xy{constructor(e){super(e),this.inputSpec=[new my({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new em}}class Px extends zx{constructor(e){super(e||{})}call(e,t){return uo((()=>{const t=ly(e);return tc(t,1)}))}}Px.className="GlobalAveragePooling1D",Va(Px);class Bx extends zx{constructor(e){super(e||{})}call(e,t){return uo((()=>{const t=ly(e);return Fu(t,1)}))}}Bx.className="GlobalMaxPooling1D",Va(Bx);class Vx extends xy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Um(this.dataFormat),this.inputSpec=[new my({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new em}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ux extends Vx{call(e,t){return uo((()=>{const t=ly(e);return"channelsLast"===this.dataFormat?tc(t,[1,2]):tc(t,[2,3])}))}}Ux.className="GlobalAveragePooling2D",Va(Ux);class Hx extends Vx{call(e,t){return uo((()=>{const t=ly(e);return"channelsLast"===this.dataFormat?Fu(t,[1,2]):Fu(t,[2,3])}))}}Hx.className="GlobalMaxPooling2D",Va(Hx);class Wx extends xy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Ly(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Gx extends Wx{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=uy(e)).length<3)throw new Jf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=uy(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return uo((()=>Vv(((e,n)=>[ly(this.layer.call(e,t)),[]]),e=ly(e),[],!1,null,null,!1,!0)[1]))}}Gx.className="TimeDistributed",Va(Gx);class jx extends Wx{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ly(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Ly(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,ym(Bm,"BidirectionalMergeMode",s),e.weights)throw new em("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):am(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Bv(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const i=[],a=[];if(null!=n){const e=n.length;if(e%2>0)throw new Jf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);const r=n.map((e=>new my({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),a.push(...r)}if(null!=r)throw new em("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof gy;for(const e of i)if(e instanceof gy!==o)throw new Jf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return uo((()=>{const n=t.initialState;let r,s,i,a;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Fc(s,1)),"concat"===this.mergeMode?a=lg([r,s]):"sum"===this.mergeMode?a=So(r,s):"ave"===this.mergeMode?a=To(.5,So(r,s)):"mul"===this.mergeMode?a=To(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){qm(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),qm(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Ly(t.layer);if(delete t.layer,null!=t.numConstants)throw new em("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function qx(e){return new ky(e)}function Kx(e){return new xv(e)}function Xx(e){return new yv(e)}function Zx(e){return new bv(e)}function Qx(e){return new vv(e)}function Yx(e){return new kv(e)}function Jx(e){return new wv(e)}function ew(e){return new Fv(e)}function tw(e){return new _v(e)}function nw(e){return new Dv(e)}function rw(e){return new Rv(e)}function sw(e){return new Lv(e)}function iw(e){return new Ov(e)}function aw(e){return new zv(e)}function ow(e){return new Pv(e)}function lw(e){return new ix(e)}function uw(e){return new rx(e)}function cw(e){return new tx(e)}function hw(e){return new nx(e)}function dw(e){return new sx(e)}function pw(e){return new ax(e)}function fw(e){return new ox(e)}function mw(e){return new lx(e)}function gw(e){return new cx(e)}function yw(e){return new dx(e)}function bw(e){return new fx(e)}function vw(e){return new yx(e)}function xw(e){return new mx(e)}function ww(e){return new gx(e)}function kw(e){return new px(e)}function Sw(e){return new vx(e)}function Ew(e){return new Ex(e)}function Iw(e){return new Ix(e)}function Tw(e){return new Tx(e)}function Cw(e){return new _x(e)}function Nw(e){return Cw(e)}function Aw(e){return Cw(e)}function Mw(e){return new $x(e)}function _w(e){return Mw(e)}function Rw(e){return Mw(e)}function Dw(e){return new Ox(e)}function $w(e){return Dw(e)}function Lw(e){return Dw(e)}function Fw(e){return new Px(e)}function Ow(e){return new Ux(e)}function zw(e){return new Bx(e)}function Pw(e){return new Hx(e)}function Bw(e){return new Mx(e)}function Vw(e){return new Dx(e)}function Uw(e){return new Fx(e)}function Hw(e){return new qv(e)}function Ww(e){return new jv(e)}function Gw(e){return new Xv(e)}function jw(e){return new Kv(e)}function qw(e){return new Gv(e)}function Kw(e){return new Wv(e)}function Xw(e){return new ex(e)}function Zw(e){return new Jv(e)}function Qw(e){return new Uv(e)}function Yw(e){return new Zv(e)}function Jw(e){return new jx(e)}function ek(e){return new Gx(e)}jx.className="Bidirectional",Va(jx);const tk=zw,nk=Pw,rk=Bw,sk=Vw;function ik(e){return new xx(e)}function ak(e){return new wx(e)}function ok(e){return new kx(e)}function lk(e){return new ux(e)}function uk(e,t){return jy(e,t)}function ck(e,t){return Zy(e,t)}function hk(e,t){return Qy(e,t)}function dk(e,t){return qy(e,t)}function pk(e,t){return Yy(e,t)}function fk(e,t){return Xy(e,t)}function mk(e,t){return function(e,t){return uo((()=>{const n=Ky(e,t),r=function(e,t){return uo((()=>Ku(e.equal(1),t.equal(0)).sum().cast("float32")))}(e,t),s=n.add(r);return lu(xu(s,0),n.div(s),0).cast("float32")}))}(e,t)}function gk(e,t){return Hy(e,t)}function yk(e,t){return zy(e,t)}function bk(e,t){return Py(e,t)}function vk(e,t){return Py(e,t)}function xk(e,t){return Py(e,t)}function wk(e,t){return Oy(e,t)}function kk(e,t){return Oy(e,t)}function Sk(e,t){return Oy(e,t)}function Ek(e){return new dv(e)}function Ik(e){return cv(t=e),new dv({l1:null!=t?t.l1:null,l2:0});var t}function Tk(e){return cv(t=e),new dv({l2:null!=t?t.l2:null,l1:0});var t}class Ck extends Cy{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof zb))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Nk(e,t){return e<t}function Ak(e,t){return e>t}class Mk extends Ck{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new em("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Nk:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Ak:this.monitorFunc=Nk,this.monitorFunc===Nk&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Nk?1/0:-1/0}async onEpochEnd(e,t){await Ey(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const _k={earlyStopping:function(e){return new Mk(e)}};var Rk,Dk;!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Rk||(Rk={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Dk||(Dk={}));const $k={};function Lk(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};$k[e]=n}function Fk(e){return $k[e]}function Ok(e){delete $k[e]}function zk(e,t,n,r,s){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,a=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd;if("tensor"===i.type)return Pk(t.inputNames[i.inputIndexStart],n,r,s);if("tensors"===i.type)return t.inputNames.slice(e,a).map((e=>Pk(e,n,r,s)));const o=Pk(t.inputNames.slice(e)[0],n,r,s),l=o.dataSync();return"number"===i.type?l[0]:Me(o.shape,l)}const a=t.attrParams[e];return a&&a.value}function Pk(e,t,n,r){const[s,i]=Uk(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const a=n.currentContextIds.find((e=>!!t[Vk(s,e)]));return void 0!==a?t[Vk(s,a)][i]:void 0}function Bk(e,t){const[n,r]=Uk(e);return[Vk(n,t&&t.currentContextId),r]}function Vk(e,t){return t?`${e}-${t}`:e}function Uk(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function Hk(e,t,n){let r=zk("pad",e,t,n);if("explicit"===r){r=zk("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function Wk(e){return e.kept?e:ji(e)}const Gk=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],jk=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qk=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Kk=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Xk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Zk=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Qk=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Yk=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Jk=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],eS=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],tS=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nS=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],rS=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],sS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],iS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],aS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],oS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class lS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[E,I,T,C,N,A,M,$,D,_,L,F,O,z,P,B,R].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],i=[],a=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||i.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(a);h.forEach((e=>{const t=a[e];t.inputNames.forEach((e=>{const[n]=Bk(e);t.inputs.push(a[n]),a[n].children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=a[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=Bk(e),n=a[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=Bk(e),n=a[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:a,inputs:o,outputs:l,weights:s,placeholders:r,signature:t,functions:d};return i.length>0&&(p.initNodes=i),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Fk(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=cS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=cS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=xS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=xS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=dS(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=dS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=vS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=vS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=hS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=hS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=kS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=kS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=bS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=bS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=wS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=wS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=mS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=mS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=gS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=gS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=fS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],i=[];e.signature.inputArg.forEach((e=>{const[t]=Bk(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:pS(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=Bk(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const a=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Bk(a[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,i.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:i,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function uS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Be().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function cS(e,t,n,r=!1){const s=e[t];return null!=s?uS(s.s,r):n}function hS(e,t,n){const r=e[t];return r?r.b:n}function dS(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function pS(e){switch("string"==typeof e&&(e=Rk[e]),e){case Rk.DT_FLOAT:return"float32";case Rk.DT_INT32:case Rk.DT_INT64:case Rk.DT_INT8:case Rk.DT_UINT8:return"int32";case Rk.DT_BOOL:return"bool";case Rk.DT_DOUBLE:return"float32";case Rk.DT_STRING:return"string";default:return null}}function fS(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function mS(e,t,n){const r=e[t];return r&&r.type?pS(r.type):n}function gS(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>pS(e))):n}function yS(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function bS(e,t,n){const r=e[t];return r&&r.shape?yS(r.shape):n}function vS(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function xS(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>uS(e,r))):n}function wS(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>yS(e))):n}function kS(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class SS{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Pk(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Pk(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return dS(this.node.rawAttrs,e,t);if(null!=n.s)return cS(this.node.rawAttrs,e,t);if(null!=n.b)return hS(this.node.rawAttrs,e,t);if(null!=n.shape)return bS(this.node.rawAttrs,e,t);if(null!=n.type)return mS(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return vS(this.node.rawAttrs,e,t);if(null!=n.list.s)return xS(this.node.rawAttrs,e,t);if(null!=n.list.shape)return wS(this.node.rawAttrs,e,t);if(null!=n.list.b)return kS(this.node.rawAttrs,e,t);if(null!=n.list.type)return gS(this.node.rawAttrs,e,t)}return t}}const ES=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[So(zk("a",e,t,n),zk("b",e,t,n))];case"AddN":return[nl(zk("tensors",e,t,n))];case"FloorMod":case"Mod":return[ic(zk("a",e,t,n),zk("b",e,t,n))];case"Mul":return[To(zk("a",e,t,n),zk("b",e,t,n))];case"RealDiv":case"Div":return[Io(zk("a",e,t,n),zk("b",e,t,n))];case"DivNoNan":return[uu(zk("a",e,t,n),zk("b",e,t,n))];case"FloorDiv":return[Eo(zk("a",e,t,n),zk("b",e,t,n))];case"Sub":return[Ho(zk("a",e,t,n),zk("b",e,t,n))];case"Minimum":return[rc(zk("a",e,t,n),zk("b",e,t,n))];case"Maximum":return[Xo(zk("a",e,t,n),zk("b",e,t,n))];case"Pow":return[Uo(zk("a",e,t,n),zk("b",e,t,n))];case"SquaredDifference":return[ih(zk("a",e,t,n),zk("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},IS=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Go(zk("x",e,t,n))];case"Acos":return[el(zk("x",e,t,n))];case"Acosh":return[tl(zk("x",e,t,n))];case"Asin":return[ol(zk("x",e,t,n))];case"Asinh":return[ll(zk("x",e,t,n))];case"Atan":return[ul(zk("x",e,t,n))];case"Atan2":return[cl(zk("x",e,t,n),zk("y",e,t,n))];case"Atanh":return[hl(zk("x",e,t,n))];case"Ceil":return[Bl(zk("x",e,t,n))];case"Complex":return[Xs(zk("real",e,t,n),zk("imag",e,t,n))];case"Cos":return[Jl(zk("x",e,t,n))];case"Cosh":return[eu(zk("x",e,t,n))];case"Elu":return[hu(zk("x",e,t,n))];case"Erf":return[du(zk("x",e,t,n))];case"Exp":return[pu(zk("x",e,t,n))];case"Expm1":return[mu(zk("x",e,t,n))];case"Floor":return[bu(zk("x",e,t,n))];case"Log":return[_u(zk("x",e,t,n))];case"Log1p":return[Ru(zk("x",e,t,n))];case"Imag":return[ku(zk("x",e,t,n))];case"Neg":return[Du(zk("x",e,t,n))];case"Reciprocal":return[Dc(zk("x",e,t,n))];case"Real":return[Rc(zk("x",e,t,n))];case"Relu":return[$c(zk("x",e,t,n))];case"Round":return[Vc(zk("x",e,t,n))];case"Selu":return[Hc(zk("x",e,t,n))];case"Sigmoid":return[Al(zk("x",e,t,n))];case"Sin":return[qc(zk("x",e,t,n))];case"Sign":return[jc(zk("x",e,t,n))];case"Sinh":return[Kc(zk("x",e,t,n))];case"Softplus":return[$u(zk("x",e,t,n))];case"Sqrt":return[Co(zk("x",e,t,n))];case"Square":return[No(zk("x",e,t,n))];case"Tanh":return[_l(zk("x",e,t,n))];case"Tan":return[ch(zk("x",e,t,n))];case"ClipByValue":return[Vl(zk("x",e,t,n),zk("clipValueMin",e,t,n),zk("clipValueMax",e,t,n))];case"Relu6":return[Lc(zk("x",e,t,n))];case"Rsqrt":return[Uc(Pk(e.inputNames[0],t,n))];case"Prod":return[kc(zk("x",e,t,n),zk("axes",e,t,n))];case"LeakyRelu":return[Tu(zk("x",e,t,n),zk("alpha",e,t,n))];case"Prelu":return[wc(zk("x",e,t,n),zk("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function TS(e,t,n=""){Y(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}class CS{constructor(e,t,n,r,s,i,a){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Oo(0),ho(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),TS(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ho(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Qs([],[0].concat(this.elementShape));const n=this.readMany(e);return TS(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),oh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Qs([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return TS(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Nl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,xh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,i=[];uo((()=>{t=Il(t,[1,n,s]);for(let n=0;n<e.length;++n){const a=[0,0===n?0:r[n-1],0],o=[1,e[n],s];i[n]=Il(Ml(t,a,o),this.elementShape)}return i}));const a=[];for(let t=0;t<e.length;t++)a[t]=t;this.writeMany(a,i)}}class NS{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);TS(t,e.shape,"TensorList shape mismatch: "),ho(e)})),this.idTensor=Oo(0),this.maxNumElements=r,ho(this.idTensor)}get id(){return this.idTensor.id}copy(){return new NS([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return TS(e,this.elementShape,"TensorList shape mismatch: "),uo((()=>{const t=this.tensors.map((t=>Il(t,e)));return oh(t,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return TS(n.shape,e,"TensorList shape mismatch: "),Il(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(TS(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ho(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return TS(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);TS(this.elementShape,t.shape,"TensorList shape mismatch: "),ho(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return TS(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?Qs([],[0].concat(this.elementShape)):uo((()=>{const t=e.map((e=>Il(this.tensors[e],n)));return oh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return TS(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?Qs([],[0].concat(this.elementShape)):uo((()=>{const e=this.tensors.map((e=>Il(e,t)));return Nl(e,0)}))}}const AS=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=zk("thenBranch",e,t,n),s=zk("elseBranch",e,t,n),i=zk("cond",e,t,n),a=zk("args",e,t,n);return(await i.data())[0]?n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=zk("body",e,t,n),s=zk("cond",e,t,n),i=zk("args",e,t,n),a=await n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),o=i.map((e=>e.id));let l=await a[0].data();a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=i;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const i=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await i[0].data(),i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[Wk(zk("pred",e,t,n))];case"Switch":{const r=zk("pred",e,t,n);let s=zk("data",e,t,n);return s.kept||(s=Wk(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Pk(e,t,n)));return r?[Wk(Pk(r,t,n))]:void 0}case"Enter":{const r=zk("frameName",e,t,n),s=zk("tensor",e,t,n);return n.enterFrame(r),[Wk(s)]}case"Exit":{const r=zk("tensor",e,t,n);return n.exitFrame(),[Wk(r)]}case"NextIteration":{const r=zk("tensor",e,t,n);return n.nextIteration(),[Wk(r)]}case"TensorArrayV3":{const r=zk("size",e,t,n),s=zk("dtype",e,t,n),i=zk("elementShape",e,t,n),a=zk("dynamicSize",e,t,n),o=zk("clearAfterRead",e,t,n),l=zk("identicalElementShapes",e,t,n),u=zk("name",e,t,n),c=new CS(u,s,r,i,l,a,o);return n.addTensorArray(c),[c.idTensor,Oo(1)]}case"TensorArrayWriteV3":{const r=zk("tensorArrayId",e,t,n),s=zk("index",e,t,n),i=zk("tensor",e,t,n),a=n.getTensorArray(r.id);return a.write(s,i),[a.idTensor]}case"TensorArrayReadV3":{const r=zk("tensorArrayId",e,t,n),s=zk("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=zk("tensorArrayId",e,t,n),s=zk("indices",e,t,n),i=zk("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,i)]}case"TensorArrayScatterV3":{const r=zk("tensorArrayId",e,t,n),s=zk("indices",e,t,n),i=zk("tensor",e,t,n),a=n.getTensorArray(r.id);return a.scatter(s,i),[a.idTensor]}case"TensorArrayConcatV3":{const r=zk("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),i=zk("dtype",e,t,n);return[s.concat(i)]}case"TensorArraySplitV3":{const r=zk("tensorArrayId",e,t,n),s=zk("tensor",e,t,n),i=zk("lengths",e,t,n),a=n.getTensorArray(r.id);return a.split(i,s),[a.idTensor]}case"TensorArraySizeV3":{const r=zk("tensorArrayId",e,t,n);return[Oo(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=zk("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=zk("tensorListId",e,t,n),s=zk("index",e,t,n),i=zk("tensor",e,t,n),a=n.getTensorList(r.id);return a.setItem(s,i),[a.idTensor]}case"TensorListGetItem":{const r=zk("tensorListId",e,t,n),s=zk("index",e,t,n),i=zk("elementShape",e,t,n),a=zk("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=zk("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const i=new NS([],n,e.dtype,r),a=xh(e,0);return t.forEach(((e,t)=>{i.setItem(e,a[t])})),i}(zk("tensor",e,t,n),r,zk("elementShape",e,t,n),zk("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=zk("elementShape",e,t,n),s=zk("elementDType",e,t,n);let i;i="TensorListReserve"===e.op?"numElements":"maxNumElements";const a=function(e,t,n){return new NS([],e,t,n)}(r,s,zk(i,e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListGather":{const r=zk("tensorListId",e,t,n),s=zk("indices",e,t,n),i=zk("elementShape",e,t,n),a=zk("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,a,i)]}case"TensorListStack":{const r=zk("tensorListId",e,t,n),s=zk("elementShape",e,t,n),i=zk("elementDType",e,t,n),a=zk("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,i,a)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);TS(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=xh(e);return new NS(s,t,r)}(zk("tensor",e,t,n),zk("elementShape",e,t,n),zk("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=zk("tensorListId",e,t,n),s=n.getTensorList(r.id),i=zk("dtype",e,t,n),a=zk("elementShape",e,t,n);return[s.concat(i,a)]}case"TensorListPushBack":{const r=zk("tensorListId",e,t,n),s=zk("tensor",e,t,n),i=n.getTensorList(r.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{const r=zk("tensorListId",e,t,n),s=zk("elementShape",e,t,n),i=zk("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,i)]}case"TensorListSplit":{const r=zk("tensor",e,t,n),s=zk("elementShape",e,t,n),i=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const i=0===r?0:e.size/r,a=uo((()=>{const a=[];e=Il(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],l=[1,t[r],i];a[r]=Il(Ml(e,o,l),n)}return e.dispose(),a})),o=new NS([],n,e.dtype,t.length);for(let e=0;e<a.length;e++)o.setItem(e,a[e]);return o}(r,zk("lengths",e,t,n),s);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function MS(e,t,n){const[r,s]=zk("fusedOps",e,t,n),i="biasadd"===r,a="prelu"===s,o="fusedbatchnorm"===r,l=zk("numArgs",e,t,n);if(i){if(a&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const u=zk("strides",e,t,n),c=Hk(e,t,n),h=zk("dataFormat",e,t,n).toUpperCase(),d=zk("dilations",e,t,n),[p,f]=zk("args",e,t,n);return{stride:u,pad:c,dataFormat:h,dilations:d,biasArg:p,preluArg:f,activationFunc:s,leakyreluAlpha:zk("leakyreluAlpha",e,t,n)}}const _S=(e,t,n)=>{switch(e.op){case"Conv1D":{const r=zk("stride",e,t,n),s=zk("pad",e,t,n),i=zk("dataFormat",e,t,n).toUpperCase(),a=zk("dilation",e,t,n);return[ql(zk("x",e,t,n),zk("filter",e,t,n),r,s,i,a)]}case"Conv2D":{const r=zk("strides",e,t,n),s=Hk(e,t,n),i=zk("dataFormat",e,t,n).toUpperCase(),a=zk("dilations",e,t,n);return[jl(zk("x",e,t,n),zk("filter",e,t,n),[r[1],r[2]],s,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:i,dilations:a,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=MS(e,t,n);return[td({x:zk("x",e,t,n),filter:zk("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:i,dilations:a,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=MS(e,t,n);return[sd({x:zk("x",e,t,n),filter:zk("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=zk("outputShape",e,t,n),s=zk("strides",e,t,n),i=Hk(e,t,n);return[Xl(zk("x",e,t,n),zk("filter",e,t,n),r,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=zk("strides",e,t,n),s=Hk(e,t,n),i=zk("dilations",e,t,n),a=zk("dataFormat",e,t,n).toUpperCase();return[su(zk("input",e,t,n),zk("filter",e,t,n),[r[1],r[2]],s,a,[i[1],i[2]])]}case"Conv3D":{const r=zk("strides",e,t,n),s=zk("pad",e,t,n),i=zk("dataFormat",e,t,n).toUpperCase(),a=zk("dilations",e,t,n);return[Zl(zk("x",e,t,n),zk("filter",e,t,n),[r[1],r[2],r[3]],s,i,[a[1],a[2],a[3]])]}case"AvgPool":{const r=zk("strides",e,t,n),s=zk("pad",e,t,n),i=zk("kernelSize",e,t,n);return[Tl(zk("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=zk("strides",e,t,n),s=zk("pad",e,t,n),i=zk("kernelSize",e,t,n);return[Yu(zk("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=zk("strides",e,t,n),s=zk("pad",e,t,n),i=zk("kernelSize",e,t,n),a=zk("includeBatchInIndex",e,t,n),{result:o,indexes:l}=ec(zk("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s,a);return[o,l]}case"AvgPool3D":{const r=zk("strides",e,t,n),s=zk("pad",e,t,n),i=zk("kernelSize",e,t,n);return[Cl(zk("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=zk("strides",e,t,n),s=zk("pad",e,t,n),i=zk("kernelSize",e,t,n);return[Ju(zk("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=zk("strides",e,t,n),s=zk("pad",e,t,n),i=zk("dilations",e,t,n),a=r[1],o=r[2],l=i[1],u=i[2];return[au(zk("x",e,t,n),zk("filter",e,t,n),[a,o],s,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},RS=(e,t,n)=>{switch(e.op){case"Fill":{const r=zk("shape",e,t,n),s=zk("dtype",e,t,n);return[Bo(r,zk("value",e,t,n),s)]}case"LinSpace":return[Au(zk("start",e,t,n),zk("stop",e,t,n),zk("num",e,t,n))];case"Multinomial":{const r=zk("logits",e,t,n),s=zk("numSamples",e,t,n),i=zk("seed",e,t,n);return[lc(r,s,i)]}case"OneHot":{const r=zk("indices",e,t,n),s=zk("depth",e,t,n),i=zk("onValue",e,t,n),a=zk("offValue",e,t,n);return[da(r,s,i,a)]}case"Ones":return[hc(zk("shape",e,t,n),zk("dtype",e,t,n))];case"OnesLike":return[dc(zk("x",e,t,n))];case"RandomUniform":return[Mc(zk("shape",e,t,n),zk("minval",e,t,n),zk("maxval",e,t,n),zk("dtype",e,t,n))];case"Range":return[_c(zk("start",e,t,n),zk("stop",e,t,n),zk("step",e,t,n),zk("dtype",e,t,n))];case"TruncatedNormal":{const r=zk("shape",e,t,n),s=zk("mean",e,t,n),i=zk("stdDev",e,t,n),a=zk("seed",e,t,n);return[yh(r,s,i,zk("dtype",e,t,n),a)]}case"Zeros":return[cc(zk("shape",e,t,n),zk("dtype",e,t,n))];case"ZerosLike":return[Ao(zk("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function DS(e,t,n){return{boxes:zk("boxes",e,t,n),scores:zk("scores",e,t,n),maxOutputSize:zk("maxOutputSize",e,t,n),iouThreshold:zk("iouThreshold",e,t,n),scoreThreshold:zk("scoreThreshold",e,t,n),softNmsSigma:zk("softNmsSigma",e,t,n)}}const $S=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=DS(e,t,n),u=await Wd.nonMaxSuppressionWithScoreAsync(r,s,i,a,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:i,iouThreshold:a,scoreThreshold:o}=DS(e,t,n),l=zk("padToMaxOutputSize",e,t,n),u=await Wd.nonMaxSuppressionPaddedAsync(r,s,i,a,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:i,iouThreshold:a,scoreThreshold:o}=DS(e,t,n);return[await Wd.nonMaxSuppressionAsync(r,s,i,a,o)]}case"Where":{const r=Gi(zk("condition",e,t,n),"bool"),s=[await Sh(r)];return r.dispose(),s}case"ListDiff":return Gc(zk("x",e,t,n),zk("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},LS=(e,t,n)=>{switch(e.op){case"TopKV2":{const r=zk("x",e,t,n),s=zk("k",e,t,n),i=zk("sorted",e,t,n),a=gh(r,s,i);return[a.values,a.indices]}case"Unique":{const r=zk("x",e,t,n),s=bh(r);return[s.values,s.indices]}case"UniqueV2":{const r=zk("x",e,t,n),s=zk("axis",e,t,n),i=bh(r,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},FS=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=zk("default",e,t,n);return[Pk(e.name,t,n)||r];case"Placeholder":return[Pk(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Wk(zk("x",e,t,n))];case"IdentityN":return zk("x",e,t,n).map((e=>Wk(e)));case"Shape":return[hh(zk("x",e,t,n).shape,"int32")];case"ShapeN":return zk("x",e,t,n).map((e=>hh(e.shape)));case"Size":return[Oo(zk("x",e,t,n).size,"int32")];case"Rank":return[Oo(zk("x",e,t,n).rank,"int32")];case"NoOp":return[Oo(1)];case"Print":const s=zk("x",e,t,n),i=zk("data",e,t,n),a=zk("message",e,t,n),o=zk("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(a);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,o));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}};class OS{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Oo(0),this.tensorMap=new Map,ho(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),uo((()=>{const e=xh(t),r=n.length,s=e.length;Y(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];ho(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return uo((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],i=this.findWithDefault(s,t);e.push(i)}return oh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}const zS=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=zk("keyDType",e,t,n),i=zk("valueDType",e,t,n),a=new OS(s,i);return r.addHashTable(e.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=zk("tableHandle",e,t,n,r),i=zk("keys",e,t,n),a=zk("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=zk("tableHandle",e,t,n,r),i=zk("keys",e,t,n),a=zk("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(i,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},PS=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=zk("images",e,t,n),s=zk("size",e,t,n),i=zk("alignCorners",e,t,n),a=zk("halfPixelCenters",e,t,n);return[Wd.resizeBilinear(r,[s[0],s[1]],i,a)]}case"ResizeNearestNeighbor":{const r=zk("images",e,t,n),s=zk("size",e,t,n),i=zk("alignCorners",e,t,n),a=zk("halfPixelCenters",e,t,n);return[Wd.resizeNearestNeighbor(r,[s[0],s[1]],i,a)]}case"CropAndResize":{const r=zk("image",e,t,n),s=zk("boxes",e,t,n),i=zk("boxInd",e,t,n),a=zk("cropSize",e,t,n),o=zk("method",e,t,n),l=zk("extrapolationValue",e,t,n);return[Wd.cropAndResize(r,s,i,a,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},BS=(e,t,n)=>{switch(e.op){case"Equal":return[ou(zk("a",e,t,n),zk("b",e,t,n))];case"NotEqual":return[uc(zk("a",e,t,n),zk("b",e,t,n))];case"Greater":return[xu(zk("a",e,t,n),zk("b",e,t,n))];case"GreaterEqual":return[wu(zk("a",e,t,n),zk("b",e,t,n))];case"Less":return[Cu(zk("a",e,t,n),zk("b",e,t,n))];case"LessEqual":return[Nu(zk("a",e,t,n),zk("b",e,t,n))];case"LogicalAnd":return[Ku(zk("a",e,t,n),zk("b",e,t,n))];case"LogicalNot":return[Xu(zk("a",e,t,n))];case"LogicalOr":return[Zu(zk("a",e,t,n),zk("b",e,t,n))];case"Select":case"SelectV2":return[lu(zk("condition",e,t,n),zk("a",e,t,n),zk("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},VS=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ha(zk("a",e,t,n),zk("b",e,t,n),zk("transposeA",e,t,n),zk("transposeB",e,t,n))];case"Transpose":return[pa(zk("x",e,t,n),zk("perm",e,t,n))];case"_FusedMatMul":const[r,s]=zk("fusedOps",e,t,n),i="biasadd"===r,a="prelu"===s,o=zk("numArgs",e,t,n),l=zk("leakyreluAlpha",e,t,n);if(i){if(a&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=zk("args",e,t,n);return[id({a:zk("a",e,t,n),b:zk("b",e,t,n),transposeA:zk("transposeA",e,t,n),transposeB:zk("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},US=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[$l(zk("x",e,t,n),zk("mean",e,t,n),zk("variance",e,t,n),zk("offset",e,t,n),zk("scale",e,t,n),zk("epsilon",e,t,n))];case"LRN":return[Mu(zk("x",e,t,n),zk("radius",e,t,n),zk("bias",e,t,n),zk("alpha",e,t,n),zk("beta",e,t,n))];case"Softmax":return[Jc(zk("x",e,t,n))];case"LogSoftmax":return[zu(zk("x",e,t,n))];case"SparseToDense":return[Wh(zk("sparseIndices",e,t,n),zk("outputShape",e,t,n),zk("sparseValues",e,t,n),zk("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},HS=(e,t,n)=>{switch(e.op){case"Max":{const r=zk("axis",e,t,n),s=zk("keepDims",e,t,n);return[Fu(zk("x",e,t,n),r,s)]}case"Mean":{const r=zk("axis",e,t,n),s=zk("keepDims",e,t,n);return[tc(zk("x",e,t,n),r,s)]}case"Min":{const r=zk("axis",e,t,n),s=zk("keepDims",e,t,n);return[nc(zk("x",e,t,n),r,s)]}case"Sum":{const r=zk("axis",e,t,n),s=zk("keepDims",e,t,n);return[Ou(zk("x",e,t,n),r,s)]}case"All":{const r=zk("axis",e,t,n),s=zk("keepDims",e,t,n);return[rl(zk("x",e,t,n),r,s)]}case"Any":{const r=zk("axis",e,t,n),s=zk("keepDims",e,t,n);return[sl(zk("x",e,t,n),r,s)]}case"ArgMax":{const r=zk("axis",e,t,n);return[il(zk("x",e,t,n),r)]}case"ArgMin":{const r=zk("axis",e,t,n);return[al(zk("x",e,t,n),r)]}case"Prod":{const r=zk("axis",e,t,n),s=zk("keepDims",e,t,n);return[kc(zk("x",e,t,n),r,s)]}case"Cumsum":{const r=zk("axis",e,t,n),s=zk("exclusive",e,t,n),i=zk("reverse",e,t,n);return[tu(zk("x",e,t,n),r,s,i)]}case"Bincount":const r=zk("x",e,t,n),s=zk("weights",e,t,n),i=zk("size",e,t,n);return[zl(r,s,i)];case"DenseBincount":{const r=zk("x",e,t,n),s=zk("weights",e,t,n),i=zk("size",e,t,n),a=zk("binaryOutput",e,t,n);return[nu(r,s,i,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},WS=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=zk("n",e,t,n),s=zk("axis",e,t,n);let i=zk("tensors",e,t,n);return i=i.slice(0,r),[Nl(i,s)]}case"Gather":{const r=zk("x",e,t,n),s=zk("indices",e,t,n);return[vu(r,Gi(s,"int32"),0)]}case"GatherV2":{const r=zk("axis",e,t,n),s=zk("batchDims",e,t,n),i=zk("x",e,t,n),a=zk("indices",e,t,n);return[vu(i,Gi(a,"int32"),r,s)]}case"Reverse":{const r=zk("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const i=zk("x",e,t,n);return[Fc(i,s)]}case"ReverseV2":{const r=zk("axis",e,t,n),s=zk("x",e,t,n);return[Fc(s,r)]}case"Slice":{const r=zk("begin",e,t,n),s=zk("size",e,t,n);return[Ml(zk("x",e,t,n),r,s)]}case"StridedSlice":{const r=zk("begin",e,t,n),s=zk("end",e,t,n),i=zk("strides",e,t,n),a=zk("beginMask",e,t,n),o=zk("endMask",e,t,n),l=zk("ellipsisMask",e,t,n),u=zk("newAxisMask",e,t,n),c=zk("shrinkAxisMask",e,t,n),h=zk("x",e,t,n);return[uh(h,r,s,i,a,o,l,u,c)]}case"Pack":return uo((()=>{const r=zk("axis",e,t,n),s=zk("tensors",e,t,n),i=s[0].shape,a=ah(s[0]).shape,o=s.map((e=>{const t=se(e.shape,i);if(!t&&!se(ah(e).shape,a))throw new Error("the input tensors shape does not match");return t?e:Il(e,i)}));return[oh(o,r)]}));case"Unpack":{const r=zk("axis",e,t,n),s=zk("tensor",e,t,n);return xh(s,r)}case"Tile":{const r=zk("reps",e,t,n);return[gu(zk("x",e,t,n),r)]}case"Split":case"SplitV":{const r=zk("axis",e,t,n),s=zk("numOrSizeSplits",e,t,n),i=zk("x",e,t,n);return rh(i,s,r)}case"ScatterNd":{const r=zk("indices",e,t,n),s=zk("values",e,t,n),i=zk("shape",e,t,n);return[Hh(r,s,i)]}case"GatherNd":{const r=zk("x",e,t,n),s=zk("indices",e,t,n);return[Gh(r,s)]}case"SparseToDense":{const r=zk("sparseIndices",e,t,n),s=zk("outputShape",e,t,n),i=zk("sparseValues",e,t,n),a=zk("defaultValue",e,t,n);return[Wh(r,i,s,i.dtype===a.dtype?a:Gi(a,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},GS=(e,t,n)=>{switch(e.op){case"FFT":return[eh(zk("x",e,t,n))];case"IFFT":return[th(zk("x",e,t,n))];case"RFFT":return[sh(zk("x",e,t,n))];case"IRFFT":return[nh(zk("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},jS=(e,t,n)=>{switch(e.op){case"Cast":return[Gi(zk("x",e,t,n),zk("dtype",e,t,n))];case"ExpandDims":{const r=zk("axis",e,t,n);return[fu(zk("x",e,t,n),r)]}case"Squeeze":{const r=zk("axis",e,t,n);return[ah(zk("x",e,t,n),r)]}case"Reshape":return[Il(zk("x",e,t,n),zk("shape",e,t,n))];case"MirrorPad":return[sc(zk("x",e,t,n),zk("padding",e,t,n),zk("mode",e,t,n))];case"PadV2":case"Pad":return[fc(zk("x",e,t,n),zk("padding",e,t,n),zk("constantValue",e,t,n))];case"SpaceToBatchND":{const r=zk("blockShape",e,t,n),s=zk("paddings",e,t,n);return[vc(zk("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=zk("blockShape",e,t,n),s=zk("crops",e,t,n);return[Dl(zk("x",e,t,n),r,s)]}case"DepthToSpace":{const r=zk("blockSize",e,t,n),s=zk("dataFormat",e,t,n).toUpperCase();return[ru(zk("x",e,t,n),r,s)]}case"BroadcastTo":return[Pl(zk("x",e,t,n),zk("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function qS(e,t,n,r){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return uo((()=>ES(e,t,n)));case"basic_math":return uo((()=>IS(e,t,n)));case"control":return AS(e,t,n);case"convolution":return uo((()=>_S(e,t,n)));case"creation":return uo((()=>RS(e,t,n)));case"dynamic":return $S(e,t,n);case"evaluation":return uo((()=>LS(e,t,n)));case"image":return uo((()=>PS(e,t,n)));case"graph":return uo((()=>FS(e,t,n)));case"logical":return uo((()=>BS(e,t,n)));case"matrices":return uo((()=>VS(e,t,n)));case"normalization":return uo((()=>US(e,t,n)));case"reduction":return uo((()=>HS(e,t,n)));case"slice_join":return uo((()=>WS(e,t,n)));case"spectral":return uo((()=>GS(e,t,n)));case"transformation":return uo((()=>jS(e,t,n)));case"hash_table":return zS(e,t,n,r);case"custom":const s=Fk(e.op);if(s&&s.customExecutor)return s.customExecutor(new SS(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Oe(s)?s.then((e=>[].concat(e))):[].concat(s)}class KS{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function XS(e,t,n,r){const s=new Set,i=[];let a=null,o=null;const l=new Set,u=Object.keys(e).map((e=>Uk(e)[0]));let c=[];null!=r&&(c=r.map((e=>Uk(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(JS(e)||eE(e)||tE(e))&&null==a&&(a=e,o=a.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):i.push(e.name))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:i,dynamicNode:a,syncInputs:o}}const ZS=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],QS=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],YS=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function JS(e){return ZS.indexOf(e.op)>=0}function eE(e){return QS.indexOf(e.op)>=0}function tE(e){return YS.indexOf(e.op)>=0}class nE{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new nE(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=XS(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:i}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:s}=n,i=[],a=Object.keys(s).map((e=>Uk(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;a.forEach((e=>{r.has(e.name)&&i.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&i.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&i.push(e)}));const l=new Set,u=[];for(;i.length>0;){const e=i.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&i.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Uk(e)[0]])),s=t.map((e=>Uk(e)[0]));let i=s.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const a=this.getCompilationKey(r,i);let o=this.compiledMap.get(a);null==o&&(o=this.compile(e,i),this.compiledMap.set(a,o));const l={},u={};return uo((()=>{const n=new KS(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=Uk(t),i=[];i[s]=e[t],r[n]=i}));const i=this.getFrozenTensorIds(r),a={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=qS(t,r,n,this._resourceManager);if(Oe(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,i,s,a)}}return null==this.parent&&n.dispose(i),t.map((e=>Pk(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,i,a){"control"!==t.category&&-1===i.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(a[e.id]=(a[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[Vk(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!s.has(e.id)){const t=a[e.id];1===t?(e.dispose(),delete a[e.id]):null!=t&&a[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const i=new KS(this.weightMap,r,s,this.functionExecutorMap),a=await this.executeWithControlFlow(e,i,t,n),o=t.map((e=>Pk(e,a,i))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.keys(a).forEach((e=>{a[e].forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&i.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),i=s.map((e=>this.graph.nodes[Uk(e)[0]])),a=n.map((e=>Uk(e)[0]));let o=a.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=XS(e,o,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Uk(t),s=[];s[r]=e[t],p[n]=s}));const f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){const e=this.processStack(i,d,t,p,g,m,a,f,l);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!JS(e)&&!Pk(e.name,p,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${u}]. ${e}`)}return p}processStack(e,t,n,r,s,i,a,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&zk("isConstant",e.node,r,n)&&([c]=Bk(e.node.name,n)),null==r[e.node.name]){const h=qS(e.node,r,n,this._resourceManager);c||([c]=Bk(e.node.name,n));const d=n.currentContext;Oe(h)?u.push(h.then((u=>(r[c]=u,n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,i,a,o),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,i,a,o),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,i){e.children.forEach((e=>{const[a]=Bk(e.name,n);!s[a]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Pk(e,r,n)))&&(s[a]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Pk(e,r,n)))&&(s[a]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Uk(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;Y(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&Y(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Uk(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=Uk(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class rE{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const sE="?tfjs-format=file",iE="model.json";class aE{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new rE}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=aa(e,this.loadOptions);else{const t=pi(e,this.loadOptions);if(0===t.length)t.push(aa(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=ti(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new nE(lS.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=lS.Instance.transformGraph(e.modelInitializer);this.initializer=new nE(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=di(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof vs||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function oE(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${iE}${sE}`);const n=new aE(e,t);return await n.load(),n}const lE="2.8.6";function uE(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(fE(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const a=uE(e[i],t,n,r);s[i]=a}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function cE(e,t=dE){return hE(e,t)}function hE(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(fE(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=hE(e.map((e=>e[i])),t,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function dE(e){return null===e?null:fE(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function pE(e,t){const n=new Map;uE(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(Oe(t)){const r=await t;n.set(e,r)}}return uE(e,t,n)}function fE(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof vs))}function mE(e){return e instanceof vs?{value:e.clone(),recurse:!1}:fE(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class gE{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class yE extends gE{constructor(){super(yE.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function bE(e){return new wE(e)}function vE(e){return new kE(e)}yE.INITIAL_CAPACITY=32;class xE{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new AE(this,e)}filter(e){return new CE(this,e)}map(e){return new NE(this,e)}mapAsync(e){return new ME(this,e)}serialMapAsync(e){return new ME(this,e).serial()}flatmap(e){return new RE(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new TE(this,e,t)}columnMajorBatch(e,t=!0,n=dE){return this.rowMajorBatch(e,t).map((e=>cE(e,n)))}concatenate(e,t){return new DE(bE([this,e]),t)}take(e){return e<0||null==e?this:new IE(this,e)}skip(e){return e<0||null==e?this:new EE(this,e)}prefetch(e){return new FE(this,e)}shuffle(e,t){return new OE(this,e,t)}serial(){return new SE(this)}}class wE extends xE{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return uE(e,t)}(t,mE)),done:!1};var t}}class kE extends xE{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class SE extends xE{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class EE extends xE{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;co(e.value)}return this.upstream.next()}}class IE extends xE{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class TE extends xE{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class CE extends xE{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;co(e.value)}}}class NE extends xE{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Rs(e.value),n=this.transform(e.value),r=Rs(n);for(const e of t)_s(e,r)||e.dispose();return{value:n,done:!1}}}class AE extends xE{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class ME extends xE{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Rs(e.value),n=await this.transform(e.value),r=Rs(n);for(const e of t)_s(e,r)||e.dispose();return{value:n,done:!1}}}class _E extends xE{constructor(){super(),this.outputQueue=new yE,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class RE extends _E{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Rs(e.value),n=this.transform(e.value),r=Rs(n);this.outputQueue.pushAll(n);for(const e of t)_s(e,r)||e.dispose();return!0}}class DE extends xE{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var $E;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}($E||($E={}));class LE extends xE{constructor(e,t=$E.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await pE(this.iterators,(function(e){return e instanceof xE?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case $E.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case $E.SHORTEST:return{value:null,done:!0};case $E.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class FE extends xE{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new gE(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class OE extends FE{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Ec.alea(n||hs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class zE{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return Y(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),PE((async()=>(await n.iterator()).columnMajorBatch(e,t,UE)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,PE((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,PE((async()=>(await t.iterator()).filter((t=>uo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return PE((async()=>(await t.iterator()).map((t=>uo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return PE((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return PE((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,PE((async()=>{return n=vE((async()=>({value:await t.iterator(),done:!1}))).take(e),new DE(n,r);var n,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,PE((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Ec.alea(t||hs().toString());return PE((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,PE((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function PE(e,t=null){return new class extends zE{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function BE(e){return PE((async()=>bE(e)),e.length)}function VE(e){if(!fE(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return PE((async()=>function(e,t=$E.FAIL){return new LE(e,t)}(await pE(e,(e=>{if(e instanceof zE)return{value:e.iterator(),recurse:!1};if(fE(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),$E.SHORTEST)),t)}function UE(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof vs||ve(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof vs?oh(e):Qs(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}zE.MAX_BUFFER_SIZE=1e4;class HE extends zE{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const WE='"',GE=Symbol("out"),jE=Symbol("field"),qE=Symbol("quote"),KE=Symbol("quoteafterquote"),XE=Symbol("quoteinquote");class ZE extends zE{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new HE(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(Y(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&Y(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(Y(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const i=this.fullColumnNames[s],a=this.columnConfigs?this.columnConfigs[i]:null;if(!this.configuredColumnsOnly||a){const o=t[s];let l=null;if(""===o)if(a&&void 0!==a.default)l=a.default;else{if(a&&(a.required||a.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);l=void 0}else{const e=Number(o);if(isNaN(e))l=a&&"bool"===a.dtype?this.getBoolean(o):o;else if(a&&a.dtype)switch(a.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}a&&a.isLabel?r[i]=l:n[i]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let i=GE;for(let t=0;t<s;t++)switch(i){case GE:switch(e.charAt(t)){case WE:r=t+1,i=qE;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),i=GE;break;default:i=jE,r=t}break;case jE:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),i=GE,r=t+1);break;case qE:e.charAt(t)===WE&&(i=KE);break;case KE:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),i=GE,r=t+1;break;case WE:i=qE;break;default:i=XE}break;case XE:e.charAt(t)===WE&&(i=qE)}if(i===KE?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class QE extends xE{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Be().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new QE(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ne(t));return n.set(e,n.length-e.length),Qs(n,t)}}class YE extends xE{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=hh([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,i=t+r;this.cropBox=dh([r,n,i,s],[1,4])}else this.cropBox=dh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Be().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new YE(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Y("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=ba(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return uo((()=>{const t=e.toFloat().expandDims(0);let n;n=Wd.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return n.reshape(r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class JE{}class eI extends xE{split(e){return new tI(this,e)}}class tI extends eI{constructor(e,t){super(),this.upstream=e,this.impl=new nI(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class nI extends _E{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class rI extends xE{decodeUTF8(){return new sI(this)}}class sI extends eI{constructor(e){super(),this.upstream=e,this.impl=new iI(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class iI extends _E{constructor(e){if(super(),this.upstream=e,Be().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(4589);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Be().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class aI extends rI{constructor(e,t={}){super(),this.file=e,this.options=t,Y(e instanceof Uint8Array||!!Be().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await e,done:!1}}}function oI(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class lI extends JE{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(oI(this.input)&&Be().get("IS_NODE")){const e=n(2993);this.input=e.readFileSync(this.input.substr(7))}return new aI(this.input,this.options)}}class uI extends JE{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return oI(this.url)?new lI(this.url,this.fileOptions).iterator():async function(e,t={}){let n,r;var s;"string"==typeof e?n=e:(n=e.url,r={method:(s=e).method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});const i=await ds(n,r);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new aI(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function cI(e,t={}){return new ZE(new uI(e),t)}function hI(e){const t=vE(e);return PE((async()=>t))}function dI(e){return PE((async()=>{const t=await e();return vE((()=>t.next()))}))}async function pI(e,t){return YE.create(e,t)}async function fI(e){return QE.create(e)}const mI="2.8.6";function gI(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Y("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const yI=kh;class bI extends W{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new H(this,ao())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Be().get("IS_NODE")&&mp("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ke(n[0])){const s=n.map((e=>ps(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?yp(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>fs(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Wi(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return ao().makeTensorFromDataId(r,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=hs();return e(),{kernelMs:hs()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){gI([e],"where");const t=this.readSync(e.dataId);return yI(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function vI(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(gI(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=ne(a.shape),c=n||a.dtype,h=me(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],s);return o.makeTensorInfo(a.shape,c,h)}}function xI(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(gI(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=n||a.dtype,c=t(l,u,s);return o.makeTensorInfo(a.shape,u,c)}}xo("cpu",(()=>new bI),1);const wI=vI(Pt,(e=>e>=0?e:Math.exp(e)-1)),kI={kernelName:Pt,backendName:"cpu",kernelFunc:wI};function SI(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const EI={kernelName:nn,backendName:"cpu",kernelFunc:SI};function II(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r;gI([s],"leakyRelu");const a=ne(s.shape),o=n.data.get(s.dataId).values,l=fe("float32",a);for(let e=0;e<o.length;e++)l[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const TI={kernelName:un,backendName:"cpu",kernelFunc:II};function CI(e){return(t,n,r,s,i)=>{const a=Ko(t,n),o=a.length,l=Ne(a),u=fe(i,ne(a)),c=t.length,h=n.length,d=Ne(t),p=Ne(n),f=jo(t,a),m=jo(n,a);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=Fe(t,o,l),i=n.slice(-c);f.forEach((e=>i[e]=0));const a=Le(i,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=Le(g,h,p);u[t]=e(r[a],s[y])}return[u,a]}}const NI=CI(((e,t)=>e<0?t*e:e));function AI(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;gI([r,s],"prelu");const i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[o,l]=NI(r.shape,s.shape,i,a,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const MI={kernelName:jn,backendName:"cpu",kernelFunc:AI},_I=vI(Qn,(e=>Math.max(0,e))),RI={kernelName:Qn,backendName:"cpu",kernelFunc:_I},DI=vI(rr,(e=>Math.min(Math.max(0,e),6))),$I={kernelName:rr,backendName:"cpu",kernelFunc:DI};function LI(e,t,n,r,s){if("linear"===n)return SI({inputs:{x:t},backend:e});if("relu"===n)return _I({inputs:{x:t},backend:e});if("elu"===n)return wI({inputs:{x:t},backend:e});if("relu6"===n)return DI({inputs:{x:t},backend:e});if("prelu"===n)return AI({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return II({inputs:{x:t},backend:e,attrs:{alpha:s}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function FI(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}const OI={kernelName:gt,backendName:"cpu",kernelFunc:FI};function zI(e,t,n="float32"){if("complex64"===n)return FI({inputs:{real:zI(e,t,"float32"),imag:zI(e,t,"float32")},backend:e});const r=Re(ne(t),n);return e.makeTensorInfo(t,n,r)}function PI(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const BI={kernelName:Xn,backendName:"cpu",kernelFunc:PI};function VI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return SI({inputs:{x:s},backend:n});const e=zI(n,s.shape,s.dtype),t=VI({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=FI({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=PI({inputs:{input:s},backend:n}),t=VI({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!be(s.dtype,i)){const e=SI({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===i){const e=n.data.get(s.dataId).values,t=cs([0],s.dtype),[r,i]=CI(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const UI={kernelName:pt,backendName:"cpu",kernelFunc:VI};function HI(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:a}=n,o=s;gI([i,a],e);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c=r||i.dtype,[h,d]=t(i.shape,a.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:e,backend:s})=>{const{a:i,b:a}=e,o=s;if("complex64"===i.dtype||"complex64"===a.dtype){const e=VI({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=VI({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,y,b]=n(i.shape,a.shape,l,u,f,m),v=o.makeTensorInfo(b,"float32",g),x=o.makeTensorInfo(b,"float32",y),w=FI({inputs:{real:v,imag:x},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(x),w}{const e=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,s=r||i.dtype,[l,u]=t(i.shape,a.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function WI(e){return(t,n,r,s,i,a)=>{const o=Ko(t,n),l=ne(o),u=o.length,c=Ne(o),h=fe("float32",l),d=fe("float32",l),p=jo(t,o),f=jo(n,o),m=yp(r,s),g=yp(i,a),y=t.length,b=Ne(t),v=n.length,x=Ne(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Fe(t,u,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const s=Le(r,y,b),i=n.slice(-v);f.forEach((e=>i[e]=0));const a=Le(i,v,x),o=e(m[2*s],m[2*s+1],g[2*a],g[2*a+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const GI=CI(((e,t)=>e+t)),jI=WI(((e,t,n,r)=>({real:e+n,imag:t+r}))),qI=HI(Ke,GI,jI),KI={kernelName:Ke,backendName:"cpu",kernelFunc:qI};function XI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=ne(s.shape),o=he(i,a),l=ne(o);Y(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const ZI={kernelName:Yn,backendName:"cpu",kernelFunc:XI};function QI(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;gI([s,i],"matMul");const l=s.shape.length,u=i.shape.length,c=a?s.shape[l-2]:s.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],d=a?s.shape[l-1]:s.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],f=s.shape.slice(0,-2),m=i.shape.slice(0,-2),g=ne(f),y=ne(m);Y(l>=2&&u>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?s.shape.slice(0,-2):i.shape.slice(0,-2)).concat([d,p]);Y(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const v=o?[y,p,h]:[y,h,p],x=XI({inputs:{x:s},backend:n,attrs:{shape:a?[g,c,d]:[g,d,c]}}),w=XI({inputs:{x:i},backend:n,attrs:{shape:v}}),k=a?x.shape[1]:x.shape[2],S=a?x.shape[2]:x.shape[1],E=o?w.shape[1]:w.shape[2],I=Math.max(g,y),T=n.data.get(x.dataId).values,C=n.data.get(w.dataId).values,N=Ne(x.shape),A=Ne(w.shape),[M,_,R]=a?[N[0],1,N[1]]:[N[0],N[1],1],[D,$,L]=o?[1,A[1],A[0]]:[A[1],1,A[0]],F=S*E,O=Wi([I,S,E],x.dtype),z=O.values,P=n.blockSize;for(let e=0;e<I;e++)for(let t=0;t<S;t+=P)for(let n=0;n<E;n+=P)for(let r=0;r<k;r+=P){const s=Math.min(t+P,S),i=Math.min(n+P,E),a=Math.min(r+P,k);for(let o=t;o<s;o++)for(let t=n;t<i;t++){let n=0;for(let s=r;s<a;s++){const r=Math.min(e,g-1)*M,i=Math.min(e,y-1)*L;n+=T[r+o*_+s*R]*C[s*D+t*$+i]}z[e*F+(o*E+t)]+=n}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,O.dtype,O.values)}const YI={kernelName:ut,backendName:"cpu",kernelFunc:QI},JI={kernelName:zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=QI({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=qI({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),c&&(f=LI(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function eT(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const tT={kernelName:Ge,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;gI(t,"abs");let r=new Float32Array(ne(t.shape));return r=eT(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},nT=vI(je,(e=>Math.acos(e))),rT={kernelName:je,backendName:"cpu",kernelFunc:nT},sT=vI(qe,(e=>Math.acosh(e))),iT={kernelName:qe,backendName:"cpu",kernelFunc:sT},aT={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;gI(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),i=Wi(r[0].shape,r[0].dtype),a=i.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<a.length;e++)a[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function oT(e,t,n,r,s){const i=t.length,a=ne(t),o=Ne(t),l=Ne(s),u=fe(n,ne(s));for(let t=0;t<a;++t){const n=Fe(t,i,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[Le(s,i,l)]=e[t]}return u}function lT(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:i}=n;gI(s,"transpose");const a=s.shape.length,o=new Array(a);for(let e=0;e<o.length;e++)o[e]=s.shape[i[e]];const l=oT(r.data.get(s.dataId).values,s.shape,s.dtype,i,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const uT={kernelName:Mr,backendName:"cpu",kernelFunc:lT},cT={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;gI(s,"all");const o=de(i,s.shape);let l=o;const u=Wu(l,s.shape.length);let c=s;null!=u&&(c=lT({inputs:{x:s},backend:n,attrs:{perm:u}}),l=ju(l.length,s.shape.length)),Hu("all",l,c.shape.length);const[h,d]=Vu(c.shape,l),p=ne(d),f=Re(ne(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=XI({inputs:{x:g},backend:n,attrs:{shape:Uu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},hT={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;gI(s,"any");const o=de(i,s.shape);let l=o;const u=Wu(l,s.shape.length);let c=s;null!=u&&(c=lT({inputs:{x:s},backend:n,attrs:{perm:u}}),l=ju(l.length,s.shape.length)),Hu("any",l,c.shape.length);const[h,d]=Vu(c.shape,l),p=ne(d),f=Re(ne(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=XI({inputs:{x:g},backend:n,attrs:{shape:Uu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},dT={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;gI(s,"argMax");let a=de(i,s.shape);const o=Wu(a,s.shape.length);let l=s;const u=[];null!=o&&(l=lT({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=ju(a.length,l.shape.length)),a=[a[0]],Hu("argMax",a,l.shape.length);const[c,h]=Vu(l.shape,a),d=Re(ne(c),"int32"),p=ne(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},pT={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;gI(s,"argMin");let a=de(i,s.shape);const o=Wu(a,s.shape.length);let l=s;const u=[];null!=o&&(l=lT({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=ju(a.length,l.shape.length)),a=[a[0]],Hu("argMin",a,l.shape.length);const[c,h]=Vu(l.shape,a),d=Re(ne(c),"int32"),p=ne(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},fT=vI(et,(e=>Math.asin(e))),mT={kernelName:et,backendName:"cpu",kernelFunc:fT},gT=vI(tt,(e=>Math.asinh(e))),yT={kernelName:tt,backendName:"cpu",kernelFunc:gT},bT=vI(nt,(e=>Math.atan(e))),vT={kernelName:nt,backendName:"cpu",kernelFunc:bT},xT=CI(((e,t)=>Math.atan2(e,t))),wT=HI(st,xT),kT={kernelName:st,backendName:"cpu",kernelFunc:wT},ST=vI(rt,(e=>Math.atanh(e))),ET={kernelName:rt,backendName:"cpu",kernelFunc:ST};function IT(e,t,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Wi(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const x=y*a-d,w=Math.max(0,x),k=Math.min(s.inHeight,c+x),S=n+y*b;for(let n=0;n<s.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let y=f,b=0,x=0;for(let n=w;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<d;n+=u){const a=e[s+n*r[2]+t];"max"===i&&a>y?y=a:"avg"===i&&(b+=a,x++)}if(isNaN(y))break}g[S+n*v+t]="avg"===i?b/x:y}}}return m}function TT(e,t,n,r,s=!1,i=!1){const a=Wi(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Wi(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const v=Math.min(r.inWidth,d+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const a=n-g;for(let o=p;o<v;o+=c){const l=o-h,u=m.get(e,n,o,t);u>x&&(x=u,w=s?i?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:a*d+l)}}a.set(w,e,n,o,t)}}return a}function CT(e,t,n,r,s,i){const a=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Wi(s.outShape,n),x=v.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[3]*s.outShape[4],E=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,v=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const I=w*a-m;let T=I;for(;T<0;)T+=u;const C=Math.min(s.inDepth,d+I),N=n+w*k;for(let n=0;n<s.outHeight;++n){const a=n*o-g;let d=a;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+a),w=N+n*S;for(let n=0;n<s.outWidth;++n){const a=n*l-y;let o=a;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+a),g=w+n*E;let k=b,S=0,I=0;for(let n=T;n<C;n+=u){const s=v+n*r[1];for(let n=d;n<m;n+=c){const a=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[a+n*r[3]+t];if("max"===i&&s>k?k=s:"avg"===i&&(S+=s,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+t]="avg"===i?S/I:k}}}}return v}const NT={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;gI(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;Y(Sl(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=pl(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&se(u.inShape,u.outShape))c=SI({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Ne(s.shape),r=IT(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},AT={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u,dilations:c}=r;gI(s,"avgPool3d");let h=c;null==h&&(h=[1,1,1]);const d=fl(s.shape,i,a,h,o,l,u),p=CT(n.data.get(s.dataId).values,s.shape,s.dtype,Ne(s.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},MT={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;gI([s,i],"avgPool3DGrad");const h=fl(i.shape,a,o,u,l,c),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=h.dilationDepth,v=h.dilationHeight,x=h.dilationWidth,w=h.effectiveFilterDepth,k=h.effectiveFilterHeight,S=h.effectiveFilterWidth,E=w-1-h.padInfo.front,I=S-1-h.padInfo.left,T=k-1-h.padInfo.top,C=Wi(i.shape,"float32"),N=1/(m*g*y),A=n.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let s=0;s<h.inWidth;++s){const i=n-E,a=r-T,o=s-I;let l=0;for(let n=0;n<w;n+=b){const r=(i+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<k;n+=v){const s=(a+n)/p;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let n=0;n<S;n+=x){const i=(o+n)/f;i<0||i>=h.outWidth||Math.floor(i)!==i||(l+=A.get(e,r,s,i,t))}}}C.set(l*N,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},_T={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;gI([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=pl(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,v=b-1-c.padInfo.left,x=y-1-c.padInfo.top,w=Wi(a.shape,"float32"),k=1/(p*f),S=n.data.get(s.dataId).values,E=Wi(s.shape,"float32",S);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-x,i=r-v;let a=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(i+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(a+=E.get(e,r,s,t))}}w.set(a*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},RT={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:i,offset:a,mean:o,variance:l}=t;Y(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),gI([s,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=d.length,v=h.length;let x=0,w=0,k=0,S=0;for(let e=0;e<c.length;++e)m[e]=f[x++]+(c[e]-h[w++])*p[k++]/Math.sqrt(d[S++]+u),x>=g&&(x=0),w>=v&&(w=0),k>=y&&(k=0),S>=b&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function DT(e,t,n,r,s){const i=La(r,t,n),a=ne(n),o=Ne(r);if(i){const n=Fa(t,o);return"string"===s?e.slice(n,n+a):e.subarray(n,n+a)}const l=Wi(r,s,"string"===s?_p(e):e),u=Wi(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?Rp(u.values):u.values}function $T(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r;gI(s,"slice");const[o,l]=Oa(s,i,a);Sa(s,o,l);const u=DT(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const LT={kernelName:cr,backendName:"cpu",kernelFunc:$T},FT={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;gI([s],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),l=np(s.shape,i,o),u=rp(l.length,i.length),c=sp(s.shape,i,o),h=ip(a,i.length),d=ap(c,a,i.length),p=XI({inputs:{x:s},backend:n,attrs:{shape:l}}),f=lT({inputs:{x:p},backend:n,attrs:{perm:u}}),m=XI({inputs:{x:f},backend:n,attrs:{shape:c}}),g=$T({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function OT(e,t,n,r,s){const i=ne(r),a=Re(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(a[r]+=i>0?t[n]:1)}return a}function zT(e,t,n,r=!1){const s=e.shape[0],i=e.shape[1],a=Wi([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<i;s++){const i=e.get(o,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?a.set(1,o,i):t.size>0?a.set(a.get(o,i)+t.get(o,s),o,i):a.set(a.get(o,i)+1,o,i))}return a}const PT={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=OT(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,o)}};function BT(e){return(t,n,r)=>{const s=fe(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const VT=BT((e=>Math.ceil(e))),UT=xI(ft,VT),HT={kernelName:ft,backendName:"cpu",kernelFunc:UT},WT=vI(mt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),GT={kernelName:mt,backendName:"cpu",kernelFunc:WT},jT={kernelName:yt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(ne(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function qT(e,t,n,r){const s=me(n,ne(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=ne(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?_p(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=i[a++]}r+=e.shape[1]}))}return s}function KT(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const XT={kernelName:sn,backendName:"cpu",kernelFunc:KT};function ZT(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=de(s,t[0].shape)[0];let a=Yd(t.map((e=>e.shape)),i);if(0===ne(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter((e=>ne(e.shape)>0));if(1===o.length)return SI({inputs:{x:o[0]},backend:n});if(Qd(o.map((e=>e.shape)),i),"complex64"===o[0].dtype){const e=o.map((e=>PI({inputs:{input:e},backend:n}))),t=o.map((e=>KT({inputs:{input:e},backend:n}))),r=ZT({inputs:e,backend:n,attrs:{axis:i}}),s=ZT({inputs:t,backend:n,attrs:{axis:i}}),a=FI({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const l=o.map((e=>{const t=ne(e.shape.slice(i));return XI({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));a=Yd(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=qT(u,a,t[0].dtype,c),d=Yd(o.map((e=>e.shape)),i),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const QT={kernelName:bt,backendName:"cpu",kernelFunc:ZT};function YT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;gI([s,i],"conv2d");const h=El(l),d=ml(s.shape,i.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,v="channelsLast"===d.dataFormat,x=new ms(d.outShape,s.dtype),w=Ne(s.shape),k=Ne(i.shape),S=w[0],E=v?w[1]:w[2],I=v?w[2]:1,T=v?1:w[1],C=x.strides[0],N=v?x.strides[1]:x.strides[2],A=v?x.strides[2]:1,M=v?1:x.strides[1],_=n.data.get(s.dataId).values,R=n.data.get(i.dataId).values,D=x.values;for(let e=0;e<d.batchSize;++e){const t=e*S,n=e*C;for(let e=0;e<d.outHeight;++e){const r=n+e*N,s=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=d.inHeight)continue;const i=e*k[0],a=t+n*E;for(let e=0;e<d.outWidth;++e){const t=r+e*A,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=a+r*I;let o=i+e*k[1];for(let e=0;e<d.inChannels;++e){const n=_[s+e*T];for(let e=0;e<d.outChannels;++e)D[t+e*M]+=n*R[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,D)}const JT={kernelName:vt,backendName:"cpu",kernelFunc:YT},eC={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;gI([s,i],"conv2dBackpropFilter");const h=El(l),d=ml(s.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new ms(d.filterShape,"float32"),v=d.padInfo.left,x=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,S=new ms(s.shape,s.dtype,w),E=new ms(i.shape,i.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/p)),n=Math.min(d.outHeight,(d.inHeight+x-e)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((v-r)/f)),i=Math.min(d.outWidth,(d.inWidth+v-r)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-x;for(let e=s;e<i;++e){const n=r+e*f-v;l+=y?S.get(u,t,n,a)*E.get(u,c,e,o):S.get(u,a,t,n)*E.get(u,o,c,e)}}b.set(l,e,r,a,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},tC={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;gI([s,i],"conv2dBackpropInput");const h=Ne(i.shape),d=Ne(s.shape);let p=El(u);const f=ml(a,i.shape,o,1,l,c,!1,p),m=new ms(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(i.dataId).values,[v,x,w]=h,{batchSize:k,filterHeight:S,filterWidth:E,inChannels:I,inHeight:T,inWidth:C,outChannels:N,outHeight:A,outWidth:M,strideHeight:_,strideWidth:R}=f;p=f.dataFormat;const D=S-1-f.padInfo.top,$=E-1-f.padInfo.left,L="channelsLast"===p,F=m.strides[0],O=L?m.strides[1]:m.strides[2],z=L?m.strides[2]:1,P=L?1:m.strides[1],B=d[0],V=L?d[1]:d[2],U=L?d[2]:1,H=L?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<I;++t)for(let n=0;n<T;++n){const r=n-D,s=Math.max(0,Math.ceil(r/_)),i=Math.min(A,(S+r)/_);for(let a=0;a<C;++a){const o=a-$,l=Math.max(0,Math.ceil(o/R)),u=Math.min(M,(E+o)/R);let c=0;for(let n=s;n<i;++n){const s=n*_-r;for(let r=l;r<u;++r){const i=B*e+V*n+U*r,a=v*(S-1-s)+x*(E-1-(r*R-o))+w*t;for(let e=0;e<N;++e)c+=y[i+H*e]*b[a+e]}}g[F*e+O*n+z*a+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},nC={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r;gI([s,i],"conv3d");const u=gl(s.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,v=g.top,x=new ms(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,S=x.values,E=Ne(s.shape),I=Ne(i.shape);for(let e=0;e<u.batchSize;++e){const t=e*E[0],n=e*x.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*x.strides[1],s=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const i=e*I[0],a=t+n*E[1];for(let e=0;e<u.outHeight;++e){const t=r+e*x.strides[2],n=e*u.strideHeight-v;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=i+e*I[1],o=a+r*E[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const i=s+e*I[2],a=o+t*u.inChannels;let l=i;for(let e=0;e<u.inChannels;++e){const t=w[a+e];for(let e=0;e<u.outChannels;++e)S[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},rC={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:l}=r;gI([s,i],"conv3dBackpropFilterV2");const u=Ne(s.shape),c=Ne(i.shape),h=gl(s.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new ms(h.filterShape,"float32"),v=b.values,[x,w,k,S]=b.strides,E=n.data.get(i.dataId).values,[I,T,C,N]=c,A=n.data.get(s.dataId).values,[M,_,R,D]=u,$=h.padInfo.front,L=h.padInfo.left,F=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil(($-e)/d)),n=Math.min(h.outDepth,(h.inDepth+$-e)/d),r=e*x;for(let s=0;s<g;++s){const i=Math.max(0,Math.ceil((F-s)/p)),a=Math.min(h.outHeight,(h.inHeight+F-s)/p),o=s*w+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((L-r)/f)),u=Math.min(h.outWidth,(h.inWidth+L-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*S+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*M,y=m*I;for(let m=t;m<n;++m){const t=(e+m*d-$)*_+h,n=m*T+y;for(let e=i;e<a;++e){const i=(s+e*p-F)*R+t,a=e*C+n;for(let e=l;e<u;++e){const t=e*N+a;g+=A[(r+e*f-L)*D+i+o]*E[t+c]}}}}v[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},sC={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:l}=r;gI([s],"conv3dBackpropInputV2");const u=Ne(s.shape),c=Ne(i.shape),h=gl(l,i.shape,o,1,a),d=new ms(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(s.dataId).values,[v,x,w,k]=u,S=n.data.get(i.dataId).values,[E,I,T,C]=c,{batchSize:N,filterDepth:A,filterHeight:M,filterWidth:_,inChannels:R,inDepth:D,inHeight:$,inWidth:L,outChannels:F,outDepth:O,outHeight:z,outWidth:P,strideDepth:B,strideHeight:V,strideWidth:U}=h,H=A-1-h.padInfo.front,W=M-1-h.padInfo.top,G=_-1-h.padInfo.left;for(let e=0;e<N;++e)for(let t=0;t<R;++t)for(let n=0;n<D;++n){const r=n-H,s=Math.max(0,Math.ceil(r/B)),i=Math.min(O,(A+r)/B);for(let a=0;a<$;++a){const o=a-W,l=Math.max(0,Math.ceil(o/V)),u=Math.min(z,(M+o)/V);for(let c=0;c<L;++c){const h=c-G,d=Math.max(0,Math.ceil(h/U)),N=Math.min(P,(_+h)/U);let R=0;for(let n=s;n<i;++n){const s=n*B-r;for(let r=l;r<u;++r){const i=r*V-o;for(let a=d;a<N;++a){const o=v*e+x*n+w*r+k*a,l=E*(A-1-s)+I*(M-1-i)+T*(_-1-(a*U-h))+C*t;for(let e=0;e<F;++e)R+=b[o+e]*S[l+e]}}}p[f*e+m*n+g*a+y*c+t]=R}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},iC=vI(It,(e=>Math.cos(e))),aC={kernelName:It,backendName:"cpu",kernelFunc:iC},oC=vI(Tt,(e=>Math.cosh(e))),lC={kernelName:Tt,backendName:"cpu",kernelFunc:oC},uC={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=i.shape[0],[m,g]=o,y=Wi([f,m,g,p],"float32"),b=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,x=n.data.get(s.dataId).values,w=Ne(s.shape),k=Ne(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],i=b[t+3],a=v[e];if(a>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(i-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(d-1)+l*f:.5*(r+i)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<p;r++){let i=r+h*w[2]+n*w[1]+a*w[0];const u=x[i];i=r+m*w[2]+n*w[1]+a*w[0];const c=x[i];i=r+h*w[2]+s*w[1]+a*w[0];const d=x[i];i=r+m*w[2]+s*w[1]+a*w[0];const p=u+(c-u)*b,f=d+(x[i]-d)*b;i=r+l*k[2]+t*k[1]+e*k[0],y.values[i]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(d-1)+n*f:.5*(r+i)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+l*w[1]+a*w[0],i=r+n*k[2]+t*k[1]+e*k[0];y.values[i]=x[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},cC={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;gI(s,"cumsum");const l=Wu([i],s.shape.length);let u=s;null!=l&&(u=lT({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=ju(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Cs(u.dtype,"int32"),d=Re(ne(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=a?0:p[n];else{const r=m(e,t-1);d[n]=a?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=lT({inputs:{x:g},backend:n,attrs:{perm:Gu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},hC={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=OT(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,e)}if(2===s.shape.length){const e=zT(n.bufferSync(s),n.bufferSync(i),a,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},dC={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r;Y("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`)),Y(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*i,d=u*i,p=c/(i*i),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/i),r=t%i;for(let t=0;t<d;++t){const s=Math.floor(t/i),a=(r*i+t%i)*p;for(let t=0;t<p;++t){const r=t+a+c*(s+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,m)}};function pC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;gI([s,i],"depthwiseConv2DNative");const c=Ne(s.shape),h=Ne(i.shape);let d=l;null==d&&(d=[1,1]),Y(Sl(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=ml(s.shape,i.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,v=b.left,x=b.top,w=p.outChannels/p.inChannels,k=new ms(p.outShape,s.dtype),S=n.data.get(s.dataId).values,E=n.data.get(i.dataId).values,I=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],s=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const i=e*h[0],a=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=i+e*h[1],o=a+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=S[o+e];for(let e=0;e<w;++e)I[l+e]+=t*E[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const fC={kernelName:_t,backendName:"cpu",kernelFunc:pC},mC={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;gI([s,i],"depthwiseConv2dNativeBackpropFilter");const h=ml(s.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new ms(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,v=h.outChannels/h.inChannels,x=n.data.get(s.dataId).values,w=new ms(s.shape,s.dtype,x),k=n.data.get(i.dataId).values,S=new ms(i.shape,i.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/p)),i=Math.min(h.outWidth,(h.inWidth+y-r)/p);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/v),l=a%v;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=s;e<i;++e){const n=r+e*p-y;u+=w.get(l,t,n,o)*S.get(l,c,e,a)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},gC={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;gI([s,i],"depthwiseConv2DNativeBackpropInput");const h=Ne(s.shape),d=Ne(i.shape),p=ml(c,i.shape,a,o,l,u,!0),f=new ms(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,v=n.data.get(s.dataId).values,[x,w,k]=h,S=n.data.get(i.dataId).values,[E,I,T]=d,{batchSize:C,filterHeight:N,filterWidth:A,inChannels:M,inHeight:_,inWidth:R,outChannels:D,outHeight:$,outWidth:L,strideHeight:F,strideWidth:O}=p,z=N-1-p.padInfo.top,P=A-1-p.padInfo.left,B=D/M;for(let e=0;e<C;++e)for(let t=0;t<M;++t)for(let n=0;n<_;++n){const r=n-z,s=Math.max(0,Math.ceil(r/F)),i=Math.min($,(N+r)/F);for(let a=0;a<R;++a){const o=a-P,l=Math.max(0,Math.ceil(o/O)),u=Math.min(L,(A+o)/O);let c=0;for(let n=s;n<i;++n){const s=n*F-r;for(let r=l;r<u;++r){const i=x*e+w*n+k*r,a=E*(N-1-s)+I*(A-1-(r*O-o))+T*t;for(let e=0;e<B;++e)c+=v[i+(t*B+e)]*S[a+e]}}m[g*e+y*n+b*a+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},yC={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=ne(r.shape),i=n.data.get(r.dataId).values,a=Wi([s,s],r.dtype),o=a.values;for(let e=0;e<i.length;e++)o[e*s+e]=i[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},bC={kernelName:Lt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:i,pad:a,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:E,dilationWidth:I,outShape:T}=dl(r.shape,s.shape,i,a,"NHWC",o),C=ne(T),N=T.length,A=me(r.dtype,C);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*x-v.top;for(let i=0;i<b;++i){const a=i*w-v.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const i=n+t*E;if(i>=0&&i<f)for(let n=0;n<S;++n){const p=a+n*I;if(p>=0&&p<m){const a=Le([e,i,p,o],c,Ne(r.shape)),f=Le([t,n,o],d,Ne(s.shape)),m=u[a]+h[f];m>l&&(l=m)}}}A[Le([e,t,i,o],N,Ne(T))]=l}}}return{dataId:l.write(cs(A,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},vC={kernelName:Ot,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=Me(r.shape,u.data.get(r.dataId).values),h=Me(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:v,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:E,outShape:I}=dl(r.shape,s.shape,a,o,"NHWC",l);Y(i.rank===I.length,(()=>`Error in ${Ot}, dy must have the same rank as output ${I.length}, but got ${i.rank}`));const T=Me(I,u.data.get(i.dataId).values),C=De(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*v-b.top;for(let r=0;r<y;++r){const s=r*x-b.left;for(let i=0;i<m;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*E;if(u>=0&&u<f){const s=c[e][r][u][i]+h[t][n][i];s>a&&(a=s,o=t,l=n)}}}C[o][l][i]+=T[e][t][r][i]}}}return{dataId:u.write(cs(C,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},xC={kernelName:Ft,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=Me(r.shape,u.data.get(r.dataId).values),h=Me(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:v,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:E,outShape:I}=dl(r.shape,s.shape,a,o,"NHWC",l);Y(i.rank===I.length,(()=>`Error in ${Ft}, dy must have the same rank as output ${I.length}, but got ${i.rank}`));const T=Me(I,u.data.get(i.dataId).values),C=De(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*v-b.top;for(let r=0;r<y;++r){const s=r*x-b.left;for(let i=0;i<m;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*E;if(u>=0&&u<f){const s=c[e][r][u][i]+h[t][n][i];s>a&&(a=s,o=r,l=u)}}}C[e][o][l][i]+=T[e][t][r][i]}}}return{dataId:u.write(cs(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},wC={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;gI([r,s],"eluGrad");const i=new Float32Array(ne(s.shape)),a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<a.length;++e){const t=a[e];i[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",i)}},kC=CI(((e,t)=>e===t?1:0)),SC=HI(Ut,kC,null,"bool"),EC={kernelName:Ut,backendName:"cpu",kernelFunc:SC},IC=up,TC=cp,CC=hp,NC=dp,AC=pp,MC=fp,_C=vI(Vt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+IC*n);return t*(1-((((MC*r+AC)*r+NC)*r+CC)*r+TC)*r*Math.exp(-n*n))})),RC={kernelName:Vt,backendName:"cpu",kernelFunc:_C},DC=BT((e=>Math.exp(e))),$C=xI(Ht,DC),LC={kernelName:Ht,backendName:"cpu",kernelFunc:$C};function FC(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(Y(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),XI({inputs:{x:s},backend:n,attrs:{shape:o}})}const OC={kernelName:Wt,backendName:"cpu",kernelFunc:FC},zC=BT((e=>Math.expm1(e))),PC=xI(Gt,zC),BC={kernelName:Gt,backendName:"cpu",kernelFunc:PC},VC=CI(((e,t)=>e*t)),UC=WI(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),HC=HI($n,VC,UC),WC={kernelName:$n,backendName:"cpu",kernelFunc:HC},GC=CI(((e,t)=>e/t)),jC=HI(zt,GC),qC={kernelName:zt,backendName:"cpu",kernelFunc:jC},KC=CI(((e,t)=>e-t)),XC=WI(((e,t,n,r)=>({real:e-n,imag:t-r}))),ZC=HI(Sr,KC,XC),QC={kernelName:Sr,backendName:"cpu",kernelFunc:ZC};function YC(e,t,n){const r=e.shape,s=r[0],i=r[1],a=n.data.get(e.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,i],c=ne(u),h=fe("float32",c),d=fe("float32",c);for(let e=0;e<s;e++){const r=$T({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=$T({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,i]}}),a=FI({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=JC(a,t,n),p=yp(u,c);for(let t=0;t<i;t++){const n=wp(p,t);h[e*i+t]=n.real,d[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=FI({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function JC(e,t,n){const r=ne(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=eN(i,a,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),i=n.makeTensorInfo([],"float32",us(r,"float32")),a=SI({inputs:{x:i},backend:n}),l=qC.kernelFunc({inputs:{a:e,b:i},backend:n}),u=qC.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,a=0;for(let r=0;r<t;r++){const o=Ep(s*r,t,n),l=wp(e,r);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=t,a/=t),kp(r,i,a,s)}return r}(yp(i,a),r,t);return bp(e)}var o}function eN(e,t,n,r,s){if(1===n)return{real:e,imag:t};const i=yp(e,t),a=n/2,o=vp(i),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=FI({inputs:{real:h,imag:d},backend:s}),f=xp(i),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),v=s.makeTensorInfo(y,"float32",g),x=FI({inputs:{real:b,imag:v},backend:s}),w=eN(l,u,a,r,s),k=w.real,S=w.imag,E=[k.length],I=s.makeTensorInfo(E,"float32",k),T=s.makeTensorInfo(E,"float32",S),C=FI({inputs:{real:I,imag:T},backend:s}),N=eN(m,g,a,r,s),A=N.real,M=N.imag,_=[A.length],R=s.makeTensorInfo(_,"float32",A),D=s.makeTensorInfo(_,"float32",M),$=FI({inputs:{real:R,imag:D},backend:s}),L=Sp(n,r),F=[L.real.length],O=s.makeTensorInfo(F,"float32",L.real),z=s.makeTensorInfo(F,"float32",L.imag),P=FI({inputs:{real:O,imag:z},backend:s}),B=HC({inputs:{a:P,b:$},backend:s}),V=qI({inputs:{a:C,b:B},backend:s}),U=ZC({inputs:{a:C,b:B},backend:s}),H=PI({inputs:{input:V},backend:s}),W=PI({inputs:{input:U},backend:s}),G=KT({inputs:{input:V},backend:s}),j=KT({inputs:{input:U},backend:s}),q=ZT({inputs:[H,W],backend:s,attrs:{axis:0}}),K=ZT({inputs:[G,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Z=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Z}}const tN={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ne(r.shape),i=r.shape[r.shape.length-1],a=XI({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=YC(a,!1,n),l=XI({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function nN(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:i}=n,a=i||Ie(s),o=me(a,ne(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,a,o)}const rN={kernelName:qt,backendName:"cpu",kernelFunc:nN},sN={kernelName:Kt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,i=fe(r.dtype,ne(r.shape)),[a,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<a;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let o=0;o<u;o++){const h=[a,e,r,o][2],d=Math.round(l-h),p=t+n+s+o;let f=c[p];d>=0&&d<l&&(f=c[t+n+d*u+o]),i[p]=f}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},iN=BT((e=>Math.floor(e))),aN=xI(Xt,iN),oN={kernelName:Xt,backendName:"cpu",kernelFunc:aN},lN=CI(((e,t)=>Math.floor(e/t))),uN=HI(Zt,lN,null,"int32"),cN={kernelName:Zt,backendName:"cpu",kernelFunc:uN},hN={kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=YT({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=m;m=qI({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=LI(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},dN={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=pC({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=m;m=qI({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=LI(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},pN={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=ne(r.shape),a=s.shape,o=a[a.length-1],[l,u,c,h]=va(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=Wi([u,c],r.dtype),p=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=[];let n=0;for(let r=0;r<o;r++){const s=p[e*o+r];n+=s*h[r],t.push(s)}if(n<0||n>=i/c)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<c;t++)d.values[e*c+t]=f[n*c+t]}return n.makeTensorInfo(l,d.dtype,d.values)}};function fN(e,t,n){const r=Wi(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),i=s[0],a=s[2],o=t.locToIndex([i,a]);s[2]=t.values[o];const l=e.locToIndex(s);r.values[n]=e.values[l]}return r}const mN={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r;gI([s,i],"gatherV2");let l=o;null==o&&(l=0);const u=ne(i.shape),c=Np(s,i,de(a,s.shape)[0],l),h=XI({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=XI({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(d),m=fN(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},gN=CI(((e,t)=>e>t?1:0)),yN=HI(en,gN,null,"bool"),bN={kernelName:en,backendName:"cpu",kernelFunc:yN},vN=CI(((e,t)=>e>=t?1:0)),xN=HI(tn,vN,null,"bool"),wN={kernelName:tn,backendName:"cpu",kernelFunc:xN},kN={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ne(r.shape),i=r.shape[r.shape.length-1],a=XI({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=YC(a,!0,n),l=XI({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},SN=vI(an,(e=>Number.isFinite(e)?1:0),"bool"),EN={kernelName:an,backendName:"cpu",kernelFunc:SN},IN=vI(on,(e=>Math.abs(e)===1/0?1:0),"bool"),TN={kernelName:on,backendName:"cpu",kernelFunc:IN},CN=vI(ln,(e=>Number.isNaN(e)?1:0),"bool"),NN={kernelName:ln,backendName:"cpu",kernelFunc:CN},AN=CI(((e,t)=>e<t?1:0)),MN=HI(cn,AN,null,"bool"),_N={kernelName:cn,backendName:"cpu",kernelFunc:MN},RN=CI(((e,t)=>e<=t?1:0)),DN=HI(hn,RN,null,"bool"),$N={kernelName:hn,backendName:"cpu",kernelFunc:DN};function LN(e,t,n){const r=(t-e)/(n-1),s=Re(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const FN={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=LN(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}},ON=BT((e=>Math.log(e))),zN=xI(pn,ON),PN={kernelName:pn,backendName:"cpu",kernelFunc:zN},BN=vI(fn,(e=>Math.log1p(e))),VN={kernelName:fn,backendName:"cpu",kernelFunc:BN},UN=CI(((e,t)=>e&&t)),HN=HI(mn,UN,null,"bool"),WN={kernelName:mn,backendName:"cpu",kernelFunc:HN},GN=vI(gn,(e=>e?0:1),"bool"),jN={kernelName:gn,backendName:"cpu",kernelFunc:GN},qN=CI(((e,t)=>e||t)),KN=HI(yn,qN,null,"bool"),XN={kernelName:yn,backendName:"cpu",kernelFunc:KN},ZN={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=r;gI(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=ne(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(a+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},QN={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;gI(a,"LRNGrad");const h=ne(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(a.shape,s.dtype,g)}};function YN(e,t,n,r){const s=fe(r,ne(n));for(let n=0;n<s.length;++n){const r=n*t;let i=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>i&&(i=t)}s[n]=i}return s}function JN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=n;let l=s.shape;const u=l.length,c=de(i,l);let h=c;const d=Wu(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=oT(p,l,s.dtype,d,e),h=ju(h.length,u),l=e}gI(s,"max"),Hu("max",h,u);const[f,m]=Vu(l,h),g=YN(p,ne(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;return a&&(b=Uu(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const eA={kernelName:wn,backendName:"cpu",kernelFunc:JN},tA=CI(((e,t)=>Math.max(e,t))),nA=HI(kn,tA),rA={kernelName:kn,backendName:"cpu",kernelFunc:nA},sA={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;gI(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;Y(Sl(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=pl(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&se(u.inShape,u.outShape))c=SI({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Ne(s.shape),r=IT(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},iA={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u,dilations:c}=r;gI(s,"maxPool3d");let h=c;null==h&&(h=[1,1,1]);const d=fl(s.shape,i,a,h,o,l,u),p=CT(n.data.get(s.dataId).values,s.shape,s.dtype,Ne(s.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},aA={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;gI([s,i],"maxPool3DGrad");const h=fl(i.shape,a,o,u,l,c),d=function(e,t){const n=Wi(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,i=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let v=b;for(;v<0;)v+=a;const x=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*i-f;let k=p;for(;k<0;)k+=l;const S=Math.min(t.inWidth,h+p);let E=Number.NEGATIVE_INFINITY,I=-1;for(let t=v;t<x;t+=a){const n=t-b;for(let r=d;r<w;r+=o){const s=r-u;for(let i=k;i<S;i+=l){const a=i-p,o=e.get(m,t,r,i,g);o>=E&&(E=o,I=n*c*h+s*c+a)}}}n.set(I,m,y,r,s,g)}}}return n}(n.bufferSync(i),h),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.dilationDepth,y=h.dilationHeight,b=h.dilationWidth,v=h.effectiveFilterDepth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=v-1-h.padInfo.front,S=w-1-h.padInfo.left,E=x-1-h.padInfo.top,I=Wi(i.shape,"float32"),T=n.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let s=0;s<h.inWidth;++s){const i=n-k,a=r-E,o=s-S;let l=0;for(let n=0;n<v;n+=g){const r=(i+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=y){const i=(a+s)/f;if(!(i<0||i>=h.outHeight||Math.floor(i)!==i))for(let a=0;a<w;a+=b){const u=(o+a)/m;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;const c=v*x*w-1-d.get(e,r,i,u,t)===n*x*w+s*w+a?1:0;0!==c&&(l+=T.get(e,r,i,u,t)*c)}}}I.set(l,e,n,r,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},oA={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;gI([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=pl(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Wi(d.outShape,o.dtype,TT(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=x-1-d.padInfo.left,k=v-1-d.padInfo.top,S=Wi(o.shape,"float32"),E=n.data.get(s.dataId).values,I=Wi(s.shape,"float32",E);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,i=r-w;let a=0;for(let n=0;n<v;n+=y){const r=(s+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<x;s+=b){const o=(i+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=v*x-1-f.get(e,r,o,t)===n*x+s?1:0;0!==l&&(a+=I.get(e,r,o,t)*l)}}S.set(a,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},lA={kernelName:Cn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;gI(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=pl(r.shape,s,i,[1,1],a),[h,d]=function(e,t,n,r,s){const i=IT(e,0,n,Ne(t),s,"max"),a=TT(e,t,n,s,!0,r);return[i.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function uA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;let o;gI(s,"sum"),o="bool"===s.dtype?VI({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):SI({inputs:{x:s},backend:n});const l=o.shape.length,u=de(i,o.shape),c=Wu(u,l);let h=u,d=o;null!=c&&(d=lT({inputs:{x:o},backend:n,attrs:{perm:c}}),h=ju(h.length,l)),Hu("sum",h,d.shape.length);const[p,f]=Vu(d.shape,h);let m=zI(n,p,Cs(d.dtype,"int32"));const g=ne(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(a){const e=m;m=XI({inputs:{x:m},backend:n,attrs:{shape:Uu(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const cA={kernelName:yr,backendName:"cpu",kernelFunc:uA},hA={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=de(i,s.shape),l=ne(Vu(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=VI({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=jC({inputs:{a:h,b:c},backend:n});u.push(d);const p=uA({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},dA={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;gI(s,"min");const o=de(i,s.shape);let l=o;const u=Wu(l,s.shape.length);let c=s;null!=u&&(c=lT({inputs:{x:s},backend:n,attrs:{perm:u}}),l=ju(l.length,s.shape.length)),Hu("min",l,c.shape.length);const[h,d]=Vu(c.shape,l),p=ne(d),f=Re(ne(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];r<n&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=XI({inputs:{x:g},backend:n,attrs:{shape:Uu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},pA=CI(((e,t)=>Math.min(e,t))),fA=HI(Mn,pA),mA={kernelName:Mn,backendName:"cpu",kernelFunc:fA},gA={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,mode:a}=r;gI(s,"mirrorPad");const o=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=i.map((e=>e[0])),u=i.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=Ne(s.shape),f=ne(o),m=o.length,g=Ne(o),y=fe(s.dtype,f);for(let e=0;e<f;e++){let t=Fe(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Le(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},yA=CI(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),bA=HI(Rn,yA),vA={kernelName:Rn,backendName:"cpu",kernelFunc:bA};function xA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=s.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=de([o],s.shape),u=JN({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Uu(u.shape,l),h=XI({inputs:{x:u},backend:n,attrs:{shape:c}}),d=ZC({inputs:{a:s,b:h},backend:n}),p=$C({inputs:{x:d},backend:n}),f=uA({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=XI({inputs:{x:f},backend:n,attrs:{shape:c}}),g=jC({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const wA={kernelName:xr,backendName:"cpu",kernelFunc:xA},kA={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r;gI(s,"multinomial");const l=o?s:xA({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,i],p=Re(ne(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=Ec.alea(a.toString()),s=e*i;for(let e=0;e<i;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function SA(e,t,n){const r=us(-1,n);return VC([],t,r,e,n)}const EA={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;gI(r,"neg");const s=n.data.get(r.dataId).values,[i,a]=SA(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}},IA=yd,TA={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;gI(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=IA(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},CA=bd,NA={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;gI(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=CA(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},AA=vd,MA={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;gI(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=AA(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},_A=CI(((e,t)=>e!==t?1:0)),RA=HI(Fn,_A,null,"bool"),DA={kernelName:Fn,backendName:"cpu",kernelFunc:RA},$A={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:i,onValue:a,offValue:o}=r;gI(s,"oneHot");const l=ne(s.shape),u=new Float32Array(l*i);u.fill(o);const c=n.data.get(s.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<i&&(u[e*i+c[e]]=a);return n.makeTensorInfo([...s.shape,i],"int32",u)}};function LA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=PI({inputs:{input:r},backend:n}),t=LA({inputs:{x:e},backend:n}),s=KT({inputs:{input:r},backend:n}),i=LA({inputs:{x:s},backend:n}),a=FI({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return nN({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const FA={kernelName:$r,backendName:"cpu",kernelFunc:LA},OA={kernelName:Bn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=PI({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),i=KT({inputs:{input:s},backend:r}),a=LA({inputs:{x:i},backend:r}),o=FI({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return nN({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function zA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return FC({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{J(i,e.shape,"All tensors passed to stack must have matching shapes"),Y(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=ZT({inputs:t.map((e=>{const t=FC({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const PA={kernelName:Un,backendName:"cpu",kernelFunc:zA},BA={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;gI(s,"pad");const o=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=i.map((e=>e[0])),u=n.data.get(s.dataId).values,c=ne(s.shape),h=s.shape.length,d=Ne(s.shape),p=ne(o),f=o.length,m=Ne(o),g=fe(s.dtype,p);0!==a&&g.fill(a);for(let e=0;e<c;e++)g[Le(Fe(e,h,d).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},VA=CI(((e,t)=>Math.pow(e,t))),UA=HI(Gn,VA),HA={kernelName:Gn,backendName:"cpu",kernelFunc:UA};function WA(e,t,n,r){const[s,i]=Vu(e,r),a=Cs(t,"int32"),o=Re(ne(s),a),l=ne(i);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:a}}const GA={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;gI(s,"prod");const o=s.shape.length,l=de(i,s.shape),u=Wu(l,o);let c=l,h=s;const d=[];null!=u&&(h=lT({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=ju(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=WA(h.shape,h.dtype,p,c);let y=m;return a&&(y=Uu(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function jA(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Re(0,r);const s=Re(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const qA={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:i,step:a}=n,o=jA(r,s,a,i);return t.makeTensorInfo([o.length],i,o)}},KA=vI(Zn,(e=>1/e)),XA={kernelName:Zn,backendName:"cpu",kernelFunc:KA},ZA={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;gI(s,"resizeBilinear");const l=Ne(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(ne([h,u,c,f])),y=[i&&u>1?d-1:d,i&&c>1?p-1:p],b=[i&&u>1?u-1:u,i&&c>1?c-1:c];let v=0;const x=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=a?x*(t+.5)-.5:x*t;const r=Math.max(0,Math.floor(n)),s=n-r,i=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+i*l[1];for(let e=0;e<c;e++){let t;t=a?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,i=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+i*l[2],y=u+i*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],i=t+(m[d+e]-t)*r,a=i+(n+(m[y+e]-n)*r-i)*s;g[v++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},QA={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;gI([i,s],"resizeBilinearGrad");const o=Ne(s.shape),[l,u,c,h]=s.shape,[,d,p]=i.shape,f=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&p>1?c-1:c],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],v=n.data.get(i.dataId).values;let x=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),i=t+r*o[1],a=t+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=i+n*o[2],m=i+r*o[2],g=a+n*o[2],y=a+r*o[2],w=d*u,k=d*s,S=l*u,E=l*s;for(let e=0;e<h;e++){const t=v[x++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*S,f[y+e]+=t*E}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},YA={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;gI(s,"resizeNearestNeighbor");const l=Ne(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),y=[i&&u>1?d-1:d,i&&c>1?p-1:p],b=[i&&u>1?u-1:u,i&&c>1?c-1:c],v=y[0]/b[0],x=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=a?v*(e+.5):v*e;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=a?x*(e+.5):x*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}},JA={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;gI([i,s],"resizeNearestNeighborGrad");const o=Ne(s.shape),l=Ne(i.shape),[u,c,h,d]=s.shape,[,p,f]=i.shape,m=new Float32Array(u*c*h*d),g=n.data.get(i.dataId).values,y=[a&&p>1?c-1:c,a&&f>1?h-1:h],b=[a&&p>1?p-1:p,a&&f>1?f-1:f],v=y[0]/b[0],x=y[1]/b[1],w=1/v,k=1/x,S=2*Math.ceil(w)+2,E=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-S/2);for(let r=0;r<h;r++){const i=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-E/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<S;i++){const u=i+s;if(u<0||u>=p)continue;const d=t+u*l[1],m=u*v;if(e===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let e=0;e<E;e++){const t=e+y;if(t<0||t>=f)continue;const s=d+t*l[2],i=t*x;r===Math.min(h-1,a?Math.round(i):Math.floor(i))&&(o+=g[s+n])}}m[i+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},eM={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r;gI(s,"reverse");const a=s.shape.length,o=de(i,s.shape);if(0===a)return SI({inputs:{x:s},backend:n});const l=new ms(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},tM={kernelName:Or,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:a}=t,o=n,l=fe(r.dtype,ne(r.shape)),[u,c,h,d]=r.shape,[p,f]=tp(a,c,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let a=0;a<d;a++){const o=[u,e,r,a],b=o[2],v=o[1];let x=(b-p)*g-(v-f)*m,w=(b-p)*m+(v-f)*g;x=Math.round(x+p),w=Math.round(w+f);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),x>=0&&x<h&&w>=0&&w<c&&(k=y[t+w*(h*d)+x*d+a]),l[t+n+s+a]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},nM=vI(ir,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),rM={kernelName:ir,backendName:"cpu",kernelFunc:nM},sM=BT((e=>1/Math.sqrt(e))),iM=xI(ar,sM),aM={kernelName:ar,backendName:"cpu",kernelFunc:iM};function oM(e,t,n,r,s,i,a,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return Wi(n,t.dtype);const p=Wi(c,t.dtype);p.values.fill(l);for(let e=0;e<i;e++){const i=[];let l=0;for(let t=0;t<a;t++){const n=h[e*a+t];i.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const lM={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ka(0,s,a),d=oM(n.bufferSync(s),n.bufferSync(i),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}},uM={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t;gI([r,s,i],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=Cs(s.dtype,i.dtype),h=Re(ne(s.shape),c);let d=0;const p=0===a||a>1||1===s.shape.length?1:ne(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},cM=op,hM=lp,dM=vI(ur,(e=>e>=0?hM*e:cM*(Math.exp(e)-1))),pM={kernelName:ur,backendName:"cpu",kernelFunc:dM},fM=vI(fr,(e=>1/(1+Math.exp(-e)))),mM={kernelName:fr,backendName:"cpu",kernelFunc:fM},gM=vI(pr,(e=>e<0?-1:e>0?1:0)),yM={kernelName:pr,backendName:"cpu",kernelFunc:gM},bM=vI(hr,(e=>Math.sin(e))),vM={kernelName:hr,backendName:"cpu",kernelFunc:bM},xM=vI(dr,(e=>Math.sinh(e))),wM={kernelName:dr,backendName:"cpu",kernelFunc:xM},kM=Math.log(1.1920928955078125e-7)+2,SM=vI(mr,(e=>{const t=e>-kM,n=e<kM,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),EM={kernelName:mr,backendName:"cpu",kernelFunc:SM},IM={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;gI([s],"spaceToBatchND");const o=ne(i),l=[[0,0]];l.push(...a);for(let e=1+i.length;e<s.shape.length;++e)l.push([0,0]);const u=BA.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=np(u.shape,i,o,!1),h=rp(c.length,i.length,!1),d=sp(u.shape,i,o,!1),p=XI({inputs:{x:u},backend:n,attrs:{shape:c}}),f=lT({inputs:{x:p},backend:n,attrs:{perm:h}}),m=XI({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},TM={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=ka(0,s,o),p=oM(n.bufferSync(s),n.bufferSync(i),o,d,c,u,l,h,n.data.get(a.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},CM={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=de(a,s.shape)[0],l=Ip(s,i,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=$T({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},NM=vI(gr,(e=>Math.sqrt(e))),AM={kernelName:gr,backendName:"cpu",kernelFunc:NM},MM={kernelName:kr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;gI(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];i[e]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},_M=CI(((e,t)=>{const n=e-t;return n*n})),RM=HI(wr,_M),DM={kernelName:wr,backendName:"cpu",kernelFunc:RM},$M=vI(Lr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),LM={kernelName:Lr,backendName:"cpu",kernelFunc:$M};function FM(e,t,n,r){const s=Wi(e,t.dtype);for(let e=0;e<s.size;e++){const i=s.indexToLoc(e),a=new Array(i.length);for(let e=0;e<a.length;e++)a[e]=i[e]*n[e]+r[e];s.set(t.get(...a),...i)}return s}const OM={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;gI(s,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=za(s.shape,i,a,o,l,u,c,h,d),v=XI({inputs:{x:s},backend:n,attrs:{shape:y}});let x;if(p){const e=$T({inputs:{x:v},backend:n,attrs:{begin:f,size:g}});x=XI({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))x=n.makeTensorInfo(b,s.dtype,[]);else{const e=FM(b,n.bufferSync(v),m,f);x=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=XI({inputs:{x},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(x),w}},zM=vI(Tr,(e=>Math.tan(e))),PM={kernelName:Tr,backendName:"cpu",kernelFunc:zM},BM=vI(Cr,(e=>Math.tanh(e)));function VM(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Wi(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const i=e.locToIndex(s);r.values[t]=e.values[i]}return r}const UM={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;gI(s,"tile");const a=VM(n.bufferSync(s),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function HM(e,t,n,r,s){const i=t[t.length-1],[a,o]=[e.length/i,i],l=fe(n,a*r),u=fe("int32",a*r);for(let t=0;t<a;t++){const n=t*o,s=e.subarray(n,n+o),i=[];for(let e=0;e<s.length;e++)i.push({value:s[e],index:e});i.sort(((e,t)=>t.value-e.value));const a=t*r,c=l.subarray(a,a+r),h=u.subarray(a,a+r);for(let e=0;e<r;e++)c[e]=i[e].value,h[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[Wi(c,n,l),Wi(c,"int32",u)]}const WM={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r;gI(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=HM(o,s.shape,s.dtype,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};function GM(e,t,n,r){const s=de(t,n)[0],i=[1,n[0],1];for(let e=0;e<s;e++)i[0]*=n[e];i[1]=n[s];for(let e=s+1;e<n.length;e++)i[2]*=n[e];const a={},o=new Int32Array(n[s]),l=new ms(i,r,e),u=[],c=1===i[0]&&1===i[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==a[n])o[t]=a[n];else{const e=Object.keys(a).length;a[n]=e,o[t]=e,u.push(t)}}const h=i.slice();h[1]=Object.keys(a).length;const d=new ms(h,r);u.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const jM={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;gI(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=GM(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},qM={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],l=new Array(a-1);let u=0;for(let e=0;e<a;e++)e!==i&&(l[u++]=s.shape[e]);const c=new Array(a).fill(0),h=s.shape.slice();h[i]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[i]=e;const t=$T({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=XI({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},KM={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r;gI(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-i.shape.length;let c=i;for(let e=0;e<u;++e){const t=FC({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<a;++e){const t=us(e,"int32"),r=n.makeTensorInfo([],"int32",t),i=SC({inputs:{a:r,b:c},backend:n}),a=VI({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),u=HC({inputs:{a,b:s},backend:n}),h=uA({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(i),l.push(a),l.push(u),l.push(h)}const h=zA({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},XM=[JI,tT,rT,iT,KI,aT,cT,hT,dT,pT,mT,yT,vT,kT,ET,NT,AT,MT,_T,YI,RT,FT,PT,UI,HT,GT,OI,jT,QT,eC,tC,JT,rC,sC,nC,aC,lC,uC,cC,hC,dC,fC,mC,gC,yC,bC,xC,vC,qC,kI,wC,EC,RC,LC,OC,BC,tN,rN,sN,oN,cN,hN,dN,pN,mN,bN,wN,EI,kN,XT,EN,TN,NN,TI,_N,$N,FN,PN,VN,WN,jN,XN,ZN,QN,rA,sA,iA,aA,oA,lA,eA,hA,dA,mA,gA,vA,kA,WC,EA,TA,NA,MA,DA,$A,OA,PA,BA,HA,MI,GA,qA,BI,XA,RI,$I,ZI,ZA,QA,YA,JA,eM,tM,rM,aM,lM,uM,pM,mM,yM,vM,wM,LT,wA,EM,IM,TM,CM,AM,MM,DM,LM,OM,QC,cA,PM,{kernelName:Cr,backendName:"cpu",kernelFunc:BM},UM,WM,uT,jM,qM,KM,FA];for(const e of XM)jr(e);const ZM={},QM={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function YM(e){if(!(e in ZM)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete ZM[e]}),!1),1===e?t.getContext("webgl",QM)||t.getContext("experimental-webgl",QM):t.getContext("webgl2",QM)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;ZM[e]=t}const t=ZM[e];return t.isContextLost()?(delete ZM[e],YM(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),ZM[e])}var JM,e_,t_;function n_(e,t){return[t,e]}function r_(e){const t=ne(e);return oe(Math.ceil(t/4))}function s_(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function i_(e,t){const n=e;let r,s,i,a,o,l,u,c,h,d;return 2===Be().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,s=e.RGBA,i=e.RGBA,a=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function a_(e,t){const n=t();return Be().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(JM||(JM={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(e_||(e_={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(t_||(t_={}));const o_=5.96e-8,l_=65504;function u_(e){return!!(Be().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||o_<Math.abs(e)&&Math.abs(e)<l_)}function c_(e,t){return b_(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const h_=/ERROR: [0-9]+:([0-9]+):/g;function d_(e,t){if(a_(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function p_(e,t,n,r,s,i,a){const o=e.getAttribLocation(t,n);return-1!==o&&(a_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),a_(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,i,a))),a_(e,(()=>e.enableVertexAttribArray(o))),!0)}function f_(e,t,n,r){a_(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),a_(e,(()=>e.activeTexture(e.TEXTURE0+n))),a_(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),a_(e,(()=>e.uniform1i(n,r)))}function m_(e,t,n){a_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),a_(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function g_(e,t){a_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),a_(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function y_(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function b_(e,t,n){const r=a_(e,(()=>t()));if(null==r)throw new Error(n);return r}function v_(e,t=2){return ne(e.slice(0,e.length-t))}function x_(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function w_(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[v_(e),...x_(e)]),t}function k_(e){return e%2==0}function S_(e,t){if(se(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(k_(n)&&k_(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&k_(e[0])&&k_(t[0])}let E_,I_;function T_(e,t){return null!=e.getExtension(t)}function C_(e){try{if(null!=YM(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function N_(e){const t=i_(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function A_(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Y("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const M_=Be();function __(){let e,t,n,r,s,i,a,o,l,u;return 2===Be().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function R_(e,t,n="index"){const r=Ne(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function D_(e){const t=Ne(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}M_.registerFlag("HAS_WEBGL",(()=>M_.getNumber("WEBGL_VERSION")>0)),M_.registerFlag("WEBGL_VERSION",(()=>C_(2)?2:C_(1)?1:0)),M_.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),M_.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===M_.get("WEBGL_VERSION"))),M_.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),M_.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),M_.registerFlag("WEBGL_PACK",(()=>M_.getBool("HAS_WEBGL"))),M_.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>M_.getBool("WEBGL_PACK"))),M_.registerFlag("WEBGL_PACK_CLIP",(()=>M_.getBool("WEBGL_PACK"))),M_.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),M_.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>M_.getBool("WEBGL_PACK"))),M_.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>M_.getBool("WEBGL_PACK"))),M_.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>M_.getBool("WEBGL_PACK"))),M_.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>M_.getBool("WEBGL_PACK"))),M_.registerFlag("WEBGL_PACK_REDUCE",(()=>M_.getBool("WEBGL_PACK"))),M_.registerFlag("WEBGL_LAZILY_UNPACK",(()=>M_.getBool("WEBGL_PACK"))),M_.registerFlag("WEBGL_CONV_IM2COL",(()=>M_.getBool("WEBGL_PACK"))),M_.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==E_){const t=YM(e);E_=t.getParameter(t.MAX_TEXTURE_SIZE)}return E_}(M_.getNumber("WEBGL_VERSION")))),M_.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==I_){const t=YM(e);I_=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,I_)}(M_.getNumber("WEBGL_VERSION")))),M_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=M_.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=YM(e);return t=T_(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:T_(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),M_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>M_.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ps())),M_.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=YM(e);if(1===e){if(!T_(t,"OES_texture_float"))return!1}else if(!T_(t,"EXT_color_buffer_float"))return!1;return N_(t)}(M_.getNumber("WEBGL_VERSION")))),M_.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!M_.getBool("WEBGL_FORCE_F16_TEXTURES")&&M_.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),M_.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=YM(e);if(1!==e){if(T_(t,"EXT_color_buffer_float"))return N_(t);const e="EXT_color_buffer_half_float";if(T_(t,e)){const n=t.getExtension(e);return function(e,t){const n=i_(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),i}(t,n)}return!1}return!!T_(t,"OES_texture_float")&&!!T_(t,"WEBGL_color_buffer_float")&&N_(t)}(M_.getNumber("WEBGL_VERSION")))),M_.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=M_.getNumber("WEBGL_VERSION"))&&null!=YM(e).fenceSync;var e})),M_.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>M_.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),M_.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));const $_="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class L_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=JM.DENSE;const t=r_(e),n=__();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${R_(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class F_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=JM.DENSE;const t=r_(e),n=__();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${R_(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class O_{constructor(e){this.variableNames=["A"],this.outTexUsage=e_.DOWNLOAD;const t=__();this.outputShape=e,this.userCode=`\n      ${$_}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class z_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=e_.DOWNLOAD;const t=__();this.outputShape=e,this.userCode=`\n      ${$_}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class P_{constructor(e,t,n=!1){this.variableNames=["A"];const r=__(),[s,i]=t;this.outputShape=e;let a="result";n&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${D_(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class B_{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=__(),[s,i]=t;this.outputShape=e;let a="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${D_(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${a}\n\n        ${r.output} = ${o};\n      }\n    `}}function V_(e,t,n,r,s,i){!function(e,t){const n=Be().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const a=function(e){return b_(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return a_(e,(()=>e.bindTexture(o,a))),a_(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),a_(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),a_(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),a_(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),a_(e,(()=>e.texImage2D(o,0,r,t,n,0,s,i,null))),a_(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),a}function U_(e){return e.internalFormatFloat}function H_(e){return e.internalFormatHalfFloat}function W_(e){return e.downloadTextureFormat}function G_(e){return e.internalFormatPackedFloat}function j_(e){return e.internalFormatPackedHalfFloat}class q_{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Be().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){ZM[e]=t}(t,e)):this.gl=YM(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Be().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=c_(this.gl,e),T_(this.gl,t))this.textureHalfFloatExtension=c_(this.gl,t);else if(Be().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),T_(this.gl,r))this.colorBufferHalfFloatExtension=c_(this.gl,r);else if(Be().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",T_(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!T_(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=b_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return a_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),a_(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=b_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return a_(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),a_(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return b_(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=i_(this.gl,this.textureHalfFloatExtension)}get debug(){return Be().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;a_(e,(()=>e.finish())),a_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),a_(e,(()=>e.deleteFramebuffer(this.framebuffer))),a_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),a_(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),a_(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=n_(t,n);return V_(e,s,i,U_(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=n_(t,n);return V_(e,s,i,H_(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=n_(t,n);return V_(e,s,i,W_(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){a_(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?a_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):a_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),a_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,i){let a,o,l;a_(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(a=new Float32Array(n*r*4),o=e.FLOAT,l=i.internalFormatPackedFloat),a.set(s),a_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,a))),a_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=s_(t,n);return V_(e,s,i,j_(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=s_(t,n);return V_(e,s,i,G_(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(g_(this.gl,this.framebuffer),this.outputTexture=null),a_(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,i]=n_(t,n),a=new Uint8Array(t*n*4);return a_(e,(()=>e.readPixels(0,0,s,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,i){return function(e,t,n,r,s,i,a,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=s_(e,t);return n*r*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();a_(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const i=16*t*n;return a_(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ))),a_(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),a_(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Be().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return a_(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=b_(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(a_(e,(()=>e.shaderSource(n,t))),a_(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=h_.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),i=s.length.toString().length+2,a=s.map(((e,t)=>ue((t+1).toString(),i)+e));let o=0;for(let e=0;e<a.length;e++)o=Math.max(a[e].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ue(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),r=function(e){const t=__();return function(e,t){const n=b_(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(a_(e,(()=>e.shaderSource(n,t))),a_(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),s=function(e){return b_(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return a_(t,(()=>t.attachShader(s,r))),a_(t,(()=>t.attachShader(s,n))),function(e,t){if(a_(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,s),this.debug&&d_(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(e,t,n){return a_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),p_(e,t,"clipSpacePos",n,3,20,0)&&p_(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&a_(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&d_(this.gl,this.program),a_(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return b_(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),a_(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),f_(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=s_(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&d_(this.gl,this.program),y_(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),a_(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),a_(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=c_(this.gl,2===Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ce((()=>this.disposed||this.isQueryAvailable(e,Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ce((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),m_(this.gl,e,this.framebuffer),this.debug&&y_(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(m_(this.gl,this.outputTexture,this.framebuffer),this.debug&&y_(this.gl)):g_(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;m_(r,e,this.framebuffer),this.debug&&y_(r),this.outputTexture=e,a_(r,(()=>r.viewport(0,0,t,n))),a_(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),a_(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:K_}=g;function X_(e,t,n,r){const s=[];e.forEach((e=>{const t=ne(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))}));const i=s.join("\n"),a=e.map((e=>function(e,t,n=!1){let r="";r+=n?Q_(e):Z_(e);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,a=t.logicalShape.length,o=K_(e.shapeInfo.logicalShape,t.logicalShape),l=sR(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===ne(e.shapeInfo.logicalShape),m=1===ne(t.logicalShape);if(1!==i||f||m){if(f&&!m)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.texShape,a=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&se(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=sR(l),c=K_(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),o=t.texShape,l=__(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Y_}\n    ${J_}\n    ${eR}\n  `}(l);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(se(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let i=s,a="",o="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],a=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+a,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return se(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=R_(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=R_(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=R_(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=R_(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=tR),[d,u,h,i,c,a,n].join("\n")}function Z_(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[i,a]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${a}, ${nR(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${rR(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const a=nR(t);return 1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&se(t,s)){const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:a}=pe(t),o=i;if(o.length<t.length){const t=["row","col"];return`\n      ${Z_(iR(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${aR(t,a)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${rR(e)}\n      }\n    `;const l=s[0],u=s[1],c=nR(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],i=t[2],{newShape:a,keptDims:o}=pe(t),l=a;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${Z_(iR(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${aR(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${rR(e)}\n      }\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],d=e.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===i&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${nR(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],i=t[2]*s,a=t[1]*i,{newShape:o,keptDims:l}=pe(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${Z_(iR(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${aR(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${i}, ${s}, 1)));\n        ${rR(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],d=c[1];if(d===a&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${nR(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,a=t[2]*i,o=t[1]*a,{newShape:l,keptDims:u}=pe(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Z_(iR(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${aR(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${rR(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${nR(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=pe(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Z_(iR(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${aR(t,i)});\n      }\n    `}const a=t[5],o=t[4]*a,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${rR(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${nR(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Q_(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${__().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=__();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=s[0],a=s[1],o=__();if(null!=s&&se(t,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${Q_(iR(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${aR(s,n)});\n        }\n      `}const a=i[0],o=i[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${a}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${__().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=a[0],l=a[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],d=`b${e} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${__().texture2D}(${r}, uv);\n    }\n  `}(e)}}const Y_="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",J_="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",eR="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",tR="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function nR(e){return`offset${e}`}function rR(e){const t=e.name,n=ne(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function sR(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function iR(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function aR(e,t){return t.map((t=>e[t])).join(", ")}function oR(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],i=s.shape;if(!se(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const a=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!se(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}const{addImpl:lR,bincountImpl:uR,bincountReduceImpl:cR,ceilImpl:hR,concatImpl:dR,expImpl:pR,expm1Impl:fR,floorImpl:mR,gatherV2Impl:gR,greaterImpl:yR,lessImpl:bR,linSpaceImpl:vR,logImpl:xR,maxImpl:wR,maximumImpl:kR,minimumImpl:SR,multiplyImpl:ER,negImpl:IR,prodImpl:TR,rangeImpl:CR,rsqrtImpl:NR,simpleAbsImpl:AR,sliceImpl:MR,stridedSliceImpl:_R,subImpl:RR,tileImpl:DR,topKImpl:$R,transposeImpl:LR,uniqueImpl:FR}=U;function OR(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function zR(e,t){return 1===t?[e]:OR(e,t)}class PR{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=zR("rc",t),r=sR(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),i=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),a=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let i=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)i=`${t[t.length-1-n]},`+i;n.push(i)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}}class BR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${R_(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${D_(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class VR{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=HR(t,n),s=WR(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=UR(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let a;return r===t_.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===t_.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===t_.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===t_.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===t_.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=HR(n,r),i=WR(t,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=UR(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Be().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function UR(e,t,n,r,s){const i=function(e,t){switch(e){case t_.PACKED_2X2_FLOAT32:return G_(t);case t_.PACKED_2X2_FLOAT16:return j_(t);case t_.UNPACKED_FLOAT32:return U_(t);case t_.UNPACKED_FLOAT16:return H_(t);case t_.PACKED_4X1_UNSIGNED_BYTE:return W_(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let a;if(s){const[t,n]=s_(e[0],e[1]);a=t*n}else{const[t,n]=n_(e[0],e[1]);a=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,i);return a*o}function HR(e,t){if(e===e_.UPLOAD)return t_.PACKED_2X2_FLOAT32;if(e===e_.RENDER||null==e)return function(e){return Be().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?t_.PACKED_2X2_FLOAT32:t_.UNPACKED_FLOAT32:e?t_.PACKED_2X2_FLOAT16:t_.UNPACKED_FLOAT16}(t);if(e===e_.DOWNLOAD||e===e_.PIXELS)return t_.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function WR(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class GR{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const jR="if (isnan(x)) return x;",qR="return x;",KR="return abs(x);",XR="return (x >= 0.0) ? x : (exp(x) - 1.0);",ZR=jR+"\n  return (x < 0.0) ? 0.0 : x;\n",QR=jR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",YR="return x;",JR="return x;",eD="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",tD="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",nD="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";class rD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class sD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=zR("rc",t),r=sR(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const iD=kh,aD={};class oD extends W{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Be().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=YM(Be().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Be().getNumber("WEBGL_VERSION"))in aD||(aD[t]={}),aD[t]),this.gpgpu=new q_(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new VR(this.gpgpu),this.numMBBeforeWarning=null==Be().global.screen?1024:Be().global.screen.height*Be().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new H(this,ao())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Be().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Be().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:e_.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}decComplexRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,n,r){if(Be().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:e_.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:a,isPacked:o}=t;if(null!=i){let t;t=o?new rD(a,YR):new GR(a,YR);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=hs()),c="complex64"===r?yp(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=hs()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:a,isPacked:o}=t;if(null!=s){let t;t=o?new rD(r,YR):new GR(r,YR);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Be().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Be().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&Be().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...r_(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=yp(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=ne(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>fs(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Wi(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!u_(n)){if(Be().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=ne(t);if(Be().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...r_(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=Be().getBool("WEBGL_PACK")&&!0===r,a=i?w_(t):t,o=i?new z_(a):new O_(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=te(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=te(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);a.kernelMs=X(e),a.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:hs(),endMs:null}}endTimer(e){return Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=hs(),e)}async getQueryTime(e){if(Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Be().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=ao().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return Be().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&ne(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){mp("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return iD(e.shape,t)}packedUnaryOp(e,t,n){const r=new rD(e.shape,t);return this.compileAndRun(r,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=AR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Be().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,KR,e.dtype);const t=new GR(e.shape,KR);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ke(n[0])){const s=n.map((e=>ps(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return ao().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new sD(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new PR(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[v_(e.shape),...x_(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[v_(t),...x_(t)],i=new BR(s,n),a=this.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:a.dataId,shape:t,dtype:a.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,i=w_(r);let a;return a=n?new F_(i):new L_(i),{dtype:s,shape:r,dataId:this.runWebGLProgram(a,[{shape:i,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,s=!1){const i=this.makeTensorInfo(e.outputShape,n),a=this.texData.get(i.dataId);if(e.packedOutput&&(a.isPacked=!0),e.outPackingScheme===JM.DENSE){const t=r_(e.outputShape);a.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(a.usage=e.outTexUsage),0===ne(i.shape))return a.values=fe(i.dtype,0),i;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ne(t.shape)<=Be().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!S_(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const u={shape:i.shape,texData:a,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const s=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+s,i}(e,l,u),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const s=t.userCode,i=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=i.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=X_(i,o,s,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===Be().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],s=!1;d[r]=e.getUniformLocation(u,r,s),d[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,s)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,l,u))),d=null!=this.activeTimers;let p;if(d&&(p=this.startTimer()),function(e,t,n,r,s){oR(t.inShapeInfos,n),oR([t.outShapeInfo],[r]);const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i,a[0],a[1]):e.setOutputMatrixTexture(i,a[0],a[1]),e.setProgram(t.webGLProgram),1===Be().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],i=t.uniformLocations[s],a=t.uniformLocations[`offset${s}`];if(null!=i)if(n.isUniform)if(ne(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=a&&e.gl.uniform1i(a,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,r)})),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)})),!Be().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;const i=this.runWebGLProgram(e,t,n,r,s);return ao().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Be().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=uo((()=>{if(!Be().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Be().getBool("DEBUG");Be().set("DEBUG",!1);const t=this.abs(Oo(1e-8)).dataSync()[0];if(Be().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=t;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=hs());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Be().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?K(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=pe(e);e=t.newShape}let r=ne(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=v_(e);let n=2,s=2;return e.length&&([n,s]=x_(e)),r=t*(n/2)*(s/2),oe(r).map((e=>2*e))}return oe(r)}(n,o),t.texShape=c),null!=s){const e=w_(n);let i,a=c[1],h=c[0];const d=s instanceof Uint8Array;o?([a,h]=s_(c[0],c[1]),i=new B_(e,[h,a],d)):i=new P_(e,[h,a],d);const p=this.makeTensorInfo([h,a],r);this.texData.get(p.dataId).usage=d?e_.PIXELS:e_.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),a,h,s);const f=!0,m=this.runWebGLProgram(i,[p],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),t.values=null,l&&(this.uploadWaitMs+=hs()-u)}else{const e=this.acquireTexture(c,a,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*xe(t)}}Bs()&&xo("webgl",(()=>new oD),2);const lD="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class uD{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Ko(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const cD="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class hD{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ko(t,n);const s=this.outputShape.length;let i="";if(r)if(0===s||1===ne(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${sR(s)} coords = getOutputCoords();\n        `,1===s)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=zR("coords",s);i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function dD(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const pD={kernelName:nn,backendName:"webgl",kernelFunc:dD};function fD(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(i.dataId),o=dD({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const l=dD({inputs:{x:s},backend:n});return n.texData.get(l.dataId).complexParentRefCount++,a.complexTensorInfos={real:o,imag:l},i}const mD={kernelName:gt,backendName:"webgl",kernelFunc:fD},gD="return (a < 0.) ? b * a : a;",yD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",bD={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r,a=n.makeTensorInfo([],"float32",us(i,"float32")),o=Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hD(yD,s.shape,a.shape):new uD(gD,s.shape,a.shape),l=n.runWebGLProgram(o,[s,a],s.dtype);return n.disposeIntermediateTensorInfo(a),l}},vD="return (a < 0.) ? b * a : a;",xD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",wD={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,i=Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hD(xD,r.shape,s.shape):new uD(vD,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},kD="if (isnan(x)) return x;";function SD({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:a}=s,o=i,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const e=o.texData.get(a.dataId),t=n(e.values,l);return o.makeTensorInfo(a.shape,l,t)}let u;return u=Be().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new rD(a.shape,t):new GR(a.shape,e),o.runWebGLProgram(u,[a],l)}}function ED({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new uD(e,l.shape,u.shape);return c.runWebGLProgram(a,[s,i],Cs(n.dtype,r.dtype))})),i=fD({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),i}const h=i||Cs(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=s){const e=c.texData.get(l.dataId),t=c.texData.get(u.dataId),[n,r]=s(l.shape,u.shape,e.values,t.values,h),i=c.makeTensorInfo(r,h);return c.texData.get(i.dataId).values=n,i}let d;return d=Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new hD(t,l.shape,u.shape,n):new uD(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function ID(e,t=!1){if("linear"===e)return t?JR:qR;if("relu"===e)return t?tD:ZR;if("elu"===e)return t?eD:XR;if("relu6"===e)return t?nD:QR;if("prelu"===e)return t?xD:vD;if("leakyrelu"===e)return t?yD:gD;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class TD{constructor(e,t,n,r=!1,s=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${v};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const CD={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class ND{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ko(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const AD="return a * b;";function MD(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=Cs(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),i=new ND(CD.REAL,r.shape,s.shape),a=new ND(CD.IMAG,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=fD({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,o]=ER(r.shape,s.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let a;return a=Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hD(AD,r.shape,s.shape):new uD(AD,r.shape,s.shape),n.runWebGLProgram(a,[r,s],i)}const _D={kernelName:$n,backendName:"webgl",kernelFunc:MD};function RD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=n,o=ne(s.shape),l=he(i,o),u=ne(l);Y(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(s.dataId);return!c.isPacked||S_(s.shape,l)||null!==c.texture&&S_(c.shape,l)?(a.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[v_(e.shape),...x_(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},i=[v_(t),...x_(t)],a=new BR(i,r),o=n.runWebGLProgram(a,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,l,a)}const DD={kernelName:Yn,backendName:"webgl",kernelFunc:RD};class $D{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${ie(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class LD{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function FD(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=ep(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let c,h;c="mean"===n?0===a?new $D({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new $D({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new LD({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=i,i=r.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return i}class OD{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=sR(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class zD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=sR(this.rank),s=OR("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=s[e];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function PD(e,t,n){const r=Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zD(e.shape,t):new OD(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function BD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;return function(e,t,n,r){const s=t,i=e.shape.length,a=de(s,e.shape);let o=a;const l=Wu(o,i),u=null!=l;let c=e;u&&(c=PD(e,l,r),o=ju(o.length,i)),Hu("sum",o,i);const[h,d]=Vu(c.shape,o);let p=h;n&&(p=Uu(h,a));const f=ne(d),m=RD({inputs:{x:c},attrs:{shape:[ne(e.shape)/f,f]},backend:r}),g=FD(m,Ns(e.dtype),"sum",r),y=RD({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(s,i,a,n)}const VD={kernelName:yr,backendName:"webgl",kernelFunc:BD};function UD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:i}=r,a=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[i[e]];let u;if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,t=LR(e,s.shape,s.dtype,i,l);u=a.makeTensorInfo(l,s.dtype),a.texData.get(u.dataId).values=t}else u=PD(s,i,a);return u}const HD={kernelName:Mr,backendName:"webgl",kernelFunc:UD},WD=1e3;function GD({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ne(m),b=ne(g);Y(u>=2&&c>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const v=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);Y(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=n?[y,h,p]:[y,p,h],w=r?[b,f,d]:[b,d,f],k=RD({inputs:{x:e},backend:s,attrs:{shape:x}}),S=RD({inputs:{x:t},backend:s,attrs:{shape:w}}),E=[k,S],I=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=i,N=null!=a,A="leakyrelu"===l,M=null!=l?ID(l,!0):null;let _;if((1===p||1===f)&&T>WD&&!1===(C||N||A||null!=M)){let e=k,t=S;n&&(e=UD({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),E.push(e)),r&&(t=UD({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),E.push(t));const i=1===f;let a=e;1!==f&&(a=RD({inputs:{x:e},backend:s,attrs:{shape:[I,T,1]}}),E.push(a));const o=1===f?2:1;let l=t;i&&(l=RD({inputs:{x:t},backend:s,attrs:{shape:[I,1,T]}}),E.push(l));const u=MD({inputs:{a,b:l},backend:s});_=BD({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),E.push(u)}else{const l=Cs(e.dtype,t.dtype),u=new TD(x,w,[I,p,f],n,r,C,M,N,A),c=[k,S];if(null!=i&&c.push(i),N&&c.push(a),A){const e=s.makeTensorInfo([],"float32",us(o,"float32"));c.push(e),E.push(e)}_=s.runWebGLProgram(u,c,l)}const R=RD({inputs:{x:_},backend:s,attrs:{shape:v}});E.push(_);for(const e of E)s.disposeIntermediateTensorInfo(e);return R}const jD={kernelName:zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return GD({a:s,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},qD="return abs(x);",KD={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=AR(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Be().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new rD(r.shape,qD):new GR(r.shape,qD),n.runWebGLProgram(s,[r],r.dtype)}},XD=SD({opSnippet:jR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ZD={kernelName:je,backendName:"webgl",kernelFunc:XD},QD=SD({opSnippet:jR+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),YD={kernelName:qe,backendName:"webgl",kernelFunc:QD},JD="return a + b;",e$=ED({opSnippet:JD,packedOpSnippet:JD,supportsComplex:!0,cpuKernelImpl:lR}),t$={kernelName:Ke,backendName:"webgl",kernelFunc:e$};class n${constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class r${constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const s$={kernelName:Xe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return dD({inputs:{x:s[0]},backend:r});if(s.length>Be().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),i=e({inputs:s.slice(t),backend:r});return e({inputs:[n,i],backend:r})}const i=s.map((e=>e.dtype)).reduce(((e,t)=>Cs(e,t))),a=s.map((e=>e.shape)),o=Be().getBool("WEBGL_PACK")?new r$(s[0].shape,a):new n$(s[0].shape,a);return r.runWebGLProgram(o,s,i)}},i$={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=de(i,s.shape);let u=l;const c=Wu(u,o);let h=s;null!=c&&(h=UD({inputs:{x:s},backend:n,attrs:{perm:c}}),u=ju(u.length,o)),Hu("all",u,o);const[d,p]=Vu(h.shape,u),f=RD({inputs:{x:h},backend:n,attrs:{shape:[-1,ne(p)]}}),m=FD(f,f.dtype,"all",n);let g;return g=RD(a?{inputs:{x:m},backend:n,attrs:{shape:Uu(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},a$={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=de(i,s.shape);let u=l;const c=Wu(u,o);let h=s;null!=c&&(h=UD({inputs:{x:s},backend:n,attrs:{perm:c}}),u=ju(u.length,o)),Hu("any",u,o);const[d,p]=Vu(h.shape,u),f=RD({inputs:{x:h},backend:n,attrs:{shape:[-1,ne(p)]}}),m=FD(f,f.dtype,"any",n);let g;return g=RD(a?{inputs:{x:m},backend:n,attrs:{shape:Uu(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class o${constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class l${constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Y(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=sR(o),u=zR("coords",o);let c,h;if(1===i){h=o+1;const e=sR(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=zR("sourceLocR",h-1).concat("inIdx.r"),g=zR("sourceLocG",h-1).concat("inIdx.g"),y=zR("sourceLocB",h-1).concat("inIdx.b"),b=zR("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function u$(e,t,n,r=null){let s=t.shape[0],i=t.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const a=ep(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},l=new o$(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=u$(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function c$(e,t,n,r=null){const s=null!=r?r.shape:t.shape,i=ep(s[s.length-1]),a=new l$(s,i,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(a,o,"int32");if(l.shape.length===t.shape.length){const r=c$(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function h$(e,t,n,r){const s=[n];if(Hu("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Be().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[i,a]=Vu(t.shape,s),o=ne(a),l=RD({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);const u=u$(e,l,r);n.push(u);const c=RD({inputs:{x:u},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return c$(e,t,r)}const d$={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=de(i,s.shape);const o=Wu(a,s.shape.length);let l=s;const u=[];null!=o&&(l=UD({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=ju(a.length,l.shape.length)),Hu("argMax",[a[0]],l.shape.length);const c=h$(n,l,a[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},p$={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=de(i,s.shape);const o=Wu(a,s.shape.length);let l=s;const u=[];null!=o&&(l=UD({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=ju(a.length,l.shape.length)),Hu("argMin",[a[0]],l.shape.length);const c=h$(n,l,a[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},f$=SD({opSnippet:jR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),m$={kernelName:et,backendName:"webgl",kernelFunc:f$},g$=SD({opSnippet:jR+"return log(x + sqrt(x * x + 1.0));"}),y$={kernelName:tt,backendName:"webgl",kernelFunc:g$},b$=SD({opSnippet:jR+"\n  return atan(x);\n"}),v$={kernelName:nt,backendName:"webgl",kernelFunc:b$},x$=ED({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),w$={kernelName:st,backendName:"webgl",kernelFunc:x$},k$=SD({opSnippet:jR+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),S$={kernelName:rt,backendName:"webgl",kernelFunc:k$};class E${constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const v=4*Math.floor(i/4),x=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class I${constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const w=4*Math.floor(i/4),k=i%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}}const T$={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;A_(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;Y(Sl(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=pl(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&se(u.inShape,u.outShape))return dD({inputs:{x:s},backend:n});const c=new E$(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},C$={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=fl(s.shape,i,a,[1,1,1],o,l,u),h=new I$(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class N${constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class A${constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const M$={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=fl(a.shape,o,l,[1,1,1],u,c),d=new A$(h);return n.runWebGLProgram(d,[s],a.dtype)}},_$={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;A_([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=pl(a.shape,o,l,1,u),h=new N$(c);return n.runWebGLProgram(h,[s],a.dtype)}},R$={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;return GD({a:s,b:i,transposeA:a,transposeB:o,backend:n})}};class D${constructor(e,t,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ko(e,t),Ko(e,n);let a="0.0";null!=r&&(Ko(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Ko(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class $${constructor(e,t,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ko(e,t),Ko(e,n);let a="vec4(0.0)";null!=r&&(Ko(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Ko(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const L$={kernelName:Qt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=e;Y(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==a||s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,i];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=Be().getBool("WEBGL_PACK_NORMALIZATION")?new $$(r.shape,s.shape,i.shape,c,h,l):new D$(r.shape,s.shape,i.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class F${constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=sR(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return O$.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${O$[t]} = start[${t}] + coords.${O$[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const O$=["x","y","z","w","u","v"];class z${constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=sR(this.rank),n=zR("coords",this.rank),r=zR("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function P$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r,[o,l]=Oa(s,i,a);if(Sa(s,o,l),0===ne(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=MR(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=La(s.shape,o,l);if(u||!c){const e=Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new z$(l):new F$(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.complexParentRefCount=0,a.refCount=1,a.shape=n,a.dtype=e.dtype;let o=Fa(t,Ne(e.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),i}(s,o,l,n)}const B$={kernelName:cr,backendName:"webgl",kernelFunc:P$},V$={kernelName:ct,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;Y(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=np(s.shape,i,o),u=rp(l.length,i.length),c=sp(s.shape,i,o),h=ip(a,i.length),d=ap(c,a,i.length),p=[],f=RD({inputs:{x:s},backend:n,attrs:{shape:l}}),m=UD({inputs:{x:f},backend:n,attrs:{perm:u}}),g=RD({inputs:{x:m},backend:n,attrs:{shape:c}}),y=P$({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},U$={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=n.readSync(s.dataId),l=n.readSync(i.dataId),u=uR(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}},H$=ED({opSnippet:"return float(a != b);",dtype:"bool"}),W$={kernelName:Fn,backendName:"webgl",kernelFunc:H$};function G$(e){const{inputs:t,backend:n}=e,{input:r}=t;return dD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const j$={kernelName:Xn,backendName:"webgl",kernelFunc:G$},q$={kernelName:pt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:i}=n,{dtype:a}=s;if("complex64"===a){if("complex64"===i.dtype)return dD({inputs:{x:i},backend:r});const t=cc(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=fD({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const t=G$({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(t),n}if(!be(i.dtype,a)){const e=dD({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a)return function(e,t){const n=new GR(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===a){const e=r.makeTensorInfo([],"bool",fe("bool",1)),t=H$({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},K$="return ceil(x);",X$=SD({opSnippet:K$,packedOpSnippet:K$,cpuKernelImpl:hR}),Z$={kernelName:ft,backendName:"webgl",kernelFunc:X$};class Q${constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class Y${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const J$={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:i,clipValueMax:a}=r;let o;o=Be().getBool("WEBGL_PACK_CLIP")?new Y$(s.shape):new Q$(s.shape);const l=o.getCustomSetupFunc(i,a);return n.runWebGLProgram(o,[s],s.dtype,l)}};class eL{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function tL(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const nL={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),i=new eL(r.shape),a=[tL(r,s.complexTensorInfos.real),tL(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}};class rL{constructor(e){this.outputShape=[],this.outputShape=Yd(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class sL{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Yd(e,t);const n=this.outputShape,r=n.length,s=sR(r),i=zR("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=a[t],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${iL(a,l,t)}),\n            vec2(${iL(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${iL(a,l,p)}),\n          vec2(${iL(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function iL(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function aL(e){const{inputs:t,backend:n}=e,{input:r}=t;return dD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const oL={kernelName:sn,backendName:"webgl",kernelFunc:aL};function lL(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>G$({inputs:{input:e},backend:n}))),s=e.map((e=>aL({inputs:{input:e},backend:n}))),i=lL(r,t,n),a=lL(s,t,n),o=fD({inputs:{real:i,imag:a},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}if("string"===r){const{tensors2D:s,outShape:i}=uL(e,t,n),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=1===s[0].shape[0],l=dR(a,i,r,o),u=Yd(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Be().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=lL(e.slice(0,r),t,n),i=lL(e.slice(r),t,n),a=lL([s,i],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}if(Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new sL(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:s,outShape:i}=uL(e,t,n),a=new rL(s.map((e=>e.shape))),o=n.runWebGLProgram(a,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=RD({inputs:{x:o},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(o),l}function uL(e,t,n){const r=Yd(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>RD({inputs:{x:e},attrs:{shape:[-1,ne(e.shape.slice(t))]},backend:n}))),outShape:r}}function cL(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=de(s,t[0].shape)[0],a=Yd(t.map((e=>e.shape)),i);if(0===ne(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter((e=>ne(e.shape)>0));return 1===o.length?dD({inputs:{x:o[0]},backend:n}):(Qd(o.map((e=>e.shape)),i),lL(o,i,n))}const hL={kernelName:bt,backendName:"webgl",kernelFunc:cL};class dL{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class pL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fL{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:i,strideHeight:a,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,m=__(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let v="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)v+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${a} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${i}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${v}\n\n        ${m.output} = result;\n      }\n    `}}function mL({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===d)&&c>WD,y=l[2]%2!=0&&!!u.isPacked;if(!g&&Be().getBool("WEBGL_LAZILY_UNPACK")&&Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=p?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,Y(S_(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const g=RD({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const y=GD({a:h,b:g,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),b=r.texData.get(y.dataId);Y(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,b.shape=n.outShape,f=dD({inputs:{x:y},backend:r}),f.shape=n.outShape,m.push(y)}else{const u=RD({inputs:{x:e},backend:r,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=RD({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=GD({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a});f=RD({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function gL({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,y=[m,g],b=[],v=RD({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),x=RD({inputs:{x:t},backend:r,attrs:{shape:[1,m,ne(t.shape)/m]}});b.push(v),b.push(x);const w=new fL(y,v.shape,n),k=r.runWebGLProgram(w,[v],"float32"),S=RD({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(k),b.push(S);const E=null!=s,I=null!=i,T="leakyrelu"===o,C=o?ID(o,!0):null,N=new TD(S.shape,x.shape,[1,g,n.outChannels],!0,!1,E,C,I,T),A=[S,x];if(s&&A.push(s),I&&A.push(i),T){const e=r.makeTensorInfo([],"float32",us(a,"float32"));A.push(e),b.push(e)}const M=r.runWebGLProgram(N,A,"float32"),_=RD({inputs:{x:M},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});b.push(M);for(const e of b)r.disposeIntermediateTensorInfo(e);return _}const yL={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=El(l),d=ml(s.shape,i.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(Be().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=gL({x:s,filter:i,convInfo:d,backend:n});else{const e=new dL(d);p=n.runWebGLProgram(e,[s,i],"float32")}else p=mL({x:s,filter:i,convInfo:d,backend:n});const f=RD({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class bL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const kL={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=El(l),d=ml(s.shape,c,a,1,o,u,!1,h),p=new bL(d);return n.runWebGLProgram(p,[s,i],"float32")}},SL={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=El(u),d=ml(a,i.shape,o,1,l,c,!1,h),p=new vL(d);return n.runWebGLProgram(p,[s,i],"float32")}},EL={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=gl(s.shape,i.shape,a,l,o),c=new pL(u);return n.runWebGLProgram(c,[s,i],"float32")}},IL={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:l}=r,u=gl(s.shape,l,a,1,o),c=new xL(u);return n.runWebGLProgram(c,[s,i],"float32")}},TL={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:l}=r,u=gl(l,i.shape,o,1,a),c=new wL(u);return n.runWebGLProgram(c,[s,i],"float32")}},CL=SD({opSnippet:kD+"\n  return cos(x);\n"}),NL={kernelName:It,backendName:"webgl",kernelFunc:CL},AL=SD({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),ML={kernelName:Tt,backendName:"webgl",kernelFunc:AL};class _L{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,v,x]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const RL={kernelName:Nt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new _L(s.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[s,i,a],"float32")}};class DL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${$L(r,"coords")})`,i=e[e.length-1];let a="",o="";t?(a=n?"end != "+(i-1):"end != 0",o=n?"end + 1":"end - 1"):(a=n?`end + pow2 < ${i}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${sR(r)} coords = getOutputCoords();\n        int end = ${LL(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${a}) {\n          int idx = ${o};\n          ${LL(r,"coords")} = idx;\n          val += getX(${$L(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function $L(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function LL(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const FL={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r,l=s.shape.length,u=Wu([i],l);let c=s;null!=u&&(c=UD({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=ju(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${i}`);const d=c.shape[h];let p=dD({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new DL(c.shape,!1,o),r=t.getCustomSetupFunc(e),s=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(a){const e=new DL(c.shape,a,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=UD({inputs:{x:p},backend:n,attrs:{perm:Gu(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},OL={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(i.dataId),r=uR(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(i),r=cR(e,t,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class zL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const PL={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r;Y(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const o=s.shape[0],l="NHWC"===a?s.shape[1]:s.shape[2],u="NHWC"===a?s.shape[2]:s.shape[3],c="NHWC"===a?s.shape[3]:s.shape[1],h=l*i,d=u*i,p=c/(i*i),f=new zL("NHWC"===a?[o,h,d,p]:[o,p,h,d],i,a);return n.runWebGLProgram(f,[s],s.dtype)}};class BL{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.inHeight,a=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${i}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class VL{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const i=e.inHeight,a=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let e=0;e<p;e++)for(let t=0;t<f;t++)g+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<p;e++)for(let t=0;t<m;t++){const n=2*t;if(g+=`\n          xR = xRCorner + ${e*h};\n          xC = xCCorner + ${n*d};\n        `,1===c){if(n<f&&(g+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${i} && xC >= 0 && xC < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<f)){const t=l%2==0?K(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(g+=`\n                  xCOffset = xC + ${l%2} + ${t};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${i} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${i}) {\n            `,l%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<p;e++)for(let t=0;t<f;t++)g+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let y="",b="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${v}\n        ${b}\n        setOutput(result);\n      }\n    `}}const UL={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),Y(Sl(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=ml(s.shape,i.shape,a,c,o,u,!0);let d;return d=Be().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new VL(h):new BL(h),n.runWebGLProgram(d,[s,i],"float32")}};class HL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const GL={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=ml(s.shape,c,a,o,l,u,!0),d=new HL(h);return n.runWebGLProgram(d,[s,i],"float32")}},jL={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=ml(c,i.shape,a,o,l,u,!0),d=new WL(h);return n.runWebGLProgram(d,[s,i],"float32")}};class qL{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const KL={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],i=ne(r.shape),a=RD({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new qL(i),l=n.runWebGLProgram(o,[a],a.dtype),u=RD({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class XL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const ZL={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=dl(s.shape,i.shape,a,o,"NHWC",l);let c;const h=new XL(u);c=n.runWebGLProgram(h,[s,i],"float32");const d=RD({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},QL=SD({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),YL={kernelName:Pt,backendName:"webgl",kernelFunc:QL},JL={kernelName:Bt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,i=Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new uD("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},eF=ED({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),tF={kernelName:Ut,backendName:"webgl",kernelFunc:eF},nF=SD({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${up};\n  float a1 = ${cp};\n  float a2 = ${hp};\n  float a3 = ${dp};\n  float a4 = ${pp};\n  float a5 = ${fp};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),rF={kernelName:Vt,backendName:"webgl",kernelFunc:nF},sF="return exp(x);",iF=SD({opSnippet:sF,packedOpSnippet:sF,cpuKernelImpl:pR}),aF={kernelName:Ht,backendName:"webgl",kernelFunc:iF};function oF(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:i}=t,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(Y(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+s+1),o.splice(l,0,1),RD({inputs:{x:i},backend:r,attrs:{shape:o}})}const lF={kernelName:Wt,backendName:"webgl",kernelFunc:oF},uF="return exp(x) - 1.0;",cF=SD({opSnippet:uF,packedOpSnippet:uF,cpuKernelImpl:fR}),hF={kernelName:Gt,backendName:"webgl",kernelFunc:cF};class dF{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function pF(e,t,n){const r=n.texData.get(e.dataId),s=ne(e.shape),i=e.shape[e.shape.length-1],a=RD({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),o=a.shape,l=new dF("real",o,t),u=new dF("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=fD({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=RD({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const fF={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return pF(r,!1,n)}};class mF{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function gF(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||Ie(s),"string"===i){const e=me(i,ne(r));return e.fill(s),t.makeTensorInfo(r,i,e)}{const e=new mF(r,s),n=e.getCustomSetupFunc(s);return t.runWebGLProgram(e,[],i,n)}}const yF={kernelName:qt,backendName:"webgl",kernelFunc:gF};class bF{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const vF={kernelName:Kt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new bF(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},xF="return floor(x);",wF=SD({opSnippet:xF,packedOpSnippet:xF,cpuKernelImpl:mR}),kF={kernelName:Xt,backendName:"webgl",kernelFunc:wF},SF=ED({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),EF={kernelName:Zt,backendName:"webgl",kernelFunc:SF};class IF{constructor(e){this.variableNames=["A"];const t=__(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class TF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=__(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const CF={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:i}=r,a="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,l="undefined"!=typeof ImageBitmap&&s instanceof ImageBitmap,[u,c]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[c,u],d=[c,u,i];(o||a||l)&&(null==NF&&(NF=document.createElement("canvas").getContext("2d")),NF.canvas.width=u,NF.canvas.height=c,NF.drawImage(s,0,0,u,c),s=NF.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=e_.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=Be().getBool("WEBGL_PACK")?new TF(d):new IF(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let NF;const AF={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=El(c),g=ml(s.shape,i.shape,l,h,u,d,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Be().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=gL({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=a,t=null!=o,r="leakyrelu"===p,l=p?ID(p,!1):null,u=new dL(g,e,l,t,r),c=[s,i];if(a&&c.push(a),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",us(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(u,c,"float32")}else y=mL({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const v=RD({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},MF={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),Y(Sl(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=ml(s.shape,i.shape,l,m,u,h,!0),y=Be().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?ID(d,y):null,v=[s,i],x=null!=a,w=null!=o,k="leakyrelu"===d;if(x&&v.push(a),w&&v.push(o),k){const e=n.makeTensorInfo([],"float32",us(p,"float32"));v.push(e),f.push(e)}let S;S=y?new VL(g,x,b,w,k):new BL(g,x,b,w,k);const E=n.runWebGLProgram(S,v,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),E}};class _F{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=sR(t.length),s=sR(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const RF={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=s.shape,a=i[i.length-1],[o,l,u,c]=va(r,s),h=RD({inputs:{x:s},backend:n,attrs:{shape:[l,a]}}),d=RD({inputs:{x:r},backend:n,attrs:{shape:[ne(r.shape)/u,u]}}),p=new _F(a,c,[l,u]),f=n.runWebGLProgram(p,[d,h],d.dtype),m=RD({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};class DF{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=sR(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const $F={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r,l=Np(s,i,de(a,s.shape)[0],o),u=ne(i.shape),c=[],h=RD({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=RD({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(h),r=gR(t,e,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const f=new DF(h.shape,p),m=n.runWebGLProgram(f,[h,d],h.dtype);c.push(m);const g=RD({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},LF=ED({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:yR,dtype:"bool"}),FF={kernelName:en,backendName:"webgl",kernelFunc:LF},OF=ED({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),zF={kernelName:tn,backendName:"webgl",kernelFunc:OF},PF={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return pF(r,!0,n)}},BF=SD({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),VF={kernelName:an,backendName:"webgl",kernelFunc:BF},UF=SD({opSnippet:"return float(isinf(x));",dtype:"bool"}),HF={kernelName:on,backendName:"webgl",kernelFunc:UF},WF=SD({opSnippet:"return float(isnan(x));",dtype:"bool"}),GF={kernelName:ln,backendName:"webgl",kernelFunc:WF},jF=ED({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:bR,dtype:"bool"}),qF={kernelName:cn,backendName:"webgl",kernelFunc:jF},KF=ED({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),XF={kernelName:hn,backendName:"webgl",kernelFunc:KF},ZF={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=vR(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}},QF=SD({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:xR}),YF={kernelName:pn,backendName:"webgl",kernelFunc:QF},JF=SD({opSnippet:"return log(1.0 + x);"}),eO={kernelName:fn,backendName:"webgl",kernelFunc:JF},tO=ED({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),nO={kernelName:mn,backendName:"webgl",kernelFunc:tO},rO=SD({opSnippet:"return float(!(x >= 1.0));"}),sO={kernelName:gn,backendName:"webgl",kernelFunc:rO},iO=ED({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),aO={kernelName:yn,backendName:"webgl",kernelFunc:iO};class oO{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class lO{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const uO={kernelName:vn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=r,u=Be().getBool("WEBGL_PACK_NORMALIZATION")?new lO(s.shape,i,a,o,l):new oO(s.shape,i,a,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class cO{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const hO={kernelName:xn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new cO(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,i,a],s.dtype)}};function dO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,l=de(i,s.shape);let u=l;const c=Wu(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=LR(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=PD(s,c,n);u=ju(u.length,o)}Hu("max",u,o);const[f,m]=Vu(p.shape,u);let g,y=f;if(a&&(y=Uu(f,l)),d){const e=n.texData.get(p.dataId).values,t=wR(e,ne(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=ne(t),i=RD({inputs:{x:e},attrs:{shape:[ne(e.shape)/s,s]},backend:r}),a=FD(i,e.dtype,"max",r),o=RD({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const pO={kernelName:wn,backendName:"webgl",kernelFunc:dO},fO=ED({opSnippet:lD+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+cD+"\n  return result;\n",cpuKernelImpl:kR}),mO={kernelName:kn,backendName:"webgl",kernelFunc:fO},gO={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;A_(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;Y(Sl(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=pl(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&se(u.inShape,u.outShape))return dD({inputs:{x:s},backend:n});const c=new E$(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},yO={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=fl(s.shape,i,a,[1,1,1],o,u,l),h=new I$(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class bO{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,o=i-1-e.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vO{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const xO={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=fl(a.shape,o,l,[1,1,1],u,c),d=new I$(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new vO(h),m=n.runWebGLProgram(f,[s,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}},wO={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;A_([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=pl(o.shape,l,u,1,c,h),p=new E$(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new bO(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},kO={kernelName:Cn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;Y(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];Y(Sl(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=pl(r.shape,s,i,u,a),[h,d]=function(e,t,n,r){let s=new E$(n,"max",!1);const i=r.runWebGLProgram(s,[e],"float32");return s=new E$(n,"max",!0,!0,t),[i,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,d]}},SO={kernelName:Nn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:i}=t,a=n,o=r.shape.length,l=de(i,r.shape);let u=l;const c=Wu(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=a.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=LR(e,r.shape,r.dtype,c,t);f=a.makeTensorInfo(t,r.dtype),a.texData.get(f.dataId).values=n}else f=PD(r,c,a);p.push(f),u=ju(u.length,o)}Hu("sum",u,o);const[m,g]=Vu(f.shape,u);let y=m;s&&(y=Uu(m,l));const b=function(e,t,n,r){const s=ne(t),i=RD({inputs:{x:e},attrs:{shape:[ne(e.shape)/s,s]},backend:r}),a=FD(i,"float32","mean",r),o=RD({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(f,g,y,a);for(const e of p)a.disposeIntermediateTensorInfo(e);return b}},EO={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=de(i,s.shape);let u=l;const c=Wu(u,o);let h=s;null!=c&&(h=UD({inputs:{x:s},backend:n,attrs:{perm:c}}),u=ju(u.length,s.shape.length)),Hu("min",u,o);const[d,p]=Vu(h.shape,u),f=RD({inputs:{x:h},backend:n,attrs:{shape:[-1,ne(p)]}}),m=FD(f,f.dtype,"min",n);let g;return g=RD(a?{inputs:{x:m},backend:n,attrs:{shape:Uu(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},IO=ED({opSnippet:lD+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+cD+"\n  return result;\n",cpuKernelImpl:SR}),TO={kernelName:Mn,backendName:"webgl",kernelFunc:IO};class CO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=sR(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class NO{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=sR(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=zR("rc",r),l=zR("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const AO={kernelName:_n,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:i}=n,a=Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NO(r.shape,s,i):new CO(r.shape,s,i);return t.runWebGLProgram(a,[r],r.dtype)}},MO=ED({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+cD+"\n  return result;\n"}),_O={kernelName:Rn,backendName:"webgl",kernelFunc:MO};class RO{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const DO=ED({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),$O={kernelName:zt,backendName:"webgl",kernelFunc:DO},LO="return a - b;",FO=ED({opSnippet:LO,packedOpSnippet:LO,supportsComplex:!0,cpuKernelImpl:RR}),OO={kernelName:Sr,backendName:"webgl",kernelFunc:FO};function zO(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=de([i],s.shape),o=dO({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=Uu(o.shape,a),u=RD({inputs:{x:o},backend:n,attrs:{shape:l}}),c=FO({inputs:{a:s,b:u},backend:n}),h=iF({inputs:{x:c},backend:n}),d=BD({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=RD({inputs:{x:d},backend:n,attrs:{shape:l}}),f=DO({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const PO={kernelName:xr,backendName:"webgl",kernelFunc:zO},BO={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r,l=o?s:zO({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new RO(u,c,i),d=h.getCustomSetupFunc(a),p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},VO="return -x;",UO={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=IR(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Be().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new rD(r.shape,VO):new GR(r.shape,VO),n.runWebGLProgram(s,[r],r.dtype)}},HO=yd,WO={kernelName:On,backendName:"webgl",kernelFunc:function(e){mp("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=HO(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},GO=bd,jO={kernelName:zn,backendName:"webgl",kernelFunc:function(e){mp("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=GO(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},qO=vd,KO={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){mp("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=qO(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class XO{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const ZO={kernelName:Vn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:i,onValue:a,offValue:o}=r,l=ne(s.shape),u=new XO(l,i,a,o),c=RD({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const d=RD({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(h),d}};function QO(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=G$({inputs:{input:r},backend:n}),t=QO({inputs:{x:e},backend:n}),s=aL({inputs:{input:r},backend:n}),i=QO({inputs:{x:s},backend:n}),a=fD({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return gF({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const YO={kernelName:$r,backendName:"webgl",kernelFunc:QO},JO={kernelName:Bn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=G$({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),i=aL({inputs:{input:s},backend:r}),a=QO({inputs:{x:i},backend:r}),o=fD({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return gF({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},ez={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return oF({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{J(i,e.shape,"All tensors passed to stack must have matching shapes"),Y(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=cL({inputs:t.map((e=>{const t=oF({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class tz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=sR(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class nz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=sR(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=zR("rc",r),l=zR("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const rz=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r,o=Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nz(s.shape,i,a):new tz(s.shape,i,a);return n.runWebGLProgram(o,[s],s.dtype)},sz={kernelName:Hn,backendName:"webgl",kernelFunc:rz},iz=ED({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+cD+"\n  return result;\n"}),az={kernelName:Gn,backendName:"webgl",kernelFunc:iz},oz={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=[],u=de(i,s.shape);let c=u;const h=Wu(c,o);let d,p=s;if(null!=h&&(p=UD({inputs:{x:s},backend:n,attrs:{perm:h}}),c=ju(c.length,o),l.push(p)),Hu("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=TR(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Vu(p.shape,c),r=ne(t),i=RD({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=FD(i,Ns(s.dtype),"prod",n);d=RD({inputs:{x:a},backend:n,attrs:{shape:e}}),l.push(i),l.push(a)}if(a){l.push(d);const e=Uu(d.shape,u);d=RD({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},lz=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:i,dtype:a}=n,o=CR(r,s,i,a);return t.makeTensorInfo([o.length],a,o)},uz={kernelName:Kn,backendName:"webgl",kernelFunc:lz},cz=SD({opSnippet:"return 1.0 / x;"}),hz={kernelName:Zn,backendName:"webgl",kernelFunc:cz},dz=SD({opSnippet:jR+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),pz={kernelName:Qn,backendName:"webgl",kernelFunc:dz},fz=SD({opSnippet:jR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),mz={kernelName:rr,backendName:"webgl",kernelFunc:fz};class gz{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class yz{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const bz={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=Be().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yz(s.shape,l,u,i,a):new gz(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],"float32")}};class vz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const xz={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new vz(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class wz{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const kz={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=new wz(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],s.dtype)}};class Sz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Ez={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new Sz(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class Iz{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=sR(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Tz{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=zR("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=sR(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Cz={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r,a=s.shape.length,o=de(i,s.shape);if(0===a)return dD({inputs:{x:s},backend:n});const l=Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tz(s.shape,o):new Iz(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class Nz{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const s=e[1],i=e[2],a=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[l,u]=tp(r,s,i),c=l.toFixed(3),h=u.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${a};\n          float coordYFloat = (float(x) - ${c}) * ${a} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${d}\n          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Az={kernelName:Or,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:a}=t,o=n,l=new Nz(r.shape,s,i,a);return o.runWebGLProgram(l,[r],r.dtype)}},Mz=SD({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),_z={kernelName:ir,backendName:"webgl",kernelFunc:Mz},Rz=SD({opSnippet:"return inversesqrt(x);",cpuKernelImpl:NR}),Dz={kernelName:ar,backendName:"webgl",kernelFunc:Rz};class $z{constructor(e,t,n,r,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=sR(s.length),l=sR(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Lz={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ka(0,s,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,s.dtype);const p=RD({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=RD({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new $z(l,o,p.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=RD({inputs:{x:y},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class Fz{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<t.length;r++)a.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=sR(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const Oz={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t,a=new Fz(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,i],Cs(s.dtype,i.dtype))}},zz=SD({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${op};\n  float scale = ${lp};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Pz={kernelName:ur,backendName:"webgl",kernelFunc:zz},Bz=SD({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),Vz={kernelName:fr,backendName:"webgl",kernelFunc:Bz},Uz=SD({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Hz={kernelName:pr,backendName:"webgl",kernelFunc:Uz},Wz=SD({opSnippet:kD+"\n  return sin(x);\n"}),Gz={kernelName:hr,backendName:"webgl",kernelFunc:Wz},jz=SD({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),qz={kernelName:dr,backendName:"webgl",kernelFunc:jz},Kz=SD({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Xz={kernelName:mr,backendName:"webgl",kernelFunc:Kz},Zz={kernelName:br,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;Y(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...a);for(let e=1+i.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=rz({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=np(c.shape,i,o,!1),d=rp(h.length,i.length,!1),p=sp(c.shape,i,o,!1),f=RD({inputs:{x:c},backend:n,attrs:{shape:h}}),m=UD({inputs:{x:f},backend:n,attrs:{perm:d}}),g=RD({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},Qz={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=ka(0,s,o),d=new $z(u,l,s.shape.length,i.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[i,s,a],i.dtype),f=RD({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},Yz={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=de(a,s.shape)[0],l=Ip(s,i,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=P$({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},Jz=SD({opSnippet:"return sqrt(x);"}),eP={kernelName:gr,backendName:"webgl",kernelFunc:Jz},tP=SD({opSnippet:"return x * x;"}),nP={kernelName:kr,backendName:"webgl",kernelFunc:tP},rP="return (a - b) * (a - b);",sP=ED({opSnippet:rP,packedOpSnippet:rP}),iP={kernelName:wr,backendName:"webgl",kernelFunc:sP},aP={kernelName:Lr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=jR+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new GR(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class oP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=sR(n.length),i=sR(n.length);let a="";if(1===r)a="coords * strides + begin";else{let e=0;a=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const lP={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=za(s.shape,i,a,o,l,u,c,h,d),v=RD({inputs:{x:s},backend:n,attrs:{shape:y}});let x;if(p){const e=P$({inputs:{x:v},backend:n,attrs:{begin:f,size:g}});x=RD({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))x=n.makeTensorInfo(b,s.dtype,[]);else if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId).values,t=Wi(v.shape,v.dtype,e),r=_R(b,t,m,f);x=n.makeTensorInfo(b,v.dtype,r.values)}else{const e=new oP(f,m,b);x=n.runWebGLProgram(e,[v],v.dtype)}const w=RD({inputs:{x},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(x),w}},uP=SD({opSnippet:"return tan(x);"}),cP={kernelName:Tr,backendName:"webgl",kernelFunc:uP},hP=SD({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),dP={kernelName:Cr,backendName:"webgl",kernelFunc:hP};class pP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=sR(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function fP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;if("string"===s.dtype){const e=n.readSync(s.dataId).map((e=>fs(e))),t=Wi(s.shape,s.dtype,e),r=DR(t,i);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const a=new pP(s.shape,i);return n.runWebGLProgram(a,[s],s.dtype)}const mP={kernelName:Nr,backendName:"webgl",kernelFunc:fP},gP={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r,o=n.readSync(s.dataId),[l,u]=$R(o,s.shape,s.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},yP={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;A_(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=FR(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},bP={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==i&&(u[c++]=a.shape[e]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[i]=e;const t=P$({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),r=RD({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class vP{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const xP={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const c=Wu([u],o);let h=s;null!=c&&(h=UD({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=ju(1,o)[0]);const d=Cp(h.shape,u,a),p=ne([h.shape[u]]),f=RD({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Ns(s.dtype),g=(e,t,r,s,i)=>{const a=e.shape[0],o=e.shape[1],u=Tp(o,i),c=new vP({windowSize:u,inSize:o,batchSize:a,numSegments:i},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===i)return h;const d=lz({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=fP({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,t,p,s,i)},y=RD({inputs:{x:g(f,"unsortedSegmentSum",i,m,a)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){l.push(y);const e=Gu(c);b=UD({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},wP=[uO,hO,jD,KD,ZD,YD,t$,s$,i$,a$,d$,p$,m$,y$,w$,v$,S$,C$,T$,M$,_$,R$,L$,V$,U$,q$,Z$,J$,nL,mD,hL,kL,SL,yL,IL,TL,EL,NL,ML,RL,FL,OL,PL,GL,jL,UL,KL,ZL,YL,JL,tF,rF,aF,lF,hF,fF,yF,vF,kF,EF,CF,AF,MF,RF,$F,FF,zF,pD,PF,oL,VF,HF,GF,bD,qF,XF,ZF,eO,YF,nO,sO,aO,pO,yO,gO,xO,wO,kO,mO,SO,EO,TO,AO,_O,BO,_D,UO,WO,jO,KO,W$,ZO,JO,ez,sz,az,wD,oz,uz,j$,$O,hz,mz,pz,DD,bz,xz,kz,Ez,Cz,Az,_z,Dz,Lz,Oz,Pz,Vz,Hz,Gz,qz,B$,PO,Xz,Zz,Qz,Yz,eP,nP,iP,aP,lP,OO,VD,cP,dP,mP,gP,HD,yP,bP,xP,YO];for(const e of wP)jr(e);const kP={"tfjs-core":eo,"tfjs-backend-cpu":"2.8.6","tfjs-backend-webgl":"2.8.6","tfjs-data":mI,"tfjs-layers":db,"tfjs-converter":lE,tfjs:"2.8.6"}},4889:(e,t,n)=>{var r=n.g.THREE=n(9388);r.TextureLoader&&(r.TextureLoader.prototype.crossOrigin=""),n(9544),n(3922),n(6883),n(6780),n(2495),e.exports=r},6883:()=>{!function(e){function t(e,t){return e.distance-t.distance}function n(e,t,r,s){if(!1!==e.visible&&(e.raycast(t,r),!0===s))for(var i=e.children,a=0,o=i.length;a<o;a++)n(i[a],t,r,!0)}e.Raycaster=function(t,n,r,s){this.ray=new e.Ray(t,n),this.near=r||0,this.far=s||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})},e.Raycaster.prototype={constructor:e.Raycaster,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,n){n instanceof e.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(n.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(n).sub(this.ray.origin).normalize()):n instanceof e.OrthographicCamera?(this.ray.origin.set(t.x,t.y,-1).unproject(n),this.ray.direction.set(0,0,-1).transformDirection(n.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,r){var s=[];return n(e,this,s,r),s.sort(t),s},intersectObjects:function(e,r){var s=[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),s;for(var i=0,a=e.length;i<a;i++)n(e[i],this,s,r);return s.sort(t),s}}}(THREE)},2654:e=>{!function(){if(void 0===window.performance&&(window.performance={}),!window.performance.now){var e=Date.now();performance.timing&&performance.timing.navigationStart&&(e=performance.timing.navigationStart),window.performance.now=function(){return Date.now()-e}}}(),e.exports=function(e){"use strict";function t(e){var t=document.createElement("link");t.href=e,t.rel="stylesheet",t.type="text/css",document.getElementsByTagName("head")[0].appendChild(t)}var n=e||{},r=["#850700","#c74900","#fcb300","#284280","#4c7c0c"];function s(e,t,n){n=n||{};var r=document.createElement("canvas"),s=r.getContext("2d"),i=0,a=0,o=n.color?n.color:"#666666",l=(n.warningColor&&n.warningColor,document.createElement("canvas")),h=l.getContext("2d");l.width=1,l.height=2*u,h.fillStyle="#444444",h.fillRect(0,0,1,2*u),h.fillStyle=o,h.fillRect(0,u,1,u),h.fillStyle="#ffffff",h.globalAlpha=.5,h.fillRect(0,u,1,1),h.globalAlpha=1;var d=document.createElement("canvas"),p=d.getContext("2d");return d.width=1,d.height=2*u,p.fillStyle="#444444",p.fillRect(0,0,1,2*u),p.fillStyle="#b70000",p.fillRect(0,u,1,u),p.globalAlpha=.5,p.fillStyle="#ffffff",p.fillRect(0,u,1,1),p.globalAlpha=1,r.width=c,r.height=u,r.style.width=r.width+"px",r.style.height=r.height+"px",r.className="rs-canvas",e.appendChild(r),s.fillStyle="#444444",s.fillRect(0,0,r.width,r.height),{draw:function(e,t){(a+=.1*(e-a))>(i*=.99)&&(i=a),s.drawImage(r,1,0,r.width-1,r.height,0,0,r.width-1,r.height),t?s.drawImage(d,r.width-1,r.height-a*r.height/i-u):s.drawImage(l,r.width-1,r.height-a*r.height/i-u)}}}function i(e,t){var n=document.createElement("canvas"),s=n.getContext("2d");return n.width=c,n.height=u*t,n.style.width=n.width+"px",n.style.height=n.height+"px",n.className="rs-canvas",e.appendChild(n),s.fillStyle="#444444",s.fillRect(0,0,n.width,n.height),{draw:function(e){s.drawImage(n,1,0,n.width-1,n.height,0,0,n.width-1,n.height);var t=0;for(var i in e){var a=e[i]*n.height;s.fillStyle=r[i],s.fillRect(n.width-1,t,1,a),t+=a}}}}function a(e,t){var r,i=e,a=0,o=0,u=0,c=0,h=Date.now(),d=0,p=document.createElement("div"),f=document.createElement("span"),m=document.createElement("div"),g=document.createTextNode(""),y=n?n.values[i.toLowerCase()]:null,b=new s(p,i,y);function v(e){if(y&&y.average){c+=e,d++;var t=Date.now();t-h>=(y.avgMs||1e3)&&(u=c/d,c=0,h=t,d=0)}}function x(){r=performance.now()}function w(){v(a=performance.now()-r)}return p.className="rs-counter-base",f.className="rs-counter-id",f.textContent=y&&y.caption?y.caption:i,m.className="rs-counter-value",m.appendChild(g),p.appendChild(f),p.appendChild(m),t?t.div.appendChild(p):l.appendChild(p),r=performance.now(),{set:function(e){v(a=e)},start:x,tick:function(){w(),x()},end:w,frame:function(){var e=performance.now(),t=e-r;o++,t>1e3&&(a=1e3*o/t,o=0,r=e,v(a))},value:function(){return a},draw:function(){var e=y&&y.average?u:a;g.nodeValue=Math.round(100*e)/100;var t=y&&(y.below&&a<y.below||y.over&&a>y.over);b.draw(a,t),p.style.color=t?"#b70000":"#ffffff"}}}t("http://fonts.googleapis.com/css?family=Roboto+Condensed:400,700,300"),t((n.CSSPath?n.CSSPath:"")+"rStats.css"),n.values||(n.values={});var o,l,u=10,c=200,h={};function d(e){if(void 0===(e=e.toLowerCase())&&(e="default"),h[e])return h[e];var t=null;if(n&&n.groups)for(var r in n.groups){var s=n.groups[parseInt(r,10)];-1==s.values.indexOf(e.toLowerCase())||(t=s)}var i=new a(e,t);return h[e]=i,i}function p(){for(var e in n.plugins)n.plugins[e].update();for(var e in h)h[e].draw();if(n&&n.fractions)for(var e in n.fractions){var t=n.fractions[parseInt(e,10)],r=[],s=h[t.base.toLowerCase()];if(s)for(var i in s=s.value(),n.fractions[e].steps){var a=n.fractions[e].steps[parseInt(i,10)].toLowerCase(),o=h[a];o&&r.push(o.value()/s)}t.graph.draw(r)}}return function(){if(n.plugins){n.values||(n.values={}),n.groups||(n.groups=[]),n.fractions||(n.fractions=[]);for(var e=0;e<n.plugins.length;e++){for(var t in n.plugins[e].attach(d),n.plugins[e].values)n.values[t]=n.plugins[e].values[t];n.groups=n.groups.concat(n.plugins[e].groups),n.fractions=n.fractions.concat(n.plugins[e].fractions)}}else n.plugins={};if((o=document.createElement("div")).className="rs-base",(l=document.createElement("div")).className="rs-container",l.style.height="auto",o.appendChild(l),document.body.appendChild(o),window.getComputedStyle(o,null).getPropertyValue("font-size"),n){if(n.groups)for(var e in n.groups){var s=n.groups[parseInt(e,10)];(c=document.createElement("div")).className="rs-group",s.div=c;var a=document.createElement("h1");a.textContent=s.caption,a.addEventListener("click",function(e){this.classList.toggle("hidden"),e.preventDefault()}.bind(c)),l.appendChild(a),l.appendChild(c)}if(n.fractions)for(var e in n.fractions){var c,h=n.fractions[parseInt(e,10)];(c=document.createElement("div")).className="rs-fraction";var p=document.createElement("div");p.className="rs-legend";var f=0;for(var t in n.fractions[e].steps){var m=document.createElement("p");m.textContent=n.fractions[e].steps[t],m.style.color=r[f],p.appendChild(m),f++}c.appendChild(p),c.style.height=f*u+"px",h.div=c;var g=new i(c,f);h.graph=g,l.appendChild(c)}}}(),function(e){return e?d(e):{update:p}}}},2425:e=>{var t={base64:function(e,t){return"data:"+e+";base64,"+t},isMobile:function(){var e,t=!1;return e=navigator.userAgent||navigator.vendor||window.opera,(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4)))&&(t=!0),t},isIOS:function(){return/(iPad|iPhone|iPod)/g.test(navigator.userAgent)},isIFrame:function(){try{return window.self!==window.top}catch(e){return!0}},appendQueryParameter:function(e,t,n){var r=e.indexOf("?")<0?"?":"&";return e+(r+t+"=")+n},getQueryParameter:function(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var t=new RegExp("[\\?&]"+e+"=([^&#]*)").exec(location.search);return null===t?"":decodeURIComponent(t[1].replace(/\+/g," "))},isLandscapeMode:function(){return 90==window.orientation||-90==window.orientation}};e.exports=t},4118:(e,t,n)=>{var r,s=n(2425);e.exports=(r=navigator.userAgent||navigator.vendor||window.opera).match(/iPhone/i)||r.match(/iPod/i)?function(){var e=null;this.request=function(){e||(e=setInterval((function(){window.location=window.location,setTimeout(window.stop,0)}),3e4))},this.release=function(){e&&(clearInterval(e),e=null)}}:function(){var e=document.createElement("video");e.addEventListener("ended",(function(){e.play()})),this.request=function(){e.paused&&(e.src=s.base64("video/webm","GkXfowEAAAAAAAAfQoaBAUL3gQFC8oEEQvOBCEKChHdlYm1Ch4ECQoWBAhhTgGcBAAAAAAAH4xFNm3RALE27i1OrhBVJqWZTrIHfTbuMU6uEFlSua1OsggEwTbuMU6uEHFO7a1OsggfG7AEAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmAQAAAAAAAEUq17GDD0JATYCNTGF2ZjU2LjQwLjEwMVdBjUxhdmY1Ni40MC4xMDFzpJAGSJTMbsLpDt/ySkipgX1fRImIQO1MAAAAAAAWVK5rAQAAAAAAADuuAQAAAAAAADLXgQFzxYEBnIEAIrWcg3VuZIaFVl9WUDmDgQEj44OEO5rKAOABAAAAAAAABrCBsLqBkB9DtnUBAAAAAAAAo+eBAKOmgQAAgKJJg0IAAV4BHsAHBIODCoAACmH2MAAAZxgz4dPSTFi5JACjloED6ACmAECSnABMQAADYAAAWi0quoCjloEH0ACmAECSnABNwAADYAAAWi0quoCjloELuACmAECSnABNgAADYAAAWi0quoCjloEPoACmAECSnABNYAADYAAAWi0quoCjloETiACmAECSnABNIAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTnghdwo5aBAAAApgBAkpwATOAAA2AAAFotKrqAo5aBA+gApgBAkpwATMAAA2AAAFotKrqAo5aBB9AApgBAkpwATIAAA2AAAFotKrqAo5aBC7gApgBAkpwATEAAA2AAAFotKrqAo5aBD6AApgDAkpwAQ2AAA2AAAFotKrqAo5aBE4gApgBAkpwATCAAA2AAAFotKrqAH0O2dQEAAAAAAACU54Iu4KOWgQAAAKYAQJKcAEvAAANgAABaLSq6gKOWgQPoAKYAQJKcAEtgAANgAABaLSq6gKOWgQfQAKYAQJKcAEsAAANgAABaLSq6gKOWgQu4AKYAQJKcAEqAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEogAANgAABaLSq6gKOWgROIAKYAQJKcAEnAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCRlCjloEAAACmAECSnABJgAADYAAAWi0quoCjloED6ACmAECSnABJIAADYAAAWi0quoCjloEH0ACmAMCSnABDYAADYAAAWi0quoCjloELuACmAECSnABI4AADYAAAWi0quoCjloEPoACmAECSnABIoAADYAAAWi0quoCjloETiACmAECSnABIYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngl3Ao5aBAAAApgBAkpwASCAAA2AAAFotKrqAo5aBA+gApgBAkpwASAAAA2AAAFotKrqAo5aBB9AApgBAkpwAR8AAA2AAAFotKrqAo5aBC7gApgBAkpwAR4AAA2AAAFotKrqAo5aBD6AApgBAkpwAR2AAA2AAAFotKrqAo5aBE4gApgBAkpwARyAAA2AAAFotKrqAH0O2dQEAAAAAAACU54J1MKOWgQAAAKYAwJKcAENgAANgAABaLSq6gKOWgQPoAKYAQJKcAEbgAANgAABaLSq6gKOWgQfQAKYAQJKcAEagAANgAABaLSq6gKOWgQu4AKYAQJKcAEaAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEZAAANgAABaLSq6gKOWgROIAKYAQJKcAEYAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCjKCjloEAAACmAECSnABF4AADYAAAWi0quoCjloED6ACmAECSnABFwAADYAAAWi0quoCjloEH0ACmAECSnABFoAADYAAAWi0quoCjloELuACmAECSnABFgAADYAAAWi0quoCjloEPoACmAMCSnABDYAADYAAAWi0quoCjloETiACmAECSnABFYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngqQQo5aBAAAApgBAkpwARUAAA2AAAFotKrqAo5aBA+gApgBAkpwARSAAA2AAAFotKrqAo5aBB9AApgBAkpwARQAAA2AAAFotKrqAo5aBC7gApgBAkpwARQAAA2AAAFotKrqAo5aBD6AApgBAkpwAROAAA2AAAFotKrqAo5aBE4gApgBAkpwARMAAA2AAAFotKrqAH0O2dQEAAAAAAACU54K7gKOWgQAAAKYAQJKcAESgAANgAABaLSq6gKOWgQPoAKYAQJKcAESAAANgAABaLSq6gKOWgQfQAKYAwJKcAENgAANgAABaLSq6gKOWgQu4AKYAQJKcAERgAANgAABaLSq6gKOWgQ+gAKYAQJKcAERAAANgAABaLSq6gKOWgROIAKYAQJKcAEQgAANgAABaLSq6gB9DtnUBAAAAAAAAlOeC0vCjloEAAACmAECSnABEIAADYAAAWi0quoCjloED6ACmAECSnABEAAADYAAAWi0quoCjloEH0ACmAECSnABD4AADYAAAWi0quoCjloELuACmAECSnABDwAADYAAAWi0quoCjloEPoACmAECSnABDoAADYAAAWi0quoCjloETiACmAECSnABDgAADYAAAWi0quoAcU7trAQAAAAAAABG7j7OBALeK94EB8YIBd/CBAw=="),e.play())},this.release=function(){e.pause(),e.src=""}}},589:e=>{"use strict";e.exports=JSON.parse('{"name":"aframe-core","version":"0.1.6","homepage":"https://github.com/aframevr/aframe-core","license":"MIT","main":"src/index.js","dependencies":{"debug":"^2.2.0","document-register-element":"^0.5.2","es6-promise":"^3.0.2","object-assign":"^4.0.1","present":"0.0.6","request-interval":"^1.0.0","style-attr":"^1.0.1","three-dev":"^0.74.0-beta8","tween.js":"^15.0.0","webvr-polyfill":"borismus/webvr-polyfill#3f47796"},"devDependencies":{"browserify":"^11.0.1","browserify-css":"^0.8.2","budo":"^7.0.2","chai-shallow-deep-equal":"^1.3.0","exorcist":"^0.4.0","gh-pages":"^0.4.0","husky":"^0.10.1","karma":"^0.13.15","karma-browserify":"^4.4.0","karma-chai-shallow-deep-equal":"0.0.4","karma-env-preprocessor":"^0.1.1","karma-firefox-launcher":"^0.1.6","karma-mocha":"^0.2.0","karma-mocha-reporter":"^1.1.0","karma-sinon-chai":"^1.1.0","mocha":"^2.3.3","mozilla-download":"^1.0.5","replace":"^0.3.0","semistandard":"^7.0.2","snazzy":"^2.0.1","uglifyjs":"^2.4.10"},"scripts":{"start":"npm run dev","dev":"npm run build && budo src/index.js:build/aframe-core.js --debug --verbose --port 9001 --onupdate \'semistandard -v $(git ls-files \\"*.js\\") | snazzy\' -- ./src/index.js -s \'aframe-core\'","browserify":"browserify ./src/index.js -s \'aframe-core\'","build":"mkdir -p build/ && npm run browserify -- --debug -o build/aframe-core.js","dist":"rm -rf dist/ && mkdir -p dist/ && npm run dist:js","dist:js":"npm run browserify -s -- --debug | exorcist dist/aframe-core.js.map > dist/aframe-core.js && uglifyjs dist/aframe-core.js -c warnings=false -m -o dist/aframe-core.min.js","preghpages":"npm run dist && rm -rf gh-pages && mkdir -p gh-pages && cp -r {.nojekyll,dist,lib,examples,style,index.html} gh-pages/. && git checkout dist/ && replace \'build/aframe-core.js\' \'dist/aframe-core.min.js\' gh-pages/ -r --silent","ghpages":"node ./scripts/gh-pages","gh-pages":"npm run ghpages","version":"npm run dist","release:bump":"npm version patch --preminor && git commit -a -C HEAD --amend","release:push":"npm login && npm publish && git push --follow-tags","test":"karma start ./tests/karma.conf.js","test:ci":"TEST_ENV=ci karma start ./tests/karma.conf.js --single-run","lint":"semistandard -v $(git ls-files \'*.js\') | snazzy","precommit":"npm run lint"},"repository":"aframevr/aframe-core","bugs":{"url":"https://github.com/aframevr/aframe-core/issues"},"semistandard":{"ignore":["dist/**","examples/_js/**","lib/vendor/**","src/shaders/**"]},"browserify":{"transform":["browserify-css"]},"browserify-css":{"minify":true},"engines":{"node":">= 0.12.7","npm":">= 2.12.1"}}')},89:(e,t,n)=>{var r=n(137).RM,s=n(4889);e.exports.Component=r("camera",{schema:{far:{default:1e4},fov:{default:80,min:0},near:{default:.5,min:0}},init:function(){var e=this.camera=new s.PerspectiveCamera,t=this.el;t.object3D.add(e),t.sceneEl.cameraEl=t},update:function(){var e=this.data,t=this.camera;t.aspect=e.aspect||window.innerWidth/window.innerHeight,t.far=e.far,t.fov=e.fov,t.near=e.near,t.updateProjectionMatrix()}})},4517:(e,t,n)=>{var r=n(137).RM,s=n(1886);e.exports.Component=r("cursor",{schema:{timeout:{default:1500,min:0},maxDistance:{default:5,min:0},fuse:{default:!1}},dependencies:["raycaster"],init:function(){this.raycaster=this.el.components.raycaster,this.schema.fuse.default=s.isMobile(),this.attachEventListeners()},attachEventListeners:function(){var e=this.el,t=e.sceneEl.canvas;t.addEventListener("mousedown",this.onMouseDown.bind(this)),t.addEventListener("mouseup",this.onMouseUp.bind(this)),e.addEventListener("intersection",this.onIntersection.bind(this)),e.addEventListener("intersectioncleared",this.onIntersectionCleared.bind(this))},onMouseDown:function(e){this.emit("mousedown"),this.mouseDownEl=this.intersectedEl},onMouseUp:function(){this.emit("mouseup"),this.data.fuse||this.intersectedEl&&this.mouseDownEl===this.intersectedEl&&this.emit("click")},emit:function(e){var t=this.intersectedEl;this.el.emit(e),t&&t.emit(e)},emitter:function(e){return function(){this.emit(e)}.bind(this)},onIntersection:function(e){var t=this,n=this.data,r=e.detail.el,s=e.detail.distance;this.intersectedEl!==r&&(s>=this.data.maxDistance||(this.intersectedEl=r,r.addState("hovered"),r.emit("mouseenter"),this.el.addState("hovering"),0!==n.timeout&&n.fuse&&(this.el.addState("fusing"),this.fuseTimeout=setTimeout((function(){t.el.removeState("fusing"),t.emit("click")}),n.timeout))))},onIntersectionCleared:function(e){var t=e.detail.el;t&&this.intersectedEl&&(this.intersectedEl=null,t.removeState("hovered"),t.emit("mouseleave"),this.el.removeState("hovering"),this.el.removeState("fusing"),clearTimeout(this.fuseTimeout))}})},2276:(e,t,n)=>{var r=n(137).RM,s=n(4889),i=n(6317)("components:fog:warn");e.exports.Component=r("fog",{schema:{color:{default:"#000"},density:{default:25e-5},far:{default:1e3,min:0},near:{default:1,min:0},type:{default:"linear",oneOf:["linear","exponential"]}},update:function(){var e=this.data,t=this.el,n=this.el.object3D.fog;if(t.isScene)return n&&e.type===n.name?void Object.keys(this.schema).forEach((function(t){var r=e[t];"color"===t&&(r=new s.Color(r)),n[t]=r})):(t.object3D.fog=function(e){var t;return(t="exponential"===e.type?new s.FogExp2(e.color,e.density):new s.Fog(e.color,e.near,e.far)).name=e.type,t}(e),void t.updateMaterials());i("Fog component can only be applied to <a-scene>")},remove:function(){var e=this.el.object3D.fog;e&&(e.density=0,e.far=0,e.near=0)}})},4765:(e,t,n)=>{var r=n(6317),s=n(137).RM,i=n(4889),a=n(1886),o=new i.Matrix4,l=i.Math.degToRad,u=r("components:geometry:warn");e.exports.Component=s("geometry",{schema:{arc:{default:360,if:{primitive:["torus"]}},depth:{default:2,min:0,if:{primitive:["box"]}},height:{default:2,min:0,if:{primitive:["box","plane"]}},openEnded:{default:!1,if:{primitive:["cylinder"]}},p:{default:2,if:{primitive:["torusKnot"]}},translate:{default:{x:0,y:0,z:0}},primitive:{default:"",oneOf:["","box","circle","cylinder","plane","ring","sphere","torus","torusKnot"]},q:{default:3,if:{primitive:["torusKnot"]}},radius:{default:1,min:0,if:{primitive:["circle","cylinder","sphere","torus","torusKnot"]}},radiusBottom:{default:1,min:0,if:{primitive:["cylinder"]}},radiusInner:{default:.8,min:0,if:{primitive:["ring"]}},radiusOuter:{default:1.2,min:0,if:{primitive:["ring"]}},radiusTop:{default:1,if:{primitive:["cylinder"]}},radiusTubular:{default:.2,min:0,if:{primitive:["torus"]}},scaleHeight:{default:1,min:0,if:{primitive:["torusKnot"]}},segments:{default:8,min:0,if:{primitive:["circle"]}},segmentsHeight:{default:18,min:0,if:{primitive:["cylinder","sphere"]}},segmentsPhi:{default:8,min:0,if:{primitive:["ring"]}},segmentsRadial:{default:36,min:0,if:{primitive:["cylinder"]}},segmentsTheta:{default:8,min:0,if:{primitive:["ring"]}},segmentsTubular:{default:8,min:0,if:{primitive:["torus","torusKnot"]}},segmentsWidth:{default:36,min:0,if:{primitive:["sphere"]}},thetaLength:{default:360,min:0,if:{primitive:["circle","cylinder","ring"]}},thetaStart:{default:0,if:{primitive:["circle","cylinder","ring"]}},width:{default:2,min:0,if:{primitive:["box","plane"]}}},update:function(e){e=e||{};var t=this.data,n=e.translate||this.schema.translate.default,r=a.diff(e,t),s=this.el.object3D.geometry,c=!(1===Object.keys(r).length&&"translate"in r),h=!a.deepEqual(t.translate,n);c&&(s=this.el.object3D.geometry=function(e,t){switch(e.primitive){case"box":return new i.BoxGeometry(e.width,e.height,e.depth);case"circle":return new i.CircleGeometry(e.radius,e.segments,l(e.thetaStart),l(e.thetaLength));case"cone":return new i.CylinderGeometry(e.radiusTop,e.radiusBottom,e.height,e.segmentsRadial,e.segmentsHeight,e.openEnded,l(e.thetaStart),l(e.thetaLength));case"cylinder":return new i.CylinderGeometry(e.radius,e.radius,e.height,e.segmentsRadial,e.segmentsHeight,e.openEnded,l(e.thetaStart),l(e.thetaLength));case"plane":return new i.PlaneBufferGeometry(e.width,e.height);case"ring":return new i.RingGeometry(e.radiusInner,e.radiusOuter,e.segmentsTheta,e.segmentsPhi,l(e.thetaStart),l(e.thetaLength));case"sphere":return new i.SphereGeometry(e.radius,e.segmentsWidth,e.segmentsHeight);case"torus":return new i.TorusGeometry(e.radius,2*e.radiusTubular,e.segmentsRadial,e.segmentsTubular,l(e.arc));case"torusKnot":return new i.TorusKnotGeometry(e.radius,2*e.radiusTubular,e.segmentsRadial,e.segmentsTubular,e.p,e.q,e.scaleHeight);default:return u("Primitive type not supported: "+e.primitive),new i.Geometry}}(this.data,this.schema)),h&&function(e,t,n){var r=o.makeTranslation(t.x-n.x,t.y-n.y,t.z-n.z);e.applyMatrix(r),e.verticesNeedsUpdate=!0}(s,t.translate,n)},remove:function(){this.el.object3D.geometry=new i.Geometry}})},9954:(e,t,n)=>{n(89),n(4517),n(2276),n(4765),n(4786),n(30),n(4779),n(3632),n(590),n(9124),n(5236),n(3756),n(5147),n(4308),n(1566),n(1007)},4786:(e,t,n)=>{var r=n(1886).diff,s=n(6317),i=n(137).RM,a=n(4889),o=a.Math.degToRad,l=s("components:light:warn");function u(e){var t=e.angle,n=new a.Color(e.color).getHex(),r=e.decay,s=e.distance,i=new a.Color(e.groundColor).getHex(),u=e.intensity,c=e.type;switch(c.toLowerCase()){case"ambient":return new a.AmbientLight(n);case"directional":return new a.DirectionalLight(n,u);case"hemisphere":return new a.HemisphereLight(n,i,u);case"point":return new a.PointLight(n,u,s,r);case"spot":return new a.SpotLight(n,u,s,o(t),e.exponent,r);default:l("%s is not a valid light type. Choose from ambient, directional, hemisphere, point, spot.",c)}}e.exports.Component=i("light",{schema:{angle:{default:60,if:{type:["spot"]}},color:{default:"#FFF"},groundColor:{default:"#FFF",if:{type:["hemisphere"]}},decay:{default:1,if:{type:["point","spot"]}},distance:{default:0,min:0,if:{type:["point","spot"]}},exponent:{default:10,if:{type:["spot"]}},intensity:{default:1,min:0,if:{type:["directional","hemisphere","point","spot"]}},type:{default:"directional",oneOf:["ambient","directional","hemisphere","point","spot"]}},init:function(){var e=this.el;this.light=null,e.sceneEl.registerLight(e)},update:function(e){var t=this.data,n=r(t,e||{}),s=this.el,i=this.light;if(i){if("type"in n){var o=u(t);return void(o&&(s.object3D.remove(i),s.object3D.add(o),this.light=o))}Object.keys(n).forEach((function(e){var n=t[e];-1!==["color","groundColor"].indexOf(e)&&(n=new a.Color(n)),i[e]=n}))}else this.light=u(t),this.light&&s.object3D.add(this.light)},remove:function(){this.light&&this.el.object3D.remove(this.light)}})},30:(e,t,n)=>{var r=n(6317),s=n(137).RM,i=n(643).parseUrl,a=n(4889),o=r("components:loader:warn");e.exports.Component=s("loader",{dependencies:["material"],schema:{src:{default:""},format:{default:"obj",oneOf:["obj","collada"]}},update:function(){var e=this.el,t=this.data,n=this.model,r=i(t.src),s=t.format;if(n&&e.object3D.remove(n),r)switch(s){case"obj":this.loadObj(r);break;case"collada":this.loadCollada(r);break;default:o("Model format not supported")}else o("Model URL not provided")},loadObj:function(e){var t=this,n=this.el;(new a.OBJLoader).load(e,(function(e){t.model=e,t.applyMaterial(),n.object3D.add(e)}))},applyMaterial:function(){var e=this.el.components.material.material;this.model&&this.model.traverse((function(t){t instanceof a.Mesh&&(t.material=e)}))},loadCollada:function(e){var t=this,n=this.el,r=new a.ColladaLoader;r.options.convertUpAxis=!0,r.load(e,(function(e){t.model=e.scene,n.object3D.add(e.scene)}))}})},4779:(e,t,n)=>{var r=n(6317),s=n(3345),i=n(137).RM,a=n(4889),o=r("components:look-at:warn"),l=s.isCoordinate;e.exports.Component=i("look-at",{init:function(){this.target3D=null,this.vector=new a.Vector3},update:function(){var e,t=this,n=t.data,r=n.position,s=t.el.object3D,i=t.target3D,l=n.targetSelector;return i?s.lookAt(t.vector.setFromMatrixPosition(i.matrixWorld)):l?(e=document.querySelector(l))?e.object3D?t.beginTracking(e):e.addEventListener("loaded",(function(){t.beginTracking(e)})):void o('"'+l+'" does not point to a valid entity to look-at'):r?void s.lookAt(new a.Vector3(r.x,r.y,r.z)):r||l?void 0:t.remove()},remove:function(){this.el.sceneEl.removeBehavior(this)},beginTracking:function(e){this.target3D=e.object3D,this.el.sceneEl.addBehavior(this)},parse:function(e){return e?l(e)?{position:s.parse(e),targetSelector:null}:{position:null,targetSelector:e}:{position:null,targetSelector:null}},stringify:s.componentMixin.stringify})},3632:(e,t,n)=>{var r,s,i=n(137).RM,a=n(4889),o=Math.PI/2;e.exports.Component=i("look-controls",{dependencies:["position","rotation"],schema:{enabled:{default:!0}},init:function(){var e=this.el.sceneEl;this.setupMouseControls(),this.setupHMDControls(),this.attachEventListeners(),e.addBehavior(this),this.previousPosition=new a.Vector3,this.deltaPosition=new a.Vector3},setupMouseControls:function(){this.canvasEl=document.querySelector("a-scene").canvas,this.mouseDown=!1,this.pitchObject=new a.Object3D,this.yawObject=new a.Object3D,this.yawObject.position.y=10,this.yawObject.add(this.pitchObject)},setupHMDControls:function(){this.dolly=new a.Object3D,this.euler=new a.Euler,this.controls=new a.VRControls(this.dolly),this.zeroQuaternion=new a.Quaternion},attachEventListeners:function(){var e=document.querySelector("a-scene").canvas;e.addEventListener("mousedown",this.onMouseDown.bind(this),!0),e.addEventListener("mousemove",this.onMouseMove.bind(this),!0),e.addEventListener("mouseup",this.releaseMouse.bind(this),!0),e.addEventListener("mouseout",this.releaseMouse.bind(this),!0),e.addEventListener("touchstart",this.onTouchStart.bind(this)),e.addEventListener("touchmove",this.onTouchMove.bind(this)),e.addEventListener("touchend",this.onTouchEnd.bind(this))},update:function(){this.data.enabled&&(this.controls.update(),this.updateOrientation(),this.updatePosition())},updateOrientation:(s=new a.Euler,s.order="YXZ",function(){var e=this.pitchObject,t=this.yawObject,n=this.calculateHMDQuaternion();s.setFromQuaternion(n),this.el.setAttribute("rotation",{x:a.Math.radToDeg(s.x)+a.Math.radToDeg(e.rotation.x),y:a.Math.radToDeg(s.y)+a.Math.radToDeg(t.rotation.y),z:a.Math.radToDeg(s.z)})}),calculateHMDQuaternion:(r=new a.Quaternion,function(){var e=this.dolly;return this.zeroed||e.quaternion.equals(this.zeroQuaternion)||(this.zeroOrientation(),this.zeroed=!0),r.copy(this.zeroQuaternion).multiply(e.quaternion),r}),updatePosition:function(){var e=this.el,t=this.calculateDeltaPosition(),n=e.getComputedAttribute("position");e.setAttribute("position",{x:n.x+t.x,y:n.y+t.y,z:n.z+t.z})},calculateDeltaPosition:function(){var e=this.dolly,t=this.deltaPosition,n=this.previousPosition;return t.copy(e.position),t.sub(n),n.copy(e.position),t},updateHMDQuaternion:function(){var e=new a.Quaternion;return function(){var t=this.dolly;return this.controls.update(),this.zeroed||t.quaternion.equals(this.zeroQuaternion)||(this.zeroOrientation(),this.zeroed=!0),e.copy(this.zeroQuaternion).multiply(t.quaternion),e}}(),zeroOrientation:function(){var e=new a.Euler;e.setFromQuaternion(this.dolly.quaternion.clone().inverse()),e.z=0,e.x=0,this.zeroQuaternion.setFromEuler(e)},onMouseMove:function(e){var t=this.pitchObject,n=this.yawObject,r=this.previousMouseEvent;if(this.mouseDown&&this.data.enabled){var s=e.movementX||e.mozMovementX,i=e.movementY||e.mozMovementY;void 0!==s&&void 0!==i||(s=e.screenX-r.screenX,i=e.screenY-r.screenY),this.previousMouseEvent=e,n.rotation.y-=.002*s,t.rotation.x-=.002*i,t.rotation.x=Math.max(-o,Math.min(o,t.rotation.x))}},onMouseDown:function(e){this.mouseDown=!0,this.previousMouseEvent=e},releaseMouse:function(){this.mouseDown=!1},onTouchStart:function(e){1===e.touches.length&&(this.touchStart={x:e.touches[0].pageX,y:e.touches[0].pageY},this.touchStarted=!0)},onTouchMove:function(e){var t,n=this.yawObject;this.touchStarted&&(t=2*Math.PI*(e.touches[0].pageX-this.touchStart.x)/this.canvasEl.clientWidth,n.rotation.y-=.5*t,this.touchStart={x:e.touches[0].pageX,y:e.touches[0].pageY})},onTouchEnd:function(){this.touchStarted=!1}})},590:(e,t,n)=>{var r=n(6317),s=n(1886).diff,i=n(137).RM,a=n(643),o=n(4889),l=new o.CubeTextureLoader,u=r("components:material:error"),c=new o.TextureLoader,h={},d=r("components:material:warn"),p="MeshBasicMaterial",f="MeshStandardMaterial";function m(e){return"color"in e&&(e.color=new o.Color(e.color)),"opacity"in e&&e.opacity<1&&(e.transparent=!0),"side"in e&&(e.side=function(e){switch(e){case"back":return o.BackSide;case"double":return o.DoubleSide;default:return o.FrontSide}}(e.side)),e}function g(e){return"flat"===e.shader?p:f}e.exports.Component=i("material",{schema:{color:{default:"#FFF"},envMap:{default:""},fog:{default:!0},height:{default:360},metalness:{default:0,min:0,max:1,if:{shader:["standard"]}},opacity:{default:1,min:0,max:1},reflectivity:{default:1,min:0,max:1,if:{shader:["standard"]}},repeat:{default:""},roughness:{default:.5,min:0,max:1,if:{shader:["standard"]}},shader:{default:"standard",oneOf:["flat","standard"]},side:{default:"front",oneOf:["front","back","double"]},src:{default:""},transparent:{default:!1},width:{default:640}},init:function(){this.isLoadingEnvMap=!1,this.material=null,this.textureSrc=null},update:function(e){var t,n=this.data,r=g(n),i=n.src;t=e&&g(e)===r?this.updateMaterial(m(s(e,n))):this.createMaterial(function(e){var t={color:e.color,side:e.side,opacity:e.opacity,transparent:!1!==e.transparent||e.opacity<1};return g(e)===f&&(t.metalness=e.metalness,t.reflectivity=e.reflectivity,t.roughness=e.roughness),m(t)}(n),r),t.type===f&&this.updateEnvMap(),this.updateTexture(i)},remove:function(){var e=this.el,t=this.schema.color.default,n=new o.MeshBasicMaterial({color:t}),r=e.object3D;r&&(r.material=n),e.sceneEl.unregisterMaterial(this.material)},createMaterial:function(e,t){var n,r=this.el.sceneEl;return this.material&&r.unregisterMaterial(this.material),n=this.material=this.el.object3D.material=new o[t](e),r.registerMaterial(n),n},updateMaterial:function(e){var t=this.material;return Object.keys(e).forEach((function(n){t[n]=e[n]})),t},updateEnvMap:function(){var e=this,t=this.material,n=this.data.envMap;if(!n||this.isLoadingEnvMap)return t.envMap=null,void(t.needsUpdate=!0);this.isLoadingEnvMap=!0,h[n]?h[n].then((function(n){e.isLoadingEnvMap=!1,t.envMap=n,t.needsUpdate=!0})):h[n]=new Promise((function(r){a.validateCubemapSrc(n,(function(n){l.load(n,(function(n){e.isLoadingEnvMap=!1,t.envMap=n,r(n)}))}))}))},updateTexture:function(e){var t=this.data,n=this.material;e?e!==this.textureSrc&&(this.textureSrc=e,a.validateSrc(e,(function(e){!function(e,t,n){var r=s;function s(t){var r;t instanceof o.Texture||(t=new o.Texture(t)),n&&2===(r=n.split(" ")).length&&(t.wrapS=o.RepeatWrapping,t.wrapT=o.RepeatWrapping,t.repeat.set(parseInt(r[0],10),parseInt(r[1],10))),e.map=t,t.needsUpdate=!0,e.needsUpdate=!0}"string"!=typeof t?s(t):c.load(t,r,(function(){}),(function(e){u('The URL "$s" could not be fetched (Error code: %s; Response: %s)',e.status,e.statusText)}))}(n,e,t.repeat)}),(function(e){!function(e,t,n,r){var s="string"!=typeof t?function(e){return e.autoplay="false"!==e.getAttribute("autoplay"),e.controls="false"!==e.getAttribute("controls"),"false"===e.getAttribute("preload")&&(e.preload="none"),e}(t):function(e,t,n,r){var s=e.videoEl||document.createElement("video");return s.width=n,s.height=r,s!==this.videoEl&&(s.autoplay=!0,s.loop=!0,s.crossOrigin=!0,s.addEventListener("error",(function(){d('The URL "$s" is not a valid image or video',t)}),!0),e.videoEl=s),s.src=t,s}(e,t,n,r),i=new o.VideoTexture(s);i.minFilter=o.LinearFilter,i.needsUpdate=!0,e.map=i,e.needsUpdate=!0}(n,e,t.width,t.height)}))):(n.map=null,n.needsUpdate=!0)}})},9124:(e,t,n)=>{var r=n(3345).componentMixin,s=n(137).RM,i=n(1886);e.exports.Component=s("position",i.extend({schema:{x:{default:0},y:{default:0},z:{default:0}},update:function(){var e=this.el.object3D,t=this.data;e.position.set(t.x,t.y,t.z)}},r))},5236:(e,t,n)=>{var r=n(137).RM,s=n(6422),i=n(4889);e.exports.Component=r("raycaster",{init:function(){this.raycaster=new i.Raycaster,this.intersectedEl=null,this.pollForHoverIntersections()},remove:function(){s.clear(this.pollInterval)},pollForHoverIntersections:function(){this.pollInterval=s(100,this.getIntersections.bind(this))},getIntersections:function(){var e=this.getClosestIntersected();e?this.handleIntersection(e):this.intersectedEl&&this.clearExistingIntersection()},intersect:function(e){var t=this.el,n=this.raycaster,r=t.object3D,s=t.parentNode.object3D,a=(new i.Vector3).setFromMatrixPosition(s.matrixWorld),o=(new i.Vector3).setFromMatrixPosition(r.matrixWorld).sub(a).normalize();return n.set(a,o),n.intersectObjects(e,!0)},getClosestIntersected:function(){for(var e,t=this.el.sceneEl.object3D,n=this.el,r=this.intersect(t.children),s=0;s<r.length;++s)if(void 0!==(e=r[s]).object.el&&e.object.el!==n&&e.object.visible)return e;return null},setExistingIntersection:function(e,t){this.intersectedEl=e,this.el.emit("intersection",{el:e,distance:t})},clearExistingIntersection:function(){var e=this.intersectedEl;this.el.emit("intersectioncleared",{el:e}),this.intersectedEl=null},handleIntersection:function(e){var t=e.object.el;this.intersectedEl!==t&&this.clearExistingIntersection(),this.setExistingIntersection(t,e.distance)}})},3756:(e,t,n)=>{var r=n(3345).componentMixin,s=n(137).RM,i=n(4889),a=n(1886);e.exports.Component=s("rotation",a.extend({schema:{x:{default:0},y:{default:0},z:{default:0}},update:function(){var e=this.data,t=this.el.object3D;t.rotation.set(i.Math.degToRad(e.x),i.Math.degToRad(e.y),i.Math.degToRad(e.z)),t.rotation.order="YXZ"}},r))},5147:(e,t,n)=>{var r=n(3345).componentMixin,s=n(137).RM,i=n(1886),a=1e-5;e.exports.Component=s("scale",i.extend({schema:{x:{default:1},y:{default:1},z:{default:1}},update:function(){var e=this.data,t=this.el.object3D,n=0===e.x?a:e.x,r=0===e.y?a:e.y,s=0===e.z?a:e.z;t.scale.set(n,r,s)}},r))},4308:(e,t,n)=>{var r=n(6317),s=n(1886).diff,i=n(137).RM,a=n(4889),o=r("components:sound:warn");e.exports.Component=i("sound",{schema:{src:{default:""},on:{default:"click"},autoplay:{default:!1},loop:{default:!1},volume:{default:1}},init:function(){this.listener=null,this.sound=null},update:function(e){var t=this.data,n=s(e||{},t),r=this.el,i=this.sound,a=t.src,l="src"in n;if(l){if(!a)return void o("Audio source was not specified with `src`");i=this.setupSound()}(l||"autoplay"in n)&&(i.autoplay=t.autoplay),(l||"loop"in n)&&i.setLoop(t.loop),(l||"volume"in n)&&i.setVolume(t.volume),"on"in n&&(e&&e.on&&r.removeEventListener(e.on),r.addEventListener(t.on,this.play.bind(this))),l&&i.load(a)},remove:function(){this.el.object3D.remove(this.sound)},setupSound:function(){var e,t=this.el,n=this.sound;return n&&(this.stop(),t.object3D.remove(n)),e=this.listener=new a.AudioListener,n=this.sound=new a.Audio(e),t.object3D.add(n),n},play:function(){this.sound.play()},stop:function(){this.sound.stop()},pause:function(){this.sound.pause()}})},1566:(e,t,n)=>{var r=n(137).RM;e.exports.Component=r("visible",{schema:{default:!0},update:function(){this.el.object3D.visible=this.data},parse:function(e){return"false"!==e},stringify:function(e){return e.toString()}})},1007:(e,t,n)=>{var r,s,i=n(137).RM,a=n(4889);e.exports.Component=i("wasd-controls",{schema:{easing:{default:20},acceleration:{default:65},enabled:{default:!0},fly:{default:!1},wsAxis:{default:"z",oneOf:["x","y","z"]},adAxis:{default:"x",oneOf:["x","y","z"]},wsInverted:{default:!1},wsEnabled:{default:!0},adInverted:{default:!1},adEnabled:{default:!0}},init:function(){this.setupControls()},setupControls:function(){var e=this.el.sceneEl;this.prevTime=Date.now(),this.keys={},this.velocity=new a.Vector3,this.attachEventListeners(),e.addBehavior(this)},update:function(e){var t,n=this.data,r=n.acceleration,s=n.easing,i=this.velocity,a=window.performance.now(),o=(a-this.prevTime)/1e3,l=this.keys,u=n.adAxis,c=n.wsAxis,h=n.adInverted?-1:1,d=n.wsInverted?-1:1,p=this.el;if(this.prevTime=a,e||o>.2)return i[u]=0,void(i[c]=0);i[u]-=i[u]*s*o,i[c]-=i[c]*s*o;var f=p.getComputedAttribute("position");n.enabled&&(n.adEnabled&&(l[65]&&(i[u]-=h*r*o),l[68]&&(i[u]+=h*r*o)),n.wsEnabled&&(l[87]&&(i[c]-=d*r*o),l[83]&&(i[c]+=d*r*o))),t=this.getMovementVector(o),p.object3D.translateX(t.x),p.object3D.translateY(t.y),p.object3D.translateZ(t.z),p.setAttribute("position",{x:f.x+t.x,y:f.y+t.y,z:f.z+t.z})},attachEventListeners:function(){window.addEventListener("keydown",this.onKeyDown.bind(this),!1),window.addEventListener("keyup",this.onKeyUp.bind(this),!1)},onKeyDown:function(e){this.keys[e.keyCode]=!0},onKeyUp:function(e){this.keys[e.keyCode]=!1},getMovementVector:(r=new a.Vector3(0,0,0),s=new a.Euler(0,0,0,"YXZ"),function(e){var t=this.velocity,n=this.el.getAttribute("rotation");return r.copy(t),r.multiplyScalar(e),n?(this.data.fly||(n.x=0),s.set(a.Math.degToRad(n.x),a.Math.degToRad(n.y),0),r.applyEuler(s),r):r})})},551:(e,t,n)=>{var r=n(9985),s={alternate:"alternate",alternateReverse:"alternate-reverse",normal:"normal",reverse:"reverse"},i={linear:r.Easing.Linear.None,ease:r.Easing.Cubic.InOut,"ease-in":r.Easing.Cubic.In,"ease-out":r.Easing.Cubic.Out,"ease-in-out":r.Easing.Cubic.InOut,"ease-cubic":r.Easing.Cubic.In,"ease-in-cubic":r.Easing.Cubic.In,"ease-out-cubic":r.Easing.Cubic.Out,"ease-in-out-cubic":r.Easing.Cubic.InOut,"ease-quad":r.Easing.Quadratic.InOut,"ease-in-quad":r.Easing.Quadratic.In,"ease-out-quad":r.Easing.Quadratic.Out,"ease-in-out-quad":r.Easing.Quadratic.InOut,"ease-quart":r.Easing.Quartic.InOut,"ease-in-quart":r.Easing.Quartic.In,"ease-out-quart":r.Easing.Quartic.Out,"ease-in-out-quart":r.Easing.Quartic.InOut,"ease-quint":r.Easing.Quintic.InOut,"ease-in-quint":r.Easing.Quintic.In,"ease-out-quint":r.Easing.Quintic.Out,"ease-in-out-quint":r.Easing.Quintic.InOut,"ease-sine":r.Easing.Sinusoidal.InOut,"ease-in-sine":r.Easing.Sinusoidal.In,"ease-out-sine":r.Easing.Sinusoidal.Out,"ease-in-out-sine":r.Easing.Sinusoidal.InOut,"ease-expo":r.Easing.Exponential.InOut,"ease-in-expo":r.Easing.Exponential.In,"ease-out-expo":r.Easing.Exponential.Out,"ease-in-out-expo":r.Easing.Exponential.InOut,"ease-circ":r.Easing.Circular.InOut,"ease-in-circ":r.Easing.Circular.In,"ease-out-circ":r.Easing.Circular.Out,"ease-in-out-circ":r.Easing.Circular.InOut,"ease-elastic":r.Easing.Elastic.InOut,"ease-in-elastic":r.Easing.Elastic.In,"ease-out-elastic":r.Easing.Elastic.Out,"ease-in-out-elastic":r.Easing.Elastic.InOut,"ease-back":r.Easing.Back.InOut,"ease-in-back":r.Easing.Back.In,"ease-out-back":r.Easing.Back.Out,"ease-in-out-back":r.Easing.Back.InOut,"ease-bounce":r.Easing.Bounce.InOut,"ease-in-bounce":r.Easing.Bounce.In,"ease-out-bounce":r.Easing.Bounce.Out,"ease-in-out-bounce":r.Easing.Bounce.InOut},a={backwards:"backwards",both:"both",forwards:"forwards",none:"none"},o={attribute:"rotation",begin:"0",dur:1e3,easing:"ease",direction:s.normal,fill:a.forwards,from:void 0,repeat:0,to:void 0};e.exports.defaults=o,e.exports.directions=s,e.exports.easingFunctions=i,e.exports.fills=a,e.exports.repeats={indefinite:"indefinite"}},7786:(e,t,n)=>{var r=n(2740),s=n(1886).coerce,i=n(551),a=n(1886).coordinates,o=n(4688).registerElement,l=n(9985),u=n(1886),c=i.defaults,h=i.directions,d=i.easingFunctions,p=i.fills,f=i.repeats,m=a.isCoordinate;function g(e){return u.extend({},e)}function y(e,t,n,r,i){var o,l,u,c,h,d=t.split("."),p={},f={};return 2===d.length?(c=d[0],u=d[1],(l=e.components[c])||(e.setAttribute(c,""),l=e.components[c]),o=l.schema,p[t]=void 0===n?e.getComputedAttribute(c)[u]:n,p[t]=s(p[t],o,u),f[t]=s(r,o,u),h=function(n){e.setAttribute(c,u,n[t])}):r&&m(r)?(p=n?a.parse(n):i,f=a.parse(r),h=function(n){e.setAttribute(t,n)}):-1!==["true","false"].indexOf(r)?(p[t]=void 0!==n&&b(n),p[t]=v(p[t]),f[t]=v(b(r)),h=function(n){e.setAttribute(t,!!n[t])}):(p[t]=void 0===n?parseFloat(e.getAttribute(t)):parseFloat(n),f[t]=parseFloat(r),h=function(n){e.setAttribute(t,n[t])}),{from:p,partialSetAttribute:h,to:f}}function b(e){return"true"===e}function v(e){return e?1:0}e.exports.AAnimation=o("a-animation",{prototype:Object.create(r.prototype,{createdCallback:{value:function(){this.isRunning=!1,this.partialSetAttribute=function(){},this.tween=null}},attachedCallback:{value:function(){var e=this,t=e.el=e.parentNode;function n(){e.bindMethods(),e.applyMixin(),e.update(),e.load()}t.isNode?n():t.addEventListener("nodeready",n.bind(e))}},attributeChangedCallback:{value:function(e,t,n){this.hasLoaded&&this.isRunning&&(this.stop(),this.applyMixin(),this.update())}},getTween:{value:function(){var e,t,n,r,s=this,i=s.data,a=s.el,o=i.attribute,u=parseInt(i.begin,10),c=a.getComputedAttribute(o),m=s.getDirection(i.direction),b=d[i.easing],v=i.fill,x=i.repeat===f.indefinite?1/0:0,w=!1;return t=(e=y(a,o,i.from,i.to,c)).from,n=e.to,s.partialSetAttribute=e.partialSetAttribute,void 0===s.count&&(s.count=x===1/0?0:parseInt(i.repeat,10)),isNaN(u)&&(u=0),s.initialValue=g(c),x===1/0&&v===p.forwards&&-1!==[h.alternate,h.alternateReverse].indexOf(i.direction)&&(w=!0),m===h.reverse&&(r=n,n=g(t),t=g(r)),-1!==[p.backwards,p.both].indexOf(v)&&s.partialSetAttribute(t),new l.Tween(g(t)).to(n,i.dur).delay(u).easing(b).repeat(x).yoyo(w).onUpdate((function(){s.partialSetAttribute(this)})).onComplete(s.onCompleted.bind(s))}},update:{value:function(){var e=this.data.begin;this.removeEventListeners(this.evt),this.addEventListeners(e),this.evt=e,isNaN(e)||(this.stop(),this.start())},writable:window.debug},onCompleted:{value:function(){var e=this.data;if(this.isRunning=!1,-1!==[p.backwards,p.none].indexOf(e.fill)&&this.partialSetAttribute(this.initialValue),0===this.count)return this.count=void 0,void this.emit("animationend");this.isRunning=!1,this.count--,this.start()}},start:{value:function(){this.isRunning||(this.tween=this.getTween(),this.isRunning=!0,this.tween.start(),this.emit("animationstart"))},writable:!0},stop:{value:function(){var e=this.tween;e&&(e.stop(),this.isRunning=!1,this.partialSetAttribute(this.initialValue))},writable:!0},getDirection:{value:function(e){return e===h.alternate?(this.prevDirection=this.prevDirection===h.normal?h.reverse:h.normal,this.prevDirection):e===h.alternateReverse?(this.prevDirection=this.prevDirection===h.reverse?h.normal:h.reverse,this.prevDirection):e}},bindMethods:{value:function(){this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.onStateAdded=this.onStateAdded.bind(this),this.onStateRemoved=this.onStateRemoved.bind(this)}},addEventListeners:{value:function(e){var t=this.el,n=this.start.bind(this);u.splitString(e).forEach((function(e){t.addEventListener(e,n)})),t.addEventListener("stateadded",this.onStateAdded),t.addEventListener("stateremoved",this.onStateRemoved)}},removeEventListeners:{value:function(e){var t=this.el,n=this.start;u.splitString(e).forEach((function(e){t.removeEventListener(e,n)})),t.removeEventListener("stateadded",this.onStateAdded),t.removeEventListener("stateremoved",this.onStateRemoved)}},onStateAdded:{value:function(e){e.detail.state===this.data.begin&&this.start()},writable:!0},onStateRemoved:{value:function(e){e.detail.state===this.data.begin&&this.stop()},writable:!0},applyMixin:{value:function(){var e,t,n,r={};t=(n=document.querySelector("#"+this.getAttribute("mixin")))?u.getElData(n,c):{},e=u.getElData(this,c),u.extend(r,c,t,e),this.data=r}}})}),e.exports.getAnimationValues=y},9227:(e,t,n)=>{var r=n(4688),s=n(1886),i=r.isNode,a=r.registerElement;e.exports=a("a-assets",{prototype:Object.create(HTMLElement.prototype,{attachedCallback:{value:function(){this.attachEventListeners()}},attachEventListeners:{value:function(){var e=this,t=this.assetLoaded.bind(this);this.assetsPending=0;var n=this.querySelectorAll("*");Array.prototype.slice.call(n).forEach((function(n){i(n)&&(n.hasLoaded||(function(e){e.addEventListener("loaded",t)}(n),e.assetsPending++))})),this.assetsPending||t()}},assetLoaded:{value:function(){this.assetsPending--,this.assetsPending<=0&&this.load()}},load:{value:function(){this.hasLoaded||(this.hasLoaded=!0,s.fireEvent(this,"loaded",{bubbles:!1,detail:{}}))}}})})},1519:(e,t,n)=>{var r=n(6317),s=n(4688).registerElement,i=r("core:cubemap:warn");e.exports=s("a-cubemap",{prototype:Object.create(HTMLElement.prototype,{attachedCallback:{value:function(){this.srcs=this.validate()},writable:window.debug},validate:{value:function(){var e,t=this.querySelectorAll("[src]"),n=[];if(6===t.length){for(e=0;e<t.length;e++)n.push(t[e].getAttribute("src"));return n}i("<a-cubemap> did not contain exactly six elements each with a `src` attribute.")},writable:window.debug}})})},7503:(e,t,n)=>{var r=n(2740),s=n(137).wx,i=n(6317),a=n(4688),o=n(4889),l=a.isNode,u=i("core:a-entity"),c=i("core:a-entity:error"),h=a.registerElement,d={defaults:{value:{position:"",rotation:"",scale:"",visible:""}},createdCallback:{value:function(){this.states=[],this.components={},this.object3D=new o.Mesh}},attributeChangedCallback:{value:function(e,t,n){this.setEntityAttribute(e,t,n)}},attachedCallback:{value:function(){this.addToParent(),this.load()}},detachedCallback:{value:function(){this.parentEl&&!this.isScene&&(this.removeComponents(),this.parentEl.remove(this))}},applyMixin:{value:function(e){var t=this.getAttribute(e);e?this.updateComponent(e,t):this.updateComponents()}},mapStateMixins:{value:function(e,t){var n=this.getAttribute("mixin");n&&(n.split(" ").forEach((function(n){t(n+"-"+e)})),this.updateComponents())}},updateStateMixins:{value:function(e,t){var n=this;t=t||"";var r=e.split(" ");(t?t.split(" "):[]).filter((function(e){return r.indexOf(e)<0})).forEach((function(e){var t=Array.prototype.forEach,r=document.querySelectorAll("[id^="+e+"-]"),s=[];t.call(r,(function(e){s.push(e.id)})),s.forEach(n.unregisterMixin.bind(n))})),this.states.forEach((function(e){r.forEach((function(t){var r=t+"-"+e;n.registerMixin(r)}))}))}},add:{value:function(e){e.object3D||c("Trying to add an object3D that doesn't exist"),this.object3D.add(e.object3D)}},addToParent:{value:function(){var e=this,t=this.parentEl=this.parentNode,n=this.attachedToParent;function r(){e.attachedToParent=!0,t.add&&t.add(e)}t&&!n&&(l(t)?r():t.addEventListener("nodeready",r))}},load:{value:function(){this.hasLoaded||(this.object3D.el=this,this.addToParent(),this.updateComponents(),r.prototype.load.call(this))},writable:window.debug},remove:{value:function(e){this.object3D.remove(e.object3D)}},isComponentDefined:{value:function(e){var t=this.defaults[e],n=this.hasAttribute(e);return!(void 0===t&&!n)||this.isComponentMixedIn(e)}},isComponentMixedIn:{value:function(e){var t,n=!1,r=this.mixinEls;for(t=0;t<r.length&&!(n=r[t].hasAttribute(e));++t);return n}},initComponent:{value:function(e,t){var n;s[e]&&!this.components[e]&&((n=this.isComponentDefined(e))||t)&&(this.initComponentDependencies(e),t&&!n?this.setAttribute(e,""):this.components[e]=new s[e].Component(this),u("Component initialized: %s",e))}},initComponentDependencies:{value:function(e){var t,n=this;s[e]&&(t=s[e].dependencies)&&t.forEach((function(e){n.initComponent(e,!0)}))}},removeComponents:{value:function(){var e=this;Object.keys(this.components).forEach((function(t){e.components[t].remove(),delete e.components[t]}))}},updateComponents:{value:function(){var e=this;Object.keys(s).forEach((function(t){var n=e.getAttribute(t);e.updateComponent(t,n)}))}},updateComponent:{value:function(e,t){var n=this.components[e],r=e in this.defaults,s=this.isComponentMixedIn(e);if(n)return this.isComponentDefined(e)&&(null!==t||r||s)?("string"==typeof t&&(t=n.parse(t)),void n.updateAttributes(t)):(n.remove(),void delete this.components[e]);this.initComponent(e)}},removeAttribute:{value:function(e,t){s[e]&&(t?this.setAttribute(e,t,void 0):this.setEntityAttribute(e,void 0,null)),HTMLElement.prototype.removeAttribute.call(this,e)}},setEntityAttribute:{value:function(e,t,n){var r=s[e];if(t=t||this.getAttribute(e),this.hasLoaded)return"mixin"===e?(this.updateStateMixins(n,t),void this.updateComponents()):void(r&&this.updateComponent(e,n))}},setAttribute:{value:function(e,t,n){var i,a,o=this,l=s[e],u=t=void 0===t?"":t;l&&("string"==typeof t&&void 0!==n&&((i=o.getAttribute(e)||{})[t]=n,t=i),u=l.stringify(t)),a=this.getAttribute(e),r.prototype.setAttribute.call(o,e,u),o.setEntityAttribute(e,a,t)},writable:window.debug},getAttribute:{value:function(e){var t=s[e],n=HTMLElement.prototype.getAttribute.call(this,e);return t&&"string"==typeof n?t.parse(n):n},writable:window.debug},getComputedAttribute:{value:function(e){var t=this.components[e];return t?t.getData():HTMLElement.prototype.getAttribute.call(this,e)}},addState:{value:function(e){this.is(e)||(this.states.push(e),this.mapStateMixins(e,this.registerMixin.bind(this)),this.emit("stateadded",{state:e}))}},removeState:{value:function(e){var t=this.is(e);!1!==t&&(this.states.splice(t,1),this.mapStateMixins(e,this.unregisterMixin.bind(this)),this.emit("stateremoved",{state:e}))}},is:{value:function(e){var t=!1;return this.states.forEach((function(n,r){n===e&&(t=r)})),t}}};e.exports=h("a-entity",{prototype:Object.create(r.prototype,d)})},3815:(e,t,n)=>{var r=n(137).wx,s=n(2740),i=n(4688).registerElement;e.exports=i("a-mixin",{prototype:Object.create(s.prototype,{attachedCallback:{value:function(){this.load()},writable:window.debug},setAttribute:{value:function(e,t){var n=r[e];n&&"object"==typeof t&&(t=n.stringify(t)),HTMLElement.prototype.setAttribute.call(this,e,t)},writable:window.debug},getAttribute:{value:function(e){var t=r[e],n=HTMLElement.prototype.getAttribute.call(this,e);return t&&"string"==typeof n?t.parse(n):n},writable:window.debug}})})},2740:(e,t,n)=>{var r=n(4688).registerElement,s=n(1886);e.exports=r("a-node",{prototype:Object.create(HTMLElement.prototype,{createdCallback:{value:function(){this.isNode=!0,this.mixinEls=[],this.mixinObservers={}}},attachedCallback:{value:function(){var e=this.getAttribute("mixin");this.sceneEl=document.querySelector("a-scene"),this.emit("nodeready",{},!1),e&&this.updateMixins(e)}},detachedCallback:{value:function(){}},attributeChangedCallback:{value:function(e,t,n){"mixin"===e&&this.updateMixins(n,t)}},load:{value:function(){this.hasLoaded||(this.hasLoaded=!0,this.emit("loaded",{},!1))}},updateMixins:{value:function(e,t){var n=e.split(" "),r=(t?t.split(" "):[]).filter((function(e){return n.indexOf(e)<0}));this.mixinEls=[],r.forEach(this.unregisterMixin.bind(this)),n.forEach(this.registerMixin.bind(this))}},addMixin:{value:function(e){var t,n=this.getAttribute("mixin").split(" ");for(t=0;t<n.length;++t)if(n[t]===e)return;n.push(e),this.setAttribute("mixin",n.join(" "))}},removeMixin:{value:function(e){var t,n=this.getAttribute("mixin").split(" ");for(t=0;t<n.length;++t)if(n[t]===e)return n.splice(t,1),void this.setAttribute("mixin",n.join(" "))}},registerMixin:{value:function(e){var t=document.querySelector("a-mixin#"+e);t&&(this.attachMixinListener(t),this.mixinEls.push(t))}},setAttribute:{value:function(e,t){"mixin"===e&&this.updateMixins(t),HTMLElement.prototype.setAttribute.call(this,e,t)}},unregisterMixin:{value:function(e){var t,n=this.mixinEls;for(t=0;t<n.length;++t)if(e===n[t].id){n.splice(t,1);break}this.removeMixinListener(e)}},removeMixinListener:{value:function(e){var t=this.mixinObservers[e];t&&(t.disconnect(),this.mixinObservers[e]=null)}},attachMixinListener:{value:function(e){var t=this,n=e.id,r=this.mixinObservers[n];if(e&&!r){var s=new MutationObserver((function(e){var n=e[0].attributeName;t.applyMixin(n)}));s.observe(e,{attributes:!0}),this.mixinObservers[n]=s}}},applyMixin:{value:function(){}},emit:{value:function(e,t,n){var r=this;void 0===n&&(n=!0);var i={bubbles:!!n,detail:t=t||{}};return e.split(" ").map((function(e){return s.fireEvent(r,e,i)}))}},emitter:{value:function(e,t,n){var r=this;return function(){r.emit(e,t,n)}}}})})},4688:(e,t,n)=>{n(2765);var r=document.registerElement,s=e.exports.knownTags={};function i(e,t,n,r){t.forEach((function(t){!function(e,t,n,r){var s=n[t],i=r[t];if(s&&i&&s!==i){e[t]={value:function(){return i.apply(this,arguments),s.apply(this,arguments)},writable:window.debug}}}(e,t,n,r)}))}function a(e,t){Object.getOwnPropertyNames(e).forEach((function(n){var r;t[n]||(r=Object.getOwnPropertyDescriptor(e,n),t[n]={value:e[n],writable:r.writable})}))}e.exports.isNode=function(e){return e.tagName.toLowerCase()in s||e.isNode},e.exports.registerElement=document.registerElement=function(e,t){var n=Object.getPrototypeOf(t.prototype),u=t,c=o&&n===o.prototype,h=l&&n===l.prototype;return(c||h)&&function(e){s[e.toLowerCase()]=!0}(e),c&&(u=function(e){var t={};return i(t,["attachedCallback","attributeChangedCallback","createdCallback"],e,o.prototype),a(e,t),t}(t.prototype),u={prototype:Object.create(n,u)}),h&&(u=function(e){var t={};return i(t,["attachedCallback","attributeChangedCallback","createdCallback"],e,o.prototype),i(t,["attributeChangedCallback","attachedCallback","createdCallback","detachedCallback"],e,l.prototype),a(e,t),t}(t.prototype),u={prototype:Object.create(n,u)}),r.call(document,e,u)};var o=n(2740),l=n(7503)},2543:(e,t,n)=>{var r=n(4688),s=n(2654),i=n(4889),a=n(9985),o=n(1886),l=n(7503),u=n(4118),c=new i.Object3D,h=new i.VRControls(c),d=r.isNode,p="data-aframe-default-light",f="a-hidden",m=r.registerElement,g=o.isMobile(),y=e.exports=m("a-scene",{prototype:Object.create(l.prototype,{createdCallback:{value:function(){this.behaviors=[],this.defaultLightsEnabled=!0,this.enterVREl=null,this.insideIframe=window.top!==window.self,this.insideLoader=!1,this.isScene=!0,this.materials={},this.object3D=y.scene||new i.Scene,y.scene=this.object3D}},attachedCallback:{value:function(){this.isMobile=g;var e,t,n=this.resizeCanvas.bind(this);g&&((t=document.querySelector('meta[name="viewport"]'))||(e=document.getElementsByTagName("head")[0],(t=document.createElement("meta")).name="viewport",t.content="width=device-width,initial-scale=1,shrink-to-fit=no,user-scalable=no",e.appendChild(t),(t=document.createElement("meta")).name="apple-mobile-web-app-capable",t.content="yes",e.appendChild(t),(t=document.createElement("meta")).name="apple-mobile-web-app-status-bar-style",t.content="black",e.appendChild(t)),this.wakelock=new u),this.setupStats(),this.setupCanvas(),this.setupKeyboardShortcuts(),this.setupRenderer(),this.setupDefaultLights(),this.attachEventListeners(),this.attachFullscreenListeners(),this.attachOrientationListeners(),window.addEventListener("load",n)},writable:window.debug},attributeChangedCallback:{value:function(e,t,n){t!==n&&"stats"===e&&this.setupStats()}},detachedCallback:{value:function(){window.cancelAnimationFrame(this.animationFrameID),this.animationFrameID=null}},addBehavior:{value:function(e){this.behaviors.push(e)}},attachEventListeners:{value:function(){var e=this,t=this.elementLoadedCallback.bind(this);this.pendingElements=0;var n=document.querySelector("a-assets");n&&!n.hasLoaded&&(this.pendingElements++,s(n));var r=this.querySelectorAll("*");function s(e){e.addEventListener("loaded",t)}Array.prototype.slice.call(r).forEach((function(n){d(n)&&(e.pendingElements++,n.hasLoaded?t(n):s(n))}))}},attachOrientationListeners:{value:function(e){window.addEventListener("orientationchange",this.showOrientationModal.bind(this))}},showOrientationModal:{value:function(){o.isIOS()&&(o.isLandscape()||this.renderer!==this.stereoRenderer?this.orientationModal.classList.add(f):this.orientationModal.classList.remove(f))}},attachFullscreenListeners:{value:function(){function e(e){var t=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement;t&&this.isMobile?window.screen.orientation.lock("landscape"):window.screen.orientation.unlock(),t||(this.showUI(),this.setMonoRenderer()),this.wakelock&&this.wakelock.release()}document.addEventListener("mozfullscreenchange",e.bind(this)),document.addEventListener("webkitfullscreenchange",e.bind(this))}},attachMessageListeners:{value:function(){var e=this;window.addEventListener("message",(function(t){if(t.data)switch(t.data.type){case"loaderReady":e.insideLoader=!0,e.removeEnterVRButton();break;case"fullscreen":switch(t.data.data){case"enter":e.setStereoRenderer();break;case"exit":e.setMonoRenderer()}}}))}},elementLoadedCallback:{value:function(){this.pendingElements--,this.pendingElements>0||this.renderLoopStarted||(this.setupLoader(),this.cameraEl?(this.resizeCanvas(),this.render(),this.renderLoopStarted=!0,this.load(),this.checkUrlParameters()):this.setupDefaultCamera())}},checkUrlParameters:{value:function(){"vr"===o.getUrlParameter("mode")&&this.enterVR(),"false"===o.getUrlParameter("ui")&&this.hideUI()}},enterVR:{value:function(){this.hideUI(),this.setStereoRenderer(),this.setFullscreen(),this.showOrientationModal()}},exitVR:{value:function(){this.showUI(),this.setMonoRenderer(),this.orientationModal.classList.add(f)}},getCanvasSize:{value:function(){var e=this.canvas;return this.isMobile?{height:window.innerHeight,width:window.innerWidth}:(e.style.width="100%",e.style.height="100%",{height:e.offsetHeight,width:e.offsetWidth})}},hideUI:{value:function(){this.statsEl&&this.statsEl.classList.add(f),this.enterVREl&&this.enterVREl.classList.add(f)}},load:{value:function(){this.hasLoaded||0!==this.pendingElements||l.prototype.load.call(this)}},registerLight:{value:function(e){if(this.defaultLightsEnabled&&!e.hasAttribute(p)){for(var t=document.querySelectorAll("["+p+"]"),n=0;n<t.length;n++)this.removeChild(t[n]);this.defaultLightsEnabled=!1}}},registerMaterial:{value:function(e){this.materials[e.uuid]=e}},removeBehavior:{value:function(e){var t=this.behaviors,n=t.indexOf(e);-1!==n&&t.splice(n,1)}},removeEnterVR:{value:function(){this.enterVREl&&this.enterVREl.parentNode.removeChild(this.enterVREl)}},resizeCanvas:{value:function(){if(this.cameraEl){var e=this.cameraEl.components.camera.camera,t=this.getCanvasSize();e.aspect=t.width/t.height,e.updateProjectionMatrix(),this.renderer.setSize(t.width,t.height,!0)}}},setFullscreen:{value:function(){var e=this.canvas;this.isMobile?(this.wakelock&&this.wakelock.request(),e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen&&e.webkitRequestFullscreen()):this.stereoRenderer.setFullScreen(!0)}},setMonoRenderer:{value:function(){this.renderer=this.monoRenderer,this.resizeCanvas()}},setStereoRenderer:{value:function(){this.renderer=this.stereoRenderer,this.resizeCanvas()}},setupCanvas:{value:function(){var e=this.canvas=document.createElement("canvas");e.classList.add("a-canvas"),e.addEventListener("touchmove",(function(e){e.preventDefault()})),document.body.appendChild(e),window.addEventListener("resize",this.resizeCanvas.bind(this),!1)}},setupDefaultCamera:{value:function(){var e,t;this.cameraEl||((e=document.createElement("a-entity")).setAttribute("position",{x:0,y:1.8,z:4}),e.setAttribute("data-aframe-default-camera",""),(t=document.createElement("a-entity")).setAttribute("camera"),t.setAttribute("wasd-controls"),t.setAttribute("look-controls"),this.pendingElements++,t.addEventListener("loaded",this.elementLoadedCallback.bind(this)),e.appendChild(t),this.appendChild(e))}},setupDefaultLights:{value:function(){var e=document.createElement("a-entity");e.setAttribute("light",{color:"#fff",type:"ambient"}),e.setAttribute(p,""),this.appendChild(e);var t=document.createElement("a-entity");t.setAttribute("light",{color:"#fff",intensity:.2}),t.setAttribute("position",{x:-1,y:2,z:1}),t.setAttribute(p,""),this.appendChild(t)}},setupEnterVR:{value:function(){var e,t,n,r,s,i,a,o;this.enterVREl||(this.enterVREl=(e=this.enterVR.bind(this),o=g||window.hasNonPolyfillWebVRSupport,(a=document.createElement("div")).classList.add("a-enter-vr"),(t=document.createElement("div")).className="a-enter-vr-modal",r=document.createElement("p"),(n=document.createElement("a")).setAttribute("href","http://mozvr.com/#start"),n.setAttribute("target","_blank"),n.innerHTML="Learn more.",(i=document.createElement("button")).className="a-enter-vr-button",t&&(t.appendChild(r),t.appendChild(n),a.appendChild(t)),a.appendChild(i),function(){if(h.update(),0!==(s=c.quaternion)._x||0!==s._y||0!==s._z)return!0}()||g||(r.innerHTML="Your browser supports WebVR. To enter VR, connect a headset, or use a mobile phone.",a.setAttribute("data-a-enter-vr-no-headset","")),o?i.addEventListener("click",e):(r.innerHTML="Your browser does not support WebVR. To enter VR, use a VR-compatible browser, or a mobile phone.",a.setAttribute("data-a-enter-vr-no-webvr","")),a),document.body.appendChild(this.enterVREl))}},setupOrientationModal:{value:function(){var e=this.orientationModal=document.createElement("div");e.className="a-orientation-modal",e.classList.add(f);var t=document.createElement("button");t.innerHTML="Exit VR",t.addEventListener("click",this.exitVR.bind(this)),e.appendChild(t),document.body.appendChild(e)}},setupKeyboardShortcuts:{value:function(){var e=this;window.addEventListener("keyup",(function(t){70===t.keyCode&&e.enterVR(),90===t.keyCode&&h.resetSensor()}),!1)}},setupLoader:{value:function(){var e=this;e.insideIframe&&(e.attachMessageListeners(),e.vrLoaderMode().then((function(t){t?e.setStereoRenderer():e.setMonoRenderer(),window.top.postMessage({type:"ready"},"*")}))),e.insideLoader||(e.setupEnterVR(),e.setupOrientationModal())}},setupRenderer:{value:function(){var e=this.canvas,t="true"===this.getAttribute("antialias"),n=this.renderer=this.monoRenderer=y&&y.renderer||new i.WebGLRenderer({canvas:e,antialias:t,alpha:!0});n.setPixelRatio(window.devicePixelRatio),n.sortObjects=!1,y.renderer=n,this.stereoRenderer=new i.VREffect(n)},writable:window.debug},setupStats:{value:function(){var e="true"===this.getAttribute("stats"),t=this.statsEl=document.querySelector(".rs-base");e?(t&&t.classList.remove(f),this.stats||(this.stats=new s({CSSPath:"../../style/",values:{fps:{caption:"fps",below:30}},groups:[{caption:"Framerate",values:["fps","raf"]}]}),this.statsEl=document.querySelector(".rs-base"))):t&&t.classList.add(f)}},showUI:{value:function(){"true"===this.getAttribute("stats")&&this.statsEl.classList.remove(f),this.enterVREl&&this.enterVREl.classList.remove(f)}},unregisterMaterial:{value:function(e){delete this.materials[e.uuid]}},updateMaterials:{value:function(e){var t=this.materials;Object.keys(t).forEach((function(e){t[e].needsUpdate=!0}))},writable:window.debug},vrLoaderMode:{value:function(){return new Promise((function(e){var t=new MessageChannel;window.top.postMessage({type:"checkVr"},"*",[t.port2]),t.port1.onmessage=function(t){e(!!t.data.data.isVr)}}))}},render:{value:function(e){var t=this.cameraEl.components.camera.camera,n=this.stats;n&&(n("rAF").tick(),n("FPS").frame()),a.update(e),this.behaviors.forEach((function(e){e.update()})),this.renderer.render(this.object3D,t),n&&n().update(),this.animationFrameID=window.requestAnimationFrame(this.render.bind(this))}}})})},137:(e,t,n)=>{var r=n(6317),s=n(3469),i=n(1886),a=e.exports.wx={},o=r("core:register-component:error"),l=function(e){var t=e.getAttribute(this.name);this.el=e,this.data={},this.parseAttributes(t),this.init(),this.update()};function u(e,t){return null===t?e:"object"==typeof t?i.extend(e,t):void 0===t?e:t}l.prototype={schema:{},init:function(){},update:function(e){},remove:function(){},parse:function(e){return"string"!=typeof e?e:(t=s.parse(e),n=Object.keys(t),r={},n.forEach((function(e){var n=e.replace(/-([a-z])/g,(function(e){return e[1].toUpperCase()}));r[n]=t[e]})),r);var t,n,r},stringify:function(e){return"object"!=typeof e?e:s.stringify(e)},getData:function(){var e=this.data;return"object"!=typeof e?e:i.extend({},e)},updateAttributes:function(e){var t=u({},this.data);this.parseAttributes(e),i.deepEqual(t,this.data)||(this.update(t),this.el.emit("componentchanged",{name:this.name,newData:this.getData(),oldData:t}))},parseAttributes:function(e){var t=this,n={},r=t.schema,s=t.el.mixinEls,a=t.name;Object.keys(r).forEach((function(e){n[e]=r[e].default})),s.forEach((function(e){var t=e.getAttribute(a);n=u(n,t)})),n=u(n,e),this.data=i.coerce(n,r)}},e.exports.RM=function(e,t){var n,r={};return Object.keys(t).forEach((function(e){r[e]={value:t[e],writable:window.debug}})),a[e]&&o('The component "'+e+'" has been already registered'),((n=function(e){l.call(this,e)}).prototype=Object.create(l.prototype,r)).name=e,n.prototype.constructor=n,a[e]={Component:n,dependencies:n.prototype.dependencies,parse:n.prototype.parse.bind(n.prototype),schema:n.prototype.schema,stringify:n.prototype.stringify.bind(n.prototype)},n}},9040:(e,t,n)=>{n(2702).polyfill(),n(9019);var r=n(2543),s=n(137).wx,i=n(6317),a=n(137).RM,o=n(4688),l=window.THREE=n(4889),u=n(589),c=n(1886);n(9954);var h=n(2740),d=n(7503);window.hasNonPolyfillWebVRSupport=!!navigator.getVRDevices,window.WebVRConfig={TOUCH_PANNER_DISABLED:!0,MOUSE_KEYBOARD_CONTROLS_DISABLED:!0},n(4260),n(7786),n(9227),n(1519),n(3815),n(2543),e.exports={AEntity:d,ANode:h,AScene:r,components:s,debug:i,registerComponent:a,registerElement:o,THREE:l,utils:c,version:u.version}},8975:(e,t,n)=>{var r=n(3345),s=n(1886);e.exports=function(e,t,n){var i=e;return"object"==typeof e?(Object.keys(i).forEach((function(e){var n,r=t[e];r?void 0!==(n=r.default)&&(i[e]=a(i[e],n)):s.warn("Unknown component attribute: "+e)})),i):a(e,t.default);function a(e,t){if("string"!=typeof e)return e;switch(typeof t){case"boolean":return"true"===e;case"number":return parseFloat(e);case"object":return s.deepEqual(Object.keys(t),["x","y","z"])?r.parse(e):e;default:return e}}}},3345:e=>{var t=/\s*(-?\d*\.{0,1}\d+)\s*(-?\d*\.{0,1}\d+)\s*(-?\d*\.{0,1}\d+)\s*/;function n(e,t){var n;return t=t||{},"string"!=typeof e||null===e?e:(n=e.trim().replace(/\s+/g," ").split(" "),{x:parseFloat(n[0]||t.x.default),y:parseFloat(n[1]||t.y.default),z:parseFloat(n[2]||t.z.default)})}function r(e){return"object"!=typeof e?e:[e.x,e.y,e.z].join(" ")}e.exports.regex=t,e.exports.parse=n,e.exports.stringify=r,e.exports.isCoordinate=function(e){return t.test(e)},e.exports.componentMixin={parse:function(e){return n(e,this.schema)},stringify:r}},6317:(e,t,n)=>{var r=n(1227),s=n(7418),i={colors:{error:"red",info:"gray",warn:"orange",warning:"orange"}},a=function(e){var t=r(e);return t.color=function(e){var t=function(e){var t=e.split(":");return t[t.length-1]}(e);return i.colors&&i.colors[t]||null}(e),t};s(a,r);var o=function(){try{return window.localStorage}catch(e){}}();o&&(parseInt(o.logs,10)||"true"===o.logs)?a.enable("*"):(a.save(null),a=function(){return function(){}}),process.browser&&(window.logs=a),e.exports=a},1886:(e,t,n)=>{var r=n(7418);function s(e,t){var n,r=Object.keys(e),s=Object.keys(t);if(r.length!==s.length)return!1;if(0===r.length)return e===t;for(n=0;n<r.length;++n)if(e[r[n]]!==t[r[n]])return!1;return!0}e.exports.coerce=n(8975),e.exports.coordinates=n(3345),e.exports.fireEvent=function(e,t,n){(n=n||{}).detail=n.detail||{},n.detail.target=n.detail.target||e;var r=new CustomEvent(t,n);r.target=e,e.dispatchEvent(r)},e.exports.error=function(e){throw new Error(e)},e.exports.warn=function(){console.warn.apply(console,arguments)},e.exports.log=function(){console.log.apply(console,arguments)},e.exports.extend=r,e.exports.deepEqual=s,e.exports.diff=function(e,t){var n={},r=Object.keys(e);return Object.keys(t).forEach((function(e){-1===r.indexOf(e)&&r.push(e)})),r.forEach((function(r){var i=e[r],a=t[r],o=i&&a&&i.constructor===Object&&a.constructor===Object;(o&&!s(i,a)||!o&&i!==a)&&(n[r]=a)})),n},e.exports.isMobile=function(){var e,t=!1;return e=navigator.userAgent||navigator.vendor||window.opera,(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4)))&&(t=!0),i()&&(t=!0),t};var i=e.exports.isIOS=function(){return/iPad|iPhone|iPod/.test(navigator.platform)};e.exports.isLandscape=function(){return 90===window.orientation||-90===window.orientation},e.exports.splitString=function(e,t){void 0===t&&(t=" ");var n=new RegExp(t,"g");return(e=(e||"").replace(n,t)).split(t)},e.exports.getElData=function(e,t){t=t||{};var n={};return Object.keys(t).forEach((function(t){e.hasAttribute(t)&&(n[t]=e.getAttribute(t))})),n},e.exports.getUrlParameter=function(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var t=new RegExp("[\\?&]"+e+"=([^&#]*)").exec(location.search);return null===t?"":decodeURIComponent(t[1].replace(/\+/g," "))},e.exports.srcLoader=n(643)},643:(e,t,n)=>{var r=n(6317)("utils:src-loader:warn");function s(e,t,n){var s,o,l,u=i(e);if(u)!function(e,t){var n=new Image;n.addEventListener("load",(function(){t(!0)})),n.addEventListener("error",(function(){t(!1)})),n.src=e}(u,(function(e){e?t(u):n(u)}));else if(s=a(e))return o=s&&"IMG"===s.tagName,l=s&&"VIDEO"===s.tagName,o?t(s):l?n(s):void r('"%s" does not point to a valid <img> or <video> element',e)}function i(e){var t=e.match(/\url\((.+)\)/);if(t)return t[1]}function a(e){try{var t=document.querySelector(e);return t||r('No element was found matching the selector: "%s"',e),t}catch(t){return void r('"%s" is not a valid selector',e)}}e.exports={parseUrl:i,validateSrc:s,validateCubemapSrc:function(e,t){var n,i,o,l="",u=[];for(i=0;i<6;i++)l+="url((.+))s*,s*";function c(e){u.push(e),6===u.length&&t(u)}if(o=e.match(l))for(i=1;i<7;i++)s(o[i],c);else if(n=a(e))return"A-CUBEMAP"===n.tagName&&n.srcs?t(n.srcs):void r('Selector "%s" does not point to <a-cubemap>',e)}}},401:(e,t,n)=>{n(2406),n(9874),n(9236),n(2578),n(6699)},203:e=>{e.exports=THREE.ColladaLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ColladaLoader.prototype={constructor:THREE.ColladaLoader,crossOrigin:"anonymous",load:function(e,t,n,r){var s=this,i=void 0===s.path?THREE.LoaderUtils.extractUrlBase(e):s.path,a=new THREE.FileLoader(s.manager);a.setPath(s.path),a.load(e,(function(e){t(s.parse(e,i))}),n,r)},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},options:{set convertUpAxis(e){console.warn("THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.")}},setCrossOrigin:function(e){return this.crossOrigin=e,this},parse:function(e,t){function n(e,t){for(var n=[],r=e.childNodes,s=0,i=r.length;s<i;s++){var a=r[s];a.nodeName===t&&n.push(a)}return n}function r(e){if(0===e.length)return[];for(var t=e.trim().split(/\s+/),n=new Array(t.length),r=0,s=t.length;r<s;r++)n[r]=t[r];return n}function s(e){if(0===e.length)return[];for(var t=e.trim().split(/\s+/),n=new Array(t.length),r=0,s=t.length;r<s;r++)n[r]=parseFloat(t[r]);return n}function i(e){if(0===e.length)return[];for(var t=e.trim().split(/\s+/),n=new Array(t.length),r=0,s=t.length;r<s;r++)n[r]=parseInt(t[r]);return n}function a(e){return e.substring(1)}function o(e){return 0===Object.keys(e).length}function l(e){return void 0!==e&&!0===e.hasAttribute("meter")?parseFloat(e.getAttribute("meter")):1}function u(e){return void 0!==e?e.textContent:"Y_UP"}function c(e,t,r,s){var i=n(e,t)[0];if(void 0!==i)for(var a=n(i,r),o=0;o<a.length;o++)s(a[o])}function h(e,t){for(var n in e)e[n].build=t(e[n])}function d(e,t){return void 0!==e.build||(e.build=t(e)),e.build}function p(e){for(var t={inputs:{}},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];if(1===s.nodeType&&"input"===s.nodeName){var i=a(s.getAttribute("source")),o=s.getAttribute("semantic");t.inputs[o]=i}}return t}function f(e){var t={},n=e.getAttribute("target").split("/"),r=n.shift(),s=n.shift(),i=-1!==s.indexOf("("),o=-1!==s.indexOf(".");if(o)n=s.split("."),s=n.shift(),t.member=n.shift();else if(i){var l=s.split("(");s=l.shift();for(var u=0;u<l.length;u++)l[u]=parseInt(l[u].replace(/\)/,""));t.indices=l}return t.id=r,t.sid=s,t.arraySyntax=i,t.memberSyntax=o,t.sampler=a(e.getAttribute("source")),t}function m(e){var t=[],n=e.channels,r=e.samplers,s=e.sources;for(var i in n)if(n.hasOwnProperty(i)){var a=n[i],o=r[a.sampler],l=o.inputs.INPUT,u=o.inputs.OUTPUT;w(y(a,s[l],s[u]),t)}return t}function g(e){return d(qe.animations[e],m)}function y(e,t,n){var r,s,i,a,o,l,u=qe.nodes[e.id],c=Le(u.id),h=u.transforms[e.sid],d=u.matrix.clone().transpose(),p={};switch(h){case"matrix":for(i=0,a=t.array.length;i<a;i++)if(r=t.array[i],s=i*n.stride,void 0===p[r]&&(p[r]={}),!0===e.arraySyntax){var f=n.array[s],m=e.indices[0]+4*e.indices[1];p[r][m]=f}else for(o=0,l=n.stride;o<l;o++)p[r][o]=n.array[s+o];break;case"translate":case"rotate":case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',h)}var g=function(e,t){var n=[];for(var r in e)n.push({time:parseFloat(r),value:e[r]});n.sort((function(e,t){return e.time-t.time}));for(var s=0;s<16;s++)k(n,s,t.elements[s]);return n}(p,d);return{name:c.uuid,keyframes:g}}var b=new THREE.Vector3,v=new THREE.Vector3,x=new THREE.Quaternion;function w(e,t){for(var n=e.keyframes,r=e.name,s=[],i=[],a=[],o=[],l=0,u=n.length;l<u;l++){var c=n[l],h=c.time,d=c.value;Ee.fromArray(d).transpose(),Ee.decompose(b,x,v),s.push(h),i.push(b.x,b.y,b.z),a.push(x.x,x.y,x.z,x.w),o.push(v.x,v.y,v.z)}return i.length>0&&t.push(new THREE.VectorKeyframeTrack(r+".position",s,i)),a.length>0&&t.push(new THREE.QuaternionKeyframeTrack(r+".quaternion",s,a)),o.length>0&&t.push(new THREE.VectorKeyframeTrack(r+".scale",s,o)),t}function k(e,t,n){var r,s,i,a=!0;for(s=0,i=e.length;s<i;s++)void 0===(r=e[s]).value[t]?r.value[t]=null:a=!1;if(!0===a)for(s=0,i=e.length;s<i;s++)(r=e[s]).value[t]=n;else!function(e,t){for(var n,r,s=0,i=e.length;s<i;s++){var a=e[s];if(null===a.value[t]){if(n=S(e,s,t),r=E(e,s,t),null===n){a.value[t]=r.value[t];continue}if(null===r){a.value[t]=n.value[t];continue}I(a,n,r,t)}}}(e,t)}function S(e,t,n){for(;t>=0;){var r=e[t];if(null!==r.value[n])return r;t--}return null}function E(e,t,n){for(;t<e.length;){var r=e[t];if(null!==r.value[n])return r;t++}return null}function I(e,t,n,r){n.time-t.time!=0?e.value[r]=(e.time-t.time)*(n.value[r]-t.value[r])/(n.time-t.time)+t.value[r]:e.value[r]=t.value[r]}function T(e){for(var t=[],n=e.name,r=e.end-e.start||-1,s=e.animations,i=0,a=s.length;i<a;i++)for(var o=g(s[i]),l=0,u=o.length;l<u;l++)t.push(o[l]);return new THREE.AnimationClip(n,r,t)}function C(e){return d(qe.clips[e],T)}function N(e){for(var t={sources:{}},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"bind_shape_matrix":t.bindShapeMatrix=s(i.textContent);break;case"source":var a=i.getAttribute("id");t.sources[a]=se(i);break;case"joints":t.joints=A(i);break;case"vertex_weights":t.vertexWeights=M(i)}}return t}function A(e){for(var t={inputs:{}},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];if(1===s.nodeType&&"input"===s.nodeName){var i=s.getAttribute("semantic"),o=a(s.getAttribute("source"));t.inputs[i]=o}}return t}function M(e){for(var t={inputs:{}},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":var o=s.getAttribute("semantic"),l=a(s.getAttribute("source")),u=parseInt(s.getAttribute("offset"));t.inputs[o]={id:l,offset:u};break;case"vcount":t.vcount=i(s.textContent);break;case"v":t.v=i(s.textContent)}}return t}function _(e){var t={id:e.id},n=qe.geometries[t.id];return void 0!==e.skin&&(t.skin=function(e){var t,n,r,s={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},i=e.sources,a=e.vertexWeights,o=a.vcount,l=a.v,u=a.inputs.JOINT.offset,c=a.inputs.WEIGHT.offset,h=e.sources[e.joints.inputs.JOINT],d=e.sources[e.joints.inputs.INV_BIND_MATRIX],p=i[a.inputs.WEIGHT.id].array,f=0;for(t=0,r=o.length;t<r;t++){var m=o[t],g=[];for(n=0;n<m;n++){var y=l[f+u],b=p[l[f+c]];g.push({index:y,weight:b}),f+=2}for(g.sort(k),n=0;n<4;n++){var v=g[n];void 0!==v?(s.indices.array.push(v.index),s.weights.array.push(v.weight)):(s.indices.array.push(0),s.weights.array.push(0))}}for(e.bindShapeMatrix?s.bindMatrix=(new THREE.Matrix4).fromArray(e.bindShapeMatrix).transpose():s.bindMatrix=(new THREE.Matrix4).identity(),t=0,r=h.array.length;t<r;t++){var x=h.array[t],w=(new THREE.Matrix4).fromArray(d.array,t*d.stride).transpose();s.joints.push({name:x,boneInverse:w})}return s;function k(e,t){return t.weight-e.weight}}(e.skin),n.sources.skinIndices=t.skin.indices,n.sources.skinWeights=t.skin.weights),t}function R(e){return void 0!==e.build?e.build:e.init_from}function D(e){var t=qe.images[e];return void 0!==t?d(t,R):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",e),null)}function $(e){for(var t={surfaces:{},samplers:{}},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"newparam":L(s,t);break;case"technique":t.technique=z(s);break;case"extra":t.extra=W(s)}}return t}function L(e,t){for(var n=e.getAttribute("sid"),r=0,s=e.childNodes.length;r<s;r++){var i=e.childNodes[r];if(1===i.nodeType)switch(i.nodeName){case"surface":t.surfaces[n]=F(i);break;case"sampler2D":t.samplers[n]=O(i)}}}function F(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"init_from"===s.nodeName&&(t.init_from=s.textContent)}return t}function O(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"source"===s.nodeName&&(t.source=s.textContent)}return t}function z(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"constant":case"lambert":case"blinn":case"phong":t.type=s.nodeName,t.parameters=P(s)}}return t}function P(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":t[s.nodeName]=B(s);break;case"transparent":t[s.nodeName]={opaque:s.getAttribute("opaque"),data:B(s)}}}return t}function B(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"color":t[i.nodeName]=s(i.textContent);break;case"float":t[i.nodeName]=parseFloat(i.textContent);break;case"texture":t[i.nodeName]={id:i.getAttribute("texture"),extra:V(i)}}}return t}function V(e){for(var t={technique:{}},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"extra"===s.nodeName&&U(s,t)}return t}function U(e,t){for(var n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"technique"===s.nodeName&&H(s,t)}}function H(e,t){for(var n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":t.technique[s.nodeName]=parseFloat(s.textContent);break;case"wrapU":case"wrapV":"TRUE"===s.textContent.toUpperCase()?t.technique[s.nodeName]=1:"FALSE"===s.textContent.toUpperCase()?t.technique[s.nodeName]=0:t.technique[s.nodeName]=parseInt(s.textContent)}}}function W(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"technique"===s.nodeName&&(t.technique=G(s))}return t}function G(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"double_sided"===s.nodeName&&(t[s.nodeName]=parseInt(s.textContent))}return t}function j(e){return e}function q(e){var t,n,r=(t=e.url,d(qe.effects[t],j)),s=r.profile.technique,i=r.profile.extra;switch(s.type){case"phong":case"blinn":n=new THREE.MeshPhongMaterial;break;case"lambert":n=new THREE.MeshLambertMaterial;break;default:n=new THREE.MeshBasicMaterial}function a(e){var t=r.profile.samplers[e.id],n=null;if(void 0!==t?n=D(r.profile.surfaces[t.source].init_from):(console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),n=D(e.id)),null!==n){var s=function(e){var t=e.slice(2+(e.lastIndexOf(".")-1>>>0));return"tga"===(t=t.toLowerCase())?Be:He}(n);if(void 0!==s){var i=s.load(n),a=e.extra;if(void 0!==a&&void 0!==a.technique&&!1===o(a.technique)){var l=a.technique;i.wrapS=l.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,i.wrapT=l.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,i.offset.set(l.offsetU||0,l.offsetV||0),i.repeat.set(l.repeatU||1,l.repeatV||1)}else i.wrapS=THREE.RepeatWrapping,i.wrapT=THREE.RepeatWrapping;return i}return console.warn("THREE.ColladaLoader: Loader for texture %s not found.",n),null}return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",e.id),null}n.name=e.name;var l=s.parameters;for(var u in l){var c=l[u];switch(u){case"diffuse":c.color&&n.color.fromArray(c.color),c.texture&&(n.map=a(c.texture));break;case"specular":c.color&&n.specular&&n.specular.fromArray(c.color),c.texture&&(n.specularMap=a(c.texture));break;case"bump":c.texture&&(n.normalMap=a(c.texture));break;case"ambient":c.texture&&(n.lightMap=a(c.texture));break;case"shininess":c.float&&n.shininess&&(n.shininess=c.float);break;case"emission":c.color&&n.emissive&&n.emissive.fromArray(c.color),c.texture&&(n.emissiveMap=a(c.texture))}}var h=l.transparent,p=l.transparency;if(void 0===p&&h&&(p={float:1}),void 0===h&&p&&(h={opaque:"A_ONE",data:{color:[1,1,1,1]}}),h&&p)if(h.data.texture)n.transparent=!0;else{var f=h.data.color;switch(h.opaque){case"A_ONE":n.opacity=f[3]*p.float;break;case"RGB_ZERO":n.opacity=1-f[0]*p.float;break;case"A_ZERO":n.opacity=1-f[3]*p.float;break;case"RGB_ONE":n.opacity=f[0]*p.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',h.opaque)}n.opacity<1&&(n.transparent=!0)}return void 0!==i&&void 0!==i.technique&&1===i.technique.double_sided&&(n.side=THREE.DoubleSide),n}function K(e){return d(qe.materials[e],q)}function X(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if("technique_common"===n.nodeName)return Z(n)}return{}}function Z(e){for(var t={},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];switch(r.nodeName){case"perspective":case"orthographic":t.technique=r.nodeName,t.parameters=Q(r)}}return t}function Q(e){for(var t={},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];switch(r.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":t[r.nodeName]=parseFloat(r.textContent)}}return t}function Y(e){var t;switch(e.optics.technique){case"perspective":t=new THREE.PerspectiveCamera(e.optics.parameters.yfov,e.optics.parameters.aspect_ratio,e.optics.parameters.znear,e.optics.parameters.zfar);break;case"orthographic":var n=e.optics.parameters.ymag,r=e.optics.parameters.xmag,s=e.optics.parameters.aspect_ratio;r=void 0===r?n*s:r,n=void 0===n?r/s:n,r*=.5,n*=.5,t=new THREE.OrthographicCamera(-r,r,n,-n,e.optics.parameters.znear,e.optics.parameters.zfar);break;default:t=new THREE.PerspectiveCamera}return t.name=e.name,t}function J(e){var t=qe.cameras[e];return void 0!==t?d(t,Y):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",e),null)}function ee(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"directional":case"point":case"spot":case"ambient":t.technique=s.nodeName,t.parameters=te(s)}}return t}function te(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"color":var a=s(i.textContent);t.color=(new THREE.Color).fromArray(a);break;case"falloff_angle":t.falloffAngle=parseFloat(i.textContent);break;case"quadratic_attenuation":var o=parseFloat(i.textContent);t.distance=o?Math.sqrt(1/o):0}}return t}function ne(e){var t;switch(e.technique){case"directional":t=new THREE.DirectionalLight;break;case"point":t=new THREE.PointLight;break;case"spot":t=new THREE.SpotLight;break;case"ambient":t=new THREE.AmbientLight}return e.parameters.color&&t.color.copy(e.parameters.color),e.parameters.distance&&(t.distance=e.parameters.distance),t}function re(e){var t=qe.lights[e];return void 0!==t?d(t,ne):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",e),null)}function se(e){for(var t={array:[],stride:3},i=0;i<e.childNodes.length;i++){var a=e.childNodes[i];if(1===a.nodeType)switch(a.nodeName){case"float_array":t.array=s(a.textContent);break;case"Name_array":t.array=r(a.textContent);break;case"technique_common":var o=n(a,"accessor")[0];void 0!==o&&(t.stride=parseInt(o.getAttribute("stride")))}}return t}function ie(e){for(var t={},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];1===r.nodeType&&(t[r.getAttribute("semantic")]=a(r.getAttribute("source")))}return t}function ae(e){for(var t={type:e.nodeName,material:e.getAttribute("material"),count:parseInt(e.getAttribute("count")),inputs:{},stride:0,hasUV:!1},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":var o=a(s.getAttribute("source")),l=s.getAttribute("semantic"),u=parseInt(s.getAttribute("offset")),c=parseInt(s.getAttribute("set")),h=c>0?l+c:l;t.inputs[h]={id:o,offset:u},t.stride=Math.max(t.stride,u+1),"TEXCOORD"===l&&(t.hasUV=!0);break;case"vcount":t.vcount=i(s.textContent);break;case"p":t.p=i(s.textContent)}}return t}function oe(e){for(var t=0,n=0,r=e.length;n<r;n++)!0===e[n].hasUV&&t++;t>0&&t<e.length&&(e.uvsNeedsFix=!0)}function le(e){var t={},n=e.sources,r=e.vertices,s=e.primitives;if(0===s.length)return{};var i=function(e){for(var t={},n=0;n<e.length;n++){var r=e[n];void 0===t[r.type]&&(t[r.type]=[]),t[r.type].push(r)}return t}(s);for(var a in i){var o=i[a];oe(o),t[a]=ue(o,n,r)}return t}function ue(e,t,n){for(var r={},s={array:[],stride:0},i={array:[],stride:0},a={array:[],stride:0},o={array:[],stride:0},l={array:[],stride:0},u=[],c=[],h=new THREE.BufferGeometry,d=[],p=0,f=0;f<e.length;f++){var m=e[f],g=m.inputs,y=0;switch(m.type){case"lines":case"linestrips":y=2*m.count;break;case"triangles":y=3*m.count;break;case"polylist":for(var b=0;b<m.count;b++){var v=m.vcount[b];switch(v){case 3:y+=3;break;case 4:y+=6;break;default:y+=3*(v-2)}}break;default:console.warn("THREE.ColladaLoader: Unknow primitive type:",m.type)}for(var x in h.addGroup(p,y,f),p+=y,m.material&&d.push(m.material),g){var w=g[x];switch(x){case"VERTEX":for(var k in n){var S=n[k];switch(k){case"POSITION":var E=s.array.length;if(ce(m,t[S],w.offset,s.array),s.stride=t[S].stride,t.skinWeights&&t.skinIndices&&(ce(m,t.skinIndices,w.offset,u),ce(m,t.skinWeights,w.offset,c)),!1===m.hasUV&&!0===e.uvsNeedsFix){y=(s.array.length-E)/s.stride;for(var I=0;I<y;I++)a.array.push(0,0)}break;case"NORMAL":ce(m,t[S],w.offset,i.array),i.stride=t[S].stride;break;case"COLOR":ce(m,t[S],w.offset,l.array),l.stride=t[S].stride;break;case"TEXCOORD":ce(m,t[S],w.offset,a.array),a.stride=t[S].stride;break;case"TEXCOORD1":ce(m,t[S],w.offset,o.array),a.stride=t[S].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',k)}}break;case"NORMAL":ce(m,t[w.id],w.offset,i.array),i.stride=t[w.id].stride;break;case"COLOR":ce(m,t[w.id],w.offset,l.array),l.stride=t[w.id].stride;break;case"TEXCOORD":ce(m,t[w.id],w.offset,a.array),a.stride=t[w.id].stride;break;case"TEXCOORD1":ce(m,t[w.id],w.offset,o.array),o.stride=t[w.id].stride}}}return s.array.length>0&&h.addAttribute("position",new THREE.Float32BufferAttribute(s.array,s.stride)),i.array.length>0&&h.addAttribute("normal",new THREE.Float32BufferAttribute(i.array,i.stride)),l.array.length>0&&h.addAttribute("color",new THREE.Float32BufferAttribute(l.array,l.stride)),a.array.length>0&&h.addAttribute("uv",new THREE.Float32BufferAttribute(a.array,a.stride)),o.array.length>0&&h.addAttribute("uv2",new THREE.Float32BufferAttribute(o.array,o.stride)),u.length>0&&h.addAttribute("skinIndex",new THREE.Float32BufferAttribute(u,4)),c.length>0&&h.addAttribute("skinWeight",new THREE.Float32BufferAttribute(c,4)),r.data=h,r.type=e[0].type,r.materialKeys=d,r}function ce(e,t,n,r){var s=e.p,i=e.stride,a=e.vcount;function o(e){for(var t=s[e+n]*u,i=t+u;t<i;t++)r.push(l[t])}var l=t.array,u=t.stride;if(void 0!==e.vcount)for(var c=0,h=0,d=a.length;h<d;h++){var p=a[h];if(4===p){var f=c+1*i,m=c+2*i,g=c+3*i;o(c+0*i),o(f),o(g),o(f),o(m),o(g)}else if(3===p)f=c+1*i,m=c+2*i,o(c+0*i),o(f),o(m);else if(p>4)for(var y=1,b=p-2;y<=b;y++)f=c+i*y,m=c+i*(y+1),o(c+0*i),o(f),o(m);c+=i*p}else for(h=0,d=s.length;h<d;h+=i)o(h)}function he(e){return d(qe.geometries[e],le)}function de(e){return void 0!==e.build?e.build:e}function pe(e,t){for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"joint":t.joints[r.getAttribute("sid")]=fe(r);break;case"link":t.links.push(ge(r))}}}function fe(e){for(var t,n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"prismatic":case"revolute":t=me(r)}}return t}function me(e,t){t={sid:e.getAttribute("sid"),name:e.getAttribute("name")||"",axis:new THREE.Vector3,limits:{min:0,max:0},type:e.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"axis":var i=s(r.textContent);t.axis.fromArray(i);break;case"limits":var a=r.getElementsByTagName("max")[0],o=r.getElementsByTagName("min")[0];t.limits.max=parseFloat(a.textContent),t.limits.min=parseFloat(o.textContent)}}return t.limits.min>=t.limits.max&&(t.static=!0),t.middlePosition=(t.limits.min+t.limits.max)/2,t}function ge(e){for(var t={sid:e.getAttribute("sid"),name:e.getAttribute("name")||"",attachments:[],transforms:[]},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"attachment_full":t.attachments.push(ye(r));break;case"matrix":case"translate":case"rotate":t.transforms.push(be(r))}}return t}function ye(e){for(var t={joint:e.getAttribute("joint").split("/").pop(),transforms:[],links:[]},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"link":t.links.push(ge(r));break;case"matrix":case"translate":case"rotate":t.transforms.push(be(r))}}return t}function be(e){var t={type:e.nodeName},n=s(e.textContent);switch(t.type){case"matrix":t.obj=new THREE.Matrix4,t.obj.fromArray(n).transpose();break;case"translate":t.obj=new THREE.Vector3,t.obj.fromArray(n);break;case"rotate":t.obj=new THREE.Vector3,t.obj.fromArray(n),t.angle=THREE.Math.degToRad(n[3])}return t}function ve(e,t){for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];1===r.nodeType&&"technique_common"===r.nodeName&&xe(r,t)}}function xe(e,t){for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"inertia":t.inertia=s(r.textContent);break;case"mass":t.mass=s(r.textContent)[0]}}}function we(e){for(var t={target:e.getAttribute("target").split("/").pop()},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType&&"axis"===r.nodeName){var s=r.getElementsByTagName("param")[0];t.axis=s.textContent;var i=t.axis.split("inst_").pop().split("axis")[0];t.jointIndex=i.substr(0,i.length-1)}}return t}function ke(e){return void 0!==e.build?e.build:e}function Se(e){for(var t=[],n=ze.querySelector('[id="'+e.id+'"]'),r=0;r<n.childNodes.length;r++){var i=n.childNodes[r];if(1===i.nodeType)switch(i.nodeName){case"matrix":var a=s(i.textContent),o=(new THREE.Matrix4).fromArray(a).transpose();t.push({sid:i.getAttribute("sid"),type:i.nodeName,obj:o});break;case"translate":case"scale":a=s(i.textContent);var l=(new THREE.Vector3).fromArray(a);t.push({sid:i.getAttribute("sid"),type:i.nodeName,obj:l});break;case"rotate":a=s(i.textContent),l=(new THREE.Vector3).fromArray(a);var u=THREE.Math.degToRad(a[3]);t.push({sid:i.getAttribute("sid"),type:i.nodeName,obj:l,angle:u})}}return t}var Ee=new THREE.Matrix4,Ie=new THREE.Vector3;function Te(e){for(var t={name:e.getAttribute("name")||"",type:e.getAttribute("type"),id:e.getAttribute("id"),sid:e.getAttribute("sid"),matrix:new THREE.Matrix4,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"node":t.nodes.push(r.getAttribute("id")),Te(r);break;case"instance_camera":t.instanceCameras.push(a(r.getAttribute("url")));break;case"instance_controller":t.instanceControllers.push(Ce(r));break;case"instance_light":t.instanceLights.push(a(r.getAttribute("url")));break;case"instance_geometry":t.instanceGeometries.push(Ce(r));break;case"instance_node":t.instanceNodes.push(a(r.getAttribute("url")));break;case"matrix":var i=s(r.textContent);t.matrix.multiply(Ee.fromArray(i).transpose()),t.transforms[r.getAttribute("sid")]=r.nodeName;break;case"translate":i=s(r.textContent),Ie.fromArray(i),t.matrix.multiply(Ee.makeTranslation(Ie.x,Ie.y,Ie.z)),t.transforms[r.getAttribute("sid")]=r.nodeName;break;case"rotate":i=s(r.textContent);var o=THREE.Math.degToRad(i[3]);t.matrix.multiply(Ee.makeRotationAxis(Ie.fromArray(i),o)),t.transforms[r.getAttribute("sid")]=r.nodeName;break;case"scale":i=s(r.textContent),t.matrix.scale(Ie.fromArray(i)),t.transforms[r.getAttribute("sid")]=r.nodeName;break;case"extra":break;default:console.log(r)}}return $e(t.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",t.id):qe.nodes[t.id]=t,t}function Ce(e){for(var t={id:a(e.getAttribute("url")),materials:{},skeletons:[]},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];switch(r.nodeName){case"bind_material":for(var s=r.getElementsByTagName("instance_material"),i=0;i<s.length;i++){var o=s[i],l=o.getAttribute("symbol"),u=o.getAttribute("target");t.materials[l]=a(u)}break;case"skeleton":t.skeletons.push(a(r.textContent))}}return t}function Ne(e,t){var n,r,s,i=[],a=[];for(n=0;n<e.length;n++){var o=e[n];if($e(o))Ae(Le(o),t,i);else if(s=o,void 0!==qe.visualScenes[s])for(var l=qe.visualScenes[o].children,u=0;u<l.length;u++){var c=l[u];"JOINT"===c.type&&Ae(Le(c.id),t,i)}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",o)}for(n=0;n<t.length;n++)for(u=0;u<i.length;u++)if((r=i[u]).bone.name===t[n].name){a[n]=r,r.processed=!0;break}for(n=0;n<i.length;n++)!1===(r=i[n]).processed&&(a.push(r),r.processed=!0);var h=[],d=[];for(n=0;n<a.length;n++)r=a[n],h.push(r.bone),d.push(r.boneInverse);return new THREE.Skeleton(h,d)}function Ae(e,t,n){e.traverse((function(e){if(!0===e.isBone){for(var r,s=0;s<t.length;s++){var i=t[s];if(i.name===e.name){r=i.boneInverse;break}}void 0===r&&(r=new THREE.Matrix4),n.push({bone:e,boneInverse:r,processed:!1})}}))}function Me(e){for(var t,n=[],r=e.matrix,s=e.nodes,i=e.type,a=e.instanceCameras,o=e.instanceControllers,l=e.instanceLights,u=e.instanceGeometries,c=e.instanceNodes,h=0,p=s.length;h<p;h++)n.push(Le(s[h]));for(h=0,p=a.length;h<p;h++){var f=J(a[h]);null!==f&&n.push(f.clone())}for(h=0,p=o.length;h<p;h++)for(var m=o[h],g=(t=m.id,d(qe.controllers[t],_)),y=De(he(g.id),m.materials),b=Ne(m.skeletons,g.skin.joints),v=0,x=y.length;v<x;v++){var w;(w=y[v]).isSkinnedMesh&&(w.bind(b,g.skin.bindMatrix),w.normalizeSkinWeights()),n.push(w)}for(h=0,p=l.length;h<p;h++){var k=re(l[h]);null!==k&&n.push(k.clone())}for(h=0,p=u.length;h<p;h++)for(v=0,x=(y=De(he((m=u[h]).id),m.materials)).length;v<x;v++)n.push(y[v]);for(h=0,p=c.length;h<p;h++)n.push(Le(c[h]).clone());if(0===s.length&&1===n.length)w=n[0];else for(w="JOINT"===i?new THREE.Bone:new THREE.Group,h=0;h<n.length;h++)w.add(n[h]);return""===w.name&&(w.name="JOINT"===i?e.sid:e.name),w.matrix.copy(r),w.matrix.decompose(w.position,w.quaternion,w.scale),w}var _e=new THREE.MeshBasicMaterial({color:16711935});function Re(e,t){for(var n=[],r=0,s=e.length;r<s;r++){var i=t[e[r]];void 0===i?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",e[r]),n.push(_e)):n.push(K(i))}return n}function De(e,t){var n=[];for(var r in e){var s=e[r],i=Re(s.materialKeys,t);0===i.length&&("lines"===r||"linestrips"===r?i.push(new THREE.LineBasicMaterial):i.push(new THREE.MeshPhongMaterial));var a=void 0!==s.data.attributes.skinIndex;if(a)for(var o=0,l=i.length;o<l;o++)i[o].skinning=!0;var u,c=1===i.length?i[0]:i;switch(r){case"lines":u=new THREE.LineSegments(s.data,c);break;case"linestrips":u=new THREE.Line(s.data,c);break;case"triangles":case"polylist":u=a?new THREE.SkinnedMesh(s.data,c):new THREE.Mesh(s.data,c)}n.push(u)}return n}function $e(e){return void 0!==qe.nodes[e]}function Le(e){return d(qe.nodes[e],Me)}function Fe(e){var t=new THREE.Group;t.name=e.name;for(var n=e.children,r=0;r<n.length;r++){var s=n[r];t.add(Le(s.id))}return t}function Oe(e){return d(qe.visualScenes[e],Fe)}if(0===e.length)return{scene:new THREE.Scene};var ze=n((new DOMParser).parseFromString(e,"application/xml"),"COLLADA")[0],Pe=ze.getAttribute("version");console.log("THREE.ColladaLoader: File version",Pe);var Be,Ve,Ue=(Ve=n(ze,"asset")[0],{unit:l(n(Ve,"unit")[0]),upAxis:u(n(Ve,"up_axis")[0])}),He=new THREE.TextureLoader(this.manager);He.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin),THREE.TGALoader&&(Be=new THREE.TGALoader(this.manager)).setPath(this.resourcePath||t);var We=[],Ge={},je=0,qe={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};c(ze,"library_animations","animation",(function(e){for(var t={sources:{},samplers:{},channels:{}},n=0,r=e.childNodes.length;n<r;n++){var s,i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"source":s=i.getAttribute("id"),t.sources[s]=se(i);break;case"sampler":s=i.getAttribute("id"),t.samplers[s]=p(i);break;case"channel":s=i.getAttribute("target"),t.channels[s]=f(i);break;default:console.log(i)}}qe.animations[e.getAttribute("id")]=t})),c(ze,"library_animation_clips","animation_clip",(function(e){for(var t={name:e.getAttribute("id")||"default",start:parseFloat(e.getAttribute("start")||0),end:parseFloat(e.getAttribute("end")||0),animations:[]},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"instance_animation"===s.nodeName&&t.animations.push(a(s.getAttribute("url")))}qe.clips[e.getAttribute("id")]=t})),c(ze,"library_controllers","controller",(function(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"skin":t.id=a(s.getAttribute("source")),t.skin=N(s);break;case"morph":t.id=a(s.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.")}}qe.controllers[e.getAttribute("id")]=t})),c(ze,"library_images","image",(function(e){var t={init_from:n(e,"init_from")[0].textContent};qe.images[e.getAttribute("id")]=t})),c(ze,"library_effects","effect",(function(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"profile_COMMON"===s.nodeName&&(t.profile=$(s))}qe.effects[e.getAttribute("id")]=t})),c(ze,"library_materials","material",(function(e){for(var t={name:e.getAttribute("name")},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"instance_effect"===s.nodeName&&(t.url=a(s.getAttribute("url")))}qe.materials[e.getAttribute("id")]=t})),c(ze,"library_cameras","camera",(function(e){for(var t={name:e.getAttribute("name")},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"optics"===s.nodeName&&(t.optics=X(s))}qe.cameras[e.getAttribute("id")]=t})),c(ze,"library_lights","light",(function(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var s=e.childNodes[n];1===s.nodeType&&"technique_common"===s.nodeName&&(t=ee(s))}qe.lights[e.getAttribute("id")]=t})),c(ze,"library_geometries","geometry",(function(e){var t={name:e.getAttribute("name"),sources:{},vertices:{},primitives:[]},r=n(e,"mesh")[0];if(void 0!==r){for(var s=0;s<r.childNodes.length;s++){var i=r.childNodes[s];if(1===i.nodeType){var a=i.getAttribute("id");switch(i.nodeName){case"source":t.sources[a]=se(i);break;case"vertices":t.vertices=ie(i);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",i.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":t.primitives.push(ae(i));break;default:console.log(i)}}}qe.geometries[e.getAttribute("id")]=t}})),c(ze,"library_nodes","node",Te),c(ze,"library_visual_scenes","visual_scene",(function(e){var t={name:e.getAttribute("name"),children:[]};!function(e){for(var t=e.getElementsByTagName("node"),n=0;n<t.length;n++){var r=t[n];!1===r.hasAttribute("id")&&r.setAttribute("id","three_default_"+je++)}}(e);for(var r=n(e,"node"),s=0;s<r.length;s++)t.children.push(Te(r[s]));qe.visualScenes[e.getAttribute("id")]=t})),c(ze,"library_kinematics_models","kinematics_model",(function(e){for(var t={name:e.getAttribute("name")||"",joints:{},links:[]},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];1===r.nodeType&&"technique_common"===r.nodeName&&pe(r,t)}qe.kinematicsModels[e.getAttribute("id")]=t})),c(ze,"library_physics_models","physics_model",(function(e){for(var t={name:e.getAttribute("name")||"",rigidBodies:{}},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];1===r.nodeType&&"rigid_body"===r.nodeName&&(t.rigidBodies[r.getAttribute("name")]={},ve(r,t.rigidBodies[r.getAttribute("name")]))}qe.physicsModels[e.getAttribute("id")]=t})),c(ze,"scene","instance_kinematics_scene",(function(e){for(var t={bindJointAxis:[]},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];1===r.nodeType&&"bind_joint_axis"===r.nodeName&&t.bindJointAxis.push(we(r))}qe.kinematicsScenes[a(e.getAttribute("url"))]=t})),h(qe.animations,m),h(qe.clips,T),h(qe.controllers,_),h(qe.images,R),h(qe.effects,j),h(qe.materials,q),h(qe.cameras,Y),h(qe.lights,ne),h(qe.geometries,le),h(qe.visualScenes,Fe),function(){var e=qe.clips;if(!0===o(e)){if(!1===o(qe.animations)){var t=[];for(var n in qe.animations)for(var r=g(n),s=0,i=r.length;s<i;s++)t.push(r[s]);We.push(new THREE.AnimationClip("default",-1,t))}}else for(var n in e)We.push(C(n))}(),function(){var e=Object.keys(qe.kinematicsModels)[0],t=Object.keys(qe.kinematicsScenes)[0],n=Object.keys(qe.visualScenes)[0];if(void 0!==e&&void 0!==t){for(var r,s=(r=e,d(qe.kinematicsModels[r],de)),i=function(e){return d(qe.kinematicsScenes[e],ke)}(t),a=Oe(n),o=i.bindJointAxis,l={},u=0,c=o.length;u<c;u++){var h=o[u],p=ze.querySelector('[sid="'+h.target+'"]');if(p){var f=p.parentElement;g(h.jointIndex,f)}}var m=new THREE.Matrix4;Ge={joints:s&&s.joints,getJointValue:function(e){var t=l[e];if(t)return t.position;console.warn("THREE.ColladaLoader: Joint "+e+" doesn't exist.")},setJointValue:function(e,t){var n=l[e];if(n){var r=n.joint;if(t>r.limits.max||t<r.limits.min)console.warn("THREE.ColladaLoader: Joint "+e+" value "+t+" outside of limits (min: "+r.limits.min+", max: "+r.limits.max+").");else if(r.static)console.warn("THREE.ColladaLoader: Joint "+e+" is static.");else{var s=n.object,i=r.axis,a=n.transforms;Ee.identity();for(var o=0;o<a.length;o++){var u=a[o];if(u.sid&&-1!==u.sid.indexOf(e))switch(r.type){case"revolute":Ee.multiply(m.makeRotationAxis(i,THREE.Math.degToRad(t)));break;case"prismatic":Ee.multiply(m.makeTranslation(i.x*t,i.y*t,i.z*t));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+r.type)}else switch(u.type){case"matrix":Ee.multiply(u.obj);break;case"translate":Ee.multiply(m.makeTranslation(u.obj.x,u.obj.y,u.obj.z));break;case"scale":Ee.scale(u.obj);break;case"rotate":Ee.multiply(m.makeRotationAxis(u.obj,u.angle))}}s.matrix.copy(Ee),s.matrix.decompose(s.position,s.quaternion,s.scale),l[e].position=t}}else console.log("THREE.ColladaLoader: "+e+" does not exist.")}}}function g(e,t){var n=t.getAttribute("name"),r=s.joints[e];a.traverse((function(s){s.name===n&&(l[e]={object:s,transforms:Se(t),joint:r,position:r.zeroPosition})}))}}();var Ke=function(e){return Oe(a(n(e,"instance_visual_scene")[0].getAttribute("url")))}(n(ze,"scene")[0]);return"Z_UP"===Ue.upAxis&&Ke.quaternion.setFromEuler(new THREE.Euler(-Math.PI/2,0,0)),Ke.scale.multiplyScalar(Ue.unit),{animations:We,kinematics:Ge,library:qe,scene:Ke}}}},9434:e=>{e.exports=THREE.FBXLoader=function(){var e,t,n;function r(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager}function s(e){this.textureLoader=e}function i(){}function a(){}function o(){}function l(){}function u(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=void 0===t||t}function c(){}function h(e){var t=e.match(/FBXVersion: (\d+)/);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function d(e){return e/46186158e3}r.prototype={constructor:r,crossOrigin:"anonymous",load:function(e,t,n,r){var s=this,i=THREE.LoaderUtils.extractUrlBase(e),a=new THREE.FileLoader(this.manager);a.setResponseType("arraybuffer"),a.load(e,(function(n){try{var a=s.parse(n,i);t(a)}catch(t){setTimeout((function(){r&&r(t),s.manager.itemError(e)}),0)}}),n,r)},setCrossOrigin:function(e){return this.crossOrigin=e,this},parse:function(t,n){if(a="Kaydara FBX Binary  \0",(i=t).byteLength>=a.length&&a===S(i,0,a.length))e=(new l).parse(t);else{var r=S(t);if(!function(e){var t,n,r=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],s=0;for(var i=0;i<r.length;++i)if(n=void 0,n=e[(t=1)-1],e=e.slice(s+t),s++,n===r[i])return!1;return!0}(r))throw new Error("THREE.FBXLoader: Unknown format.");if(h(r)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+h(r));e=(new o).parse(r)}var i,a;return new s(new THREE.TextureLoader(this.manager).setPath(n).setCrossOrigin(this.crossOrigin)).parse(e)}},s.prototype={constructor:s,parse:function(){t=this.parseConnections();var e=this.parseImages(),r=this.parseTextures(e),s=this.parseMaterials(r),a=this.parseDeformers(),o=(new i).parse(a);return this.parseScene(a,o,s),n},parseConnections:function(){var t=new Map;return"Connections"in e&&e.Connections.connections.forEach((function(e){var n=e[0],r=e[1],s=e[2];t.has(n)||t.set(n,{parents:[],children:[]});var i={ID:r,relationship:s};t.get(n).parents.push(i),t.has(r)||t.set(r,{parents:[],children:[]});var a={ID:n,relationship:s};t.get(r).children.push(a)})),t},parseImages:function(){var t={},n={};if("Video"in e.Objects){var r=e.Objects.Video;for(var s in r){var i=r[s];if(t[u=parseInt(s)]=i.RelativeFilename||i.Filename,"Content"in i){var a=i.Content instanceof ArrayBuffer&&i.Content.byteLength>0,o="string"==typeof i.Content&&""!==i.Content;if(a||o){var l=this.parseImage(r[s]);n[i.RelativeFilename||i.Filename]=l}}}}for(var u in t){var c=t[u];void 0!==n[c]?t[u]=n[c]:t[u]=t[u].split("\\").pop()}return t},parseImage:function(e){var t,n=e.Content,r=e.RelativeFilename||e.Filename,s=r.slice(r.lastIndexOf(".")+1).toLowerCase();switch(s){case"bmp":t="image/bmp";break;case"jpg":case"jpeg":t="image/jpeg";break;case"png":t="image/png";break;case"tif":t="image/tiff";break;case"tga":if("function"!=typeof THREE.TGALoader)return void console.warn("FBXLoader: THREE.TGALoader is required to load TGA textures");null===THREE.Loader.Handlers.get(".tga")&&THREE.Loader.Handlers.add(/\.tga$/i,new THREE.TGALoader),t="image/tga";break;default:return void console.warn('FBXLoader: Image type "'+s+'" is not supported.')}if("string"==typeof n)return"data:"+t+";base64,"+n;var i=new Uint8Array(n);return window.URL.createObjectURL(new Blob([i],{type:t}))},parseTextures:function(t){var n=new Map;if("Texture"in e.Objects){var r=e.Objects.Texture;for(var s in r){var i=this.parseTexture(r[s],t);n.set(parseInt(s),i)}}return n},parseTexture:function(e,t){var n=this.loadTexture(e,t);n.ID=e.id,n.name=e.attrName;var r=e.WrapModeU,s=e.WrapModeV,i=void 0!==r?r.value:0,a=void 0!==s?s.value:0;if(n.wrapS=0===i?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,n.wrapT=0===a?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,"Scaling"in e){var o=e.Scaling.value;n.repeat.x=o[0],n.repeat.y=o[1]}return n},loadTexture:function(e,n){var r,s,i=this.textureLoader.path,a=t.get(e.id).children;void 0!==a&&a.length>0&&void 0!==n[a[0].ID]&&(0!==(r=n[a[0].ID]).indexOf("blob:")&&0!==r.indexOf("data:")||this.textureLoader.setPath(void 0));var o=e.FileName.slice(-3).toLowerCase();if("tga"===o){var l=THREE.Loader.Handlers.get(".tga");null===l?(console.warn("FBXLoader: TGALoader not found, creating empty placeholder texture for",r),s=new THREE.Texture):s=l.load(r)}else"psd"===o?(console.warn("FBXLoader: PSD textures are not supported, creating empty placeholder texture for",r),s=new THREE.Texture):s=this.textureLoader.load(r);return this.textureLoader.setPath(i),s},parseMaterials:function(t){var n=new Map;if("Material"in e.Objects){var r=e.Objects.Material;for(var s in r){var i=this.parseMaterial(r[s],t);null!==i&&n.set(parseInt(s),i)}}return n},parseMaterial:function(e,n){var r=e.id,s=e.attrName,i=e.ShadingModel;if("object"==typeof i&&(i=i.value),!t.has(r))return null;var a,o=this.parseParameters(e,n,r);switch(i.toLowerCase()){case"phong":a=new THREE.MeshPhongMaterial;break;case"lambert":a=new THREE.MeshLambertMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',i),a=new THREE.MeshPhongMaterial({color:3342591})}return a.setValues(o),a.name=s,a},parseParameters:function(e,n,r){var s={};e.BumpFactor&&(s.bumpScale=e.BumpFactor.value),e.Diffuse?s.color=(new THREE.Color).fromArray(e.Diffuse.value):e.DiffuseColor&&"Color"===e.DiffuseColor.type&&(s.color=(new THREE.Color).fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(s.displacementScale=e.DisplacementFactor.value),e.Emissive?s.emissive=(new THREE.Color).fromArray(e.Emissive.value):e.EmissiveColor&&"Color"===e.EmissiveColor.type&&(s.emissive=(new THREE.Color).fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(s.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(s.opacity=parseFloat(e.Opacity.value)),s.opacity<1&&(s.transparent=!0),e.ReflectionFactor&&(s.reflectivity=e.ReflectionFactor.value),e.Shininess&&(s.shininess=e.Shininess.value),e.Specular?s.specular=(new THREE.Color).fromArray(e.Specular.value):e.SpecularColor&&"Color"===e.SpecularColor.type&&(s.specular=(new THREE.Color).fromArray(e.SpecularColor.value));var i=this;return t.get(r).children.forEach((function(e){var t=e.relationship;switch(t){case"Bump":s.bumpMap=i.getTexture(n,e.ID);break;case"DiffuseColor":s.map=i.getTexture(n,e.ID);break;case"DisplacementColor":s.displacementMap=i.getTexture(n,e.ID);break;case"EmissiveColor":s.emissiveMap=i.getTexture(n,e.ID);break;case"NormalMap":s.normalMap=i.getTexture(n,e.ID);break;case"ReflectionColor":s.envMap=i.getTexture(n,e.ID),s.envMap.mapping=THREE.EquirectangularReflectionMapping;break;case"SpecularColor":s.specularMap=i.getTexture(n,e.ID);break;case"TransparentColor":s.alphaMap=i.getTexture(n,e.ID),s.transparent=!0;break;default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",t)}})),s},getTexture:function(n,r){return"LayeredTexture"in e.Objects&&r in e.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),r=t.get(r).children[0].ID),n.get(r)},parseDeformers:function(){var n={},r={};if("Deformer"in e.Objects){var s=e.Objects.Deformer;for(var i in s){var a=s[i],o=t.get(parseInt(i));if("Skin"===a.attrType){var l=this.parseSkeleton(o,s);l.ID=i,o.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),l.geometryID=o.parents[0].ID,n[i]=l}else if("BlendShape"===a.attrType){var u={id:i};u.rawTargets=this.parseMorphTargets(o,s),u.id=i,o.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),r[i]=u}}}return{skeletons:n,morphTargets:r}},parseSkeleton:function(e,t){var n=[];return e.children.forEach((function(e){var r=t[e.ID];if("Cluster"===r.attrType){var s={ID:e.ID,indices:[],weights:[],transform:(new THREE.Matrix4).fromArray(r.Transform.a),transformLink:(new THREE.Matrix4).fromArray(r.TransformLink.a),linkMode:r.Mode};"Indexes"in r&&(s.indices=r.Indexes.a,s.weights=r.Weights.a),n.push(s)}})),{rawBones:n,bones:[]}},parseMorphTargets:function(e,n){for(var r=[],s=0;s<e.children.length;s++){if(8===s){console.warn("FBXLoader: maximum of 8 morph targets supported. Ignoring additional targets.");break}var i=e.children[s],a=n[i.ID],o={name:a.attrName,initialWeight:a.DeformPercent,id:a.id,fullWeights:a.FullWeights.a};if("BlendShapeChannel"!==a.attrType)return;t.get(parseInt(i.ID)).children.forEach((function(e){void 0===e.relationship&&(o.geoID=e.ID)})),r.push(o)}return r},parseScene:function(r,s,i){n=new THREE.Group;var o=this.parseModels(r.skeletons,s,i),l=e.Objects.Model,u=this;o.forEach((function(e){var r=l[e.ID];u.setLookAtProperties(e,r),t.get(e.ID).parents.forEach((function(t){var n=o.get(t.ID);void 0!==n&&n.add(e)})),null===e.parent&&n.add(e)})),this.bindSkeleton(r.skeletons,s,o),this.createAmbientLight(),this.setupMorphMaterials();var c=(new a).parse();1===n.children.length&&n.children[0].isGroup&&(n.children[0].animations=c,n=n.children[0]),n.animations=c},parseModels:function(n,r,s){var i=new Map,a=e.Objects.Model;for(var o in a){var l=parseInt(o),u=a[o],c=t.get(l),h=this.buildSkeleton(c,n,l,u.attrName);if(!h){switch(u.attrType){case"Camera":h=this.createCamera(c);break;case"Light":h=this.createLight(c);break;case"Mesh":h=this.createMesh(c,r,s);break;case"NurbsCurve":h=this.createCurve(c,r);break;default:h=new THREE.Group}h.name=THREE.PropertyBinding.sanitizeNodeName(u.attrName),h.ID=l}this.setModelTransforms(h,u),i.set(l,h)}return i},buildSkeleton:function(e,t,n,r){var s=null;return e.parents.forEach((function(e){for(var i in t){var a=t[i];a.rawBones.forEach((function(t,i){if(t.ID===e.ID){var o=s;(s=new THREE.Bone).matrixWorld.copy(t.transformLink),s.name=THREE.PropertyBinding.sanitizeNodeName(r),s.ID=n,a.bones[i]=s,null!==o&&s.add(o)}}))}})),s},createCamera:function(t){var n,r;if(t.children.forEach((function(t){var n=e.Objects.NodeAttribute[t.ID];void 0!==n&&(r=n)})),void 0===r)n=new THREE.Object3D;else{var s=0;void 0!==r.CameraProjectionType&&1===r.CameraProjectionType.value&&(s=1);var i=1;void 0!==r.NearPlane&&(i=r.NearPlane.value/1e3);var a=1e3;void 0!==r.FarPlane&&(a=r.FarPlane.value/1e3);var o=window.innerWidth,l=window.innerHeight;void 0!==r.AspectWidth&&void 0!==r.AspectHeight&&(o=r.AspectWidth.value,l=r.AspectHeight.value);var u=o/l,c=45;void 0!==r.FieldOfView&&(c=r.FieldOfView.value);var h=r.FocalLength?r.FocalLength.value:null;switch(s){case 0:n=new THREE.PerspectiveCamera(c,u,i,a),null!==h&&n.setFocalLength(h);break;case 1:n=new THREE.OrthographicCamera(-o/2,o/2,l/2,-l/2,i,a);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+s+"."),n=new THREE.Object3D}}return n},createLight:function(t){var n,r;if(t.children.forEach((function(t){var n=e.Objects.NodeAttribute[t.ID];void 0!==n&&(r=n)})),void 0===r)n=new THREE.Object3D;else{var s;s=void 0===r.LightType?0:r.LightType.value;var i=16777215;void 0!==r.Color&&(i=(new THREE.Color).fromArray(r.Color.value));var a=void 0===r.Intensity?1:r.Intensity.value/100;void 0!==r.CastLightOnObject&&0===r.CastLightOnObject.value&&(a=0);var o=0;switch(void 0!==r.FarAttenuationEnd&&(o=void 0!==r.EnableFarAttenuation&&0===r.EnableFarAttenuation.value?0:r.FarAttenuationEnd.value),s){case 0:n=new THREE.PointLight(i,a,o,1);break;case 1:n=new THREE.DirectionalLight(i,a);break;case 2:var l=Math.PI/3;void 0!==r.InnerAngle&&(l=THREE.Math.degToRad(r.InnerAngle.value));var u=0;void 0!==r.OuterAngle&&(u=THREE.Math.degToRad(r.OuterAngle.value),u=Math.max(u,1)),n=new THREE.SpotLight(i,a,o,l,u,1);break;default:console.warn("THREE.FBXLoader: Unknown light type "+r.LightType.value+", defaulting to a THREE.PointLight."),n=new THREE.PointLight(i,a)}void 0!==r.CastShadows&&1===r.CastShadows.value&&(n.castShadow=!0)}return n},createMesh:function(e,t,n){var r,s=null,i=null,a=[];return e.children.forEach((function(e){t.has(e.ID)&&(s=t.get(e.ID)),n.has(e.ID)&&a.push(n.get(e.ID))})),a.length>1?i=a:a.length>0?i=a[0]:(i=new THREE.MeshPhongMaterial({color:13421772}),a.push(i)),"color"in s.attributes&&a.forEach((function(e){e.vertexColors=THREE.VertexColors})),s.FBX_Deformer?(a.forEach((function(e){e.skinning=!0})),r=new THREE.SkinnedMesh(s,i)):r=new THREE.Mesh(s,i),r},createCurve:function(e,t){var n=e.children.reduce((function(e,n){return t.has(n.ID)&&(e=t.get(n.ID)),e}),null),r=new THREE.LineBasicMaterial({color:3342591,linewidth:1});return new THREE.Line(n,r)},setModelTransforms:function(e,t){var n={};"RotationOrder"in t&&(n.eulerOrder=parseInt(t.RotationOrder.value)),"Lcl_Translation"in t&&(n.translation=t.Lcl_Translation.value),"RotationOffset"in t&&(n.rotationOffset=t.RotationOffset.value),"Lcl_Rotation"in t&&(n.rotation=t.Lcl_Rotation.value),"PreRotation"in t&&(n.preRotation=t.PreRotation.value),"PostRotation"in t&&(n.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(n.scale=t.Lcl_Scaling.value);var r=x(n);e.applyMatrix(r)},setLookAtProperties:function(r,s){"LookAtProperty"in s&&t.get(r.ID).children.forEach((function(t){if("LookAtProperty"===t.relationship){var s=e.Objects.Model[t.ID];if("Lcl_Translation"in s){var i=s.Lcl_Translation.value;void 0!==r.target?(r.target.position.fromArray(i),n.add(r.target)):r.lookAt((new THREE.Vector3).fromArray(i))}}}))},bindSkeleton:function(e,n,r){var s=this.parsePoseNodes();for(var i in e){var a=e[i];t.get(parseInt(a.ID)).parents.forEach((function(e){if(n.has(e.ID)){var i=e.ID;t.get(i).parents.forEach((function(e){r.has(e.ID)&&r.get(e.ID).bind(new THREE.Skeleton(a.bones),s[e.ID])}))}}))}},parsePoseNodes:function(){var t={};if("Pose"in e.Objects){var n=e.Objects.Pose;for(var r in n)if("BindPose"===n[r].attrType){var s=n[r].PoseNode;Array.isArray(s)?s.forEach((function(e){t[e.Node]=(new THREE.Matrix4).fromArray(e.Matrix.a)})):t[s.Node]=(new THREE.Matrix4).fromArray(s.Matrix.a)}}return t},createAmbientLight:function(){if("GlobalSettings"in e&&"AmbientColor"in e.GlobalSettings){var t=e.GlobalSettings.AmbientColor.value,r=t[0],s=t[1],i=t[2];if(0!==r||0!==s||0!==i){var a=new THREE.Color(r,s,i);n.add(new THREE.AmbientLight(a,1))}}},setupMorphMaterials:function(){n.traverse((function(e){if(e.isMesh&&(e.geometry.morphAttributes.position||e.geometry.morphAttributes.normal)){var t=e.uuid,r=e.material.uuid,s=!1;n.traverse((function(e){e.isMesh&&e.material.uuid===r&&e.uuid!==t&&(s=!0)})),!0===s&&(e.material=e.material.clone()),e.material.morphTargets=!0}}))}},i.prototype={constructor:i,parse:function(n){var r=new Map;if("Geometry"in e.Objects){var s=e.Objects.Geometry;for(var i in s){var a=t.get(parseInt(i)),o=this.parseGeometry(a,s[i],n);r.set(parseInt(i),o)}}return r},parseGeometry:function(e,t,n){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,n);case"NurbsCurve":return this.parseNurbsGeometry(t)}},parseMeshGeometry:function(t,n,r){var s=r.skeletons,i=r.morphTargets,a=t.parents.map((function(t){return e.Objects.Model[t.ID]}));if(0!==a.length){var o=t.children.reduce((function(e,t){return void 0!==s[t.ID]&&(e=s[t.ID]),e}),null),l=t.children.reduce((function(e,t){return void 0!==i[t.ID]&&(e=i[t.ID]),e}),null),u=a[0],c={};"RotationOrder"in u&&(c.eulerOrder=u.RotationOrder.value),"GeometricTranslation"in u&&(c.translation=u.GeometricTranslation.value),"GeometricRotation"in u&&(c.rotation=u.GeometricRotation.value),"GeometricScaling"in u&&(c.scale=u.GeometricScaling.value);var h=x(c);return this.genGeometry(n,o,l,h)}},genGeometry:function(e,t,n,r){var s=new THREE.BufferGeometry;e.attrName&&(s.name=e.attrName);var i=this.parseGeoNode(e,t),a=this.genBuffers(i),o=new THREE.Float32BufferAttribute(a.vertex,3);if(r.applyToBufferAttribute(o),s.addAttribute("position",o),a.colors.length>0&&s.addAttribute("color",new THREE.Float32BufferAttribute(a.colors,3)),t&&(s.addAttribute("skinIndex",new THREE.Uint16BufferAttribute(a.weightsIndices,4)),s.addAttribute("skinWeight",new THREE.Float32BufferAttribute(a.vertexWeights,4)),s.FBX_Deformer=t),a.normal.length>0){var l=new THREE.Float32BufferAttribute(a.normal,3);(new THREE.Matrix3).getNormalMatrix(r).applyToBufferAttribute(l),s.addAttribute("normal",l)}if(a.uvs.forEach((function(e,t){var n="uv"+(t+1).toString();0===t&&(n="uv"),s.addAttribute(n,new THREE.Float32BufferAttribute(a.uvs[t],2))})),i.material&&"AllSame"!==i.material.mappingType){var u=a.materialIndex[0],c=0;if(a.materialIndex.forEach((function(e,t){e!==u&&(s.addGroup(c,t-c,u),u=e,c=t)})),s.groups.length>0){var h=s.groups[s.groups.length-1],d=h.start+h.count;d!==a.materialIndex.length&&s.addGroup(d,a.materialIndex.length-d,u)}0===s.groups.length&&s.addGroup(0,a.materialIndex.length,a.materialIndex[0])}return this.addMorphTargets(s,e,n,r),s},parseGeoNode:function(e,t){var n={};if(n.vertexPositions=void 0!==e.Vertices?e.Vertices.a:[],n.vertexIndices=void 0!==e.PolygonVertexIndex?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(n.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(n.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(n.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){n.uv=[];for(var r=0;e.LayerElementUV[r];)n.uv.push(this.parseUVs(e.LayerElementUV[r])),r++}return n.weightTable={},null!==t&&(n.skeleton=t,t.rawBones.forEach((function(e,t){e.indices.forEach((function(r,s){void 0===n.weightTable[r]&&(n.weightTable[r]=[]),n.weightTable[r].push({id:t,weight:e.weights[s]})}))}))),n},genBuffers:function(e){var t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]},n=0,r=0,s=!1,i=[],a=[],o=[],l=[],u=[],c=[],h=this;return e.vertexIndices.forEach((function(d,p){var m=!1;d<0&&(d^=-1,m=!0);var g=[],y=[];if(i.push(3*d,3*d+1,3*d+2),e.color){var b=f(p,n,d,e.color);o.push(b[0],b[1],b[2])}if(e.skeleton){if(void 0!==e.weightTable[d]&&e.weightTable[d].forEach((function(e){y.push(e.weight),g.push(e.id)})),y.length>4){s||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),s=!0);var v=[0,0,0,0],x=[0,0,0,0];y.forEach((function(e,t){var n=e,r=g[t];x.forEach((function(e,t,s){if(n>e){s[t]=n,n=e;var i=v[t];v[t]=r,r=i}}))})),g=v,y=x}for(;y.length<4;)y.push(0),g.push(0);for(var w=0;w<4;++w)u.push(y[w]),c.push(g[w])}if(e.normal&&(b=f(p,n,d,e.normal),a.push(b[0],b[1],b[2])),e.material&&"AllSame"!==e.material.mappingType)var k=f(p,n,d,e.material)[0];e.uv&&e.uv.forEach((function(e,t){var r=f(p,n,d,e);void 0===l[t]&&(l[t]=[]),l[t].push(r[0]),l[t].push(r[1])})),r++,m&&(h.genFace(t,e,i,k,a,o,l,u,c,r),n++,r=0,i=[],a=[],o=[],l=[],u=[],c=[])})),t},genFace:function(e,t,n,r,s,i,a,o,l,u){for(var c=2;c<u;c++)e.vertex.push(t.vertexPositions[n[0]]),e.vertex.push(t.vertexPositions[n[1]]),e.vertex.push(t.vertexPositions[n[2]]),e.vertex.push(t.vertexPositions[n[3*(c-1)]]),e.vertex.push(t.vertexPositions[n[3*(c-1)+1]]),e.vertex.push(t.vertexPositions[n[3*(c-1)+2]]),e.vertex.push(t.vertexPositions[n[3*c]]),e.vertex.push(t.vertexPositions[n[3*c+1]]),e.vertex.push(t.vertexPositions[n[3*c+2]]),t.skeleton&&(e.vertexWeights.push(o[0]),e.vertexWeights.push(o[1]),e.vertexWeights.push(o[2]),e.vertexWeights.push(o[3]),e.vertexWeights.push(o[4*(c-1)]),e.vertexWeights.push(o[4*(c-1)+1]),e.vertexWeights.push(o[4*(c-1)+2]),e.vertexWeights.push(o[4*(c-1)+3]),e.vertexWeights.push(o[4*c]),e.vertexWeights.push(o[4*c+1]),e.vertexWeights.push(o[4*c+2]),e.vertexWeights.push(o[4*c+3]),e.weightsIndices.push(l[0]),e.weightsIndices.push(l[1]),e.weightsIndices.push(l[2]),e.weightsIndices.push(l[3]),e.weightsIndices.push(l[4*(c-1)]),e.weightsIndices.push(l[4*(c-1)+1]),e.weightsIndices.push(l[4*(c-1)+2]),e.weightsIndices.push(l[4*(c-1)+3]),e.weightsIndices.push(l[4*c]),e.weightsIndices.push(l[4*c+1]),e.weightsIndices.push(l[4*c+2]),e.weightsIndices.push(l[4*c+3])),t.color&&(e.colors.push(i[0]),e.colors.push(i[1]),e.colors.push(i[2]),e.colors.push(i[3*(c-1)]),e.colors.push(i[3*(c-1)+1]),e.colors.push(i[3*(c-1)+2]),e.colors.push(i[3*c]),e.colors.push(i[3*c+1]),e.colors.push(i[3*c+2])),t.material&&"AllSame"!==t.material.mappingType&&(e.materialIndex.push(r),e.materialIndex.push(r),e.materialIndex.push(r)),t.normal&&(e.normal.push(s[0]),e.normal.push(s[1]),e.normal.push(s[2]),e.normal.push(s[3*(c-1)]),e.normal.push(s[3*(c-1)+1]),e.normal.push(s[3*(c-1)+2]),e.normal.push(s[3*c]),e.normal.push(s[3*c+1]),e.normal.push(s[3*c+2])),t.uv&&t.uv.forEach((function(t,n){void 0===e.uvs[n]&&(e.uvs[n]=[]),e.uvs[n].push(a[n][0]),e.uvs[n].push(a[n][1]),e.uvs[n].push(a[n][2*(c-1)]),e.uvs[n].push(a[n][2*(c-1)+1]),e.uvs[n].push(a[n][2*c]),e.uvs[n].push(a[n][2*c+1])}))},addMorphTargets:function(t,n,r,s){if(null!==r){t.morphAttributes.position=[],t.morphAttributes.normal=[];var i=this;r.rawTargets.forEach((function(r){var a=e.Objects.Geometry[r.geoID];void 0!==a&&i.genMorphGeometry(t,n,a,s)}))}},genMorphGeometry:function(e,t,n,r){var s=new THREE.BufferGeometry;n.attrName&&(s.name=n.attrName);for(var i=void 0!==t.PolygonVertexIndex?t.PolygonVertexIndex.a:[],a=void 0!==t.Vertices?t.Vertices.a.slice():[],o=void 0!==n.Vertices?n.Vertices.a:[],l=void 0!==n.Indexes?n.Indexes.a:[],u=0;u<l.length;u++){var c=3*l[u];a[c]+=o[3*u],a[c+1]+=o[3*u+1],a[c+2]+=o[3*u+2]}var h={vertexIndices:i,vertexPositions:a},d=this.genBuffers(h),p=new THREE.Float32BufferAttribute(d.vertex,3);p.name=n.attrName,r.applyToBufferAttribute(p),e.morphAttributes.position.push(p)},parseNormals:function(e){var t=e.MappingInformationType,n=e.ReferenceInformationType,r=e.Normals.a,s=[];return"IndexToDirect"===n&&("NormalIndex"in e?s=e.NormalIndex.a:"NormalsIndex"in e&&(s=e.NormalsIndex.a)),{dataSize:3,buffer:r,indices:s,mappingType:t,referenceType:n}},parseUVs:function(e){var t=e.MappingInformationType,n=e.ReferenceInformationType,r=e.UV.a,s=[];return"IndexToDirect"===n&&(s=e.UVIndex.a),{dataSize:2,buffer:r,indices:s,mappingType:t,referenceType:n}},parseVertexColors:function(e){var t=e.MappingInformationType,n=e.ReferenceInformationType,r=e.Colors.a,s=[];return"IndexToDirect"===n&&(s=e.ColorIndex.a),{dataSize:4,buffer:r,indices:s,mappingType:t,referenceType:n}},parseMaterialIndices:function(e){var t=e.MappingInformationType,n=e.ReferenceInformationType;if("NoMappingInformation"===t)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};for(var r=e.Materials.a,s=[],i=0;i<r.length;++i)s.push(i);return{dataSize:1,buffer:r,indices:s,mappingType:t,referenceType:n}},parseNurbsGeometry:function(e){if(void 0===THREE.NURBSCurve)return console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new THREE.BufferGeometry;var t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new THREE.BufferGeometry;for(var n,r,s=t-1,i=e.KnotVector.a,a=[],o=e.Points.a,l=0,u=o.length;l<u;l+=4)a.push((new THREE.Vector4).fromArray(o,l));if("Closed"===e.Form)a.push(a[0]);else if("Periodic"===e.Form)for(n=s,r=i.length-1-n,l=0;l<s;++l)a.push(a[l]);var c=new THREE.NURBSCurve(s,i,a,n,r).getPoints(7*a.length),h=new Float32Array(3*c.length);c.forEach((function(e,t){e.toArray(h,3*t)}));var d=new THREE.BufferGeometry;return d.addAttribute("position",new THREE.BufferAttribute(h,3)),d}},a.prototype={constructor:a,parse:function(){var e=[],t=this.parseClips();if(void 0===t)return e;for(var n in t){var r=t[n],s=this.addClip(r);e.push(s)}return e},parseClips:function(){if(void 0!==e.Objects.AnimationCurve){var t=this.parseAnimationCurveNodes();this.parseAnimationCurves(t);var n=this.parseAnimationLayers(t);return this.parseAnimStacks(n)}},parseAnimationCurveNodes:function(){var t=e.Objects.AnimationCurveNode,n=new Map;for(var r in t){var s=t[r];if(null!==s.attrName.match(/S|R|T|DeformPercent/)){var i={id:s.id,attr:s.attrName,curves:{}};n.set(i.id,i)}}return n},parseAnimationCurves:function(n){var r=e.Objects.AnimationCurve;for(var s in r){var i={id:r[s].id,times:r[s].KeyTime.a.map(d),values:r[s].KeyValueFloat.a},a=t.get(i.id);if(void 0!==a){var o=a.parents[0].ID,l=a.parents[0].relationship;l.match(/X/)?n.get(o).curves.x=i:l.match(/Y/)?n.get(o).curves.y=i:l.match(/Z/)?n.get(o).curves.z=i:l.match(/d|DeformPercent/)&&n.has(o)&&(n.get(o).curves.morph=i)}}},parseAnimationLayers:function(n){var r=e.Objects.AnimationLayer,s=new Map;for(var i in r){var a=[],o=t.get(parseInt(i));if(void 0!==o){var l=o.children,u=this;l.forEach((function(r,s){if(n.has(r.ID)){var i=n.get(r.ID);if(void 0!==i.curves.x||void 0!==i.curves.y||void 0!==i.curves.z){if(void 0===a[s]){t.get(r.ID).parents.forEach((function(e){void 0!==e.relationship&&(p=e.ID)}));var o=e.Objects.Model[p.toString()],l={modelName:THREE.PropertyBinding.sanitizeNodeName(o.attrName),initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1],transform:u.getModelAnimTransform(o)};"PreRotation"in o&&(l.preRotations=o.PreRotation.value),"PostRotation"in o&&(l.postRotations=o.PostRotation.value),a[s]=l}a[s][i.attr]=i}else if(void 0!==i.curves.morph){if(void 0===a[s]){var c;t.get(r.ID).parents.forEach((function(e){void 0!==e.relationship&&(c=e.ID)}));var h=t.get(c).parents[0].ID,d=t.get(h).parents[0].ID,p=t.get(d).parents[0].ID;o=e.Objects.Model[p],l={modelName:THREE.PropertyBinding.sanitizeNodeName(o.attrName),morphName:e.Objects.Deformer[c].attrName},a[s]=l}a[s][i.attr]=i}}})),s.set(parseInt(i),a)}}return s},getModelAnimTransform:function(e){var t={};return"RotationOrder"in e&&(t.eulerOrder=parseInt(e.RotationOrder.value)),"Lcl_Translation"in e&&(t.translation=e.Lcl_Translation.value),"RotationOffset"in e&&(t.rotationOffset=e.RotationOffset.value),"Lcl_Rotation"in e&&(t.rotation=e.Lcl_Rotation.value),"PreRotation"in e&&(t.preRotation=e.PreRotation.value),"PostRotation"in e&&(t.postRotation=e.PostRotation.value),"Lcl_Scaling"in e&&(t.scale=e.Lcl_Scaling.value),x(t)},parseAnimStacks:function(n){var r=e.Objects.AnimationStack,s={};for(var i in r){var a=t.get(parseInt(i)).children;a.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");var o=n.get(a[0].ID);s[i]={name:r[i].attrName,layer:o}}return s},addClip:function(e){var t=[],n=this;return e.layer.forEach((function(e){t=t.concat(n.generateTracks(e))})),new THREE.AnimationClip(e.name,-1,t)},generateTracks:function(e){var t=[],n=new THREE.Vector3,r=new THREE.Quaternion,s=new THREE.Vector3;if(e.transform&&e.transform.decompose(n,r,s),n=n.toArray(),r=(new THREE.Euler).setFromQuaternion(r).toArray(),s=s.toArray(),void 0!==e.T&&Object.keys(e.T.curves).length>0){var i=this.generateVectorTrack(e.modelName,e.T.curves,n,"position");void 0!==i&&t.push(i)}if(void 0!==e.R&&Object.keys(e.R.curves).length>0){var a=this.generateRotationTrack(e.modelName,e.R.curves,r,e.preRotations,e.postRotations);void 0!==a&&t.push(a)}if(void 0!==e.S&&Object.keys(e.S.curves).length>0){var o=this.generateVectorTrack(e.modelName,e.S.curves,s,"scale");void 0!==o&&t.push(o)}if(void 0!==e.DeformPercent){var l=this.generateMorphTrack(e);void 0!==l&&t.push(l)}return t},generateVectorTrack:function(e,t,n,r){var s=this.getTimesForAllAxes(t),i=this.getKeyframeTrackValues(s,t,n);return new THREE.VectorKeyframeTrack(e+"."+r,s,i)},generateRotationTrack:function(e,t,n,r,s){void 0!==t.x&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(THREE.Math.degToRad)),void 0!==t.y&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(THREE.Math.degToRad)),void 0!==t.z&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(THREE.Math.degToRad));var i=this.getTimesForAllAxes(t),a=this.getKeyframeTrackValues(i,t,n);void 0!==r&&((r=r.map(THREE.Math.degToRad)).push("ZYX"),r=(new THREE.Euler).fromArray(r),r=(new THREE.Quaternion).setFromEuler(r)),void 0!==s&&((s=s.map(THREE.Math.degToRad)).push("ZYX"),s=(new THREE.Euler).fromArray(s),s=(new THREE.Quaternion).setFromEuler(s).inverse());for(var o=new THREE.Quaternion,l=new THREE.Euler,u=[],c=0;c<a.length;c+=3)l.set(a[c],a[c+1],a[c+2],"ZYX"),o.setFromEuler(l),void 0!==r&&o.premultiply(r),void 0!==s&&o.multiply(s),o.toArray(u,c/3*4);return new THREE.QuaternionKeyframeTrack(e+".quaternion",i,u)},generateMorphTrack:function(e){var t=e.DeformPercent.curves.morph,r=t.values.map((function(e){return e/100})),s=n.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new THREE.NumberKeyframeTrack(e.modelName+".morphTargetInfluences["+s+"]",t.times,r)},getTimesForAllAxes:function(e){var t=[];return void 0!==e.x&&(t=t.concat(e.x.times)),void 0!==e.y&&(t=t.concat(e.y.times)),void 0!==e.z&&(t=t.concat(e.z.times)),t.sort((function(e,t){return e-t})).filter((function(e,t,n){return n.indexOf(e)==t}))},getKeyframeTrackValues:function(e,t,n){var r=n,s=[],i=-1,a=-1,o=-1;return e.forEach((function(e){if(t.x&&(i=t.x.times.indexOf(e)),t.y&&(a=t.y.times.indexOf(e)),t.z&&(o=t.z.times.indexOf(e)),-1!==i){var n=t.x.values[i];s.push(n),r[0]=n}else s.push(r[0]);if(-1!==a){var l=t.y.values[a];s.push(l),r[1]=l}else s.push(r[1]);if(-1!==o){var u=t.z.values[o];s.push(u),r[2]=u}else s.push(r[2])})),s},interpolateRotations:function(e){for(var t=1;t<e.values.length;t++){var n=e.values[t-1],r=e.values[t]-n,s=Math.abs(r);if(s>=180){for(var i=s/180,a=r/i,o=n+a,l=e.times[t-1],u=(e.times[t]-l)/i,c=l+u,h=[],d=[];c<e.times[t];)h.push(c),c+=u,d.push(o),o+=a;e.times=E(e.times,t,h),e.values=E(e.values,t,d)}}}},o.prototype={constructor:o,getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(e){this.nodeStack.push(e),this.currentIndent+=1},popStack:function(){this.nodeStack.pop(),this.currentIndent-=1},setCurrentProp:function(e,t){this.currentProp=e,this.currentPropName=t},parse:function(e){this.currentIndent=0,console.log("FBXTree: ",c),this.allNodes=new c,this.nodeStack=[],this.currentProp=[],this.currentPropName="";var t=this,n=e.split(/[\r\n]+/);return n.forEach((function(e,r){var s=e.match(/^[\s\t]*;/),i=e.match(/^[\s\t]*$/);if(!s&&!i){var a=e.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),o=e.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),l=e.match("^\\t{"+(t.currentIndent-1)+"}}");a?t.parseNodeBegin(e,a):o?t.parseNodeProperty(e,o,n[++r]):l?t.popStack():e.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(e)}})),this.allNodes},parseNodeBegin:function(e,t){var n=t[1].trim().replace(/^"/,"").replace(/"$/,""),r=t[2].split(",").map((function(e){return e.trim().replace(/^"/,"").replace(/"$/,"")})),s={name:n},i=this.parseNodeAttr(r),a=this.getCurrentNode();0===this.currentIndent?this.allNodes.add(n,s):n in a?("PoseNode"===n?a.PoseNode.push(s):void 0!==a[n].id&&(a[n]={},a[n][a[n].id]=a[n]),""!==i.id&&(a[n][i.id]=s)):"number"==typeof i.id?(a[n]={},a[n][i.id]=s):"Properties70"!==n&&(a[n]="PoseNode"===n?[s]:s),"number"==typeof i.id&&(s.id=i.id),""!==i.name&&(s.attrName=i.name),""!==i.type&&(s.attrType=i.type),this.pushStack(s)},parseNodeAttr:function(e){var t=e[0];""!==e[0]&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));var n="",r="";return e.length>1&&(n=e[1].replace(/^(\w+)::/,""),r=e[2]),{id:t,name:n,type:r}},parseNodeProperty:function(e,t,n){var r=t[1].replace(/^"/,"").replace(/"$/,"").trim(),s=t[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===r&&","===s&&(s=n.replace(/"/g,"").replace(/,$/,"").trim());var i=this.getCurrentNode();if("Properties70"!==i.name){if("C"===r){var a=s.split(",").slice(1),o=parseInt(a[0]),l=parseInt(a[1]),u=s.split(",").slice(3);r="connections",function(e,t){for(var n=0,r=e.length,s=t.length;n<s;n++,r++)e[r]=t[n]}(s=[o,l],u=u.map((function(e){return e.trim().replace(/^"/,"")}))),void 0===i[r]&&(i[r]=[])}"Node"===r&&(i.id=s),r in i&&Array.isArray(i[r])?i[r].push(s):"a"!==r?i[r]=s:i.a=s,this.setCurrentProp(i,r),"a"===r&&","!==s.slice(-1)&&(i.a=k(s))}else this.parseNodeSpecialProperty(e,r,s)},parseNodePropertyContinued:function(e){var t=this.getCurrentNode();t.a+=e,","!==e.slice(-1)&&(t.a=k(t.a))},parseNodeSpecialProperty:function(e,t,n){var r=n.split('",').map((function(e){return e.trim().replace(/^\"/,"").replace(/\s/,"_")})),s=r[0],i=r[1],a=r[2],o=r[3],l=r[4];switch(i){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":l=parseFloat(l);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":l=k(l)}this.getPrevNode()[s]={type:i,type2:a,flag:o,value:l},this.setCurrentProp(this.getPrevNode(),s)}},l.prototype={constructor:l,parse:function(e){var t=new u(e);t.skip(23);var n=t.getUint32();console.log("THREE.FBXLoader: FBX binary version: "+n);for(var r=new c;!this.endOfContent(t);){var s=this.parseNode(t,n);null!==s&&r.add(s.name,s)}return r},endOfContent:function(e){return e.size()%16==0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()},parseNode:function(e,t){var n={},r=t>=7500?e.getUint64():e.getUint32(),s=t>=7500?e.getUint64():e.getUint32(),i=(t>=7500?e.getUint64():e.getUint32(),e.getUint8()),a=e.getString(i);if(0===r)return null;for(var o=[],l=0;l<s;l++)o.push(this.parseProperty(e));var u=o.length>0?o[0]:"",c=o.length>1?o[1]:"",h=o.length>2?o[2]:"";for(n.singleProperty=1===s&&e.getOffset()===r;r>e.getOffset();){var d=this.parseNode(e,t);null!==d&&this.parseSubNode(a,n,d)}return n.propertyList=o,"number"==typeof u&&(n.id=u),""!==c&&(n.attrName=c),""!==h&&(n.attrType=h),""!==a&&(n.name=a),n},parseSubNode:function(e,t,n){if(!0===n.singleProperty){var r=n.propertyList[0];Array.isArray(r)?(t[n.name]=n,n.a=r):t[n.name]=r}else if("Connections"===e&&"C"===n.name){var s=[];n.propertyList.forEach((function(e,t){0!==t&&s.push(e)})),void 0===t.connections&&(t.connections=[]),t.connections.push(s)}else if("Properties70"===n.name)Object.keys(n).forEach((function(e){t[e]=n[e]}));else if("Properties70"===e&&"P"===n.name){var i,a=n.propertyList[0],o=n.propertyList[1],l=n.propertyList[2],u=n.propertyList[3];0===a.indexOf("Lcl ")&&(a=a.replace("Lcl ","Lcl_")),0===o.indexOf("Lcl ")&&(o=o.replace("Lcl ","Lcl_")),i="Color"===o||"ColorRGB"===o||"Vector"===o||"Vector3D"===o||0===o.indexOf("Lcl_")?[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:n.propertyList[4],t[a]={type:o,type2:l,flag:u,value:i}}else void 0===t[n.name]?"number"==typeof n.id?(t[n.name]={},t[n.name][n.id]=n):t[n.name]=n:"PoseNode"===n.name?(Array.isArray(t[n.name])||(t[n.name]=[t[n.name]]),t[n.name].push(n)):void 0===t[n.name][n.id]&&(t[n.name][n.id]=n)},parseProperty:function(e){var t=e.getString(1);switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":var n=e.getUint32();return e.getArrayBuffer(n);case"S":return n=e.getUint32(),e.getString(n);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var r=e.getUint32(),s=e.getUint32(),i=e.getUint32();if(0===s)switch(t){case"b":case"c":return e.getBooleanArray(r);case"d":return e.getFloat64Array(r);case"f":return e.getFloat32Array(r);case"i":return e.getInt32Array(r);case"l":return e.getInt64Array(r)}"undefined"==typeof Zlib&&console.error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");var a=new u(new Zlib.Inflate(new Uint8Array(e.getArrayBuffer(i))).decompress().buffer);switch(t){case"b":case"c":return a.getBooleanArray(r);case"d":return a.getFloat64Array(r);case"f":return a.getFloat32Array(r);case"i":return a.getInt32Array(r);case"l":return a.getInt64Array(r)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}},u.prototype={constructor:u,getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(e){this.offset+=e},getBoolean:function(){return 1==(1&this.getUint8())},getBooleanArray:function(e){for(var t=[],n=0;n<e;n++)t.push(this.getBoolean());return t},getUint8:function(){var e=this.dv.getUint8(this.offset);return this.offset+=1,e},getInt16:function(){var e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e},getInt32:function(){var e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e},getInt32Array:function(e){for(var t=[],n=0;n<e;n++)t.push(this.getInt32());return t},getUint32:function(){var e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e},getInt64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,4294967295==(e=4294967295&~e)&&(t=t+1&4294967295),-(4294967296*t+(e=e+1&4294967295))):4294967296*t+e},getInt64Array:function(e){for(var t=[],n=0;n<e;n++)t.push(this.getInt64());return t},getUint64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e},getFloat32:function(){var e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e},getFloat32Array:function(e){for(var t=[],n=0;n<e;n++)t.push(this.getFloat32());return t},getFloat64:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e},getFloat64Array:function(e){for(var t=[],n=0;n<e;n++)t.push(this.getFloat64());return t},getArrayBuffer:function(e){var t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t},getString:function(e){for(var t=[],n=0;n<e;n++)t[n]=this.getUint8();var r=t.indexOf(0);return r>=0&&(t=t.slice(0,r)),THREE.LoaderUtils.decodeText(new Uint8Array(t))}},c.prototype={constructor:c,add:function(e,t){this[e]=t}};var p=[];function f(e,t,n,r){var s;switch(r.mappingType){case"ByPolygonVertex":s=e;break;case"ByPolygon":s=t;break;case"ByVertice":s=n;break;case"AllSame":s=r.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+r.mappingType)}"IndexToDirect"===r.referenceType&&(s=r.indices[s]);var i=s*r.dataSize,a=i+r.dataSize;return function(e,t,n,r){for(var s=n,i=0;s<r;s++,i++)e[i]=t[s];return e}(p,r.buffer,i,a)}var m=new THREE.Matrix4,g=new THREE.Euler,y=new THREE.Vector3,b=new THREE.Vector3,v=new THREE.Matrix4;function x(e){var t=new THREE.Matrix4;b.set(0,0,0),v.identity();var n,r=e.eulerOrder?w(e.eulerOrder):w(0);return e.translation&&b.fromArray(e.translation),e.rotationOffset&&b.add(y.fromArray(e.rotationOffset)),e.rotation&&((n=e.rotation.map(THREE.Math.degToRad)).push(r),v.makeRotationFromEuler(g.fromArray(n))),e.preRotation&&((n=e.preRotation.map(THREE.Math.degToRad)).push(r),m.makeRotationFromEuler(g.fromArray(n)),v.premultiply(m)),e.postRotation&&((n=e.postRotation.map(THREE.Math.degToRad)).push(r),m.makeRotationFromEuler(g.fromArray(n)),m.getInverse(m),v.multiply(m)),e.scale&&t.scale(y.fromArray(e.scale)),t.setPosition(b),t.multiply(v),t}function w(e){var t=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return 6===e?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),t[0]):t[e]}function k(e){return e.split(",").map((function(e){return parseFloat(e)}))}function S(e,t,n){return void 0===t&&(t=0),void 0===n&&(n=e.byteLength),THREE.LoaderUtils.decodeText(new Uint8Array(e,t,n))}function E(e,t,n){return e.slice(0,t).concat(n).concat(e.slice(t))}return r}()},6453:e=>{e.exports=Object.assign((function(){}),{FACE_1:0,FACE_2:1,FACE_3:2,FACE_4:3,L_SHOULDER_1:4,R_SHOULDER_1:5,L_SHOULDER_2:6,R_SHOULDER_2:7,SELECT:8,START:9,DPAD_UP:12,DPAD_DOWN:13,DPAD_LEFT:14,DPAD_RIGHT:15,VENDOR:16})},4379:e=>{e.exports=function(e,t,n){this.type=e,this.index=t,this.pressed=n.pressed,this.value=n.value}},2667:e=>{e.exports={size:5,cellSize:10,extrudeSettings:{amount:1,bevelEnabled:!0,bevelSegments:1,steps:1,bevelSize:.5,bevelThickness:.5},autogenerated:!0,cells:[{q:-1,r:0,s:1,h:1,walkable:!0,userData:{}},{q:0,r:-1,s:1,h:1,walkable:!0,userData:{}},{q:0,r:0,s:0,h:1,walkable:!0,userData:{}},{q:1,r:-1,s:0,h:1,walkable:!0,userData:{}},{q:-1,r:1,s:0,h:0,walkable:!0,userData:{}},{q:0,r:1,s:-1,h:0,walkable:!0,userData:{}},{q:1,r:0,s:-1,h:0,walkable:!0,userData:{}}]}},4657:e=>{function t(e){const t=document.getElementById(e),n=t.parentNode;try{n&&n.removeChild(t)}catch(e){}}e.exports=function(e){return e=e||{},function(n,r){return function(e,n,r){return new r((function(r,s){const i=n.timeout||5e3,a="script_"+Date.now()+"_"+Math.ceil(1e5*Math.random()),o=function(e,t){var n=document.createElement("script");return n.type="text/javascript",n.async=!0,n.id=t,n.src=e,n}(e,a),l=setTimeout((function(){s(new Error("Script request to "+e+" timed out")),t(a)}),i),u=function(e){clearTimeout(e)};o.addEventListener("load",(function(e){r({ok:!0}),u(l),t(a)})),o.addEventListener("error",(function(n){s(new Error("Script request to "+e+" failed "+n)),u(l),t(a)})),function(e){const t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}(o)}))}(n,r=r||{},e.Promise||Promise)}}},3471:e=>{var t,n,r=e.exports={VERSION:"0.1.1",PI:Math.PI,TAU:2*Math.PI,DEG_TO_RAD:.0174532925,RAD_TO_DEG:57.2957795,SQRT3:Math.sqrt(3),TILE:"tile",ENT:"entity",STR:"structure",HEX:"hex",SQR:"square",ABS:"abstract"};r.Board=function(e,t){if(!e)throw new Error("You must pass in a grid system for the board to use.");this.tiles=[],this.tileGroup=null,this.group=new THREE.Object3D,this.grid=null,this.overlay=null,this.finder=new r.AStarFinder(t),r.Loader.init(),this.setGrid(e)},r.Board.prototype={setEntityOnTile:function(e,t){var n=this.grid.cellToPixel(t.cell);e.position.copy(n),e.position.y+=e.heightOffset||0,e.tile&&(e.tile.entity=null),e.tile=t,t.entity=e},addTile:function(e){-1===this.tiles.indexOf(e)&&(this.tiles.push(e),this.snapTileToGrid(e),e.position.y=0,this.tileGroup.add(e.mesh),this.grid.add(e.cell),e.cell.tile=e)},removeTile:function(e){if(e){var t=this.tiles.indexOf(e);this.grid.remove(e.cell),-1!==t&&this.tiles.splice(t,1),e.dispose()}},removeAllTiles:function(){if(this.tileGroup)for(var e=this.tileGroup.children,t=0;t<e.length;t++)this.tileGroup.remove(e[t])},getTileAtCell:function(e){var t=this.grid.cellToHash(e);return e.tile||(void 0!==this.grid.cells[t]?this.grid.cells[t].tile:null)},snapToGrid:function(e){var t=this.grid.pixelToCell(e);e.copy(this.grid.cellToPixel(t))},snapTileToGrid:function(e){if(e.cell)e.position.copy(this.grid.cellToPixel(e.cell));else{var t=this.grid.pixelToCell(e.position);e.position.copy(this.grid.cellToPixel(t))}return e},getRandomTile:function(){var e=r.Tools.randomInt(0,this.tiles.length-1);return this.tiles[e]},findPath:function(e,t,n){return this.finder.findPath(e.cell,t.cell,n,this.grid)},setGrid:function(e){this.group.remove(this.tileGroup),this.grid&&e!==this.grid&&(this.removeAllTiles(),this.tiles.forEach((function(e){this.grid.remove(e.cell),e.dispose()})),this.grid.dispose()),this.grid=e,this.tiles=[],this.tileGroup=new THREE.Object3D,this.group.add(this.tileGroup)},generateOverlay:function(e){var t=new THREE.LineBasicMaterial({color:0,opacity:.3});this.overlay&&this.group.remove(this.overlay),this.overlay=new THREE.Object3D,this.grid.generateOverlay(e,this.overlay,t),this.group.add(this.overlay)},generateTilemap:function(e){this.reset();var t=this.grid.generateTiles(e);this.tiles=t,this.tileGroup=new THREE.Object3D;for(var n=0;n<t.length;n++)this.tileGroup.add(t[n].mesh);this.group.add(this.tileGroup)},reset:function(){this.removeAllTiles(),this.tileGroup&&this.group.remove(this.tileGroup)}},r.Board.prototype.constructor=r.Board,r.Cell=function(e,t,n,s){this.q=e||0,this.r=t||0,this.s=n||0,this.h=s||1,this.tile=null,this.userData={},this.walkable=!0,this._calcCost=0,this._priority=0,this._visited=!1,this._parent=null,this.uniqueID=r.LinkedList.generateID()},r.Cell.prototype={set:function(e,t,n){return this.q=e,this.r=t,this.s=n,this},copy:function(e){return this.q=e.q,this.r=e.r,this.s=e.s,this.h=e.h,this.tile=e.tile||null,this.userData=e.userData||{},this.walkable=e.walkable,this},add:function(e){return this.q+=e.q,this.r+=e.r,this.s+=e.s,this},equals:function(e){return this.q===e.q&&this.r===e.r&&this.s===e.s}},r.Cell.prototype.constructor=r.Cell,r.HexGrid=function(e){e=e||{},this.type=r.HEX,this.size=5,this.cellSize=void 0===e.cellSize?10:e.cellSize,this.cells={},this.numCells=0,this.extrudeSettings=null,this.autogenerated=!1;var t,n=[];for(t=0;6>t;t++)n.push(this._createVertex(t));for(this.cellShape=new THREE.Shape,this.cellShape.moveTo(n[0].x,n[0].y),t=1;6>t;t++)this.cellShape.lineTo(n[t].x,n[t].y);this.cellShape.lineTo(n[0].x,n[0].y),this.cellShape.autoClose=!0,this.cellGeo=new THREE.Geometry,this.cellGeo.vertices=n,this.cellGeo.verticesNeedUpdate=!0,this.cellShapeGeo=new THREE.ShapeGeometry(this.cellShape),this._cellWidth=2*this.cellSize,this._cellLength=.5*r.SQRT3*this._cellWidth,this._hashDelimeter=".",this._directions=[new r.Cell(1,-1,0),new r.Cell(1,0,-1),new r.Cell(0,1,-1),new r.Cell(-1,1,0),new r.Cell(-1,0,1),new r.Cell(0,-1,1)],this._diagonals=[new r.Cell(2,-1,-1),new r.Cell(1,1,-2),new r.Cell(-1,2,-1),new r.Cell(-2,1,1),new r.Cell(-1,-1,2),new r.Cell(1,-2,1)],this._list=[],this._vec3=new THREE.Vector3,this._cel=new r.Cell,this._conversionVec=new THREE.Vector3,this._geoCache=[],this._matCache=[]},r.HexGrid.TWO_THIRDS=2/3,r.HexGrid.prototype={cellToPixel:function(e){return this._vec3.x=e.q*this._cellWidth*.75,this._vec3.y=e.h,this._vec3.z=-(e.s-e.r)*this._cellLength*.5,this._vec3},pixelToCell:function(e){var t=e.x*(r.HexGrid.TWO_THIRDS/this.cellSize),n=(-e.x/3+r.SQRT3/3*e.z)/this.cellSize;return this._cel.set(t,n,-t-n),this._cubeRound(this._cel)},getCellAt:function(e){var t=e.x*(r.HexGrid.TWO_THIRDS/this.cellSize),n=(-e.x/3+r.SQRT3/3*e.z)/this.cellSize;return this._cel.set(t,n,-t-n),this._cubeRound(this._cel),this.cells[this.cellToHash(this._cel)]},getNeighbors:function(e,t,n){var r,s,i=this._directions.length;for(this._list.length=0,r=0;i>r;r++)this._cel.copy(e),this._cel.add(this._directions[r]),!(s=this.cells[this.cellToHash(this._cel)])||n&&!n(e,s)||this._list.push(s);if(t)for(r=0;i>r;r++)this._cel.copy(e),this._cel.add(this._diagonals[r]),!(s=this.cells[this.cellToHash(this._cel)])||n&&!n(e,s)||this._list.push(s);return this._list},getRandomCell:function(){var e,t=0,n=r.Tools.randomInt(0,this.numCells);for(e in this.cells){if(t===n)return this.cells[e];t++}return this.cells[e]},cellToHash:function(e){return e.q+this._hashDelimeter+e.r+this._hashDelimeter+e.s},distance:function(e,t){return Math.max(Math.abs(e.q-t.q),Math.abs(e.r-t.r),Math.abs(e.s-t.s))+(t.h-e.h)},clearPath:function(){var e,t;for(e in this.cells)(t=this.cells[e])._calcCost=0,t._priority=0,t._parent=null,t._visited=!1},traverse:function(e){var t;for(t in this.cells)e(this.cells[t])},generateTile:function(e,t,n){var s=Math.abs(e.h);1>s&&(s=1);var i=this._geoCache[s];i||(this.extrudeSettings.amount=s,i=new THREE.ExtrudeGeometry(this.cellShape,this.extrudeSettings),this._geoCache[s]=i);var a=new r.Tile({size:this.cellSize,scale:t,cell:e,geometry:i,material:n});return e.tile=a,a},generateTiles:function(e){e=e||{};var t,n,s,i=[],a={tileScale:.95,cellSize:this.cellSize,material:null,extrudeSettings:{amount:1,bevelEnabled:!0,bevelSegments:1,steps:1,bevelSize:.5,bevelThickness:.5}};for(t in a=r.Tools.merge(a,e),this.cellSize=a.cellSize,this._cellWidth=2*this.cellSize,this._cellLength=.5*r.SQRT3*this._cellWidth,this.autogenerated=!0,this.extrudeSettings=a.extrudeSettings,this.cells)s=this.cells[t],(n=this.generateTile(s,a.tileScale,a.material)).position.copy(this.cellToPixel(s)),n.position.y=0,i.push(n);return i},generateTilePoly:function(e){e||(e=new THREE.MeshBasicMaterial({color:2405631}));var t=new THREE.Mesh(this.cellShapeGeo,e);return this._vec3.set(1,0,0),t.rotateOnAxis(this._vec3,r.PI/2),t},generate:function(e){var t,n,s,i;for(e=e||{},this.size=void 0===e.size?this.size:e.size,t=-this.size;t<this.size+1;t++)for(n=-this.size;n<this.size+1;n++)s=-t-n,Math.abs(t)<=this.size&&Math.abs(n)<=this.size&&Math.abs(s)<=this.size&&(i=new r.Cell(t,n,s),this.add(i))},generateOverlay:function(e,t,n){var s,i,a,o=this.cellShape.createPointsGeometry();for(s=-e;e+1>s;s++)for(i=-e;e+1>i;i++)if(a=-s-i,Math.abs(s)<=e&&Math.abs(i)<=e&&Math.abs(a)<=e){this._cel.set(s,i,a);var l=new THREE.Line(o,n);l.position.copy(this.cellToPixel(this._cel)),l.rotation.x=90*r.DEG_TO_RAD,t.add(l)}},add:function(e){var t=this.cellToHash(e);if(!this.cells[t])return this.cells[t]=e,this.numCells++,e},remove:function(e){var t=this.cellToHash(e);this.cells[t]&&(delete this.cells[t],this.numCells--)},dispose:function(){this.cells=null,this.numCells=0,this.cellShape=null,this.cellGeo.dispose(),this.cellGeo=null,this.cellShapeGeo.dispose(),this.cellShapeGeo=null,this._list=null,this._vec3=null,this._conversionVec=null,this._geoCache=null,this._matCache=null},load:function(e,t,n){var s=this;r.Tools.getJSON({url:e,callback:function(e){s.fromJSON(e),t.call(n||null,e)},cache:!1,scope:s})},fromJSON:function(e){var t,n,s=e.cells;for(this.cells={},this.numCells=0,this.size=e.size,this.cellSize=e.cellSize,this._cellWidth=2*this.cellSize,this._cellLength=.5*r.SQRT3*this._cellWidth,this.extrudeSettings=e.extrudeSettings,this.autogenerated=e.autogenerated,t=0;t<s.length;t++)(n=new r.Cell).copy(s[t]),this.add(n)},toJSON:function(){var e,t,n={size:this.size,cellSize:this.cellSize,extrudeSettings:this.extrudeSettings,autogenerated:this.autogenerated},r=[];for(t in this.cells)e=this.cells[t],r.push({q:e.q,r:e.r,s:e.s,h:e.h,walkable:e.walkable,userData:e.userData});return n.cells=r,n},_createVertex:function(e){var t=r.TAU/6*e;return new THREE.Vector3(this.cellSize*Math.cos(t),this.cellSize*Math.sin(t),0)},_cubeRound:function(e){var t=Math.round(e.q),n=Math.round(e.r),r=Math.round(e.s),s=Math.abs(t-e.q),i=Math.abs(n-e.r),a=Math.abs(r-e.s);return s>i&&s>a?t=-n-r:i>a?n=-t-r:r=-t-n,this._cel.set(t,n,r)}},r.HexGrid.prototype.constructor=r.HexGrid,r.SqrGrid=function(e){e=e||{},this.type=r.SQR,this.size=5,this.cellSize=void 0===e.cellSize?10:e.cellSize,this.cells={},this.numCells=0,this.extrudeSettings=null,this.autogenerated=!1;var t=[];t.push(new THREE.Vector3),t.push(new THREE.Vector3(-this.cellSize,this.cellSize)),t.push(new THREE.Vector3(this.cellSize,this.cellSize)),t.push(new THREE.Vector3(this.cellSize,-this.cellSize)),this.cellShape=new THREE.Shape,this.cellShape.moveTo(-this.cellSize,-this.cellSize),this.cellShape.lineTo(-this.cellSize,this.cellSize),this.cellShape.lineTo(this.cellSize,this.cellSize),this.cellShape.lineTo(this.cellSize,-this.cellSize),this.cellShape.lineTo(-this.cellSize,-this.cellSize),this.cellGeo=new THREE.Geometry,this.cellGeo.vertices=t,this.cellGeo.verticesNeedUpdate=!0,this.cellShapeGeo=new THREE.ShapeGeometry(this.cellShape),this._fullCellSize=2*this.cellSize,this._hashDelimeter=".",this._directions=[new r.Cell(1,0,0),new r.Cell(0,-1,0),new r.Cell(-1,0,0),new r.Cell(0,1,0)],this._diagonals=[new r.Cell(-1,-1,0),new r.Cell(-1,1,0),new r.Cell(1,1,0),new r.Cell(1,-1,0)],this._list=[],this._vec3=new THREE.Vector3,this._cel=new r.Cell,this._conversionVec=new THREE.Vector3,this._geoCache=[],this._matCache=[]},r.SqrGrid.prototype={cellToPixel:function(e){return this._vec3.x=e.q*this._fullCellSize,this._vec3.y=e.h,this._vec3.z=e.r*this._fullCellSize,this._vec3},pixelToCell:function(e){var t=Math.round(e.x/this._fullCellSize),n=Math.round(e.z/this._fullCellSize);return this._cel.set(t,n,0)},getCellAt:function(e){var t=Math.round(e.x/this._fullCellSize),n=Math.round(e.z/this._fullCellSize);return this._cel.set(t,n),this.cells[this.cellToHash(this._cel)]},getNeighbors:function(e,t,n){var r,s,i=this._directions.length;for(this._list.length=0,r=0;i>r;r++)this._cel.copy(e),this._cel.add(this._directions[r]),!(s=this.cells[this.cellToHash(this._cel)])||n&&!n(e,s)||this._list.push(s);if(t)for(r=0;i>r;r++)this._cel.copy(e),this._cel.add(this._diagonals[r]),!(s=this.cells[this.cellToHash(this._cel)])||n&&!n(e,s)||this._list.push(s);return this._list},getRandomCell:function(){var e,t=0,n=r.Tools.randomInt(0,this.numCells);for(e in this.cells){if(t===n)return this.cells[e];t++}return this.cells[e]},cellToHash:function(e){return e.q+this._hashDelimeter+e.r},distance:function(e,t){return Math.max(Math.abs(e.q-t.q),Math.abs(e.r-t.r))+(t.h-e.h)},clearPath:function(){var e,t;for(e in this.cells)(t=this.cells[e])._calcCost=0,t._priority=0,t._parent=null,t._visited=!1},traverse:function(e){var t;for(t in this.cells)e(this.cells[t])},generateTile:function(e,t,n){var s=Math.abs(e.h);1>s&&(s=1);var i=this._geoCache[s];i||(this.extrudeSettings.amount=s,i=new THREE.ExtrudeGeometry(this.cellShape,this.extrudeSettings),this._geoCache[s]=i);var a=new r.Tile({size:this.cellSize,scale:t,cell:e,geometry:i,material:n});return e.tile=a,a},generateTiles:function(e){e=e||{};var t,n,s,i=[],a={tileScale:.95,cellSize:this.cellSize,material:null,extrudeSettings:{amount:1,bevelEnabled:!0,bevelSegments:1,steps:1,bevelSize:.5,bevelThickness:.5}};for(t in a=r.Tools.merge(a,e),this.cellSize=a.cellSize,this._fullCellSize=2*this.cellSize,this.autogenerated=!0,this.extrudeSettings=a.extrudeSettings,this.cells)s=this.cells[t],(n=this.generateTile(s,a.tileScale,a.material)).position.copy(this.cellToPixel(s)),n.position.y=0,i.push(n);return i},generateTilePoly:function(e){e||(e=new THREE.MeshBasicMaterial({color:2405631}));var t=new THREE.Mesh(this.cellShapeGeo,e);return this._vec3.set(1,0,0),t.rotateOnAxis(this._vec3,r.PI/2),t},generate:function(e){e=e||{},this.size=void 0===e.size?this.size:e.size;var t,n,s,i=Math.ceil(this.size/2);for(t=-i;i>t;t++)for(n=-i;i>n;n++)s=new r.Cell(t,n+1),this.add(s)},generateOverlay:function(e,t,n){var s,i,a=Math.ceil(e/2);for(s=-a;a>s;s++)for(i=-a;a>i;i++){this._cel.set(s,i);var o=new THREE.Line(this.cellGeo,n);o.position.copy(this.cellToPixel(this._cel)),o.rotation.x=90*r.DEG_TO_RAD,t.add(o)}},add:function(e){var t=this.cellToHash(e);if(!this.cells[t])return this.cells[t]=e,this.numCells++,e},remove:function(e){var t=this.cellToHash(e);this.cells[t]&&(delete this.cells[t],this.numCells--)},dispose:function(){this.cells=null,this.numCells=0,this.cellShape=null,this.cellGeo.dispose(),this.cellGeo=null,this.cellShapeGeo.dispose(),this.cellShapeGeo=null,this._list=null,this._vec3=null,this._conversionVec=null,this._geoCache=null,this._matCache=null},load:function(e,t,n){r.Tools.getJSON({url:e,callback:function(e){this.fromJSON(e),t.call(n||null,e)},cache:!1,scope:this})},fromJSON:function(e){var t,n,s=e.cells;for(this.cells={},this.numCells=0,this.size=e.size,this.cellSize=e.cellSize,this._fullCellSize=2*this.cellSize,this.extrudeSettings=e.extrudeSettings,this.autogenerated=e.autogenerated,t=0;t<s.length;t++)(n=new r.Cell).copy(s[t]),this.add(n)},toJSON:function(){var e,t,n={size:this.size,cellSize:this.cellSize,extrudeSettings:this.extrudeSettings,autogenerated:this.autogenerated},r=[];for(t in this.cells)e=this.cells[t],r.push({q:e.q,r:e.r,s:e.s,h:e.h,walkable:e.walkable,userData:e.userData});return n.cells=r,n}},r.SqrGrid.prototype.constructor=r.SqrGrid,r.Tile=function(e){e=e||{};var t={cell:null,geometry:null,material:null};if(!(t=r.Tools.merge(t,e)).cell||!t.geometry)throw new Error("Missing vg.Tile configuration");this.cell=t.cell,this.cell.tile&&this.cell.tile!==this&&this.cell.tile.dispose(),this.cell.tile=this,this.uniqueID=r.Tools.generateID(),this.geometry=t.geometry,this.material=t.material,this.material||(this.material=new THREE.MeshPhongMaterial({color:r.Tools.randomizeRGB("30, 30, 30",13)})),this.objectType=r.TILE,this.entity=null,this.userData={},this.selected=!1,this.highlight="0x0084cc",this.mesh=new THREE.Mesh(this.geometry,this.material),this.mesh.userData.structure=this,this.position=this.mesh.position,this.rotation=this.mesh.rotation,this.rotation.x=-90*r.DEG_TO_RAD,this.mesh.scale.set(t.scale,t.scale,1),this.material.emissive?this._emissive=this.material.emissive.getHex():this._emissive=null},r.Tile.prototype={select:function(){return this.material.emissive&&this.material.emissive.setHex(this.highlight),this.selected=!0,this},deselect:function(){return null!==this._emissive&&this.material.emissive&&this.material.emissive.setHex(this._emissive),this.selected=!1,this},toggle:function(){return this.selected?this.deselect():this.select(),this},dispose:function(){this.cell&&this.cell.tile&&(this.cell.tile=null),this.cell=null,this.position=null,this.rotation=null,this.mesh.parent&&this.mesh.parent.remove(this.mesh),this.mesh.userData.structure=null,this.mesh=null,this.material=null,this.userData=null,this.entity=null,this.geometry=null,this._emissive=null}},r.Tile.prototype.constructor=r.Tile,t=function(){this.obj=null,this.next=null,this.prev=null,this.free=!0},(n=function(){this.first=null,this.last=null,this.length=0,this.objToNodeMap={},this.uniqueID=Date.now()+""+Math.floor(1e3*Math.random()),this.sortArray=[]}).generateID=function(){return Math.random().toString(36).slice(2)+Date.now()},(n.prototype={getNode:function(e){return this.objToNodeMap[e.uniqueID]},addNode:function(e){var r=new t;if(!e.uniqueID)try{e.uniqueID=n.generateID()}catch(e){return console.error("[LinkedList.addNode] obj passed is immutable: cannot attach necessary identifier"),null}return r.obj=e,r.free=!1,this.objToNodeMap[e.uniqueID]=r,r},swapObjects:function(e,t){this.objToNodeMap[e.obj.uniqueID]=null,this.objToNodeMap[t.uniqueID]=e,e.obj=t},add:function(e){var t=this.objToNodeMap[e.uniqueID];if(t){if(!1===t.free)return;t.obj=e,t.free=!1,t.next=null,t.prev=null}else t=this.addNode(e);if(this.first){if(!this.last)throw new Error("[LinkedList.add] No last in the list -- that shouldn't happen here");this.last.next=t,t.prev=this.last,this.last=t,t.next=null}else this.first=t,this.last=t,t.next=null,t.prev=null;this.length++,this.showDebug&&this.dump("after add")},has:function(e){return!!this.objToNodeMap[e.uniqueID]},moveUp:function(e){this.dump("before move up");var t=this.getNode(e);if(!t)throw"Oops, trying to move an object that isn't in the list";if(t.prev){var n=t.prev,r=n.prev;t==this.last&&(this.last=n);var s=t.next;r&&(r.next=t),t.next=n,t.prev=n.prev,n.next=s,n.prev=t,this.first==n&&(this.first=t)}},moveDown:function(e){var t=this.getNode(e);if(!t)throw"Oops, trying to move an object that isn't in the list";if(t.next){var n=t.next;this.moveUp(n.obj),this.last==n&&(this.last=t)}},sort:function(e){var t,n,r=this.sortArray,s=this.first;for(r.length=0;s;)r.push(s.obj),s=s.next;for(this.clear(),r.sort(e),n=r.length,t=0;n>t;t++)this.add(r[t])},remove:function(e){var t=this.getNode(e);return!(!t||t.free||(t.prev&&(t.prev.next=t.next),t.next&&(t.next.prev=t.prev),t.prev||(this.first=t.next),t.next||(this.last=t.prev),t.free=!0,t.prev=null,t.next=null,this.length--,0))},shift:function(){var e=this.first;return 0===this.length?null:(e.prev&&(e.prev.next=e.next),e.next&&(e.next.prev=e.prev),this.first=e.next,e.next||(this.last=null),e.free=!0,e.prev=null,e.next=null,this.length--,e.obj)},pop:function(){var e=this.last;return 0===this.length?null:(e.prev&&(e.prev.next=e.next),e.next&&(e.next.prev=e.prev),this.last=e.prev,e.prev||(this.first=null),e.free=!0,e.prev=null,e.next=null,this.length--,e.obj)},concat:function(e){for(var t=e.first;t;)this.add(t.obj),t=t.next},clear:function(){for(var e=this.first;e;)e.free=!0,e=e.next;this.first=null,this.length=0},dispose:function(){for(var e=this.first;e;)e.obj=null,e=e.next;this.first=null,this.objToNodeMap=null},dump:function(e){console.log("===================="+e+"=====================");for(var t=this.first;t;)console.log("{"+t.obj.toString()+"} previous="+(t.prev?t.prev.obj:"NULL")),t=t.next();console.log("==================================="),console.log("Last: {"+(this.last?this.last.obj:"NULL")+"} First: {"+(this.first?this.first.obj:"NULL")+"}")}}).constructor=n,r.LinkedList=n,function(){var e=function(e,t,n,r,s){this._listener=t,this.isOnce=n,this.context=r,this.signal=e,this._priority=s||0};e.prototype={active:!0,params:null,execute:function(e){var t,n;return this.active&&this._listener&&(n=this.params?this.params.concat(e):e,t=this._listener.apply(this.context,n),this.isOnce&&this.detach()),t},detach:function(){return this.isBound()?this.signal.remove(this._listener,this.context):null},isBound:function(){return!!this.signal&&!!this._listener},_destroy:function(){delete this.signal,delete this._listener,delete this.context},toString:function(){return"[SignalBinding isOnce:"+this.isOnce+", isBound:"+this.isBound()+", active:"+this.active+"]"}},e.prototype.constructor=e;var t=function(){this._bindings=[],this._prevParams=null;var e=this;this.dispatch=function(){t.prototype.dispatch.apply(e,arguments)}};t.prototype={memorize:!1,_shouldPropagate:!0,active:!0,validateListener:function(e,t){if("function"!=typeof e)throw new Error("Signal: listener is a required param of {fn}() and should be a Function.".replace("{fn}",t))},_registerListener:function(t,n,r,s){var i,a=this._indexOfListener(t,r);if(-1!==a){if((i=this._bindings[a]).isOnce!==n)throw new Error("You cannot add"+(n?"":"Once")+"() then add"+(n?"Once":"")+"() the same listener without removing the relationship first.")}else i=new e(this,t,n,r,s),this._addBinding(i);return this.memorize&&this._prevParams&&i.execute(this._prevParams),i},_addBinding:function(e){var t=this._bindings.length;do{t--}while(this._bindings[t]&&e._priority<=this._bindings[t]._priority);this._bindings.splice(t+1,0,e)},_indexOfListener:function(e,t){for(var n,r=this._bindings.length;r--;)if((n=this._bindings[r])._listener===e&&n.context===t)return r;return-1},has:function(e,t){return-1!==this._indexOfListener(e,t)},add:function(e,t,n){return this.validateListener(e,"add"),this._registerListener(e,!1,t,n)},addOnce:function(e,t,n){return this.validateListener(e,"addOnce"),this._registerListener(e,!0,t,n)},remove:function(e,t){this.validateListener(e,"remove");var n=this._indexOfListener(e,t);return-1!==n&&(this._bindings[n]._destroy(),this._bindings.splice(n,1)),e},removeAll:function(e){void 0===e&&(e=null);for(var t=this._bindings.length;t--;)e?this._bindings[t].context===e&&(this._bindings[t]._destroy(),this._bindings.splice(t,1)):this._bindings[t]._destroy();e||(this._bindings.length=0)},getNumListeners:function(){return this._bindings.length},halt:function(){this._shouldPropagate=!1},dispatch:function(){if(this.active){var e,t=Array.prototype.slice.call(arguments),n=this._bindings.length;if(this.memorize&&(this._prevParams=t),n){e=this._bindings.slice(),this._shouldPropagate=!0;do{n--}while(e[n]&&this._shouldPropagate&&!1!==e[n].execute(t))}}},forget:function(){this._prevParams=null},dispose:function(){this.removeAll(),delete this._bindings,delete this._prevParams},toString:function(){return"[Signal active:"+this.active+" numListeners:"+this.getNumListeners()+"]"}},t.prototype.constructor=t,r.Signal=t}(),r.AStarFinder=function(e){e=e||{};var t={allowDiagonal:!1,heuristicFilter:null};t=r.Tools.merge(t,e),this.allowDiagonal=t.allowDiagonal,this.heuristicFilter=t.heuristicFilter,this.list=new r.LinkedList},r.AStarFinder.prototype={findPath:function(e,t,n,s){var i,a,o,l,u,c;for(n=n||this.heuristicFilter,s.clearPath(),this.list.clear(),this.list.add(e);this.list.length>0;){if(this.list.sort(this.compare),(i=this.list.shift())._visited=!0,i===t)return r.PathUtil.backtrace(t);for(u=0,c=(o=s.getNeighbors(i,this.allowDiagonal,n)).length;c>u;u++)if((l=o[u]).walkable&&(a=i._calcCost+s.distance(i,l),!l._visited||a<l._calcCost)){if(l._visited=!0,l._parent=i,l._calcCost=a,l._priority=a+s.distance(t,l),l===t)return r.PathUtil.backtrace(t);this.list.add(l)}}return null},compare:function(e,t){return e._priority-t._priority}},r.AStarFinder.prototype.constructor=r.AStarFinder,r.PathUtil={backtrace:function(e){for(var t=[e];e._parent;)e=e._parent,t.push(e);return t.reverse()},biBacktrace:function(e,t){var n=this.backtrace(e),r=this.backtrace(t);return n.concat(r.reverse())},pathLength:function(e){var t,n,r,s,i,a=0;for(t=1;t<e.length;++t)n=e[t-1],r=e[t],s=n[0]-r[0],i=n[1]-r[1],a+=Math.sqrt(s*s+i*i);return a},interpolate:function(e,t,n,r){var s,i,a,o,l,u,c=Math.abs,h=[];for(s=n>e?1:-1,i=r>t?1:-1,l=(a=c(n-e))-(o=c(r-t));e!==n||t!==r;)h.push([e,t]),(u=2*l)>-o&&(l-=o,e+=s),a>u&&(l+=a,t+=i);return h},expandPath:function(e){var t,n,r,s,i,a,o=[],l=e.length;if(2>l)return o;for(i=0;l-1>i;++i)for(t=e[i],n=e[i+1],s=(r=this.interpolate(t[0],t[1],n[0],n[1])).length,a=0;s-1>a;++a)o.push(r[a]);return o.push(e[l-1]),o},smoothenPath:function(e,t){var n,r,s,i,a,o,l,u,c,h,d,p,f=t.length,m=t[0][0],g=t[0][1],y=t[f-1][0],b=t[f-1][1];for(a=[[n=m,r=g]],l=2;f>l;++l){for(s=(c=t[l])[0],i=c[1],h=this.interpolate(n,r,s,i),p=!1,u=1;u<h.length;++u)if(d=h[u],!e.isWalkableAt(d[0],d[1])){p=!0;break}p&&(o=t[l-1],a.push(o),n=o[0],r=o[1])}return a.push([y,b]),a},compressPath:function(e){if(e.length<3)return e;var t,n,r,s,i,a,o=[],l=e[0][0],u=e[0][1],c=e[1][0],h=e[1][1],d=c-l,p=h-u;for(d/=i=Math.sqrt(d*d+p*p),p/=i,o.push([l,u]),a=2;a<e.length;a++)t=c,n=h,r=d,s=p,d=(c=e[a][0])-t,p=(h=e[a][1])-n,p/=i=Math.sqrt(d*d+p*p),((d/=i)!==r||p!==s)&&o.push([t,n]);return o.push([c,h]),o}},r.Loader={manager:null,imageLoader:null,crossOrigin:!1,init:function(e){this.crossOrigin=e||!1,this.manager=new THREE.LoadingManager((function(){}),(function(){}),(function(){console.warn("Error loading images")})),this.imageLoader=new THREE.ImageLoader(this.manager),this.imageLoader.crossOrigin=e},loadTexture:function(e,t,n,r){var s=new THREE.Texture(null,t);return this.imageLoader.load(e,(function(e){s.image=e,s.needsUpdate=!0,n&&n(s)}),null,(function(e){r&&r(e)})),s.sourceFile=e,s}},r.MouseCaster=function(e,t,n){this.down=!1,this.rightDown=!1,this.pickedObject=null,this.selectedObject=null,this.allHits=null,this.active=!0,this.shift=!1,this.ctrl=!1,this.wheel=0,this.position=new THREE.Vector3,this.screenPosition=new THREE.Vector2,this.signal=new r.Signal,this.group=e,this._camera=t,this._raycaster=new THREE.Raycaster,this._preventDefault=!1,(n=n||document).addEventListener("mousemove",this._onDocumentMouseMove.bind(this),!1),n.addEventListener("mousedown",this._onDocumentMouseDown.bind(this),!1),n.addEventListener("mouseup",this._onDocumentMouseUp.bind(this),!1),n.addEventListener("mousewheel",this._onMouseWheel.bind(this),!1),n.addEventListener("DOMMouseScroll",this._onMouseWheel.bind(this),!1)},r.MouseCaster.OVER="over",r.MouseCaster.OUT="out",r.MouseCaster.DOWN="down",r.MouseCaster.UP="up",r.MouseCaster.CLICK="click",r.MouseCaster.WHEEL="wheel",r.MouseCaster.prototype={update:function(){if(this.active){this._raycaster.setFromCamera(this.screenPosition,this._camera);var e,t,n=this._raycaster.intersectObject(this.group,!0);n.length>0?(t=(e=n[0]).object.userData.structure,this.pickedObject!=t&&(this.pickedObject&&this.signal.dispatch(r.MouseCaster.OUT,this.pickedObject),this.pickedObject=t,this.selectedObject=null,this.signal.dispatch(r.MouseCaster.OVER,this.pickedObject)),this.position.copy(e.point),this.screenPosition.z=e.distance):(this.pickedObject&&this.signal.dispatch(r.MouseCaster.OUT,this.pickedObject),this.pickedObject=null,this.selectedObject=null),this.allHits=n}},preventDefault:function(){this._preventDefault=!0},_onDocumentMouseDown:function(e){return(e=e||window.event).preventDefault(),this._preventDefault?(this._preventDefault=!1,!1):(this.pickedObject&&(this.selectedObject=this.pickedObject),this.shift=e.shiftKey,this.ctrl=e.ctrlKey,this.down=1===e.which,this.rightDown=3===e.which,void this.signal.dispatch(r.MouseCaster.DOWN,this.pickedObject))},_onDocumentMouseUp:function(e){return e.preventDefault(),this._preventDefault?(this._preventDefault=!1,!1):(this.shift=e.shiftKey,this.ctrl=e.ctrlKey,this.signal.dispatch(r.MouseCaster.UP,this.pickedObject),this.selectedObject&&this.pickedObject&&this.selectedObject.uniqueID===this.pickedObject.uniqueID&&this.signal.dispatch(r.MouseCaster.CLICK,this.pickedObject),this.down=1!==e.which&&this.down,void(this.rightDown=3!==e.which&&this.rightDown))},_onDocumentMouseMove:function(e){e.preventDefault(),this.screenPosition.x=e.clientX/window.innerWidth*2-1,this.screenPosition.y=-e.clientY/window.innerHeight*2+1},_onMouseWheel:function(e){if(this.active){e.preventDefault(),e.stopPropagation();var t=0;void 0!==e.wheelDelta?t=e.wheelDelta:void 0!==e.detail&&(t=-e.detail),t>0?this.wheel++:this.wheel--,this.signal.dispatch(r.MouseCaster.WHEEL,this.wheel)}}},r.MouseCaster.prototype.constructor=r.MouseCaster,r.Scene=function(e,t){var n={element:document.body,alpha:!0,antialias:!0,clearColor:"#fff",sortObjects:!1,fog:null,light:new THREE.DirectionalLight(16777215),lightPosition:null,cameraType:"PerspectiveCamera",cameraPosition:null,orthoZoom:4},s={minDistance:100,maxDistance:1e3,zoomSpeed:2,noZoom:!1};if(n=r.Tools.merge(n,e),"boolean"!=typeof t&&(s=r.Tools.merge(s,t)),this.renderer=new THREE.WebGLRenderer({alpha:n.alpha,antialias:n.antialias}),this.renderer.setClearColor(n.clearColor,0),this.renderer.sortObjects=n.sortObjects,this.width=window.innerWidth,this.height=window.innerHeight,this.orthoZoom=n.orthoZoom,this.container=new THREE.Scene,this.container.fog=n.fog,this.container.add(new THREE.AmbientLight(14540253)),n.lightPosition||n.light.position.set(-1,1,-1).normalize(),this.container.add(n.light),"OrthographicCamera"===n.cameraType){var i=window.innerWidth/this.orthoZoom,a=window.innerHeight/this.orthoZoom;this.camera=new THREE.OrthographicCamera(i/-2,i/2,a/2,a/-2,1,5e3)}else this.camera=new THREE.PerspectiveCamera(50,this.width/this.height,1,5e3);this.contolled=!!t,this.contolled&&(this.controls=new THREE.OrbitControls(this.camera,this.renderer.domElement),this.controls.minDistance=s.minDistance,this.controls.maxDistance=s.maxDistance,this.controls.zoomSpeed=s.zoomSpeed,this.controls.noZoom=s.noZoom),n.cameraPosition&&this.camera.position.copy(n.cameraPosition),window.addEventListener("resize",function(){if(this.width=window.innerWidth,this.height=window.innerHeight,"OrthographicCamera"===this.camera.type){var e=this.width/this.orthoZoom,t=this.height/this.orthoZoom;this.camera.left=e/-2,this.camera.right=e/2,this.camera.top=t/2,this.camera.bottom=t/-2}else this.camera.aspect=this.width/this.height;this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height)}.bind(this),!1),this.attachTo(n.element)},r.Scene.prototype={attachTo:function(e){e.style.width=this.width+"px",e.style.height=this.height+"px",this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.width,this.height),e.appendChild(this.renderer.domElement)},add:function(e){this.container.add(e)},remove:function(e){this.container.remove(e)},render:function(){this.contolled&&this.controls.update(),this.renderer.render(this.container,this.camera)},updateOrthoZoom:function(){if(this.orthoZoom<=0)this.orthoZoom=0;else{var e=this.width/this.orthoZoom,t=this.height/this.orthoZoom;this.camera.left=e/-2,this.camera.right=e/2,this.camera.top=t/2,this.camera.bottom=t/-2,this.camera.updateProjectionMatrix()}},focusOn:function(e){this.camera.lookAt(e.position)}},r.Scene.prototype.constructor=r.Scene,r.SelectionManager=function(e){this.mouse=e,this.onSelect=new r.Signal,this.onDeselect=new r.Signal,this.selected=null,this.toggleSelection=!1,this.mouse.signal.add(this.onMouse,this)},r.SelectionManager.prototype={select:function(e,t){e&&(t=t||!0,this.selected!==e&&this.clearSelection(t),e.selected?this.toggleSelection&&(t&&this.onDeselect.dispatch(e),e.deselect()):e.select(),this.selected=e,t&&this.onSelect.dispatch(e))},clearSelection:function(e){e=e||!0,this.selected&&(e&&this.onDeselect.dispatch(this.selected),this.selected.deselect()),this.selected=null},onMouse:function(e,t){switch(e){case r.MouseCaster.DOWN:t||this.clearSelection();break;case r.MouseCaster.CLICK:this.select(t)}}},r.SelectionManager.prototype.constructor=r.SelectionManager,r.Tools={clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},sign:function(e){return e&&e/Math.abs(e)},random:function(e,t){return 1===arguments.length?Math.random()*e-.5*e:Math.random()*(t-e)+e},randomInt:function(e,t){return 1===arguments.length?Math.random()*e-.5*e|0:Math.random()*(t-e+1)+e|0},normalize:function(e,t,n){return(e-t)/(n-t)},getShortRotation:function(e){return(e%=this.TAU)>this.PI?e-=this.TAU:e<-this.PI&&(e+=this.TAU),e},generateID:function(){return Math.random().toString(36).slice(2)+Date.now()},isPlainObject:function(e){if("object"!=typeof e||e.nodeType||e===e.window)return!1;try{if(e.constructor&&!Object.prototype.hasOwnProperty.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(e){return!1}return!0},merge:function(e,t){var n=this,r=Array.isArray(t),s=r&&[]||{};return r?(e=e||[],s=s.concat(e),t.forEach((function(t,r){void 0===s[r]?s[r]=t:n.isPlainObject(t)?s[r]=n.merge(e[r],t):-1===e.indexOf(t)&&s.push(t)})),s):(e&&n.isPlainObject(e)&&Object.keys(e).forEach((function(t){s[t]=e[t]})),Object.keys(t).forEach((function(r){t[r]&&n.isPlainObject(t[r])&&e[r]?s[r]=n.merge(e[r],t[r]):s[r]=t[r]})),s)},now:function(){return window.nwf?window.nwf.system.Performance.elapsedTime:window.performance.now()},empty:function(e){for(;e.lastChild;)e.removeChild(e.lastChild)},radixSort:function(e,t,n,r){if(r=r||31,!((t=t||0)>=(n=n||e.length)-1||0>r)){for(var s=t,i=n,a=1<<r;i>s;)if(e[s]&a){--i;var o=e[s];e[s]=e[i],e[i]=o}else++s;this.radixSort(e,t,i,r-1),this.radixSort(e,i,n,r-1)}},randomizeRGB:function(e,t){var n,r,s=e.split(","),i="rgb(";for(t=this.randomInt(t),n=0;3>n;n++)0>(r=parseInt(s[n])+t)?r=0:r>255&&(r=255),i+=r+",";return(i=i.substring(0,i.length-1))+")"},getJSON:function(e){var t=new XMLHttpRequest,n=void 0!==e.cache&&e.cache?e.url:e.url+"?t="+Math.floor(1e4*Math.random())+Date.now();t.onreadystatechange=function(){if(200!==this.status)0!==this.status&&console.warn("[Tools.getJSON] Error: "+this.status+" ("+this.statusText+") :: "+e.url);else{var t=null;try{t=JSON.parse(this.responseText)}catch(e){return}e.callback.call(e.scope||null,t)}},t.open("GET",n,!0),t.setRequestHeader("Accept","application/json"),t.setRequestHeader("Content-Type","application/json"),t.send("")}}},7454:()=>{!function(e){var t="KeyboardEvent"in e;t||(e.KeyboardEvent=function(){throw TypeError("Illegal constructor")}),"DOM_KEY_LOCATION_STANDARD"in e.KeyboardEvent||(e.KeyboardEvent.DOM_KEY_LOCATION_STANDARD=0),"DOM_KEY_LOCATION_LEFT"in e.KeyboardEvent||(e.KeyboardEvent.DOM_KEY_LOCATION_LEFT=1),"DOM_KEY_LOCATION_RIGHT"in e.KeyboardEvent||(e.KeyboardEvent.DOM_KEY_LOCATION_RIGHT=2),"DOM_KEY_LOCATION_NUMPAD"in e.KeyboardEvent||(e.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD=3);var n=window.KeyboardEvent.DOM_KEY_LOCATION_STANDARD,r=window.KeyboardEvent.DOM_KEY_LOCATION_LEFT,s=window.KeyboardEvent.DOM_KEY_LOCATION_RIGHT,i=window.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD;function a(e,t){return-1!==String(e).indexOf(t)}var o=a(navigator.platform,"Win")?"win":a(navigator.platform,"Mac")?"mac":a(navigator.platform,"CrOS")?"cros":a(navigator.platform,"Linux")?"linux":a(navigator.userAgent,"iPad")||a(navigator.platform,"iPod")||a(navigator.platform,"iPhone")?"ios":"",l=a(navigator.userAgent,"Chrome/")?"chrome":a(navigator.vendor,"Apple")?"safari":a(navigator.userAgent,"MSIE")?"ie":a(navigator.userAgent,"Gecko/")?"moz":a(navigator.userAgent,"Opera/")?"opera":"",u=l+"-"+o;function c(e,t,n){u!==t&&l!==t&&o!==t||Object.keys(n).forEach((function(t){e[t]=n[t]}))}var h={3:{code:"Cancel"},6:{code:"Help"},8:{code:"Backspace"},9:{code:"Tab"},12:{code:"Clear"},13:{code:"Enter"},16:{code:"Shift"},17:{code:"Control"},18:{code:"Alt"},19:{code:"Pause"},20:{code:"CapsLock"},21:{code:"KanaMode"},22:{code:"HangulMode"},23:{code:"JunjaMode"},24:{code:"FinalMode"},25:{code:"KanjiMode"},27:{code:"Escape"},28:{code:"Convert"},29:{code:"NonConvert"},30:{code:"Accept"},31:{code:"ModeChange"},32:{code:"Space"},33:{code:"PageUp"},34:{code:"PageDown"},35:{code:"End"},36:{code:"Home"},37:{code:"ArrowLeft"},38:{code:"ArrowUp"},39:{code:"ArrowRight"},40:{code:"ArrowDown"},41:{code:"Select"},42:{code:"Print"},43:{code:"Execute"},44:{code:"PrintScreen"},45:{code:"Insert"},46:{code:"Delete"},47:{code:"Help"},48:{code:"Digit0",keyCap:"0"},49:{code:"Digit1",keyCap:"1"},50:{code:"Digit2",keyCap:"2"},51:{code:"Digit3",keyCap:"3"},52:{code:"Digit4",keyCap:"4"},53:{code:"Digit5",keyCap:"5"},54:{code:"Digit6",keyCap:"6"},55:{code:"Digit7",keyCap:"7"},56:{code:"Digit8",keyCap:"8"},57:{code:"Digit9",keyCap:"9"},65:{code:"KeyA",keyCap:"a"},66:{code:"KeyB",keyCap:"b"},67:{code:"KeyC",keyCap:"c"},68:{code:"KeyD",keyCap:"d"},69:{code:"KeyE",keyCap:"e"},70:{code:"KeyF",keyCap:"f"},71:{code:"KeyG",keyCap:"g"},72:{code:"KeyH",keyCap:"h"},73:{code:"KeyI",keyCap:"i"},74:{code:"KeyJ",keyCap:"j"},75:{code:"KeyK",keyCap:"k"},76:{code:"KeyL",keyCap:"l"},77:{code:"KeyM",keyCap:"m"},78:{code:"KeyN",keyCap:"n"},79:{code:"KeyO",keyCap:"o"},80:{code:"KeyP",keyCap:"p"},81:{code:"KeyQ",keyCap:"q"},82:{code:"KeyR",keyCap:"r"},83:{code:"KeyS",keyCap:"s"},84:{code:"KeyT",keyCap:"t"},85:{code:"KeyU",keyCap:"u"},86:{code:"KeyV",keyCap:"v"},87:{code:"KeyW",keyCap:"w"},88:{code:"KeyX",keyCap:"x"},89:{code:"KeyY",keyCap:"y"},90:{code:"KeyZ",keyCap:"z"},91:{code:"OSLeft",location:r},92:{code:"OSRight",location:s},93:{code:"ContextMenu"},95:{code:"Standby"},96:{code:"Numpad0",keyCap:"0",location:i},97:{code:"Numpad1",keyCap:"1",location:i},98:{code:"Numpad2",keyCap:"2",location:i},99:{code:"Numpad3",keyCap:"3",location:i},100:{code:"Numpad4",keyCap:"4",location:i},101:{code:"Numpad5",keyCap:"5",location:i},102:{code:"Numpad6",keyCap:"6",location:i},103:{code:"Numpad7",keyCap:"7",location:i},104:{code:"Numpad8",keyCap:"8",location:i},105:{code:"Numpad9",keyCap:"9",location:i},106:{code:"NumpadMultiply",keyCap:"*",location:i},107:{code:"NumpadAdd",keyCap:"+",location:i},108:{code:"NumpadComma",keyCap:",",location:i},109:{code:"NumpadSubtract",keyCap:"-",location:i},110:{code:"NumpadDecimal",keyCap:".",location:i},111:{code:"NumpadDivide",keyCap:"/",location:i},112:{code:"F1"},113:{code:"F2"},114:{code:"F3"},115:{code:"F4"},116:{code:"F5"},117:{code:"F6"},118:{code:"F7"},119:{code:"F8"},120:{code:"F9"},121:{code:"F10"},122:{code:"F11"},123:{code:"F12"},124:{code:"F13"},125:{code:"F14"},126:{code:"F15"},127:{code:"F16"},128:{code:"F17"},129:{code:"F18"},130:{code:"F19"},131:{code:"F20"},132:{code:"F21"},133:{code:"F22"},134:{code:"F23"},135:{code:"F24"},144:{code:"NumLock",location:i},145:{code:"ScrollLock"},160:{code:"ShiftLeft",location:r},161:{code:"ShiftRight",location:s},162:{code:"ControlLeft",location:r},163:{code:"ControlRight",location:s},164:{code:"AltLeft",location:r},165:{code:"AltRight",location:s},166:{code:"BrowserBack"},167:{code:"BrowserForward"},168:{code:"BrowserRefresh"},169:{code:"BrowserStop"},170:{code:"BrowserSearch"},171:{code:"BrowserFavorites"},172:{code:"BrowserHome"},173:{code:"VolumeMute"},174:{code:"VolumeDown"},175:{code:"VolumeUp"},176:{code:"MediaTrackNext"},177:{code:"MediaTrackPrevious"},178:{code:"MediaStop"},179:{code:"MediaPlayPause"},180:{code:"LaunchMail"},181:{code:"MediaSelect"},182:{code:"LaunchApp1"},183:{code:"LaunchApp2"},186:{code:"Semicolon",keyCap:";"},187:{code:"Equal",keyCap:"="},188:{code:"Comma",keyCap:","},189:{code:"Minus",keyCap:"-"},190:{code:"Period",keyCap:"."},191:{code:"Slash",keyCap:"/"},192:{code:"Backquote",keyCap:"`"},219:{code:"BracketLeft",keyCap:"["},220:{code:"Backslash",keyCap:"\\"},221:{code:"BracketRight",keyCap:"]"},222:{code:"Quote",keyCap:"'"},226:{code:"IntlBackslash",keyCap:"\\"},229:{code:"Process"},246:{code:"Attn"},247:{code:"CrSel"},248:{code:"ExSel"},249:{code:"EraseEof"},250:{code:"Play"},251:{code:"ZoomToggle"},254:{code:"Clear"}};c(h,"moz",{59:{code:"Semicolon",keyCap:";"},61:{code:"Equal",keyCap:"="},107:{code:"Equal",keyCap:"="},109:{code:"Minus",keyCap:"-"},187:{code:"NumpadAdd",keyCap:"+",location:i},189:{code:"NumpadSubtract",keyCap:"-",location:i}}),c(h,"moz-mac",{12:{code:"NumLock",location:i},173:{code:"Minus",keyCap:"-"}}),c(h,"moz-win",{173:{code:"Minus",keyCap:"-"}}),c(h,"chrome-mac",{93:{code:"OSRight",location:s}}),c(h,"safari",{3:{code:"Enter"},25:{code:"Tab"}}),c(h,"ios",{10:{code:"Enter",location:n}}),c(h,"safari-mac",{91:{code:"OSLeft",location:r},93:{code:"OSRight",location:s},229:{code:"KeyQ",keyCap:"Q"}});var d={};"cros"===o&&(d["U+00A0"]={code:"ShiftLeft",location:r},d["U+00A1"]={code:"ShiftRight",location:s},d["U+00A2"]={code:"ControlLeft",location:r},d["U+00A3"]={code:"ControlRight",location:s},d["U+00A4"]={code:"AltLeft",location:r},d["U+00A5"]={code:"AltRight",location:s}),"chrome-mac"===u&&(d["U+0010"]={code:"ContextMenu"}),"safari-mac"===u&&(d["U+0010"]={code:"ContextMenu"}),"ios"===o&&(d["U+0010"]={code:"Function"},d["U+001C"]={code:"ArrowLeft"},d["U+001D"]={code:"ArrowRight"},d["U+001E"]={code:"ArrowUp"},d["U+001F"]={code:"ArrowDown"},d["U+0001"]={code:"Home"},d["U+0004"]={code:"End"},d["U+000B"]={code:"PageUp"},d["U+000C"]={code:"PageDown"});var p=[];p[r]={16:{code:"ShiftLeft",location:r},17:{code:"ControlLeft",location:r},18:{code:"AltLeft",location:r}},p[s]={16:{code:"ShiftRight",location:s},17:{code:"ControlRight",location:s},18:{code:"AltRight",location:s}},p[i]={13:{code:"NumpadEnter",location:i}},c(p[i],"moz",{109:{code:"NumpadSubtract",location:i},107:{code:"NumpadAdd",location:i}}),c(p[r],"moz-mac",{224:{code:"OSLeft",location:r}}),c(p[s],"moz-mac",{224:{code:"OSRight",location:s}}),c(p[s],"moz-win",{91:{code:"OSRight",location:s}}),c(p[s],"mac",{93:{code:"OSRight",location:s}}),c(p[i],"chrome-mac",{12:{code:"NumLock",location:i}}),c(p[i],"safari-mac",{12:{code:"NumLock",location:i},187:{code:"NumpadAdd",location:i},189:{code:"NumpadSubtract",location:i},190:{code:"NumpadDecimal",location:i},191:{code:"NumpadDivide",location:i}});var f={ShiftLeft:{key:"Shift"},ShiftRight:{key:"Shift"},ControlLeft:{key:"Control"},ControlRight:{key:"Control"},AltLeft:{key:"Alt"},AltRight:{key:"Alt"},OSLeft:{key:"OS"},OSRight:{key:"OS"},NumpadEnter:{key:"Enter"},Space:{key:" "},Digit0:{key:"0",shiftKey:")"},Digit1:{key:"1",shiftKey:"!"},Digit2:{key:"2",shiftKey:"@"},Digit3:{key:"3",shiftKey:"#"},Digit4:{key:"4",shiftKey:"$"},Digit5:{key:"5",shiftKey:"%"},Digit6:{key:"6",shiftKey:"^"},Digit7:{key:"7",shiftKey:"&"},Digit8:{key:"8",shiftKey:"*"},Digit9:{key:"9",shiftKey:"("},KeyA:{key:"a",shiftKey:"A"},KeyB:{key:"b",shiftKey:"B"},KeyC:{key:"c",shiftKey:"C"},KeyD:{key:"d",shiftKey:"D"},KeyE:{key:"e",shiftKey:"E"},KeyF:{key:"f",shiftKey:"F"},KeyG:{key:"g",shiftKey:"G"},KeyH:{key:"h",shiftKey:"H"},KeyI:{key:"i",shiftKey:"I"},KeyJ:{key:"j",shiftKey:"J"},KeyK:{key:"k",shiftKey:"K"},KeyL:{key:"l",shiftKey:"L"},KeyM:{key:"m",shiftKey:"M"},KeyN:{key:"n",shiftKey:"N"},KeyO:{key:"o",shiftKey:"O"},KeyP:{key:"p",shiftKey:"P"},KeyQ:{key:"q",shiftKey:"Q"},KeyR:{key:"r",shiftKey:"R"},KeyS:{key:"s",shiftKey:"S"},KeyT:{key:"t",shiftKey:"T"},KeyU:{key:"u",shiftKey:"U"},KeyV:{key:"v",shiftKey:"V"},KeyW:{key:"w",shiftKey:"W"},KeyX:{key:"x",shiftKey:"X"},KeyY:{key:"y",shiftKey:"Y"},KeyZ:{key:"z",shiftKey:"Z"},Numpad0:{key:"0"},Numpad1:{key:"1"},Numpad2:{key:"2"},Numpad3:{key:"3"},Numpad4:{key:"4"},Numpad5:{key:"5"},Numpad6:{key:"6"},Numpad7:{key:"7"},Numpad8:{key:"8"},Numpad9:{key:"9"},NumpadMultiply:{key:"*"},NumpadAdd:{key:"+"},NumpadComma:{key:","},NumpadSubtract:{key:"-"},NumpadDecimal:{key:"."},NumpadDivide:{key:"/"},Semicolon:{key:";",shiftKey:":"},Equal:{key:"=",shiftKey:"+"},Comma:{key:",",shiftKey:"<"},Minus:{key:"-",shiftKey:"_"},Period:{key:".",shiftKey:">"},Slash:{key:"/",shiftKey:"?"},Backquote:{key:"`",shiftKey:"~"},BracketLeft:{key:"[",shiftKey:"{"},Backslash:{key:"\\",shiftKey:"|"},BracketRight:{key:"]",shiftKey:"}"},Quote:{key:"'",shiftKey:'"'},IntlBackslash:{key:"\\",shiftKey:"|"}};c(f,"mac",{OSLeft:{key:"Meta"},OSRight:{key:"Meta"}});var m,g,y,b={Esc:"Escape",Nonconvert:"NonConvert",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Menu:"ContextMenu",MediaNextTrack:"MediaTrackNext",MediaPreviousTrack:"MediaTrackPrevious",SelectMedia:"MediaSelect",HalfWidth:"Hankaku",FullWidth:"Zenkaku",RomanCharacters:"Romaji",Crsel:"CrSel",Exsel:"ExSel",Zoom:"ZoomToggle"},v=(m=h,g="code",y={},Object.keys(m).forEach((function(e){var t=m[e];g in t&&(y[t[g]]=t)})),y);try{var x=t&&"location"in new KeyboardEvent("")}catch(e){}function w(e){var t="keyCode"in e?e.keyCode:"which"in e?e.which:0,n=function(){if(x||"keyLocation"in e){var n=x?e.location:e.keyLocation;if(n&&t in p[n])return p[n][t]}return"keyIdentifier"in e&&e.keyIdentifier in d?d[e.keyIdentifier]:t in h?h[t]:null}();if(!n)return null;var r,s=(r=f[n.code])?e.shiftKey&&"shiftKey"in r?r.shiftKey:r.key:n.code;return{code:n.code,key:s,location:n.location,keyCap:n.keyCap}}"KeyboardEvent"in e&&"defineProperty"in Object&&function(){function e(e,t,n){t in e||Object.defineProperty(e,t,n)}if(e(KeyboardEvent.prototype,"code",{get:function(){var e=w(this);return e?e.code:""}}),"key"in KeyboardEvent.prototype){var t=Object.getOwnPropertyDescriptor(KeyboardEvent.prototype,"key");Object.defineProperty(KeyboardEvent.prototype,"key",{get:function(){var e=t.get.call(this);return b.hasOwnProperty(e)?b[e]:e}})}e(KeyboardEvent.prototype,"key",{get:function(){var e=w(this);return e&&"key"in e?e.key:"Unidentified"}}),e(KeyboardEvent.prototype,"location",{get:function(){var e=w(this);return e&&"location"in e?e.location:n}}),e(KeyboardEvent.prototype,"locale",{get:function(){return""}})}(),"queryKeyCap"in e.KeyboardEvent||(e.KeyboardEvent.queryKeyCap=function(e,t){if(e=String(e),!v.hasOwnProperty(e))return"Undefined";if(t&&"en-us"!==String(t).toLowerCase())throw Error("Unsupported locale");var n=v[e];return n.keyCap||n.code||"Undefined"}),e.identifyKey=function(e){if(!("code"in e)){var t=w(e);e.code=t?t.code:"",e.key=t&&"key"in t?t.key:"Unidentified",e.location="location"in e?e.location:"keyLocation"in e?e.keyLocation:t&&"location"in t?t.location:n,e.locale=""}}}(window)},3386:e=>{e.exports=AFRAME.registerComponent("checkpoint-controls",{schema:{enabled:{default:!0},mode:{default:"teleport",oneOf:["teleport","animate"]},animateSpeed:{default:3}},init:function(){this.active=!0,this.checkpoint=null,this.isNavMeshConstrained=!1,this.offset=new THREE.Vector3,this.position=new THREE.Vector3,this.targetPosition=new THREE.Vector3},play:function(){this.active=!0},pause:function(){this.active=!1},setCheckpoint:function(e){const t=this.el;this.active&&this.checkpoint!==e&&(this.checkpoint&&t.emit("navigation-end",{checkpoint:this.checkpoint}),this.checkpoint=e,this.sync(),this.position.distanceTo(this.targetPosition)<.1?this.checkpoint=null:(t.emit("navigation-start",{checkpoint:e}),"teleport"===this.data.mode&&(this.el.setAttribute("position",this.targetPosition),this.checkpoint=null,t.emit("navigation-end",{checkpoint:e}),t.components["movement-controls"].updateNavLocation())))},isVelocityActive:function(){return!(!this.active||!this.checkpoint)},getVelocity:function(){if(!this.active)return;const e=this.data,t=this.offset,n=this.position,r=this.targetPosition,s=this.checkpoint;return this.sync(),n.distanceTo(r)<.1?(this.checkpoint=null,this.el.emit("navigation-end",{checkpoint:s}),t.set(0,0,0)):(t.setLength(e.animateSpeed),t)},sync:function(){const e=this.offset,t=this.position,n=this.targetPosition;t.copy(this.el.getAttribute("position")),this.checkpoint.object3D.getWorldPosition(n),n.add(this.checkpoint.components.checkpoint.getOffset()),e.copy(n).sub(t)}})},5062:(e,t,n)=>{const r=n(6453),s=n(4379),i=.2,a="left",o="right";e.exports=AFRAME.registerComponent("gamepad-controls",{GamepadButton:r,schema:{enabled:{default:!0},camera:{default:"[camera]",type:"selector"},rotationSensitivity:{default:2}},init:function(){const e=this.el.sceneEl;this.system=e.systems["tracked-controls-webxr"]||{controllers:[]},this.prevTime=window.performance.now(),this.buttons={};const t=this.el.object3D.rotation;this.pitch=new THREE.Object3D,this.pitch.rotation.x=THREE.Math.degToRad(t.x),this.yaw=new THREE.Object3D,this.yaw.position.y=10,this.yaw.rotation.y=THREE.Math.degToRad(t.y),this.yaw.add(this.pitch),this._lookVector=new THREE.Vector2,this._moveVector=new THREE.Vector2,this._dpadVector=new THREE.Vector2,e.addBehavior(this)},update:function(){this.tick()},tick:function(e,t){this.updateButtonState(),this.updateRotation(t)},remove:function(){},isVelocityActive:function(){if(!this.data.enabled||!this.isConnected())return!1;const e=this._dpadVector,t=this._moveVector;this.getDpad(e),this.getJoystick(1,t);const n=e.x||t.x,r=e.y||t.y;return Math.abs(n)>i||Math.abs(r)>i},getVelocityDelta:function(){const e=this._dpadVector,t=this._moveVector;this.getDpad(e),this.getJoystick(1,t);const n=e.x||t.x,r=e.y||t.y,s=new THREE.Vector3;return Math.abs(n)>i&&(s.x+=n),Math.abs(r)>i&&(s.z+=r),s},isRotationActive:function(){if(!this.data.enabled||!this.isConnected())return!1;const e=this._lookVector;return this.getJoystick(2,e),Math.abs(e.x)>i||Math.abs(e.y)>i},updateRotation:function(e){if(!this.isRotationActive())return;const t=this.data,n=this.yaw,r=this.pitch,s=t.camera.components["look-controls"],a=s&&s.pitchObject&&s.yawObject;a&&(r.rotation.copy(s.pitchObject.rotation),n.rotation.copy(s.yawObject.rotation));const o=this._lookVector;this.getJoystick(2,o),Math.abs(o.x)<=i&&(o.x=0),Math.abs(o.y)<=i&&(o.y=0),o.multiplyScalar(t.rotationSensitivity*e/1e3),n.rotation.y-=o.x,r.rotation.x-=o.y,r.rotation.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,r.rotation.x)),t.camera.object3D.rotation.set(r.rotation.x,n.rotation.y,0),a&&(s.pitchObject.rotation.copy(r.rotation),s.yawObject.rotation.copy(n.rotation))},updateButtonState:function(){const e=this.getGamepad(o);if(this.data.enabled&&e)for(var t=0;t<e.buttons.length;t++)e.buttons[t].pressed&&!this.buttons[t]?this.emit(new s("gamepadbuttondown",t,e.buttons[t])):!e.buttons[t].pressed&&this.buttons[t]&&this.emit(new s("gamepadbuttonup",t,e.buttons[t])),this.buttons[t]=e.buttons[t].pressed;else Object.keys(this.buttons)&&(this.buttons={})},emit:function(e){this.el.emit(e.type,e),this.el.emit(e.type+":"+e.index,new s(e.type,e.index,e))},getGamepad:function(){const e=[],t=[];return function(n){const r=this.el.sceneEl.components["proxy-controls"],s=r&&r.isConnected()&&r.getGamepad(0);if(s)return s;e.length=0;for(let t=0;t<this.system.controllers.length;t++){const r=this.system.controllers[t],s=r?r.gamepad:null;if(e.push(s),s&&s.handedness===n)return s}const i=navigator.getGamepads?navigator.getGamepads():t;for(let e=0;e<i.length;e++){const t=i[e];if(t&&t.hand===n)return t}return e[0]||i[0]}}(),getButton:function(e){return this.getGamepad(o).buttons[e]},getAxis:function(e){return this.getGamepad(e>1?o:a).axes[e]},getJoystick:function(e,t){const n=this.getGamepad(1===e?a:o);if("xr-standard"===n.mapping)switch(e){case 1:return t.set(n.axes[2],n.axes[3]);case 2:return t.set(n.axes[0],n.axes[1])}else switch(e){case 1:return t.set(n.axes[0],n.axes[1]);case 2:return t.set(n.axes[2],n.axes[3])}throw new Error('Unexpected joystick index "%d".',e)},getDpad:function(e){const t=this.getGamepad(a);return t.buttons[r.DPAD_RIGHT]?e.set((t.buttons[r.DPAD_RIGHT].pressed?1:0)+(t.buttons[r.DPAD_LEFT].pressed?-1:0),(t.buttons[r.DPAD_UP].pressed?-1:0)+(t.buttons[r.DPAD_DOWN].pressed?1:0)):e.set(0,0)},isConnected:function(){const e=this.getGamepad(a);return!(!e||!e.connected)},getID:function(){return this.getGamepad(a).id}})},2406:(e,t,n)=>{n(3386),n(5062),n(2250),n(9048),n(3819),n(9893)},2250:(e,t,n)=>{n(7454);const r=window.KeyboardEvent;e.exports=AFRAME.registerComponent("keyboard-controls",{schema:{enabled:{default:!0},debug:{default:!1}},init:function(){this.dVelocity=new THREE.Vector3,this.localKeys={},this.listeners={keydown:this.onKeyDown.bind(this),keyup:this.onKeyUp.bind(this),blur:this.onBlur.bind(this)},this.attachEventListeners()},isVelocityActive:function(){return this.data.enabled&&!!Object.keys(this.getKeys()).length},getVelocityDelta:function(){const e=this.data,t=this.getKeys();return this.dVelocity.set(0,0,0),e.enabled&&((t.KeyW||t.ArrowUp)&&(this.dVelocity.z-=1),(t.KeyA||t.ArrowLeft)&&(this.dVelocity.x-=1),(t.KeyS||t.ArrowDown)&&(this.dVelocity.z+=1),(t.KeyD||t.ArrowRight)&&(this.dVelocity.x+=1)),this.dVelocity.clone()},play:function(){this.attachEventListeners()},pause:function(){this.removeEventListeners()},remove:function(){this.pause()},attachEventListeners:function(){window.addEventListener("keydown",this.listeners.keydown,!1),window.addEventListener("keyup",this.listeners.keyup,!1),window.addEventListener("blur",this.listeners.blur,!1)},removeEventListeners:function(){window.removeEventListener("keydown",this.listeners.keydown),window.removeEventListener("keyup",this.listeners.keyup),window.removeEventListener("blur",this.listeners.blur)},onKeyDown:function(e){AFRAME.utils.shouldCaptureKeyEvent(e)&&(this.localKeys[e.code]=!0,this.emit(e))},onKeyUp:function(e){AFRAME.utils.shouldCaptureKeyEvent(e)&&(delete this.localKeys[e.code],this.emit(e))},onBlur:function(){for(let e in this.localKeys)this.localKeys.hasOwnProperty(e)&&delete this.localKeys[e]},emit:function(e){"__keyboard-controls-proxy"in e&&this.el.emit(e.type,e),this.el.emit(e.type+":"+e.code,new r(e.type,e)),this.data.debug&&console.log(e.type+":"+e.code)},isPressed:function(e){return e in this.getKeys()},getKeys:function(){return this.isProxied()?this.el.sceneEl.components["proxy-controls"].getKeyboard():this.localKeys},isProxied:function(){const e=this.el.sceneEl.components["proxy-controls"];return e&&e.isConnected()}})},3819:e=>{const t="-controls";e.exports=AFRAME.registerComponent("movement-controls",{dependencies:["rotation"],schema:{enabled:{default:!0},controls:{default:["gamepad","trackpad","keyboard","touch"]},speed:{default:.3,min:0},fly:{default:!1},constrainToNavMesh:{default:!1},camera:{default:"[movement-controls] [camera]",type:"selector"}},init:function(){const e=this.el;this.velocityCtrl=null,this.velocity=new THREE.Vector3,this.heading=new THREE.Quaternion,this.navGroup=null,this.navNode=null,e.sceneEl.hasLoaded?this.injectControls():e.sceneEl.addEventListener("loaded",this.injectControls.bind(this))},update:function(e){const t=this.el,n=this.data,r=t.sceneEl.systems.nav;t.sceneEl.hasLoaded&&this.injectControls(),r&&n.constrainToNavMesh!==e.constrainToNavMesh&&(n.constrainToNavMesh?r.addAgent(this):r.removeAgent(this))},injectControls:function(){const e=this.data;var n;for(let r=0;r<e.controls.length;r++)n=e.controls[r]+t,this.el.components[n]||this.el.setAttribute(n,"")},updateNavLocation:function(){this.navGroup=null,this.navNode=null},tick:function(){const e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3;return function(r,s){if(!s)return;const i=this.el,a=this.data;if(!a.enabled)return;this.updateVelocityCtrl();const o=this.velocityCtrl,l=this.velocity;if(o)if(s/1e3>.2?l.set(0,0,0):this.updateVelocity(s),a.constrainToNavMesh&&!1!==o.isNavMeshConstrained){if(l.lengthSq()<1e-5)return;e.copy(i.object3D.position),t.copy(l).multiplyScalar(s/1e3).add(e);const r=i.sceneEl.systems.nav;this.navGroup=null===this.navGroup?r.getGroup(e):this.navGroup,this.navNode=this.navNode||r.getNode(e,this.navGroup),this.navNode=r.clampStep(e,t,this.navGroup,this.navNode,n),i.object3D.position.copy(n)}else i.hasAttribute("velocity")?i.setAttribute("velocity",l):(i.object3D.position.x+=l.x*s/1e3,i.object3D.position.y+=l.y*s/1e3,i.object3D.position.z+=l.z*s/1e3)}}(),updateVelocityCtrl:function(){const e=this.data;if(e.enabled){for(let n=0,r=e.controls.length;n<r;n++){const r=this.el.components[e.controls[n]+t];if(r&&r.isVelocityActive())return void(this.velocityCtrl=r)}this.velocityCtrl=null}},updateVelocity:function(){const e=new THREE.Vector2,t=new THREE.Quaternion;return function(n){let r;const s=this.el,i=this.velocityCtrl,a=this.velocity,o=this.data;if(i){if(!i.getVelocityDelta){if(i.getVelocity)return void a.copy(i.getVelocity());if(i.getPositionDelta)return void a.copy(i.getPositionDelta(n).multiplyScalar(1e3/n));throw new Error("Incompatible movement controls: ",i)}r=i.getVelocityDelta(n)}if(s.hasAttribute("velocity")&&!o.constrainToNavMesh&&a.copy(this.el.getAttribute("velocity")),r&&o.enabled){const n=o.camera;t.copy(n.object3D.quaternion),t.premultiply(s.object3D.quaternion),r.applyQuaternion(t);const i=r.length();o.fly?(a.copy(r),a.multiplyScalar(16.66667*this.data.speed)):(e.set(r.x,r.z),e.setLength(i*this.data.speed*16.66667),a.x=e.x,a.z=e.y)}}}()})},9048:e=>{e.exports=AFRAME.registerComponent("touch-controls",{schema:{enabled:{default:!0},reverseEnabled:{default:!0}},init:function(){this.dVelocity=new THREE.Vector3,this.bindMethods(),this.direction=0},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners(),this.dVelocity.set(0,0,0)},remove:function(){this.pause()},addEventListeners:function(){const e=this.el.sceneEl,t=e.canvas;t?(t.addEventListener("touchstart",this.onTouchStart),t.addEventListener("touchend",this.onTouchEnd)):e.addEventListener("render-target-loaded",this.addEventListeners.bind(this))},removeEventListeners:function(){const e=this.el.sceneEl&&this.el.sceneEl.canvas;e&&(e.removeEventListener("touchstart",this.onTouchStart),e.removeEventListener("touchend",this.onTouchEnd))},isVelocityActive:function(){return this.data.enabled&&!!this.direction},getVelocityDelta:function(){return this.dVelocity.z=this.direction,this.dVelocity.clone()},bindMethods:function(){this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this)},onTouchStart:function(e){this.direction=-1,this.data.reverseEnabled&&2===e.touches.length&&(this.direction=1),e.preventDefault()},onTouchEnd:function(e){this.direction=0,e.preventDefault()}})},9893:e=>{e.exports=AFRAME.registerComponent("trackpad-controls",{schema:{enabled:{default:!0},enableNegX:{default:!0},enablePosX:{default:!0},enableNegZ:{default:!0},enablePosZ:{default:!0},mode:{default:"touch",oneOf:["swipe","touch","press"]}},init:function(){this.dVelocity=new THREE.Vector3,this.zVel=0,this.xVel=0,this.bindMethods()},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners(),this.dVelocity.set(0,0,0)},remove:function(){this.pause()},addEventListeners:function(){const e=this.data,t=this.el.sceneEl;switch(t.addEventListener("axismove",this.onAxisMove),e.mode){case"swipe":case"touch":t.addEventListener("trackpadtouchstart",this.onTouchStart),t.addEventListener("trackpadtouchend",this.onTouchEnd);break;case"press":t.addEventListener("trackpaddown",this.onTouchStart),t.addEventListener("trackpadup",this.onTouchEnd)}},removeEventListeners:function(){const e=this.el.sceneEl;e.removeEventListener("axismove",this.onAxisMove),e.removeEventListener("trackpadtouchstart",this.onTouchStart),e.removeEventListener("trackpadtouchend",this.onTouchEnd),e.removeEventListener("trackpaddown",this.onTouchStart),e.removeEventListener("trackpadup",this.onTouchEnd)},isVelocityActive:function(){return this.data.enabled&&this.isMoving},getVelocityDelta:function(){return this.dVelocity.z=this.isMoving?-this.zVel:1,this.dVelocity.x=this.isMoving?this.xVel:1,this.dVelocity.clone()},bindMethods:function(){this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),this.onAxisMove=this.onAxisMove.bind(this)},onTouchStart:function(e){switch(this.data.mode){case"swipe":this.canRecordAxis=!0,this.startingAxisData=[];break;case"touch":case"press":this.isMoving=!0}e.preventDefault()},onTouchEnd:function(e){"swipe"==this.data.mode&&(this.startingAxisData=[]),this.isMoving=!1,e.preventDefault()},onAxisMove:function(e){switch(this.data.mode){case"swipe":return this.handleSwipeAxis(e);case"touch":case"press":return this.handleTouchAxis(e)}},handleSwipeAxis:function(e){const t=this.data,n=e.detail.axis;if(0===this.startingAxisData.length&&this.canRecordAxis&&(this.canRecordAxis=!1,this.startingAxisData[0]=n[0],this.startingAxisData[1]=n[1]),this.startingAxisData.length>0){let e=0,r=0;t.enableNegX&&n[0]<this.startingAxisData[0]&&(e=-1),t.enablePosX&&n[0]>this.startingAxisData[0]&&(e=1),t.enablePosZ&&n[1]>this.startingAxisData[1]&&(r=-1),t.enableNegZ&&n[1]<this.startingAxisData[1]&&(r=1);const s=Math.abs(this.startingAxisData[1]-n[1]);Math.abs(this.startingAxisData[0]-n[0])>s?(this.zVel=0,this.xVel=e,this.isMoving=!0):(this.xVel=0,this.zVel=r,this.isMoving=!0)}},handleTouchAxis:function(e){const t=this.data,n=e.detail.axis;let r=0,s=0;t.enableNegX&&n[0]<0&&(r=-1),t.enablePosX&&n[0]>0&&(r=1),t.enablePosZ&&n[1]>0&&(s=-1),t.enableNegZ&&n[1]<0&&(s=1),Math.abs(n[0])>Math.abs(n[1])?(this.zVel=0,this.xVel=r):(this.xVel=0,this.zVel=s)}})},6591:e=>{const t={once:THREE.LoopOnce,repeat:THREE.LoopRepeat,pingpong:THREE.LoopPingPong};function n(e){return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&")}e.exports=AFRAME.registerComponent("animation-mixer",{schema:{clip:{default:"*"},duration:{default:0},clampWhenFinished:{default:!1,type:"boolean"},crossFadeDuration:{default:0},loop:{default:"repeat",oneOf:Object.keys(t)},repetitions:{default:1/0,min:0},timeScale:{default:1}},init:function(){this.model=null,this.mixer=null,this.activeActions=[];const e=this.el.getObject3D("mesh");e?this.load(e):this.el.addEventListener("model-loaded",(e=>{this.load(e.detail.model)}))},load:function(e){const t=this.el;this.model=e,this.mixer=new THREE.AnimationMixer(e),this.mixer.addEventListener("loop",(e=>{t.emit("animation-loop",{action:e.action,loopDelta:e.loopDelta})})),this.mixer.addEventListener("finished",(e=>{t.emit("animation-finished",{action:e.action,direction:e.direction})})),this.data.clip&&this.update({})},remove:function(){this.mixer&&this.mixer.stopAllAction()},update:function(e){if(!e)return;const n=this.data,r=AFRAME.utils.diff(n,e);if("clip"in r)return this.stopAction(),void(n.clip&&this.playAction());this.activeActions.forEach((e=>{"duration"in r&&n.duration&&e.setDuration(n.duration),"clampWhenFinished"in r&&(e.clampWhenFinished=n.clampWhenFinished),("loop"in r||"repetitions"in r)&&e.setLoop(t[n.loop],n.repetitions),"timeScale"in r&&e.setEffectiveTimeScale(n.timeScale)}))},stopAction:function(){const e=this.data;for(let t=0;t<this.activeActions.length;t++)e.crossFadeDuration?this.activeActions[t].fadeOut(e.crossFadeDuration):this.activeActions[t].stop();this.activeActions.length=0},playAction:function(){if(!this.mixer)return;const e=this.model,r=this.data,s=e.animations||(e.geometry||{}).animations||[];if(!s.length)return;const i=(a=r.clip,new RegExp("^"+a.split(/\*+/).map(n).join(".*")+"$"));var a;for(let n,a=0;n=s[a];a++)if(n.name.match(i)){const s=this.mixer.clipAction(n,e);s.enabled=!0,s.clampWhenFinished=r.clampWhenFinished,r.duration&&s.setDuration(r.duration),1!==r.timeScale&&s.setEffectiveTimeScale(r.timeScale),s.setLoop(t[r.loop],r.repetitions).fadeIn(r.crossFadeDuration).play(),this.activeActions.push(s)}},tick:function(e,t){this.mixer&&!isNaN(t)&&this.mixer.update(t/1e3)}})},2290:(e,t,n)=>{THREE.ColladaLoader=n(203),e.exports.Component=AFRAME.registerComponent("collada-model-legacy",{schema:{type:"asset"},init:function(){this.model=null,this.loader=new THREE.ColladaLoader},update:function(){var e=this,t=this.el,n=this.data,r=this.el.sceneEl.systems.renderer;n&&(this.remove(),this.loader.load(n,(function(n){e.model=n.scene,e.model.traverse((function(e){if(e.isMesh){var t=e.material;t.color&&r.applyColorCorrection(t.color),t.map&&r.applyColorCorrection(t.map),t.emissive&&r.applyColorCorrection(t.emissive),t.emissiveMap&&r.applyColorCorrection(t.emissiveMap)}})),t.setObject3D("mesh",e.model),t.emit("model-loaded",{format:"collada",model:e.model})})))},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},5310:(e,t,n)=>{THREE.FBXLoader=n(9434),e.exports=AFRAME.registerComponent("fbx-model",{schema:{src:{type:"asset"},crossorigin:{default:""}},init:function(){this.model=null},update:function(){const e=this.data;if(!e.src)return;this.remove();const t=new THREE.FBXLoader;e.crossorigin&&t.setCrossOrigin(e.crossorigin),t.load(e.src,this.load.bind(this))},load:function(e){this.model=e,this.el.setObject3D("mesh",e),this.el.emit("model-loaded",{format:"fbx",model:e})},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},8837:(e,t,n)=>{const r=n(4657)(),s=function(){let e;return function(){return e=e||r("https://cdn.jsdelivr.net/gh/mrdoob/three.js@r86/examples/js/loaders/GLTFLoader.js"),e}}();e.exports=AFRAME.registerComponent("gltf-model-legacy",{schema:{type:"model"},init:function(){this.model=null,this.loader=null,this.loaderPromise=s().then((()=>{this.loader=new THREE.GLTFLoader,this.loader.setCrossOrigin("Anonymous")}))},update:function(){const e=this,t=this.el,n=this.data;n&&(this.remove(),this.loaderPromise.then((()=>{this.loader.load(n,(function(n){e.model=n.scene,e.model.animations=n.animations,t.setObject3D("mesh",e.model),t.emit("model-loaded",{format:"gltf",model:e.model})}))})))},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},9874:(e,t,n)=>{n(6591),n(2290),n(5310),n(8837),n(171)},171:e=>{e.exports=AFRAME.registerComponent("object-model",{schema:{src:{type:"asset"},crossorigin:{default:""}},init:function(){this.model=null},update:function(){let e;const t=this.data;t.src&&(this.remove(),e=new THREE.ObjectLoader,t.crossorigin&&e.setCrossOrigin(t.crossorigin),e.load(t.src,(e=>{e.traverse((e=>{e instanceof THREE.SkinnedMesh&&e.material&&(e.material.skinning=!!(e.geometry&&e.geometry.bones||[]).length)})),this.load(e)})))},load:function(e){this.model=e,this.el.setObject3D("mesh",e),this.el.emit("model-loaded",{format:"json",model:e})},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},7642:e=>{e.exports=AFRAME.registerComponent("checkpoint",{schema:{offset:{default:{x:0,y:0,z:0},type:"vec3"}},init:function(){this.active=!1,this.targetEl=null,this.fire=this.fire.bind(this),this.offset=new THREE.Vector3},update:function(){this.offset.copy(this.data.offset)},play:function(){this.el.addEventListener("click",this.fire)},pause:function(){this.el.removeEventListener("click",this.fire)},remove:function(){this.pause()},fire:function(){const e=this.el.sceneEl.querySelector("[checkpoint-controls]");if(!e)throw new Error("No `checkpoint-controls` component found.");e.components["checkpoint-controls"].setCheckpoint(this.el)},getOffset:function(){return this.offset.copy(this.data.offset)}})},4795:e=>{function t(e,t,n,r){e&&(t=t||[],e.traverse((e=>{var s;e.isMesh&&((s=e.material)?Array.isArray(s)?s:s.materials?s.materials:[s]:[]).forEach((e=>{e&&!("envMap"in e)||t.length&&-1===t.indexOf(e.name)||(e.envMap=n,e.reflectivity=r,e.needsUpdate=!0)}))})))}e.exports=AFRAME.registerComponent("cube-env-map",{multiple:!0,schema:{path:{default:""},extension:{default:"jpg",oneOf:["jpg","png"]},format:{default:"RGBFormat",oneOf:["RGBFormat","RGBAFormat"]},enableBackground:{default:!1},reflectivity:{default:1,min:0,max:1},materials:{default:[]}},init:function(){const e=this.data;this.texture=(new THREE.CubeTextureLoader).load([e.path+"posx."+e.extension,e.path+"negx."+e.extension,e.path+"posy."+e.extension,e.path+"negy."+e.extension,e.path+"posz."+e.extension,e.path+"negz."+e.extension]),this.texture.format=THREE[e.format],this.object3dsetHandler=()=>{const e=this.el.getObject3D("mesh"),n=this.data;t(e,n.materials,this.texture,n.reflectivity)},this.el.addEventListener("object3dset",this.object3dsetHandler)},update:function(e){const n=this.data,r=this.el.getObject3D("mesh");let s=[],i=[];if(n.materials.length&&(e.materials?(s=n.materials.filter((t=>!e.materials.includes(t))),i=e.materials.filter((e=>!n.materials.includes(e)))):s=n.materials),s.length&&t(r,s,this.texture,n.reflectivity),i.length&&t(r,i,null,1),e.materials&&n.reflectivity!==e.reflectivity){const s=n.materials.filter((t=>e.materials.includes(t)));s.length&&t(r,s,this.texture,n.reflectivity)}this.data.enableBackground&&!e.enableBackground?this.setBackground(this.texture):!this.data.enableBackground&&e.enableBackground&&this.setBackground(null)},remove:function(){this.el.removeEventListener("object3dset",this.object3dsetHandler);const e=this.el.getObject3D("mesh"),n=this.data;t(e,n.materials,null,1),n.enableBackground&&this.setBackground(null)},setBackground:function(e){this.el.sceneEl.object3D.background=e}})},9511:e=>{e.exports=AFRAME.registerComponent("grab",{init:function(){this.system=this.el.sceneEl.systems.physics,this.GRABBED_STATE="grabbed",this.grabbing=!1,this.hitEl=null,this.physics=this.el.sceneEl.systems.physics,this.constraint=null,this.onHit=this.onHit.bind(this),this.onGripOpen=this.onGripOpen.bind(this),this.onGripClose=this.onGripClose.bind(this)},play:function(){const e=this.el;e.addEventListener("hit",this.onHit),e.addEventListener("gripdown",this.onGripClose),e.addEventListener("gripup",this.onGripOpen),e.addEventListener("trackpaddown",this.onGripClose),e.addEventListener("trackpadup",this.onGripOpen),e.addEventListener("triggerdown",this.onGripClose),e.addEventListener("triggerup",this.onGripOpen)},pause:function(){const e=this.el;e.removeEventListener("hit",this.onHit),e.removeEventListener("gripdown",this.onGripClose),e.removeEventListener("gripup",this.onGripOpen),e.removeEventListener("trackpaddown",this.onGripClose),e.removeEventListener("trackpadup",this.onGripOpen),e.removeEventListener("triggerdown",this.onGripClose),e.removeEventListener("triggerup",this.onGripOpen)},onGripClose:function(){this.grabbing=!0},onGripOpen:function(){const e=this.hitEl;this.grabbing=!1,e&&(e.removeState(this.GRABBED_STATE),this.hitEl=void 0,this.system.removeConstraint(this.constraint),this.constraint=null)},onHit:function(e){const t=e.detail.el;t&&!t.is(this.GRABBED_STATE)&&this.grabbing&&!this.hitEl&&(t.addState(this.GRABBED_STATE),this.hitEl=t,this.constraint=new CANNON.LockConstraint(this.el.body,t.body),this.system.addConstraint(this.constraint))}})},9236:(e,t,n)=>{n(7642),n(4795),n(9511),n(765),n(837),n(8310),n(8240),n(1790)},765:e=>{e.exports=AFRAME.registerComponent("jump-ability",{dependencies:["velocity"],schema:{on:{default:"keydown:Space gamepadbuttondown:0"},playerHeight:{default:1.764},maxJumps:{default:1},distance:{default:5},debug:{default:!1}},init:function(){this.velocity=0,this.numJumps=0;const e=this.beginJump.bind(this),t=this.data.on.split(" ");this.bindings={};for(let n=0;n<t.length;n++)this.bindings[t[n]]=e,this.el.addEventListener(t[n],e);this.bindings.collide=this.onCollide.bind(this),this.el.addEventListener("collide",this.bindings.collide)},remove:function(){for(var e in this.bindings)this.bindings.hasOwnProperty(e)&&(this.el.removeEventListener(e,this.bindings[e]),delete this.bindings[e]);this.el.removeEventListener("collide",this.bindings.collide),delete this.bindings.collide},beginJump:function(){if(this.numJumps<this.data.maxJumps){const e=this.data,t=Math.sqrt(-2*e.distance*-24.8),n=this.el.getAttribute("velocity");this.el.setAttribute("velocity",{x:n.x,y:t,z:n.z}),this.numJumps++,this.el.emit("jumpstart")}},onCollide:function(){this.numJumps>0&&this.el.emit("jumpend"),this.numJumps=0}})},837:e=>{const t=1e-6;e.exports=AFRAME.registerComponent("kinematic-body",{dependencies:["velocity"],schema:{mass:{default:5},radius:{default:1.3},linearDamping:{default:.05},enableSlopes:{default:!0},enableJumps:{default:!1}},init:function(){this.system=this.el.sceneEl.systems.physics,this.system.addComponent(this);const e=this.el,t=this.data,n=(new CANNON.Vec3).copy(e.object3D.getWorldPosition(new THREE.Vector3));this.body=new CANNON.Body({material:this.system.getMaterial("staticMaterial"),position:n,mass:t.mass,linearDamping:t.linearDamping,fixedRotation:!0}),this.body.addShape(new CANNON.Sphere(t.radius),new CANNON.Vec3(0,t.radius,0)),this.body.el=this.el,this.el.body=this.body,this.system.addBody(this.body),e.hasAttribute("wasd-controls")&&console.warn("[kinematic-body] Not compatible with wasd-controls, use movement-controls.")},remove:function(){this.system.removeBody(this.body),this.system.removeComponent(this),delete this.el.body},beforeStep:function(e,t){if(!t)return;const n=this.el,r=this.data,s=this.body;r.enableJumps||s.velocity.set(0,0,0),s.position.copy(n.getAttribute("position"))},step:function(){const e=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Vector3,s=new THREE.Vector3;return function(i,a){if(!a)return;let o,l,u=this.body,c=this.data,h=!1,d=-1/0,p=this.system.getContacts();a=Math.min(a,1e3*this.system.data.maxInterval),s.set(0,0,0),e.copy(this.el.getAttribute("velocity")),u.velocity.copy(e);for(var f,m=0;f=p[m];m++)if(f.enabled){if(u.id===f.bi.id)f.ni.negate(r);else{if(u.id!==f.bj.id)continue;r.copy(f.ni)}h=u.velocity.dot(r)<-t,h&&r.y<=.5?e.projectOnPlane(r):r.y>.5&&(o=u.id===f.bi.id?Math.abs(f.rj.y+f.bj.position.y):Math.abs(f.ri.y+f.bi.position.y),o>d&&(d=o,s.copy(r),l=u.id===f.bi.id?f.bj:f.bi))}n.copy(e).normalize(),l&&(!c.enableJumps||n.y<.5)?(c.enableSlopes?s.y<1-t&&s.copy(this.raycastToGround(l,s)):s.set(0,1,0),e.projectOnPlane(s)):this.system.driver.world&&e.add(this.system.driver.world.gravity.scale(4*a/1e3)),u.velocity.copy(e),this.el.setAttribute("velocity",u.velocity),this.el.setAttribute("position",u.position)}}(),raycastToGround:function(e,t){let n,r,s=this.body.position,i=this.body.position.clone();return n=new CANNON.Ray(s,i),n._updateDirection(),n.intersectBody(e),n.hasHit?(r=n.result.hitNormalWorld,Math.abs(r.y)>Math.abs(t.y)?r:t):t}})},8310:e=>{e.exports=AFRAME.registerComponent("mesh-smooth",{init:function(){this.el.addEventListener("model-loaded",(e=>{e.detail.model.traverse((e=>{e.isMesh&&e.geometry.computeVertexNormals()}))}))}})},8240:e=>{e.exports=AFRAME.registerComponent("normal-material",{init:function(){this.material=new THREE.MeshNormalMaterial({flatShading:!0}),this.applyMaterial=this.applyMaterial.bind(this),this.el.addEventListener("object3dset",this.applyMaterial)},remove:function(){this.el.removeEventListener("object3dset",this.applyMaterial)},applyMaterial:function(){this.el.object3D.traverse((e=>{e.isMesh&&(e.material=this.material)}))}})},1790:e=>{e.exports=AFRAME.registerComponent("sphere-collider",{schema:{objects:{default:""},state:{default:"collided"},radius:{default:.05},watch:{default:!0}},init:function(){this.observer=null,this.els=[],this.collisions=[],this.handleHit=this.handleHit.bind(this),this.handleHitEnd=this.handleHitEnd.bind(this)},remove:function(){this.pause()},play:function(){const e=this.el.sceneEl;this.data.watch&&(this.observer=new MutationObserver(this.update.bind(this,null)),this.observer.observe(e,{childList:!0,subtree:!0}))},pause:function(){this.observer&&(this.observer.disconnect(),this.observer=null)},update:function(){const e=this.data;let t;t=e.objects?this.el.sceneEl.querySelectorAll(e.objects):this.el.sceneEl.children,this.els=Array.prototype.slice.call(t)},tick:function(){const e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Vector3,s=new THREE.Box3,i=new Map;return function(){const a=this.el,o=this.data,l=a.getObject3D("mesh"),u=[];let c;var h;l&&(i.clear(),a.object3D.getWorldPosition(e),a.object3D.getWorldScale(n),c=o.radius*(h=n,Math.max.apply(null,h.toArray())),this.els.forEach((function(n){let a,o,l,h;n.isEntity&&(o=n.getObject3D("mesh"),o&&(s.setFromObject(o).getSize(r),h=Math.max(r.x,r.y,r.z)/2,a=Math.sqrt(2*h*h),s.getCenter(t),a&&(l=e.distanceTo(t),l<a+c&&(u.push(n),i.set(n,l)))))})),u.sort(((e,t)=>i.get(e)>i.get(t)?1:-1)).forEach(this.handleHit),0===u.length&&a.emit("hit",{el:null}),this.collisions.filter((e=>!i.has(e))).forEach(this.handleHitEnd),this.collisions=u)}}(),handleHit:function(e){e.emit("hit"),e.addState(this.data.state),this.el.emit("hit",{el:e})},handleHitEnd:function(e){e.emit("hitend"),e.removeState(this.data.state),this.el.emit("hitend",{el:e})}})},2578:(e,t,n)=>{n(8453),n(1250),n(1465)},1250:e=>{e.exports=AFRAME.registerComponent("nav-agent",{schema:{destination:{type:"vec3"},active:{default:!1},speed:{default:2}},init:function(){this.system=this.el.sceneEl.systems.nav,this.system.addAgent(this),this.group=null,this.path=[],this.raycaster=new THREE.Raycaster},remove:function(){this.system.removeAgent(this)},update:function(){this.path.length=0},updateNavLocation:function(){this.group=null,this.path=[]},tick:function(){const e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3;return function(r,s){const i=this.el,a=this.data,o=this.raycaster,l=a.speed*s/1e3;if(!a.active)return;if(!this.path.length){const t=this.el.object3D.position;this.group=this.group||this.system.getGroup(t),this.path=this.system.getPath(t,e.copy(a.destination),this.group)||[],i.emit("navigation-start")}if(!this.path.length)return console.warn("[nav] Unable to find path to %o.",a.destination),this.el.setAttribute("nav-agent",{active:!1}),void i.emit("navigation-end");const u=i.object3D.position,c=this.path[0];let h;if(t.subVectors(c,u),t.length()<l){if(this.path.shift(),!this.path.length)return this.el.setAttribute("nav-agent",{active:!1}),void i.emit("navigation-end");n.copy(u),h=this.path[0]}else n.copy(t.setLength(l)).add(u),h=c;h.y=u.y,i.object3D.lookAt(h),o.ray.origin.copy(n),o.ray.origin.y+=1.5,o.ray.direction.y=-1;const d=o.intersectObject(this.system.getNavMesh());d.length?(t.subVectors(d[0].point,u),u.add(t.setLength(l))):u.copy(n)}}()})},8453:e=>{e.exports=AFRAME.registerComponent("nav-mesh",{init:function(){this.system=this.el.sceneEl.systems.nav,this.hasLoadedNavMesh=!1,this.el.addEventListener("object3dset",this.loadNavMesh.bind(this))},play:function(){this.hasLoadedNavMesh||this.loadNavMesh()},loadNavMesh:function(){const e=this.el.getObject3D("mesh"),t=this.el.sceneEl.object3D;if(!e)return;let n;if(e.traverse((e=>{e.isMesh&&(n=e)})),!n)return;const r=n.geometry.isBufferGeometry?(new THREE.Geometry).fromBufferGeometry(n.geometry):n.geometry.clone();t.updateMatrixWorld(),r.applyMatrix(n.matrixWorld),this.system.setNavMeshGeometry(r),this.hasLoadedNavMesh=!0}})},1465:(e,t,n)=>{const{Pathfinding:r}=n(6594),s=new r,i="level";e.exports=AFRAME.registerSystem("nav",{init:function(){this.navMesh=null,this.agents=new Set},setNavMeshGeometry:function(e){this.navMesh=new THREE.Mesh(e),s.setZoneData(i,r.createZone(e)),Array.from(this.agents).forEach((e=>e.updateNavLocation()))},getNavMesh:function(){return this.navMesh},addAgent:function(e){this.agents.add(e)},removeAgent:function(e){this.agents.delete(e)},getPath:function(e,t,n){return this.navMesh?s.findPath(e,t,i,n):null},getGroup:function(e){return this.navMesh?s.getGroup(i,e):null},getNode:function(e,t){return this.navMesh?s.getClosestNode(e,i,t,!0):null},clampStep:function(e,t,n,r,a){return this.navMesh?r?s.clampStep(e,t,r,i,n,a):(a.copy(t),this.getNode(t,n)):(a.copy(t),null)}})},386:e=>{e.exports=AFRAME.registerPrimitive("a-grid",{defaultComponents:{geometry:{primitive:"plane",width:75,height:75},rotation:{x:-90,y:0,z:0},material:{src:"url(https://cdn.jsdelivr.net/gh/donmccurdy/aframe-extras@v1.16.3/assets/grid.png)",repeat:"75 75"}},mappings:{width:"geometry.width",height:"geometry.height",src:"material.src"}})},3535:(e,t,n)=>{const r=n(3471),s=n(2667);e.exports.Primitive=AFRAME.registerPrimitive("a-hexgrid",{defaultComponents:{hexgrid:{}},mappings:{src:"hexgrid.src"}}),e.exports.Component=AFRAME.registerComponent("hexgrid",{dependencies:["material"],schema:{src:{type:"asset"}},init:function(){const e=this.data;e.src?fetch(e.src).then((e=>e.json())).then((e=>this.addMesh(e))):this.addMesh(s)},addMesh:function(e){const t=new r.HexGrid;t.fromJSON(e);const n=new r.Board(t);n.generateTilemap(),this.el.setObject3D("mesh",n.group),this.addMaterial()},addMaterial:function(){const e=(this.el.components.material||{}).material;e&&this.el.object3D.traverse((t=>{t.isMesh&&(t.material=e)}))},remove:function(){this.el.removeObject3D("mesh")}})},9307:e=>{e.exports.Primitive=AFRAME.registerPrimitive("a-ocean",{defaultComponents:{ocean:{},rotation:{x:-90,y:0,z:0}},mappings:{width:"ocean.width",depth:"ocean.depth",density:"ocean.density",amplitude:"ocean.amplitude",amplitudeVariance:"ocean.amplitudeVariance",speed:"ocean.speed",speedVariance:"ocean.speedVariance",color:"ocean.color",opacity:"ocean.opacity"}}),e.exports.Component=AFRAME.registerComponent("ocean",{schema:{width:{default:10,min:0},depth:{default:10,min:0},density:{default:10},amplitude:{default:.1},amplitudeVariance:{default:.3},speed:{default:1},speedVariance:{default:2},color:{default:"#7AD2F7",type:"color"},opacity:{default:.8}},play:function(){const e=this.el,t=this.data;let n=e.components.material;const r=new THREE.PlaneGeometry(t.width,t.depth,t.density,t.density);r.mergeVertices(),this.waves=[];for(let e,n=0,s=r.vertices.length;n<s;n++)e=r.vertices[n],this.waves.push({z:e.z,ang:Math.random()*Math.PI*2,amp:t.amplitude+Math.random()*t.amplitudeVariance,speed:(t.speed+Math.random()*t.speedVariance)/1e3});n||(n={},n.material=new THREE.MeshPhongMaterial({color:t.color,transparent:t.opacity<1,opacity:t.opacity,shading:THREE.FlatShading})),this.mesh=new THREE.Mesh(r,n.material),e.setObject3D("mesh",this.mesh)},remove:function(){this.el.removeObject3D("mesh")},tick:function(e,t){if(!t)return;const n=this.mesh.geometry.vertices;for(let e,r,s=0;e=n[s];s++)r=this.waves[s],e.z=r.z+Math.sin(r.ang)*r.amp,r.ang+=r.speed*t;this.mesh.geometry.verticesNeedUpdate=!0}})},699:e=>{e.exports.Primitive=AFRAME.registerPrimitive("a-tube",{defaultComponents:{tube:{}},mappings:{path:"tube.path",segments:"tube.segments",radius:"tube.radius","radial-segments":"tube.radialSegments",closed:"tube.closed"}}),e.exports.Component=AFRAME.registerComponent("tube",{schema:{path:{default:[]},segments:{default:64},radius:{default:1},radialSegments:{default:8},closed:{default:!1}},init:function(){const e=this.el,t=this.data;let n=e.components.material;if(!t.path.length)return void console.error("[a-tube] `path` property expected but not found.");const r=new THREE.CatmullRomCurve3(t.path.map((function(e){return e=e.split(" "),new THREE.Vector3(Number(e[0]),Number(e[1]),Number(e[2]))}))),s=new THREE.TubeGeometry(r,t.segments,t.radius,t.radialSegments,t.closed);n||(n={},n.material=new THREE.MeshPhongMaterial),this.mesh=new THREE.Mesh(s,n.material),this.el.setObject3D("mesh",this.mesh)},update:function(e){Object.keys(e).length&&(this.remove(),this.init())},remove:function(){this.mesh&&this.el.removeObject3D("mesh")}})},6699:(e,t,n)=>{n(386),n(3535),n(9307),n(699)},5202:(e,t,n)=>{var r=n(7966);e.exports=r.wrapAEventElement("a-click","click")},5038:(e,t,n)=>{var r=n(9040),s=n(7966),i=r.registerElement.registerElement,a={},o={},l={},u={target:!0};function c(e,t){t in a?a[t].push(e):a[t]=[e]}function h(e,t){if(t in a){var n=a[t].indexOf(e);-1!==n&&a[t].splice(n,1)}}function d(e,t){e.removeState(t),h(e,t)}function p(e){var t=m(e.target),n=e.type,r=l[n];r&&r.forEach((function(e){if(e.sourceEl===t){var n=e.attributes,r=e.targetSel,i="string"==typeof r?s.$(r):r;i&&f(i,n)}}))}function f(e,t){s.$$(t).forEach((function(t){t.name in u||("state"===t.name?s.splitString(t.value).forEach((function(t){!function(e,t){e.addState(t),c(e,t)}(e,t),a[t].forEach((function(n){n!==e&&d(n,t)}))})):e.setAttribute(t.name,t.value))}))}function m(e){return"a-root"===e.tagName.toLowerCase()?e.parentNode:e.previousElementSibling||e.nextElementSibling||!e.closest("a-root")?e:e.closest("a-root").parentNode}window.addEventListener("stateadded",(function(e){var t=e.detail.state,n=e.target;c(n,t),"hovering"===t&&n.emit("mouseenter"),"hovered"===t&&function(e,t){return t in a&&-1!==a[t].indexOf(e)}(n,"selected")&&d(n,"hovered")})),window.addEventListener("stateremoved",(function(e){var t=e.detail.state,n=e.target;h(n,t),"hovering"===t&&n.emit("mouseleave")}));var g=i("a-event",{prototype:Object.create(HTMLElement.prototype,{attachedCallback:{value:function(){var e=this,t=e.parentNode;function n(){e.isAEvent=!0,e.type=e.type||e.getAttribute("type"),e.target=e.target||e.getAttribute("target"),e.sceneEl=s.$("a-scene"),e.attachEventListener()}t.isNode?n():t.addEventListener("nodeready",n)},writable:window.debug},detachedCallback:{value:function(){},writable:window.debug},attributeChangedCallback:{value:function(e,t,n){t!==n&&("type"===e?this.type=n:"target"===e&&(this.target=n))},writable:window.debug},attachEventListener:{value:function(){var e,t,n,r=this;if(this.sceneEl=this.sceneEl||s.$("a-scene"),"load"===r.type)return e=m(r.parentNode),t=r.target?s.$(r.target):e,n=function(n){n.target===e&&f(t,r.attributes)},e&&e.hasLoaded?void n(e):void this.sceneEl.addEventListener("load",n);n=p,function(e,t,n,r){(function(e,t){return t in o&&-1!==o[t].indexOf(e)})(e,t)||(function(e,t){t in o?o[t].push(e):o[t]=[e]}(e,t),e.addEventListener(t,n,r))}(this.sceneEl,r.type,n),e=m(r.parentNode),t=r.target||e,function(e,t,n,r){var s=e,i={sourceEl:t,targetSel:n,attributes:r};s in l?l[s].push(i):l[s]=[i]}(r.type,e,t,r.attributes)},writable:window.debug}})});e.exports=g},4467:(e,t,n)=>{var r=n(7966);e.exports=r.wrapAEventElement("a-hover","mouseenter")},8913:(e,t,n)=>{var r=n(7966);e.exports=r.wrapAEventElement("a-load","load")},6:(e,t,n)=>{var r=n(7966);e.exports=r.wrapAEventElement("a-mousedown","mousedown")},564:(e,t,n)=>{var r=n(7966);e.exports=r.wrapAEventElement("a-mouseenter","mouseenter")},5885:(e,t,n)=>{var r=n(7966);e.exports=r.wrapAEventElement("a-mouseleave","mouseleave")},5570:(e,t,n)=>{var r=n(7966);e.exports=r.wrapAEventElement("a-mouseup","mouseup")},7984:(e,t,n)=>{e.exports={"a-click":n(5202),"a-event":n(5038),"a-hover":n(4467),"a-load":n(8913),"a-mousedown":n(6),"a-mouseenter":n(564),"a-mouseleave":n(5885),"a-mouseup":n(5570)}},1824:(e,t,n)=>{window.addEventListener("HTMLImportsLoaded",(function(){HTMLImports&&!HTMLImports.useNative&&Object.keys(HTMLImports.importer.documents).forEach((function(e){var t,n,r;t=HTMLImports.importer.documents[e],n=i.$("a-scene"),(r=i.$("a-assets"))||(r=document.createElement("a-assets"),n.parentNode.insertBefore(r,n)),i.$$("a-mixin",t).forEach((function(e){var t=document.importNode(e,!0);r.appendChild(t)})),i.$$('template[is="a-template"]',t).forEach((function(e){var t=document.importNode(e,!0);document.body.appendChild(t)}))}))})),"import"in document.createElement("link")||n(3008);var r=n(9040),s=n(4583),i=n(7966),a=r.registerElement.registerElement;e.exports=a("a-template",{extends:"template",prototype:Object.create(HTMLTemplateElement.prototype,{createdCallback:{value:function(){var e=this;e.placeholders=[],window.addEventListener("load",(function(){e.ownerDocument!==document&&document.body.appendChild(e)}))},writable:window.debug},attachedCallback:{value:function(){this.load(),this.inject()},writable:window.debug},detachedCallback:{value:function(){},writable:window.debug},load:{value:function(){this.hasLoaded||(i.fireEvent(this,"loaded"),this.hasLoaded=!0)},writable:window.debug},register:{value:function(e){if(!this.registered)return this.registered=!0,s(e)},writable:window.debug},removeTemplateListener:{value:function(){this.mixinObserver&&(this.mixinObserver.disconnect(),this.mixinObserver=null)},writable:window.debug},attachTemplateListener:{value:function(e){var t=this;t.mixinObserver&&t.mixinObserver.disconnect(),t.mixinObserver=new MutationObserver((function(e){t.placeholders.forEach((function(e){e.rerender(!0)}))})),t.mixinObserver.observe(t,{attributes:!0,characterData:!0,childList:!0,subtree:!0})},writable:window.debug},inject:{value:function(){var e=this;if(!e.injected){e.injected=!0;var t=e.getAttribute("element");t&&(e.attachTemplateListener(t),e.register(t))}},writable:window.debug}})})},6339:(e,t,n)=>{var r={"a-event":n(7984),"a-template":n(1824)};n(8516),e.exports=r},4583:(e,t,n)=>{var r=n(9040),s=n(7966),i=r.registerElement.registerElement,a=r.AEntity,o=r.AComponents,l=s.extend({id:!0,name:!0,class:!0,target:!0}),u=s.extend({},o);i("a-root",{prototype:Object.create(a.prototype)}),e.exports=function(e){var t=e.toLowerCase();return i(t,{prototype:Object.create(a.prototype,{attachedCallback:{value:function(){this.emit("loaded"),this.emit("nodeready"),this.rerender(!1,!0)}},attributeChangedCallback:{value:function(e,t,n){t!==n&&this.rerender()},writable:window.debug},attributeBlacklist:{value:l,writable:window.debug},componentBlacklist:{value:u,writable:window.debug},detachedCallback:{value:function(){this.sceneEl||(this.sceneEl=s.$("a-scene")),this.sceneEl.remove(this)},writable:window.debug},rerender:{value:function(n,r){var i=this;if(n||this.lastOuterHTML!==this.outerHTML){var a=s.$('template[is="a-template"][element="'+e+'"]');if(a){var o=s.mergeAttrs(a,this);s.forEach(a.attributes,(function(e){e.name in i.componentBlacklist&&(r&&s.warn('Cannot use attribute name "%s" for template definition of <%s> because it is a core component',e.name,t),delete o[e.name])})),Object.keys(o).filter((function(e){e in this.attributeBlacklist&&delete o[e];var t=o[e],n=this.components[e];n&&"object"==typeof t&&(o[e]=n.stringify(t))}),this),this.root=s.$$(this.children).filter((function(e){return"a-root"===e.tagName.toLowerCase()}))[0],this.root||(this.root=document.createElement("a-root"),this.appendChild(this.root));var l=s.format(a.innerHTML,o);l!==this.root.innerHTML&&(this.root.innerHTML=l),this.lastOuterHTML=this.outerHTML}}},writable:window.debug}})})}},7966:(e,t,n)=>{var r=n(9040),s=n(5038),i=r.utils,a=r.registerElement.registerElement;e.exports.$=function(e,t){var n=e;return e&&"string"==typeof e&&(n=(t||document).querySelector(e)),n},e.exports.$$=function(e,t){if(Array.isArray(e))return e;var n=e;return e&&"string"==typeof e&&(n=(t||document).querySelectorAll(e)),l(n)};var o,l=e.exports.toArray=function(e){return Array.isArray(e)?e:"object"==typeof e&&"number"==typeof e.length?Array.prototype.slice.call(e):[e]},u=e.exports.forEach=function(e,t){return Array.prototype.forEach.call(e,t)};e.exports.mergeAttrs=function(){var e={};return u(arguments,(function(t){u(t.attributes,(function(n){t.getComputedAttribute?e[n.name]=t.getComputedAttribute(n.name):e[n.name]=t.getAttribute(n.name)}))})),e},e.exports.format=(o=[/\$?\{\s*([^}= ]+)(\s*=\s*(.+))?\s*\}/g,/\$?%7B\s*([^}= ]+)(\s*=\s*(.+))?\s*%7D/g],function(e,t){if(!e)throw new Error("Format string is empty!");if(t)return t instanceof Array||t instanceof Object||(t=Array.prototype.slice.call(arguments,1)),Object.keys(t).forEach((function(e){t[String(e).toLowerCase()]=t[e]})),o.forEach((function(n){e=e.replace(n,(function(e,n,r,s){var i=t[n.toLowerCase()];return void 0===i?(s||"").trim().replace(/^["']|["']$/g,""):(i||"").trim().replace(/^["']|["']$/g,"")}))})),e});var c=e.exports.wrapElement=function(e,t,n){return n=n||{},a(e,{prototype:Object.create(t.prototype,n)})};e.exports.wrapAEventElement=function(e,t,n){return(n=n||{}).type={value:t,writable:window.debug},c(e,s,n)},e.exports.error=i.error,e.exports.extend=i.extend,e.exports.fireEvent=i.fireEvent,e.exports.log=i.log,e.exports.splitString=i.splitString,e.exports.warn=i.warn},5905:(e,t,n)=>{var r=n(9040),s=n(6339),i=n(1258),a=n(4583);e.exports={aframeCore:r,elements:{core:s},registerTemplate:a,version:i.version}},3008:()=>{var e,t;"undefined"==typeof WeakMap&&function(){var e=Object.defineProperty,t=Date.now()%1e9,n=function(){this.name="__st"+(1e9*Math.random()>>>0)+t+++"__"};n.prototype={set:function(t,n){var r=t[this.name];return r&&r[0]===t?r[1]=n:e(t,this.name,{value:[t,n],writable:!0}),this},get:function(e){var t;return(t=e[this.name])&&t[0]===e?t[1]:void 0},delete:function(e){var t=e[this.name];return!(!t||t[0]!==e||(t[0]=t[1]=void 0,0))},has:function(e){var t=e[this.name];return!!t&&t[0]===e}},window.WeakMap=n}(),function(e){var t,n=new WeakMap;if(/Trident|Edge/.test(navigator.userAgent))t=setTimeout;else if(window.setImmediate)t=window.setImmediate;else{var r=[],s=String(Math.random());window.addEventListener("message",(function(e){if(e.data===s){var t=r;r=[],t.forEach((function(e){e()}))}})),t=function(e){r.push(e),window.postMessage(s,"*")}}var i=!1,a=[];function o(){i=!1;var e=a;a=[],e.sort((function(e,t){return e.uid_-t.uid_}));var t=!1;e.forEach((function(e){var r=e.takeRecords();!function(e){e.nodes_.forEach((function(t){var r=n.get(t);r&&r.forEach((function(t){t.observer===e&&t.removeTransientObservers()}))}))}(e),r.length&&(e.callback_(r,e),t=!0)})),t&&o()}function l(e,t){for(var r=e;r;r=r.parentNode){var s=n.get(r);if(s)for(var i=0;i<s.length;i++){var a=s[i],o=a.options;if(r===e||o.subtree){var l=t(o);l&&a.enqueue(l)}}}}var u,c,h=0;function d(e){this.callback_=e,this.nodes_=[],this.records_=[],this.uid_=++h}function p(e,t){this.type=e,this.target=t,this.addedNodes=[],this.removedNodes=[],this.previousSibling=null,this.nextSibling=null,this.attributeName=null,this.attributeNamespace=null,this.oldValue=null}function f(e,t){return u=new p(e,t)}function m(e){return c||((n=new p((t=u).type,t.target)).addedNodes=t.addedNodes.slice(),n.removedNodes=t.removedNodes.slice(),n.previousSibling=t.previousSibling,n.nextSibling=t.nextSibling,n.attributeName=t.attributeName,n.attributeNamespace=t.attributeNamespace,n.oldValue=t.oldValue,(c=n).oldValue=e,c);var t,n}function g(e,t,n){this.observer=e,this.target=t,this.options=n,this.transientObservedNodes=[]}d.prototype={observe:function(e,t){var r;if(r=e,e=window.ShadowDOMPolyfill&&window.ShadowDOMPolyfill.wrapIfNeeded(r)||r,!t.childList&&!t.attributes&&!t.characterData||t.attributeOldValue&&!t.attributes||t.attributeFilter&&t.attributeFilter.length&&!t.attributes||t.characterDataOldValue&&!t.characterData)throw new SyntaxError;var s,i=n.get(e);i||n.set(e,i=[]);for(var a=0;a<i.length;a++)if(i[a].observer===this){(s=i[a]).removeListeners(),s.options=t;break}s||(s=new g(this,e,t),i.push(s),this.nodes_.push(e)),s.addListeners()},disconnect:function(){this.nodes_.forEach((function(e){for(var t=n.get(e),r=0;r<t.length;r++){var s=t[r];if(s.observer===this){s.removeListeners(),t.splice(r,1);break}}}),this),this.records_=[]},takeRecords:function(){var e=this.records_;return this.records_=[],e}},g.prototype={enqueue:function(e){var n,r=this.observer.records_,s=r.length;if(r.length>0){var l=function(e,t){return e===t?e:!c||(n=e)!==c&&n!==u?null:c;var n}(r[s-1],e);if(l)return void(r[s-1]=l)}else n=this.observer,a.push(n),i||(i=!0,t(o));r[s]=e},addListeners:function(){this.addListeners_(this.target)},addListeners_:function(e){var t=this.options;t.attributes&&e.addEventListener("DOMAttrModified",this,!0),t.characterData&&e.addEventListener("DOMCharacterDataModified",this,!0),t.childList&&e.addEventListener("DOMNodeInserted",this,!0),(t.childList||t.subtree)&&e.addEventListener("DOMNodeRemoved",this,!0)},removeListeners:function(){this.removeListeners_(this.target)},removeListeners_:function(e){var t=this.options;t.attributes&&e.removeEventListener("DOMAttrModified",this,!0),t.characterData&&e.removeEventListener("DOMCharacterDataModified",this,!0),t.childList&&e.removeEventListener("DOMNodeInserted",this,!0),(t.childList||t.subtree)&&e.removeEventListener("DOMNodeRemoved",this,!0)},addTransientObserver:function(e){if(e!==this.target){this.addListeners_(e),this.transientObservedNodes.push(e);var t=n.get(e);t||n.set(e,t=[]),t.push(this)}},removeTransientObservers:function(){var e=this.transientObservedNodes;this.transientObservedNodes=[],e.forEach((function(e){this.removeListeners_(e);for(var t=n.get(e),r=0;r<t.length;r++)if(t[r]===this){t.splice(r,1);break}}),this)},handleEvent:function(e){switch(e.stopImmediatePropagation(),e.type){case"DOMAttrModified":var t=e.attrName,n=e.relatedNode.namespaceURI,r=e.target;(i=new f("attributes",r)).attributeName=t,i.attributeNamespace=n;var s=e.attrChange===MutationEvent.ADDITION?null:e.prevValue;l(r,(function(e){if(e.attributes&&(!e.attributeFilter||!e.attributeFilter.length||-1!==e.attributeFilter.indexOf(t)||-1!==e.attributeFilter.indexOf(n)))return e.attributeOldValue?m(s):i}));break;case"DOMCharacterDataModified":var i=f("characterData",r=e.target);s=e.prevValue,l(r,(function(e){if(e.characterData)return e.characterDataOldValue?m(s):i}));break;case"DOMNodeRemoved":this.addTransientObserver(e.target);case"DOMNodeInserted":var a,o,h=e.target;"DOMNodeInserted"===e.type?(a=[h],o=[]):(a=[],o=[h]);var d=h.previousSibling,p=h.nextSibling;(i=f("childList",e.target.parentNode)).addedNodes=a,i.removedNodes=o,i.previousSibling=d,i.nextSibling=p,l(e.relatedNode,(function(e){if(e.childList)return i}))}u=c=void 0}},e.JsMutationObserver=d,e.MutationObserver||(e.MutationObserver=d)}(self),window.HTMLImports=window.HTMLImports||{flags:{}},function(e){var t="import",n=Boolean(t in document.createElement("link")),r=Boolean(window.ShadowDOMPolyfill),s=function(e){return r?window.ShadowDOMPolyfill.wrapIfNeeded(e):e},i=s(document),a={get:function(){var e=window.HTMLImports.currentScript||document.currentScript||("complete"!==document.readyState?document.scripts[document.scripts.length-1]:null);return s(e)},configurable:!0};Object.defineProperty(document,"_currentScript",a),Object.defineProperty(i,"_currentScript",a);var o=/Trident/.test(navigator.userAgent);function l(e,t){h((function(){!function(e,t){var r,s=t.querySelectorAll("link[rel=import]"),i=0,a=s.length,o=[],l=[];function u(){i==a&&e&&e({allImports:s,loadedImports:o,errorImports:l})}function c(e){d(e),o.push(this),i++,u()}function h(e){l.push(this),i++,u()}if(a)for(var p,f=0;f<a&&(p=s[f]);f++)r=p,(n?r.__loaded||r.import&&"loading"!==r.import.readyState:r.__importParsed)?(i++,u()):(p.addEventListener("load",c),p.addEventListener("error",h));else u()}(e,t)}),t=t||i)}var u=o?"complete":"interactive",c="readystatechange";function h(e,t){if(function(e){return"complete"===e.readyState||e.readyState===u}(t))e&&e();else{var n=function(){"complete"!==t.readyState&&t.readyState!==u||(t.removeEventListener(c,n),h(e,t))};t.addEventListener(c,n)}}function d(e){e.target.__loaded=!0}if(n){function p(e){for(var t,n=0,r=e.length;n<r&&(t=e[n]);n++)"link"===(s=t).localName&&"import"===s.rel&&f(t);var s}function f(e){e.import?d({target:e}):(e.addEventListener("load",d),e.addEventListener("error",d))}new MutationObserver((function(e){for(var t,n=0,r=e.length;n<r&&(t=e[n]);n++)t.addedNodes&&p(t.addedNodes)})).observe(document.head,{childList:!0}),function(){if("loading"===document.readyState)for(var e,t=document.querySelectorAll("link[rel=import]"),n=0,r=t.length;n<r&&(e=t[n]);n++)f(e)}()}l((function(e){window.HTMLImports.ready=!0,window.HTMLImports.readyTime=(new Date).getTime();var t=i.createEvent("CustomEvent");t.initCustomEvent("HTMLImportsLoaded",!0,!0,e),i.dispatchEvent(t)})),e.IMPORT_LINK_TYPE=t,e.useNative=n,e.rootDocument=i,e.whenReady=l,e.isIE=o}(window.HTMLImports),e=window.HTMLImports,t=[],e.addModule=function(e){t.push(e)},e.initializeModules=function(){t.forEach((function(t){t(e)}))},window.HTMLImports.addModule((function(e){var t=/(url\()([^)]*)(\))/g,n=/(@import[\s]+(?!url\())([^;]*)(;)/g,r={resolveUrlsInStyle:function(e,t){var n=e.ownerDocument.createElement("a");return e.textContent=this.resolveUrlsInCssText(e.textContent,t,n),e},resolveUrlsInCssText:function(e,r,s){var i=this.replaceUrls(e,s,r,t);return this.replaceUrls(i,s,r,n)},replaceUrls:function(e,t,n,r){return e.replace(r,(function(e,r,s,i){var a=s.replace(/["']/g,"");return n&&(a=new URL(a,n).href),t.href=a,r+"'"+(a=t.href)+"'"+i}))}};e.path=r})),window.HTMLImports.addModule((function(e){var t={async:!0,ok:function(e){return e.status>=200&&e.status<300||304===e.status||0===e.status},load:function(n,r,s){var i=new XMLHttpRequest;return(e.flags.debug||e.flags.bust)&&(n+="?"+Math.random()),i.open("GET",n,t.async),i.addEventListener("readystatechange",(function(e){if(4===i.readyState){var n=i.getResponseHeader("Location"),a=null;n&&(a="/"===n.substr(0,1)?location.origin+n:n),r.call(s,!t.ok(i)&&i,i.response||i.responseText,a)}})),i.send(),i},loadDocument:function(e,t,n){this.load(e,t,n).responseType="document"}};e.xhr=t})),window.HTMLImports.addModule((function(e){var t=e.xhr,n=e.flags,r=function(e,t){this.cache={},this.onload=e,this.oncomplete=t,this.inflight=0,this.pending={}};r.prototype={addNodes:function(e){this.inflight+=e.length;for(var t,n=0,r=e.length;n<r&&(t=e[n]);n++)this.require(t);this.checkDone()},addNode:function(e){this.inflight++,this.require(e),this.checkDone()},require:function(e){var t=e.src||e.href;e.__nodeUrl=t,this.dedupe(t,e)||this.fetch(t,e)},dedupe:function(e,t){return this.pending[e]?(this.pending[e].push(t),!0):this.cache[e]?(this.onload(e,t,this.cache[e]),this.tail(),!0):(this.pending[e]=[t],!1)},fetch:function(e,r){if(n.load&&console.log("fetch",e,r),e)if(e.match(/^data:/)){var s=e.split(","),i=s[0],a=s[1];a=i.indexOf(";base64")>-1?atob(a):decodeURIComponent(a),setTimeout(function(){this.receive(e,r,null,a)}.bind(this),0)}else{var o=function(t,n,s){this.receive(e,r,t,n,s)}.bind(this);t.load(e,o)}else setTimeout(function(){this.receive(e,r,{error:"href must be specified"},null)}.bind(this),0)},receive:function(e,t,n,r,s){this.cache[e]=r;for(var i,a=this.pending[e],o=0,l=a.length;o<l&&(i=a[o]);o++)this.onload(e,i,r,n,s),this.tail();this.pending[e]=null},tail:function(){--this.inflight,this.checkDone()},checkDone:function(){this.inflight||this.oncomplete()}},e.Loader=r})),window.HTMLImports.addModule((function(e){var t=function(e){this.addCallback=e,this.mo=new MutationObserver(this.handler.bind(this))};t.prototype={handler:function(e){for(var t,n=0,r=e.length;n<r&&(t=e[n]);n++)"childList"===t.type&&t.addedNodes.length&&this.addedNodes(t.addedNodes)},addedNodes:function(e){this.addCallback&&this.addCallback(e);for(var t,n=0,r=e.length;n<r&&(t=e[n]);n++)t.children&&t.children.length&&this.addedNodes(t.children)},observe:function(e){this.mo.observe(e,{childList:!0,subtree:!0})}},e.Observer=t})),window.HTMLImports.addModule((function(e){var t=e.path,n=e.rootDocument,r=e.flags,s=e.isIE,i=e.IMPORT_LINK_TYPE,a="link[rel="+i+"]",o={documentSelectors:a,importsSelectors:[a,"link[rel=stylesheet]:not([type])","style:not([type])","script:not([type])",'script[type="application/javascript"]','script[type="text/javascript"]'].join(","),map:{link:"parseLink",script:"parseScript",style:"parseStyle"},dynamicElements:[],parseNext:function(){var e=this.nextToParse();e&&this.parse(e)},parse:function(e){if(this.isParsed(e))r.parse&&console.log("[%s] is already parsed",e.localName);else{var t=this[this.map[e.localName]];t&&(this.markParsing(e),t.call(this,e))}},parseDynamic:function(e,t){this.dynamicElements.push(e),t||this.parseNext()},markParsing:function(e){r.parse&&console.log("parsing",e),this.parsingElement=e},markParsingComplete:function(e){e.__importParsed=!0,this.markDynamicParsingComplete(e),e.__importElement&&(e.__importElement.__importParsed=!0,this.markDynamicParsingComplete(e.__importElement)),this.parsingElement=null,r.parse&&console.log("completed",e)},markDynamicParsingComplete:function(e){var t=this.dynamicElements.indexOf(e);t>=0&&this.dynamicElements.splice(t,1)},parseImport:function(e){if(e.import=e.__doc,window.HTMLImports.__importsParsingHook&&window.HTMLImports.__importsParsingHook(e),e.import&&(e.import.__importParsed=!0),this.markParsingComplete(e),e.__resource&&!e.__error?e.dispatchEvent(new CustomEvent("load",{bubbles:!1})):e.dispatchEvent(new CustomEvent("error",{bubbles:!1})),e.__pending)for(var t;e.__pending.length;)(t=e.__pending.shift())&&t({target:e});this.parseNext()},parseLink:function(e){l(e)?this.parseImport(e):(e.href=e.href,this.parseGeneric(e))},parseStyle:function(e){var n,r,s=e;(r=(n=e).ownerDocument.createElement("style")).textContent=n.textContent,t.resolveUrlsInStyle(r),e=r,s.__appliedElement=e,e.__importElement=s,this.parseGeneric(e)},parseGeneric:function(e){this.trackElement(e),this.addElementToDocument(e)},rootImportForElement:function(e){for(var t=e;t.ownerDocument.__importLink;)t=t.ownerDocument.__importLink;return t},addElementToDocument:function(e){var t=this.rootImportForElement(e.__importElement||e);t.parentNode.insertBefore(e,t)},trackElement:function(e,t){var n=this,r=function(s){e.removeEventListener("load",r),e.removeEventListener("error",r),t&&t(s),n.markParsingComplete(e),n.parseNext()};if(e.addEventListener("load",r),e.addEventListener("error",r),s&&"style"===e.localName){var i=!1;if(-1==e.textContent.indexOf("@import"))i=!0;else if(e.sheet){i=!0;for(var a,o=e.sheet.cssRules,l=o?o.length:0,u=0;u<l&&(a=o[u]);u++)a.type===CSSRule.IMPORT_RULE&&(i=i&&Boolean(a.styleSheet))}i&&setTimeout((function(){e.dispatchEvent(new CustomEvent("load",{bubbles:!1}))}))}},parseScript:function(t){var n=document.createElement("script");n.__importElement=t,n.src=t.src?t.src:function(e){var t=function(e){return e.textContent+function(e){var t=e.ownerDocument;t.__importedScripts=t.__importedScripts||0;var n=e.ownerDocument.baseURI,r=t.__importedScripts?"-"+t.__importedScripts:"";return t.__importedScripts++,"\n//# sourceURL="+n+r+".js\n"}(e)}(e);return"data:text/javascript;charset=utf-8,"+encodeURIComponent(t)}(t),e.currentScript=t,this.trackElement(n,(function(t){n.parentNode&&n.parentNode.removeChild(n),e.currentScript=null})),this.addElementToDocument(n)},nextToParse:function(){return this._mayParse=[],!this.parsingElement&&(this.nextToParseInDoc(n)||this.nextToParseDynamic())},nextToParseInDoc:function(e,t){if(e&&this._mayParse.indexOf(e)<0){this._mayParse.push(e);for(var n,r=e.querySelectorAll(this.parseSelectorsForNode(e)),s=0,i=r.length;s<i&&(n=r[s]);s++)if(!this.isParsed(n))return this.hasResource(n)?l(n)?this.nextToParseInDoc(n.__doc,n):n:void 0}return t},nextToParseDynamic:function(){return this.dynamicElements[0]},parseSelectorsForNode:function(e){return(e.ownerDocument||e)===n?this.documentSelectors:this.importsSelectors},isParsed:function(e){return e.__importParsed},needsDynamicParsing:function(e){return this.dynamicElements.indexOf(e)>=0},hasResource:function(e){return!l(e)||void 0!==e.__doc}};function l(e){return"link"===e.localName&&e.rel===i}e.parser=o,e.IMPORT_SELECTOR=a})),window.HTMLImports.addModule((function(e){var t=e.flags,n=e.IMPORT_LINK_TYPE,r=e.IMPORT_SELECTOR,s=e.rootDocument,i=e.Loader,a=e.Observer,o=e.parser,l={documents:{},documentPreloadSelectors:r,importsPreloadSelectors:[r].join(","),loadNode:function(e){u.addNode(e)},loadSubtree:function(e){var t=this.marshalNodes(e);u.addNodes(t)},marshalNodes:function(e){return e.querySelectorAll(this.loadSelectorsForNode(e))},loadSelectorsForNode:function(e){return(e.ownerDocument||e)===s?this.documentPreloadSelectors:this.importsPreloadSelectors},loaded:function(e,r,s,i,a){if(t.load&&console.log("loaded",e,r),r.__resource=s,r.__error=i,function(e){return function(e,t){return"link"===e.localName&&e.getAttribute("rel")===t}(e,n)}(r)){var l=this.documents[e];void 0===l&&(l=i?null:function(e,t){var r=document.implementation.createHTMLDocument(n);r._URL=t;var s=r.createElement("base");s.setAttribute("href",t),r.baseURI||function(e){return!!Object.getOwnPropertyDescriptor(e,"baseURI")}(r)||Object.defineProperty(r,"baseURI",{value:t});var i=r.createElement("meta");return i.setAttribute("charset","utf-8"),r.head.appendChild(i),r.head.appendChild(s),r.body.innerHTML=e,window.HTMLTemplateElement&&HTMLTemplateElement.bootstrap&&HTMLTemplateElement.bootstrap(r),r}(s,a||e),l&&(l.__importLink=r,this.bootDocument(l)),this.documents[e]=l),r.__doc=l}o.parseNext()},bootDocument:function(e){this.loadSubtree(e),this.observer.observe(e),o.parseNext()},loadedAll:function(){o.parseNext()}},u=new i(l.loaded.bind(l),l.loadedAll.bind(l));if(l.observer=new a,!document.baseURI){var c={get:function(){var e=document.querySelector("base");return e?e.href:window.location.href},configurable:!0};Object.defineProperty(document,"baseURI",c),Object.defineProperty(s,"baseURI",c)}e.importer=l,e.importLoader=u})),window.HTMLImports.addModule((function(e){var t=e.parser,n=e.importer,r={added:function(e){for(var r,s,i,a,o=0,l=e.length;o<l&&(a=e[o]);o++)r||(r=a.ownerDocument,s=t.isParsed(r)),(i=this.shouldLoadNode(a))&&n.loadNode(a),this.shouldParseNode(a)&&s&&t.parseDynamic(a,i)},shouldLoadNode:function(e){return 1===e.nodeType&&s.call(e,n.loadSelectorsForNode(e))},shouldParseNode:function(e){return 1===e.nodeType&&s.call(e,t.parseSelectorsForNode(e))}};n.observer.addCallback=r.added.bind(r);var s=HTMLElement.prototype.matches||HTMLElement.prototype.matchesSelector||HTMLElement.prototype.webkitMatchesSelector||HTMLElement.prototype.mozMatchesSelector||HTMLElement.prototype.msMatchesSelector})),function(e){var t=e.initializeModules,n=e.isIE;if(!e.useNative){(!window.CustomEvent||n&&"function"!=typeof window.CustomEvent)&&(window.CustomEvent=function(e,t){t=t||{};var n=document.createEvent("CustomEvent");return n.initCustomEvent(e,Boolean(t.bubbles),Boolean(t.cancelable),t.detail),n.preventDefault=function(){Object.defineProperty(this,"defaultPrevented",{get:function(){return!0}})},n},window.CustomEvent.prototype=window.Event.prototype),t();var r=e.rootDocument;"complete"===document.readyState||"interactive"===document.readyState&&!window.attachEvent?s():document.addEventListener("DOMContentLoaded",s)}function s(){window.HTMLImports.importer.bootDocument(r)}}(window.HTMLImports)},1258:e=>{"use strict";e.exports=JSON.parse('{"name":"aframe","version":"0.1.3","description":"Building blocks for the VR Web","main":"index.js","scripts":{"start":"npm run dev","dev":"npm run build && node ./scripts/budo","browserify":"browserify ./index.js -s \'AFRAME\'","build":"mkdir -p build/ && npm run browserify -- --debug -o build/aframe.js","dist":"mkdir -p dist/ && npm run browserify -s -- --debug | exorcist dist/aframe.js.map > dist/aframe.js && uglifyjs dist/aframe.js -c warnings=false -m -o dist/aframe.min.js","preghpages":"npm run dist && rm -rf gh-pages && mkdir -p gh-pages && cp -r {.nojekyll,dist,lib,examples,index.html,style} gh-pages/. 2>/dev/null || : && git checkout dist/ && replace \'build/aframe.js\' \'dist/aframe.min.js\' gh-pages/ -r --silent","ghpages":"node ./scripts/gh-pages","gh-pages":"npm run ghpages","version":"npm run dist","release:bump":"npm version patch --preminor && git commit -a -C HEAD --amend","release:push":"npm login && npm publish && git push --follow-tags","lint":"semistandard -v $(git ls-files \'*.js\') | snazzy","precommit":"npm run lint"},"repository":"aframevr/aframe","license":"MIT","devDependencies":{"budo":"^7.0.2","exorcist":"^0.4.0","gh-pages":"^0.4.0","html-minifier":"^0.8.0","husky":"^0.10.1","replace":"^0.3.0","semistandard":"^7.0.2","snazzy":"^2.0.1","uglifyjs":"^2.4.10"},"dependencies":{"aframe-core":"^0.1.6","browserify":"^11.0.1","browserify-css":"^0.8.2","polymerize":"^1.0.0"},"link":true,"browserify":{"transform":[["polymerize",{"match":".*.html$"}]]},"semistandard":{"ignore":["build/**","dist/**","lib/vendor/**","examples/_js/**"]},"keywords":["aframe","aframe-core","vr","webvr","3d","three","components","elements"]}')},3649:(e,t)=>{t=e.exports=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(e){var t=(new Date).getTime(),r=Math.max(0,16-(t-n)),s=setTimeout(e,r);return n=t,s};var n=(new Date).getTime(),r=window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||window.clearTimeout;t.cancel=function(e){r.call(window,e)}},8485:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(3645),s=n.n(r)()((function(e){return e[1]}));s.push([e.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:0.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:white;opacity:0.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1 / 1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1 / 1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:0.8;background:linear-gradient(to right, #fff 10px, transparent 10px) 0 0,linear-gradient(to right, #fff 10px, transparent 10px) 0 100%,linear-gradient(to left, #fff 10px, transparent 10px) 100% 0,linear-gradient(to left, #fff 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, #fff 10px, transparent 10px) 0 0,linear-gradient(to bottom, #fff 10px, transparent 10px) 100% 0,linear-gradient(to top, #fff 10px, transparent 10px) 0 100%,linear-gradient(to top, #fff 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}\n",""]);const i=s},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var s={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(s[a]=!0)}for(var o=0;o<e.length;o++){var l=[].concat(e[o]);r&&s[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},1227:(e,t,n)=>{function r(){var e;try{e=t.storage.debug}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e}(t=e.exports=n(1658)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+e[0]+(n?"%c ":" ")+"+"+t.humanize(this.diff),n){var r="color: "+this.color;e.splice(1,0,r,"color: inherit");var s=0,i=0;e[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(s++,"%c"===e&&(i=s))})),e.splice(i,0,r)}},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=r,t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type)||("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(r())},1658:(e,t,n)=>{var r;function s(e){function n(){if(n.enabled){var e=n,s=+new Date,i=s-(r||s);e.diff=i,e.prev=r,e.curr=s,r=s;for(var a=new Array(arguments.length),o=0;o<a.length;o++)a[o]=arguments[o];a[0]=t.coerce(a[0]),"string"!=typeof a[0]&&a.unshift("%O");var l=0;a[0]=a[0].replace(/%([a-zA-Z%])/g,(function(n,r){if("%%"===n)return n;l++;var s=t.formatters[r];if("function"==typeof s){var i=a[l];n=s.call(e,i),a.splice(l,1),l--}return n})),t.formatArgs.call(e,a),(n.log||t.log||console.log.bind(console)).apply(e,a)}}return n.namespace=e,n.enabled=t.enabled(e),n.useColors=t.useColors(),n.color=function(e){var n,r=0;for(n in e)r=(r<<5)-r+e.charCodeAt(n),r|=0;return t.colors[Math.abs(r)%t.colors.length]}(e),"function"==typeof t.init&&t.init(n),n}(t=e.exports=s.debug=s.default=s).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){t.save(e),t.names=[],t.skips=[];for(var n=("string"==typeof e?e:"").split(/[\s,]+/),r=n.length,s=0;s<r;s++)n[s]&&("-"===(e=n[s].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){var n,r;for(n=0,r=t.skips.length;n<r;n++)if(t.skips[n].test(e))return!1;for(n=0,r=t.names.length;n<r;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(7824),t.names=[],t.skips=[],t.formatters={}},2765:()=>{!function(e,t,n,r){"use strict";function s(e,t){for(var n=0,r=e.length;n<r;n++)f(e[n],t)}function i(e){return function(t){te(t)&&(f(t,e),s(t.querySelectorAll(z),e))}}function a(e){var t=e.getAttribute("is"),n=e.nodeName.toUpperCase(),r=B.call(F,t?D+t.toUpperCase():R+n);return t&&-1<r&&!o(n,t)?-1:r}function o(e,t){return-1<z.indexOf(e+'[is="'+t+'"]')}function l(e){var t=e.currentTarget,n=e.attrChange,r=e.attrName,s=e.target;pe&&(!s||s===t)&&t.attributeChangedCallback&&"style"!==r&&e.prevValue!==e.newValue&&t.attributeChangedCallback(r,n===e[T]?null:e.prevValue,n===e[N]?null:e.newValue)}function u(e){var t=i(e);return function(e){m.push(t,e.target)}}function c(e){de&&(de=!1,e.currentTarget.removeEventListener(M,c)),s((e.target||t).querySelectorAll(z),e.detail===E?E:S),ee&&function(){for(var e,t=0,n=ne.length;t<n;t++)e=ne[t],P.contains(e)||(n--,ne.splice(t--,1),f(e,E))}()}function h(e,t){var n=this;se.call(n,e,t),g.call(n,{target:n})}function d(e,t){Q(e,t),v?v.observe(e,oe):(he&&(e.setAttribute=h,e[k]=b(e),e.addEventListener(_,g)),e.addEventListener(A,l)),e.createdCallback&&pe&&(e.created=!0,e.createdCallback(),e.created=!1)}function p(e){throw new Error("A "+e+" type is already registered")}function f(e,t){var n,r=a(e);-1<r&&(x(e,O[r]),r=0,t!==S||e[S]?t===E&&!e[E]&&(e[S]=!1,e[E]=!0,r=1):(e[E]=!1,e[S]=!0,r=1,ee&&B.call(ne,e)<0&&ne.push(e)),r&&(n=e[t+"Callback"])&&n.call(e))}if(!(r in t)){var m,g,y,b,v,x,w,k="__"+r+(1e5*Math.random()>>0),S="attached",E="detached",I="extends",T="ADDITION",C="MODIFICATION",N="REMOVAL",A="DOMAttrModified",M="DOMContentLoaded",_="DOMSubtreeModified",R="<",D="=",$=/^[A-Z][A-Z0-9]*(?:-[A-Z0-9]+)+$/,L=["ANNOTATION-XML","COLOR-PROFILE","FONT-FACE","FONT-FACE-SRC","FONT-FACE-URI","FONT-FACE-FORMAT","FONT-FACE-NAME","MISSING-GLYPH"],F=[],O=[],z="",P=t.documentElement,B=F.indexOf||function(e){for(var t=this.length;t--&&this[t]!==e;);return t},V=n.prototype,U=V.hasOwnProperty,H=V.isPrototypeOf,W=n.defineProperty,G=n.getOwnPropertyDescriptor,j=n.getOwnPropertyNames,q=n.getPrototypeOf,K=n.setPrototypeOf,X=!!n.__proto__,Z=n.create||function e(t){return t?(e.prototype=t,new e):this},Q=K||(X?function(e,t){return e.__proto__=t,e}:j&&G?function(){function e(e,t){for(var n,r=j(t),s=0,i=r.length;s<i;s++)n=r[s],U.call(e,n)||W(e,n,G(t,n))}return function(t,n){do{e(t,n)}while((n=q(n))&&!H.call(n,t));return t}}():function(e,t){for(var n in t)e[n]=t[n];return e}),Y=e.MutationObserver||e.WebKitMutationObserver,J=(e.HTMLElement||e.Element||e.Node).prototype,ee=!H.call(J,P),te=ee?function(e){return 1===e.nodeType}:function(e){return H.call(J,e)},ne=ee&&[],re=J.cloneNode,se=J.setAttribute,ie=J.removeAttribute,ae=t.createElement,oe=Y&&{attributes:!0,characterData:!0,attributeOldValue:!0},le=Y||function(e){he=!1,P.removeEventListener(A,le)},ue=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,10)},ce=!1,he=!0,de=!0,pe=!0;K||X?(x=function(e,t){H.call(t,e)||d(e,t)},w=d):(x=function(e,t){e[k]||(e[k]=n(!0),d(e,t))},w=x),ee?(he=!1,function(){var e=G(J,"addEventListener"),t=e.value,n=function(e){var t=new CustomEvent(A,{bubbles:!0});t.attrName=e,t.prevValue=this.getAttribute(e),t.newValue=null,t[N]=t.attrChange=2,ie.call(this,e),this.dispatchEvent(t)},r=function(e,t){var n=this.hasAttribute(e),r=n&&this.getAttribute(e),s=new CustomEvent(A,{bubbles:!0});se.call(this,e,t),s.attrName=e,s.prevValue=n?r:null,s.newValue=t,n?s[C]=s.attrChange=1:s[T]=s.attrChange=0,this.dispatchEvent(s)},s=function(e){var t,n=e.currentTarget,r=n[k],s=e.propertyName;r.hasOwnProperty(s)&&(r=r[s],(t=new CustomEvent(A,{bubbles:!0})).attrName=r.name,t.prevValue=r.value||null,t.newValue=r.value=n[s]||null,null==t.prevValue?t[T]=t.attrChange=0:t[C]=t.attrChange=1,n.dispatchEvent(t))};e.value=function(e,i,a){e===A&&this.attributeChangedCallback&&this.setAttribute!==r&&(this[k]={className:{name:"class",value:this.className}},this.setAttribute=r,this.removeAttribute=n,t.call(this,"propertychange",s)),t.call(this,e,i,a)},W(J,"addEventListener",e)}()):Y||(P.addEventListener(A,le),P.setAttribute(k,1),P.removeAttribute(k),he&&(g=function(e){var t,n,r,s=this;if(s===e.target){for(r in t=s[k],s[k]=n=b(s),n){if(!(r in t))return y(0,s,r,t[r],n[r],T);if(n[r]!==t[r])return y(1,s,r,t[r],n[r],C)}for(r in t)if(!(r in n))return y(2,s,r,t[r],n[r],N)}},y=function(e,t,n,r,s,i){var a={attrChange:e,currentTarget:t,attrName:n,prevValue:r,newValue:s};a[i]=e,l(a)},b=function(e){for(var t,n,r={},s=e.attributes,i=0,a=s.length;i<a;i++)"setAttribute"!==(n=(t=s[i]).name)&&(r[n]=t.value);return r})),t[r]=function(e,n){if(r=e.toUpperCase(),ce||(ce=!0,Y?(v=function(e,t){function n(e,t){for(var n=0,r=e.length;n<r;t(e[n++]));}return new Y((function(r){for(var s,i,a,o=0,l=r.length;o<l;o++)"childList"===(s=r[o]).type?(n(s.addedNodes,e),n(s.removedNodes,t)):(i=s.target,pe&&i.attributeChangedCallback&&"style"!==s.attributeName&&(a=i.getAttribute(s.attributeName))!==s.oldValue&&i.attributeChangedCallback(s.attributeName,s.oldValue,a))}))}(i(S),i(E)),v.observe(t,{childList:!0,subtree:!0})):(m=[],ue((function e(){for(;m.length;)m.shift().call(null,m.shift());ue(e)})),t.addEventListener("DOMNodeInserted",u(S)),t.addEventListener("DOMNodeRemoved",u(E))),t.addEventListener(M,c),t.addEventListener("readystatechange",c),t.createElement=function(e,n){var r=ae.apply(t,arguments),s=""+e,i=B.call(F,(n?D:R)+(n||s).toUpperCase()),a=-1<i;return n&&(r.setAttribute("is",n=n.toLowerCase()),a&&(a=o(s.toUpperCase(),n))),pe=!t.createElement.innerHTMLHelper,a&&w(r,O[i]),r},J.cloneNode=function(e){var t=re.call(this,!!e),n=a(t);return-1<n&&w(t,O[n]),e&&function(e){for(var t,n=0,r=e.length;n<r;n++)t=e[n],w(t,O[a(t)])}(t.querySelectorAll(z)),t}),-2<B.call(F,D+r)+B.call(F,R+r)&&p(e),!$.test(r)||-1<B.call(L,r))throw new Error("The type "+e+" is invalid");var r,l,h=function(){return f?t.createElement(g,r):t.createElement(g)},d=n||V,f=U.call(d,I),g=f?n[I].toUpperCase():r;return f&&-1<B.call(F,R+g)&&p(g),l=F.push((f?D:R)+r)-1,z=z.concat(z.length?",":"",f?g+'[is="'+e.toLowerCase()+'"]':g),h.prototype=O[l]=U.call(d,"prototype")?d.prototype:Z(J),s(t.querySelectorAll(z),S),h}}}(window,document,Object,"registerElement")},2702:function(e,t,n){e.exports=function(){"use strict";function e(e){return"function"==typeof e}var t=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},r=0,s=void 0,i=void 0,a=function(e,t){p[r]=e,p[r+1]=t,2===(r+=2)&&(i?i(f):v())};var o="undefined"!=typeof window?window:void 0,l=o||{},u=l.MutationObserver||l.WebKitMutationObserver,c="undefined"==typeof self&&"undefined"!=typeof process&&"[object process]"==={}.toString.call(process),h="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function d(){var e=setTimeout;return function(){return e(f,1)}}var p=new Array(1e3);function f(){for(var e=0;e<r;e+=2)(0,p[e])(p[e+1]),p[e]=void 0,p[e+1]=void 0;r=0}var m,g,y,b,v=void 0;function x(e,t){var n=arguments,r=this,s=new this.constructor(S);void 0===s[k]&&B(s);var i,o=r._state;return o?(i=n[o-1],a((function(){return z(o,s,i,r._result)}))):$(r,s,e,t),s}function w(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var t=new this(S);return M(t,e),t}v=c?function(){return process.nextTick(f)}:u?(g=0,y=new u(f),b=document.createTextNode(""),y.observe(b,{characterData:!0}),function(){b.data=g=++g%2}):h?((m=new MessageChannel).port1.onmessage=f,function(){return m.port2.postMessage(0)}):void 0===o?function(){try{var e=n(5968);return s=e.runOnLoop||e.runOnContext,function(){s(f)}}catch(e){return d()}}():d();var k=Math.random().toString(36).substring(16);function S(){}var E=void 0,I=1,T=2,C=new F;function N(e){try{return e.then}catch(e){return C.error=e,C}}function A(t,n,r){n.constructor===t.constructor&&r===x&&n.constructor.resolve===w?function(e,t){t._state===I?R(e,t._result):t._state===T?D(e,t._result):$(t,void 0,(function(t){return M(e,t)}),(function(t){return D(e,t)}))}(t,n):r===C?D(t,C.error):void 0===r?R(t,n):e(r)?function(e,t,n){a((function(e){var r=!1,s=function(e,t,n,r){try{e.call(t,n,r)}catch(e){return e}}(n,t,(function(n){r||(r=!0,t!==n?M(e,n):R(e,n))}),(function(t){r||(r=!0,D(e,t))}),e._label);!r&&s&&(r=!0,D(e,s))}),e)}(t,n,r):R(t,n)}function M(e,t){var n;e===t?D(e,new TypeError("You cannot resolve a promise with itself")):"function"==typeof(n=t)||"object"==typeof n&&null!==n?A(e,t,N(t)):R(e,t)}function _(e){e._onerror&&e._onerror(e._result),L(e)}function R(e,t){e._state===E&&(e._result=t,e._state=I,0!==e._subscribers.length&&a(L,e))}function D(e,t){e._state===E&&(e._state=T,e._result=t,a(_,e))}function $(e,t,n,r){var s=e._subscribers,i=s.length;e._onerror=null,s[i]=t,s[i+I]=n,s[i+T]=r,0===i&&e._state&&a(L,e)}function L(e){var t=e._subscribers,n=e._state;if(0!==t.length){for(var r=void 0,s=void 0,i=e._result,a=0;a<t.length;a+=3)r=t[a],s=t[a+n],r?z(n,r,s,i):s(i);e._subscribers.length=0}}function F(){this.error=null}var O=new F;function z(t,n,r,s){var i=e(r),a=void 0,o=void 0,l=void 0,u=void 0;if(i){if((a=function(e,t){try{return e(t)}catch(e){return O.error=e,O}}(r,s))===O?(u=!0,o=a.error,a=null):l=!0,n===a)return void D(n,new TypeError("A promises callback cannot return that same promise."))}else a=s,l=!0;n._state!==E||(i&&l?M(n,a):u?D(n,o):t===I?R(n,a):t===T&&D(n,a))}var P=0;function B(e){e[k]=P++,e._state=void 0,e._result=void 0,e._subscribers=[]}function V(e,n){this._instanceConstructor=e,this.promise=new e(S),this.promise[k]||B(this.promise),t(n)?(this._input=n,this.length=n.length,this._remaining=n.length,this._result=new Array(this.length),0===this.length?R(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&R(this.promise,this._result))):D(this.promise,new Error("Array Methods must be provided an Array"))}function U(e){this[k]=P++,this._result=this._state=void 0,this._subscribers=[],S!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof U?function(e,t){try{t((function(t){M(e,t)}),(function(t){D(e,t)}))}catch(t){D(e,t)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}function H(){var e=void 0;if(void 0!==n.g)e=n.g;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var t=e.Promise;if(t){var r=null;try{r=Object.prototype.toString.call(t.resolve())}catch(e){}if("[object Promise]"===r&&!t.cast)return}e.Promise=U}return V.prototype._enumerate=function(){for(var e=this.length,t=this._input,n=0;this._state===E&&n<e;n++)this._eachEntry(t[n],n)},V.prototype._eachEntry=function(e,t){var n=this._instanceConstructor,r=n.resolve;if(r===w){var s=N(e);if(s===x&&e._state!==E)this._settledAt(e._state,t,e._result);else if("function"!=typeof s)this._remaining--,this._result[t]=e;else if(n===U){var i=new n(S);A(i,e,s),this._willSettleAt(i,t)}else this._willSettleAt(new n((function(t){return t(e)})),t)}else this._willSettleAt(r(e),t)},V.prototype._settledAt=function(e,t,n){var r=this.promise;r._state===E&&(this._remaining--,e===T?D(r,n):this._result[t]=n),0===this._remaining&&R(r,this._result)},V.prototype._willSettleAt=function(e,t){var n=this;$(e,void 0,(function(e){return n._settledAt(I,t,e)}),(function(e){return n._settledAt(T,t,e)}))},U.all=function(e){return new V(this,e).promise},U.race=function(e){var n=this;return t(e)?new n((function(t,r){for(var s=e.length,i=0;i<s;i++)n.resolve(e[i]).then(t,r)})):new n((function(e,t){return t(new TypeError("You must pass an array to race."))}))},U.resolve=w,U.reject=function(e){var t=new this(S);return D(t,e),t},U._setScheduler=function(e){i=e},U._setAsap=function(e){a=e},U._asap=a,U.prototype={constructor:U,then:x,catch:function(e){return this.then(null,e)}},H(),U.polyfill=H,U.Promise=U,U}()},8516:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r='<!doctype html> <meta charset="utf-8"> <link rel="import" href="a-camera.html"> <link rel="import" href="a-cube.html"> <link rel="import" href="a-curvedimage.html"> <link rel="import" href="a-cylinder.html"> <link rel="import" href="a-frame.html"> <link rel="import" href="a-image.html"> <link rel="import" href="a-light.html"> <link rel="import" href="a-model.html"> <link rel="import" href="a-plane.html"> <link rel="import" href="a-sky/index.html"> <link rel="import" href="a-sphere.html"> <link rel="import" href="a-video.html"> <link rel="import" href="a-videosphere.html"> '},7676:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '},9894:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '},2810:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '},7824:e=>{var t=1e3,n=60*t,r=60*n,s=24*r;function i(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+n:Math.ceil(e/t)+" "+n+"s"}e.exports=function(e,a){a=a||{};var o,l=typeof e;if("string"===l&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var i=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(i){var a=parseFloat(i[1]);switch((i[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*a;case"days":case"day":case"d":return a*s;case"hours":case"hour":case"hrs":case"hr":case"h":return a*r;case"minutes":case"minute":case"mins":case"min":case"m":return a*n;case"seconds":case"second":case"secs":case"sec":case"s":return a*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return a;default:return}}}}(e);if("number"===l&&!1===isNaN(e))return a.long?i(o=e,s,"day")||i(o,r,"hour")||i(o,n,"minute")||i(o,t,"second")||o+" ms":function(e){return e>=s?Math.round(e/s)+"d":e>=r?Math.round(e/r)+"h":e>=n?Math.round(e/n)+"m":e>=t?Math.round(e/t)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},7418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,s){for(var i,a,o=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var u in i=Object(arguments[l]))n.call(i,u)&&(o[u]=i[u]);if(t){a=t(i);for(var c=0;c<a.length;c++)r.call(i,a[c])&&(o[a[c]]=i[a[c]])}}return o}},9019:(e,t,n)=>{var r=n.g.performance||{},s=function(){for(var e=["now","webkitNow","msNow","mozNow","oNow"];e.length;){var t=e.shift();if(t in r)return r[t].bind(r)}var n=Date.now||function(){return(new Date).getTime()},s=(r.timing||{}).navigationStart||n();return function(){return n()-s}}();s.performanceNow=r.now,s.noConflict=function(){r.now=s.performanceNow},s.conflict=function(){r.now=s},s.conflict(),e.exports=s},6422:(e,t,n)=>{"use strict";var r=n(3649),s=n(6550);(e.exports=function(e,t,n){var i=s(),a=Object.create(null);return a.id=r((function o(){a.id=r(o),s()-i>=e&&(t.call(n),i=s())})),a}).clear=function(e){r.cancel(e.id)}},6377:(e,t,n)=>{var r=n(4832),s=n(8652),i=n(801),a=n(2030),o=n(3618),l=n(9049),u=n(1971);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},4832:function(e,t,n){var r;!function(e,s,i){function a(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,i=t.i;return t.w=r=r+1640531527|0,n=s[i+34&127],e=s[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,s,i,a,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,i=-32;i<l;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=a,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var r;!function(s,i){var a,o=this,l=256,u=6,c="random",h=i.pow(l,u),d=i.pow(2,52),p=2*d,f=l-1;function m(e,t,n){var r=[],f=v(b((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(s)]:null==e?function(){try{var e;return a&&(e=a.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(s)]}}():e,3),r),m=new g(r),w=function(){for(var e=m.g(u),t=h,n=0;e<d;)e=(e+n)*l,t*=l,n=m.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|m.g(4)},w.quick=function(){return m.g(4)/4294967296},w.double=w,v(x(m.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&y(r,m),e.state=function(){return y(m,{})}),n?(i[c]=e,t):e})(w,f,"global"in t?t.global:this==i,t.state)}function g(e){var t,n=e.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=f&i+e[s%n]+(t=a[s])],a[i]=t;(r.g=function(e){for(var t,n=0,s=r.i,i=r.j,a=r.S;e--;)t=a[s=f&s+1],n=n*l+a[f&(a[s]=a[i=f&i+t])+(a[i]=t)];return r.i=s,r.j=i,n})(l)}function y(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function b(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(b(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function v(e,t){for(var n,r=e+"",s=0;s<r.length;)t[f&s]=f&(n^=19*t[f&s])+r.charCodeAt(s++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(i["seed"+c]=m,v(i.random(),s),e.exports){e.exports=m;try{a=n(3906)}catch(e){}}else void 0===(r=function(){return m}.call(t,n,t,e))||(e.exports=r)}([],Math)},2792:function(e){e.exports=function(){"use strict";var e=function(){var t=0,n=document.createElement("div");function r(e){return n.appendChild(e.dom),e}function s(e){for(var r=0;r<n.children.length;r++)n.children[r].style.display=r===e?"block":"none";t=e}n.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",n.addEventListener("click",(function(e){e.preventDefault(),s(++t%n.children.length)}),!1);var i=(performance||Date).now(),a=i,o=0,l=r(new e.Panel("FPS","#0ff","#002")),u=r(new e.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var c=r(new e.Panel("MB","#f08","#201"));return s(0),{REVISION:16,dom:n,addPanel:r,showPanel:s,begin:function(){i=(performance||Date).now()},end:function(){o++;var e=(performance||Date).now();if(u.update(e-i,200),a+1e3<=e&&(l.update(1e3*o/(e-a),100),a=e,o=0,c)){var t=performance.memory;c.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){i=this.end()},domElement:n,setMode:s}};return e.Panel=function(e,t,n){var r=1/0,s=0,i=Math.round,a=i(window.devicePixelRatio||1),o=80*a,l=48*a,u=3*a,c=2*a,h=3*a,d=15*a,p=74*a,f=30*a,m=document.createElement("canvas");m.width=o,m.height=l,m.style.cssText="width:80px;height:48px";var g=m.getContext("2d");return g.font="bold "+9*a+"px Helvetica,Arial,sans-serif",g.textBaseline="top",g.fillStyle=n,g.fillRect(0,0,o,l),g.fillStyle=t,g.fillText(e,u,c),g.fillRect(h,d,p,f),g.fillStyle=n,g.globalAlpha=.9,g.fillRect(h,d,p,f),{dom:m,update:function(l,y){r=Math.min(r,l),s=Math.max(s,l),g.fillStyle=n,g.globalAlpha=1,g.fillRect(0,0,o,d),g.fillStyle=t,g.fillText(i(l)+" "+e+" ("+i(r)+"-"+i(s)+")",u,c),g.drawImage(m,h+a,d,p-a,f,h,d,p-a,f),g.fillRect(h+p-a,d,a,f),g.fillStyle=n,g.globalAlpha=.9,g.fillRect(h+p-a,d,a,i((1-l/y)*f))}}},e}()},3469:e=>{function t(e,t){var n=(t=t||{}).preserveNumbers,r={};return function(e){for(var t,n=[],r=0,s=/url\([^\)]+$/,i="";r<e.length;)-1===(t=e.indexOf(";",r))&&(t=e.length),i+=e.substring(r,t),s.test(i)?(i+=";",r=t+1):(n.push(i),i="",r=t+1);return n}(e).map((function(e){return e.trim()})).filter(Boolean).forEach((function(e){var t,s=e.indexOf(":"),i=e.substr(0,s).trim(),a=e.substr(s+1).trim();n&&(t=a,!isNaN(parseFloat(t))&&isFinite(t))&&(a=Number(a)),r[i]=a})),r}function n(e){return Object.keys(e).map((function(t){return t+":"+e[t]})).join(";")}e.exports.parse=t,e.exports.stringify=n,e.exports.normalize=function(e,r){return n(t(e,r))}},4412:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});var r=n(3379),s=n.n(r),i=n(8485);s()(i.Z,{insert:"head",singleton:!1});const a=i.Z.locals||{}},3379:(e,t,n)=>{"use strict";var r,s=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i=[];function a(e){for(var t=-1,n=0;n<i.length;n++)if(i[n].identifier===e){t=n;break}return t}function o(e,t){for(var n={},r=[],s=0;s<e.length;s++){var o=e[s],l=t.base?o[0]+t.base:o[0],u=n[l]||0,c="".concat(l," ").concat(u);n[l]=u+1;var h=a(c),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==h?(i[h].references++,i[h].updater(d)):i.push({identifier:c,updater:m(d,t),references:1}),r.push(c)}return r}function l(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=s(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,c=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function h(e,t,n,r){var s=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=c(t,s);else{var i=document.createTextNode(s),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function d(e,t,n){var r=n.css,s=n.media,i=n.sourceMap;if(s?e.setAttribute("media",s):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,f=0;function m(e,t){var n,r,s;if(t.singleton){var i=f++;n=p||(p=l(t)),r=h.bind(null,n,i,!1),s=h.bind(null,n,i,!0)}else n=l(t),r=d.bind(null,n,t),s=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else s()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=o(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var s=a(n[r]);i[s].references--}for(var l=o(e,t),u=0;u<n.length;u++){var c=a(n[u]);0===i[c].references&&(i[c].updater(),i.splice(c,1))}n=l}}}},9388:(e,t,n)=>{var r,s,i,a,o,l,u,c,h,d,p,f,m,g,y,b,v,x,w,k,S,E,I,T,C,N,A,M,_,R,D,$,L,F,O,z,P,B,V,U,H,W,G,j,q,K,X,Z,Q,Y,J,ee,te={REVISION:"74dev"};void 0===(s="function"==typeof(r=te)?r.call(t,n,t,e):r)||(e.exports=s),void 0!==self.requestAnimationFrame&&void 0!==self.cancelAnimationFrame||function(){for(var e=0,t=["ms","moz","webkit","o"],n=0;n<t.length&&!self.requestAnimationFrame;++n)self.requestAnimationFrame=self[t[n]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[n]+"CancelAnimationFrame"]||self[t[n]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var n=Date.now(),r=Math.max(0,16-(n-e)),s=self.setTimeout((function(){t(n+r)}),r);return e=n+r,s}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})}(),void 0===self.performance&&(self.performance={}),void 0===self.performance.now&&(i=Date.now(),self.performance.now=function(){return Date.now()-i}),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Math.sign&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}}),void 0===Object.assign&&Object.defineProperty(Object,"assign",{writable:!0,configurable:!0,value:function(e){"use strict";if(null==e)throw new TypeError("Cannot convert first argument to object");for(var t=Object(e),n=1,r=arguments.length;n!==r;++n){var s=arguments[n];if(null!=s){s=Object(s);for(var i=Object.keys(s),a=0,o=i.length;a!==o;++a){var l=i[a],u=Object.getOwnPropertyDescriptor(s,l);void 0!==u&&u.enumerable&&(t[l]=s[l])}}}return t}}),te.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},te.CullFaceNone=0,te.CullFaceBack=1,te.CullFaceFront=2,te.CullFaceFrontBack=3,te.FrontFaceDirectionCW=0,te.FrontFaceDirectionCCW=1,te.BasicShadowMap=0,te.PCFShadowMap=1,te.PCFSoftShadowMap=2,te.FrontSide=0,te.BackSide=1,te.DoubleSide=2,te.FlatShading=1,te.SmoothShading=2,te.NoColors=0,te.FaceColors=1,te.VertexColors=2,te.NoBlending=0,te.NormalBlending=1,te.AdditiveBlending=2,te.SubtractiveBlending=3,te.MultiplyBlending=4,te.CustomBlending=5,te.AddEquation=100,te.SubtractEquation=101,te.ReverseSubtractEquation=102,te.MinEquation=103,te.MaxEquation=104,te.ZeroFactor=200,te.OneFactor=201,te.SrcColorFactor=202,te.OneMinusSrcColorFactor=203,te.SrcAlphaFactor=204,te.OneMinusSrcAlphaFactor=205,te.DstAlphaFactor=206,te.OneMinusDstAlphaFactor=207,te.DstColorFactor=208,te.OneMinusDstColorFactor=209,te.SrcAlphaSaturateFactor=210,te.NeverDepth=0,te.AlwaysDepth=1,te.LessDepth=2,te.LessEqualDepth=3,te.EqualDepth=4,te.GreaterEqualDepth=5,te.GreaterDepth=6,te.NotEqualDepth=7,te.MultiplyOperation=0,te.MixOperation=1,te.AddOperation=2,te.UVMapping=300,te.CubeReflectionMapping=301,te.CubeRefractionMapping=302,te.EquirectangularReflectionMapping=303,te.EquirectangularRefractionMapping=304,te.SphericalReflectionMapping=305,te.RepeatWrapping=1e3,te.ClampToEdgeWrapping=1001,te.MirroredRepeatWrapping=1002,te.NearestFilter=1003,te.NearestMipMapNearestFilter=1004,te.NearestMipMapLinearFilter=1005,te.LinearFilter=1006,te.LinearMipMapNearestFilter=1007,te.LinearMipMapLinearFilter=1008,te.UnsignedByteType=1009,te.ByteType=1010,te.ShortType=1011,te.UnsignedShortType=1012,te.IntType=1013,te.UnsignedIntType=1014,te.FloatType=1015,te.HalfFloatType=1025,te.UnsignedShort4444Type=1016,te.UnsignedShort5551Type=1017,te.UnsignedShort565Type=1018,te.AlphaFormat=1019,te.RGBFormat=1020,te.RGBAFormat=1021,te.LuminanceFormat=1022,te.LuminanceAlphaFormat=1023,te.RGBEFormat=te.RGBAFormat,te.RGB_S3TC_DXT1_Format=2001,te.RGBA_S3TC_DXT1_Format=2002,te.RGBA_S3TC_DXT3_Format=2003,te.RGBA_S3TC_DXT5_Format=2004,te.RGB_PVRTC_4BPPV1_Format=2100,te.RGB_PVRTC_2BPPV1_Format=2101,te.RGBA_PVRTC_4BPPV1_Format=2102,te.RGBA_PVRTC_2BPPV1_Format=2103,te.LoopOnce=2200,te.LoopRepeat=2201,te.LoopPingPong=2202,te.InterpolateDiscrete=2300,te.InterpolateLinear=2301,te.InterpolateSmooth=2302,te.ZeroCurvatureEnding=2400,te.ZeroSlopeEnding=2401,te.WrapAroundEnding=2402,te.TrianglesDrawMode=0,te.TriangleStripDrawMode=1,te.TriangleFanDrawMode=2,te.Color=function(e){return 3===arguments.length?this.fromArray(arguments):this.set(e)},te.Color.prototype={constructor:te.Color,r:1,g:1,b:1,set:function(e){return e instanceof te.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(e){this.r=e,this.g=e,this.b=e},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(){function e(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}return function(t,n,r){if(t=te.Math.euclideanModulo(t,1),n=te.Math.clamp(n,0,1),r=te.Math.clamp(r,0,1),0===n)this.r=this.g=this.b=r;else{var s=r<=.5?r*(1+n):r+n-r*n,i=2*r-s;this.r=e(i,s,t+1/3),this.g=e(i,s,t),this.b=e(i,s,t-1/3)}return this}}(),setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var r,s=n[1],i=n[2];switch(s){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){var a=parseFloat(r[1])/360,o=parseInt(r[2],10)/100,l=parseInt(r[3],10)/100;return t(r[5]),this.setHSL(a,o,l)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){var u,c=(u=n[1]).length;if(3===c)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,this;if(6===c)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,this}return e&&e.length>0&&(void 0!==(u=te.ColorKeywords[e])?this.setHex(u):console.warn("THREE.Color: Unknown color "+e)),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;return this.r=e*e,this.g=t*t,this.b=n*n,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t,n,r=e||{h:0,s:0,l:0},s=this.r,i=this.g,a=this.b,o=Math.max(s,i,a),l=Math.min(s,i,a),u=(l+o)/2;if(l===o)t=0,n=0;else{var c=o-l;switch(n=u<=.5?c/(o+l):c/(2-o-l),o){case s:t=(i-a)/c+(i<a?6:0);break;case i:t=(a-s)/c+2;break;case a:t=(s-i)/c+4}t/=6}return r.h=t,r.s=n,r.l=u,r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,n){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=n,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}},te.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},te.Quaternion=function(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==r?r:1},te.Quaternion.prototype={constructor:te.Quaternion,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(e instanceof te.Euler==0)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var n=Math.cos(e._x/2),r=Math.cos(e._y/2),s=Math.cos(e._z/2),i=Math.sin(e._x/2),a=Math.sin(e._y/2),o=Math.sin(e._z/2),l=e.order;return"XYZ"===l?(this._x=i*r*s+n*a*o,this._y=n*a*s-i*r*o,this._z=n*r*o+i*a*s,this._w=n*r*s-i*a*o):"YXZ"===l?(this._x=i*r*s+n*a*o,this._y=n*a*s-i*r*o,this._z=n*r*o-i*a*s,this._w=n*r*s+i*a*o):"ZXY"===l?(this._x=i*r*s-n*a*o,this._y=n*a*s+i*r*o,this._z=n*r*o+i*a*s,this._w=n*r*s-i*a*o):"ZYX"===l?(this._x=i*r*s-n*a*o,this._y=n*a*s+i*r*o,this._z=n*r*o-i*a*s,this._w=n*r*s+i*a*o):"YZX"===l?(this._x=i*r*s+n*a*o,this._y=n*a*s+i*r*o,this._z=n*r*o-i*a*s,this._w=n*r*s-i*a*o):"XZY"===l&&(this._x=i*r*s-n*a*o,this._y=n*a*s-i*r*o,this._z=n*r*o+i*a*s,this._w=n*r*s+i*a*o),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,n=e.elements,r=n[0],s=n[4],i=n[8],a=n[1],o=n[5],l=n[9],u=n[2],c=n[6],h=n[10],d=r+o+h;return d>0?(t=.5/Math.sqrt(d+1),this._w=.25/t,this._x=(c-l)*t,this._y=(i-u)*t,this._z=(a-s)*t):r>o&&r>h?(t=2*Math.sqrt(1+r-o-h),this._w=(c-l)/t,this._x=.25*t,this._y=(s+a)/t,this._z=(i+u)/t):o>h?(t=2*Math.sqrt(1+o-r-h),this._w=(i-u)/t,this._x=(s+a)/t,this._y=.25*t,this._z=(l+c)/t):(t=2*Math.sqrt(1+h-r-o),this._w=(a-s)/t,this._x=(i+u)/t,this._y=(l+c)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(e,t){return void 0===a&&(a=new te.Vector3),(o=e.dot(t)+1)<1e-6?(o=0,Math.abs(e.x)>Math.abs(e.z)?a.set(-e.y,e.x,0):a.set(0,-e.z,e.y)):a.crossVectors(e,t),this._x=a.x,this._y=a.y,this._z=a.z,this._w=o,this.normalize(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,s=e._z,i=e._w,a=t._x,o=t._y,l=t._z,u=t._w;return this._x=n*u+i*a+r*l-s*o,this._y=r*u+i*o+s*a-n*l,this._z=s*u+i*l+n*o-r*a,this._w=i*u-n*a-r*o-s*l,this.onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,s=this._z,i=this._w,a=i*e._w+n*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=i,this._x=n,this._y=r,this._z=s,this;var o=Math.sqrt(1-a*a);if(Math.abs(o)<.001)return this._w=.5*(i+this._w),this._x=.5*(n+this._x),this._y=.5*(r+this._y),this._z=.5*(s+this._z),this;var l=Math.atan2(o,a),u=Math.sin((1-t)*l)/o,c=Math.sin(t*l)/o;return this._w=i*u+this._w*c,this._x=n*u+this._x*c,this._y=r*u+this._y*c,this._z=s*u+this._z*c,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},Object.assign(te.Quaternion,{slerp:function(e,t,n,r){return n.copy(e).slerp(t,r)},slerpFlat:function(e,t,n,r,s,i,a){var o=n[r+0],l=n[r+1],u=n[r+2],c=n[r+3],h=s[i+0],d=s[i+1],p=s[i+2],f=s[i+3];if(c!==f||o!==h||l!==d||u!==p){var m=1-a,g=o*h+l*d+u*p+c*f,y=g>=0?1:-1,b=1-g*g;if(b>Number.EPSILON){var v=Math.sqrt(b),x=Math.atan2(v,g*y);m=Math.sin(m*x)/v,a=Math.sin(a*x)/v}var w=a*y;if(o=o*m+h*w,l=l*m+d*w,u=u*m+p*w,c=c*m+f*w,m===1-a){var k=1/Math.sqrt(o*o+l*l+u*u+c*c);o*=k,l*=k,u*=k,c*=k}}e[t]=o,e[t+1]=l,e[t+2]=u,e[t+3]=c}}),te.Vector2=function(e,t){this.x=e||0,this.y=t||0},te.Vector2.prototype={constructor:te.Vector2,get width(){return this.x},set width(e){this.x=e},get height(){return this.y},set height(e){this.y=e},set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e):(this.x=0,this.y=0),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(e,t){return void 0===l&&(l=new te.Vector2,u=new te.Vector2),l.set(e,e),u.set(t,t),this.clamp(l,u)},clampLength:function(e,t){var n=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,n))/n),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,n){return void 0===n&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this},rotateAround:function(e,t){var n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,i=this.y-e.y;return this.x=s*n-i*r+e.x,this.y=s*r+i*n+e.y,this}},te.Vector3=function(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0},te.Vector3.prototype={constructor:te.Vector3,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(e){return e instanceof te.Euler==0&&console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),void 0===h&&(h=new te.Quaternion),this.applyQuaternion(h.setFromEuler(e)),this},applyAxisAngle:function(){var e;return function(t,n){return void 0===e&&(e=new te.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,n)),this}}(),applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r+s[12],this.y=s[1]*t+s[5]*n+s[9]*r+s[13],this.z=s[2]*t+s[6]*n+s[10]*r+s[14],this},applyProjection:function(e){var t=this.x,n=this.y,r=this.z,s=e.elements,i=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*i,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*i,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*i,this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,s=e.x,i=e.y,a=e.z,o=e.w,l=o*t+i*r-a*n,u=o*n+a*t-s*r,c=o*r+s*n-i*t,h=-s*t-i*n-a*r;return this.x=l*o+h*-s+u*-a-c*-i,this.y=u*o+h*-i+c*-s-l*-a,this.z=c*o+h*-a+l*-i-u*-s,this},project:function(e){return void 0===c&&(c=new te.Matrix4),c.multiplyMatrices(e.projectionMatrix,c.getInverse(e.matrixWorld)),this.applyProjection(c)},unproject:function(){var e;return function(t){return void 0===e&&(e=new te.Matrix4),e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(){var e,t;return function(n,r){return void 0===e&&(e=new te.Vector3,t=new te.Vector3),e.set(n,n,n),t.set(r,r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,n))/n),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e),this},cross:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var n=this.x,r=this.y,s=this.z;return this.x=r*e.z-s*e.y,this.y=s*e.x-n*e.z,this.z=n*e.y-r*e.x,this},crossVectors:function(e,t){var n=e.x,r=e.y,s=e.z,i=t.x,a=t.y,o=t.z;return this.x=r*o-s*a,this.y=s*i-n*o,this.z=n*a-r*i,this},projectOnVector:function(){var e,t;return function(n){return void 0===e&&(e=new te.Vector3),e.copy(n).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new te.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new te.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());return Math.acos(te.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),n=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),r=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=n,this.z=r,this},setFromMatrixColumn:function(e,t){var n=4*e,r=t.elements;return this.x=r[n],this.y=r[n+1],this.z=r[n+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,n){return void 0===n&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this}},te.Vector4=function(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1},te.Vector4.prototype={constructor:te.Vector4,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,s=this.w,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r+i[12]*s,this.y=i[1]*t+i[5]*n+i[9]*r+i[13]*s,this.z=i[2]*t+i[6]*n+i[10]*r+i[14]*s,this.w=i[3]*t+i[7]*n+i[11]*r+i[15]*s,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,s,i=.01,a=.1,o=e.elements,l=o[0],u=o[4],c=o[8],h=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(u-h)<i&&Math.abs(c-f)<i&&Math.abs(p-m)<i){if(Math.abs(u+h)<a&&Math.abs(c+f)<a&&Math.abs(p+m)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;t=Math.PI;var y=(l+1)/2,b=(d+1)/2,v=(g+1)/2,x=(u+h)/4,w=(c+f)/4,k=(p+m)/4;return y>b&&y>v?y<i?(n=0,r=.707106781,s=.707106781):(r=x/(n=Math.sqrt(y)),s=w/n):b>v?b<i?(n=.707106781,r=0,s=.707106781):(n=x/(r=Math.sqrt(b)),s=k/r):v<i?(n=.707106781,r=.707106781,s=0):(n=w/(s=Math.sqrt(v)),r=k/s),this.set(n,r,s,t),this}var S=Math.sqrt((m-p)*(m-p)+(c-f)*(c-f)+(h-u)*(h-u));return Math.abs(S)<.001&&(S=1),this.x=(m-p)/S,this.y=(c-f)/S,this.z=(h-u)/S,this.w=Math.acos((l+d+g-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(){var e,t;return function(n,r){return void 0===e&&(e=new te.Vector4,t=new te.Vector4),e.set(n,n,n,n),t.set(r,r,r,r),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromAttribute:function(e,t,n){return void 0===n&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this.w=e.array[t+3],this}},te.Euler=function(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._order=r||te.Euler.DefaultOrder},te.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],te.Euler.DefaultOrder="XYZ",te.Euler.prototype={constructor:te.Euler,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var r=te.Math.clamp,s=e.elements,i=s[0],a=s[4],o=s[8],l=s[1],u=s[5],c=s[9],h=s[2],d=s[6],p=s[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-c,p),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(d,u),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(c,-1,1)),Math.abs(c)<.99999?(this._y=Math.atan2(o,p),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-h,i),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(l,i))):"ZYX"===t?(this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,i)):(this._x=0,this._z=Math.atan2(-a,u))):"YZX"===t?(this._z=Math.asin(r(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-h,i)):(this._x=0,this._y=Math.atan2(o,p))):"XZY"===t?(this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(d,u),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-c,p),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==n&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(t,n,r){return void 0===e&&(e=new te.Matrix4),e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,n,r),this}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:(d=new te.Quaternion,function(e){d.setFromEuler(this),this.setFromQuaternion(d,e)}),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new te.Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},te.Line3=function(e,t){this.start=void 0!==e?e:new te.Vector3,this.end=void 0!==t?t:new te.Vector3},te.Line3.prototype={constructor:te.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new te.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new te.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var n=t||new te.Vector3;return this.delta(n).multiplyScalar(e).add(this.start)},closestPointToPointParameter:(p=new te.Vector3,f=new te.Vector3,function(e,t){p.subVectors(e,this.start),f.subVectors(this.end,this.start);var n=f.dot(f),r=f.dot(p)/n;return t&&(r=te.Math.clamp(r,0,1)),r}),closestPointToPoint:function(e,t,n){var r=this.closestPointToPointParameter(e,t),s=n||new te.Vector3;return this.delta(s).multiplyScalar(r).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},te.Box2=function(e,t){this.min=void 0!==e?e:new te.Vector2(1/0,1/0),this.max=void 0!==t?t:new te.Vector2(-1/0,-1/0)},te.Box2.prototype={constructor:te.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new te.Vector2;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new te.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new te.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return(t||new te.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new te.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new te.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},te.Box3=function(e,t){this.min=void 0!==e?e:new te.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new te.Vector3(-1/0,-1/0,-1/0)},te.Box3.prototype={constructor:te.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new te.Vector3;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(e){void 0===y&&(y=new te.Box3);var t=this;return this.makeEmpty(),e.updateMatrixWorld(!0),e.traverse((function(e){var n=e.geometry;void 0!==n&&(null===n.boundingBox&&n.computeBoundingBox(),y.copy(n.boundingBox),y.applyMatrix4(e.matrixWorld),t.union(y))})),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new te.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new te.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return(t||new te.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(e){return void 0===g&&(g=new te.Vector3),this.clampPoint(e.center,g),g.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=e.constant&&n>=e.constant},clampPoint:function(e,t){return(t||new te.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new te.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new te.Vector3;return function(t){var n=t||new te.Sphere;return n.center=this.center(),n.radius=.5*this.size(e).length(),n}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:(m=[new te.Vector3,new te.Vector3,new te.Vector3,new te.Vector3,new te.Vector3,new te.Vector3,new te.Vector3,new te.Vector3],function(e){return m[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),m[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),m[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),m[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),m[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),m[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),m[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),m[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.makeEmpty(),this.setFromPoints(m),this}),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},te.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},te.Matrix3.prototype={constructor:te.Matrix3,set:function(e,t,n,r,s,i,a,o,l){var u=this.elements;return u[0]=e,u[3]=t,u[6]=n,u[1]=r,u[4]=s,u[7]=i,u[2]=a,u[5]=o,u[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},applyToVector3Array:function(){var e;return function(t,n,r){void 0===e&&(e=new te.Vector3),void 0===n&&(n=0),void 0===r&&(r=t.length);for(var s=0,i=n;s<r;s+=3,i+=3)e.fromArray(t,i),e.applyMatrix3(this),e.toArray(t,i);return t}}(),applyToBuffer:function(){var e;return function(t,n,r){void 0===e&&(e=new te.Vector3),void 0===n&&(n=0),void 0===r&&(r=t.length/t.itemSize);for(var s=0,i=n;s<r;s++,i++)e.x=t.getX(i),e.y=t.getY(i),e.z=t.getZ(i),e.applyMatrix3(this),t.setXYZ(e.x,e.y,e.z);return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],i=e[4],a=e[5],o=e[6],l=e[7],u=e[8];return t*i*u-t*a*l-n*s*u+n*a*o+r*s*l-r*i*o},getInverse:function(e,t){var n=e.elements,r=this.elements;r[0]=n[10]*n[5]-n[6]*n[9],r[1]=-n[10]*n[1]+n[2]*n[9],r[2]=n[6]*n[1]-n[2]*n[5],r[3]=-n[10]*n[4]+n[6]*n[8],r[4]=n[10]*n[0]-n[2]*n[8],r[5]=-n[6]*n[0]+n[2]*n[4],r[6]=n[9]*n[4]-n[5]*n[8],r[7]=-n[9]*n[0]+n[1]*n[8],r[8]=n[5]*n[0]-n[1]*n[4];var s=n[0]*r[0]+n[1]*r[3]+n[2]*r[6];if(0===s){var i="THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(i);return console.warn(i),this.identity(),this}return this.multiplyScalar(1/s),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(e,t){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]}},te.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},te.Matrix4.prototype={constructor:te.Matrix4,set:function(e,t,n,r,s,i,a,o,l,u,c,h,d,p,f,m){var g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=s,g[5]=i,g[9]=a,g[13]=o,g[2]=l,g[6]=u,g[10]=c,g[14]=h,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new te.Matrix4).fromArray(this.elements)},copy:function(e){return this.elements.set(e.elements),this},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){var r=this.elements;return e.set(r[0],r[1],r[2]),t.set(r[4],r[5],r[6]),n.set(r[8],r[9],r[10]),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(){var e;return function(t){void 0===e&&(e=new te.Vector3);var n=this.elements,r=t.elements,s=1/e.set(r[0],r[1],r[2]).length(),i=1/e.set(r[4],r[5],r[6]).length(),a=1/e.set(r[8],r[9],r[10]).length();return n[0]=r[0]*s,n[1]=r[1]*s,n[2]=r[2]*s,n[4]=r[4]*i,n[5]=r[5]*i,n[6]=r[6]*i,n[8]=r[8]*a,n[9]=r[9]*a,n[10]=r[10]*a,this}}(),makeRotationFromEuler:function(e){e instanceof te.Euler==0&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,r=e.y,s=e.z,i=Math.cos(n),a=Math.sin(n),o=Math.cos(r),l=Math.sin(r),u=Math.cos(s),c=Math.sin(s);if("XYZ"===e.order){var h=i*u,d=i*c,p=a*u,f=a*c;t[0]=o*u,t[4]=-o*c,t[8]=l,t[1]=d+p*l,t[5]=h-f*l,t[9]=-a*o,t[2]=f-h*l,t[6]=p+d*l,t[10]=i*o}else if("YXZ"===e.order){var m=o*u,g=o*c,y=l*u,b=l*c;t[0]=m+b*a,t[4]=y*a-g,t[8]=i*l,t[1]=i*c,t[5]=i*u,t[9]=-a,t[2]=g*a-y,t[6]=b+m*a,t[10]=i*o}else if("ZXY"===e.order)m=o*u,g=o*c,y=l*u,b=l*c,t[0]=m-b*a,t[4]=-i*c,t[8]=y+g*a,t[1]=g+y*a,t[5]=i*u,t[9]=b-m*a,t[2]=-i*l,t[6]=a,t[10]=i*o;else if("ZYX"===e.order)h=i*u,d=i*c,p=a*u,f=a*c,t[0]=o*u,t[4]=p*l-d,t[8]=h*l+f,t[1]=o*c,t[5]=f*l+h,t[9]=d*l-p,t[2]=-l,t[6]=a*o,t[10]=i*o;else if("YZX"===e.order){var v=i*o,x=i*l,w=a*o,k=a*l;t[0]=o*u,t[4]=k-v*c,t[8]=w*c+x,t[1]=c,t[5]=i*u,t[9]=-a*u,t[2]=-l*u,t[6]=x*c+w,t[10]=v-k*c}else"XZY"===e.order&&(v=i*o,x=i*l,w=a*o,k=a*l,t[0]=o*u,t[4]=-c,t[8]=l*u,t[1]=v*c+k,t[5]=i*u,t[9]=x*c-w,t[2]=w*c-x,t[6]=a*u,t[10]=k*c+v);return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){var t=this.elements,n=e.x,r=e.y,s=e.z,i=e.w,a=n+n,o=r+r,l=s+s,u=n*a,c=n*o,h=n*l,d=r*o,p=r*l,f=s*l,m=i*a,g=i*o,y=i*l;return t[0]=1-(d+f),t[4]=c-y,t[8]=h+g,t[1]=c+y,t[5]=1-(u+f),t[9]=p-m,t[2]=h-g,t[6]=p+m,t[10]=1-(u+d),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(e,t,n){void 0===b&&(b=new te.Vector3),void 0===v&&(v=new te.Vector3),void 0===x&&(x=new te.Vector3);var r=this.elements;return x.subVectors(e,t).normalize(),0===x.lengthSq()&&(x.z=1),b.crossVectors(n,x).normalize(),0===b.lengthSq()&&(x.x+=1e-4,b.crossVectors(n,x).normalize()),v.crossVectors(x,b),r[0]=b.x,r[4]=v.x,r[8]=x.x,r[1]=b.y,r[5]=v.y,r[9]=x.y,r[2]=b.z,r[6]=v.z,r[10]=x.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,s=this.elements,i=n[0],a=n[4],o=n[8],l=n[12],u=n[1],c=n[5],h=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],y=n[3],b=n[7],v=n[11],x=n[15],w=r[0],k=r[4],S=r[8],E=r[12],I=r[1],T=r[5],C=r[9],N=r[13],A=r[2],M=r[6],_=r[10],R=r[14],D=r[3],$=r[7],L=r[11],F=r[15];return s[0]=i*w+a*I+o*A+l*D,s[4]=i*k+a*T+o*M+l*$,s[8]=i*S+a*C+o*_+l*L,s[12]=i*E+a*N+o*R+l*F,s[1]=u*w+c*I+h*A+d*D,s[5]=u*k+c*T+h*M+d*$,s[9]=u*S+c*C+h*_+d*L,s[13]=u*E+c*N+h*R+d*F,s[2]=p*w+f*I+m*A+g*D,s[6]=p*k+f*T+m*M+g*$,s[10]=p*S+f*C+m*_+g*L,s[14]=p*E+f*N+m*R+g*F,s[3]=y*w+b*I+v*A+x*D,s[7]=y*k+b*T+v*M+x*$,s[11]=y*S+b*C+v*_+x*L,s[15]=y*E+b*N+v*R+x*F,this},multiplyToArray:function(e,t,n){var r=this.elements;return this.multiplyMatrices(e,t),n[0]=r[0],n[1]=r[1],n[2]=r[2],n[3]=r[3],n[4]=r[4],n[5]=r[5],n[6]=r[6],n[7]=r[7],n[8]=r[8],n[9]=r[9],n[10]=r[10],n[11]=r[11],n[12]=r[12],n[13]=r[13],n[14]=r[14],n[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToVector3Array:function(){var e;return function(t,n,r){void 0===e&&(e=new te.Vector3),void 0===n&&(n=0),void 0===r&&(r=t.length);for(var s=0,i=n;s<r;s+=3,i+=3)e.fromArray(t,i),e.applyMatrix4(this),e.toArray(t,i);return t}}(),applyToBuffer:function(){var e;return function(t,n,r){void 0===e&&(e=new te.Vector3),void 0===n&&(n=0),void 0===r&&(r=t.length/t.itemSize);for(var s=0,i=n;s<r;s++,i++)e.x=t.getX(i),e.y=t.getY(i),e.z=t.getZ(i),e.applyMatrix4(this),t.setXYZ(e.x,e.y,e.z);return t}}(),determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],i=e[1],a=e[5],o=e[9],l=e[13],u=e[2],c=e[6],h=e[10],d=e[14];return e[3]*(+s*o*c-r*l*c-s*a*h+n*l*h+r*a*d-n*o*d)+e[7]*(+t*o*d-t*l*h+s*i*h-r*i*d+r*l*u-s*o*u)+e[11]*(+t*l*c-t*a*d-s*i*c+n*i*d+s*a*u-n*l*u)+e[15]*(-r*a*u-t*o*c+t*a*h+r*i*c-n*i*h+n*o*u)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArrayOffset:function(e,t){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e},getPosition:function(){var e;return function(){void 0===e&&(e=new te.Vector3),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var n=this.elements,r=e.elements,s=r[0],i=r[4],a=r[8],o=r[12],l=r[1],u=r[5],c=r[9],h=r[13],d=r[2],p=r[6],f=r[10],m=r[14],g=r[3],y=r[7],b=r[11],v=r[15];n[0]=c*m*y-h*f*y+h*p*b-u*m*b-c*p*v+u*f*v,n[4]=o*f*y-a*m*y-o*p*b+i*m*b+a*p*v-i*f*v,n[8]=a*h*y-o*c*y+o*u*b-i*h*b-a*u*v+i*c*v,n[12]=o*c*p-a*h*p-o*u*f+i*h*f+a*u*m-i*c*m,n[1]=h*f*g-c*m*g-h*d*b+l*m*b+c*d*v-l*f*v,n[5]=a*m*g-o*f*g+o*d*b-s*m*b-a*d*v+s*f*v,n[9]=o*c*g-a*h*g-o*l*b+s*h*b+a*l*v-s*c*v,n[13]=a*h*d-o*c*d+o*l*f-s*h*f-a*l*m+s*c*m,n[2]=u*m*g-h*p*g+h*d*y-l*m*y-u*d*v+l*p*v,n[6]=o*p*g-i*m*g-o*d*y+s*m*y+i*d*v-s*p*v,n[10]=i*h*g-o*u*g+o*l*y-s*h*y-i*l*v+s*u*v,n[14]=o*u*d-i*h*d-o*l*p+s*h*p+i*l*m-s*u*m,n[3]=c*p*g-u*f*g-c*d*y+l*f*y+u*d*b-l*p*b,n[7]=i*f*g-a*p*g+a*d*y-s*f*y-i*d*b+s*p*b,n[11]=a*u*g-i*c*g-a*l*y+s*c*y+i*l*b-s*u*b,n[15]=i*c*d-a*u*d+a*l*p-s*c*p-i*l*f+s*u*f;var x=s*n[0]+l*n[4]+d*n[8]+g*n[12];if(0===x){var w="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(w);return console.warn(w),this.identity(),this}return this.multiplyScalar(1/x),this},scale:function(e){var t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),s=1-n,i=e.x,a=e.y,o=e.z,l=s*i,u=s*a;return this.set(l*i+n,l*a-r*o,l*o+r*a,0,l*a+r*o,u*a+n,u*o-r*i,0,l*o-r*a,u*o+r*i,s*o*o+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},compose:function(e,t,n){return this.makeRotationFromQuaternion(t),this.scale(n),this.setPosition(e),this},decompose:function(){var e,t;return function(n,r,s){void 0===e&&(e=new te.Vector3),void 0===t&&(t=new te.Matrix4);var i=this.elements,a=e.set(i[0],i[1],i[2]).length(),o=e.set(i[4],i[5],i[6]).length(),l=e.set(i[8],i[9],i[10]).length();this.determinant()<0&&(a=-a),n.x=i[12],n.y=i[13],n.z=i[14],t.elements.set(this.elements);var u=1/a,c=1/o,h=1/l;return t.elements[0]*=u,t.elements[1]*=u,t.elements[2]*=u,t.elements[4]*=c,t.elements[5]*=c,t.elements[6]*=c,t.elements[8]*=h,t.elements[9]*=h,t.elements[10]*=h,r.setFromRotationMatrix(t),s.x=a,s.y=o,s.z=l,this}}(),makeFrustum:function(e,t,n,r,s,i){var a=this.elements,o=2*s/(t-e),l=2*s/(r-n),u=(t+e)/(t-e),c=(r+n)/(r-n),h=-(i+s)/(i-s),d=-2*i*s/(i-s);return a[0]=o,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,n,r){var s=n*Math.tan(te.Math.degToRad(.5*e)),i=-s,a=i*t,o=s*t;return this.makeFrustum(a,o,i,s,n,r)},makeOrthographic:function(e,t,n,r,s,i){var a=this.elements,o=t-e,l=n-r,u=i-s,c=(t+e)/o,h=(n+r)/l,d=(i+s)/u;return a[0]=2/o,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2/l,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2/u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]}},te.Ray=function(e,t){this.origin=void 0!==e?e:new te.Vector3,this.direction=void 0!==t?t:new te.Vector3},te.Ray.prototype={constructor:te.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new te.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new te.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var n=t||new te.Vector3;n.subVectors(e,this.origin);var r=n.dot(this.direction);return r<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new te.Vector3;return function(t){var n=e.subVectors(t,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(n).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:(k=new te.Vector3,S=new te.Vector3,E=new te.Vector3,function(e,t,n,r){k.copy(e).add(t).multiplyScalar(.5),S.copy(t).sub(e).normalize(),E.copy(this.origin).sub(k);var s,i,a,o,l=.5*e.distanceTo(t),u=-this.direction.dot(S),c=E.dot(this.direction),h=-E.dot(S),d=E.lengthSq(),p=Math.abs(1-u*u);if(p>0)if(i=u*c-h,o=l*p,(s=u*h-c)>=0)if(i>=-o)if(i<=o){var f=1/p;a=(s*=f)*(s+u*(i*=f)+2*c)+i*(u*s+i+2*h)+d}else i=l,a=-(s=Math.max(0,-(u*i+c)))*s+i*(i+2*h)+d;else i=-l,a=-(s=Math.max(0,-(u*i+c)))*s+i*(i+2*h)+d;else i<=-o?a=-(s=Math.max(0,-(-u*l+c)))*s+(i=s>0?-l:Math.min(Math.max(-l,-h),l))*(i+2*h)+d:i<=o?(s=0,a=(i=Math.min(Math.max(-l,-h),l))*(i+2*h)+d):a=-(s=Math.max(0,-(u*l+c)))*s+(i=s>0?l:Math.min(Math.max(-l,-h),l))*(i+2*h)+d;else i=u>0?-l:l,a=-(s=Math.max(0,-(u*i+c)))*s+i*(i+2*h)+d;return n&&n.copy(this.direction).multiplyScalar(s).add(this.origin),r&&r.copy(S).multiplyScalar(i).add(k),a}),intersectSphere:function(){var e=new te.Vector3;return function(t,n){e.subVectors(t.center,this.origin);var r=e.dot(this.direction),s=e.dot(e)-r*r,i=t.radius*t.radius;if(s>i)return null;var a=Math.sqrt(i-s),o=r-a,l=r+a;return o<0&&l<0?null:o<0?this.at(l,n):this.at(o,n)}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){var n,r,s,i,a,o,l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,r=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,r=(e.min.x-h.x)*l),u>=0?(s=(e.min.y-h.y)*u,i=(e.max.y-h.y)*u):(s=(e.max.y-h.y)*u,i=(e.min.y-h.y)*u),n>i||s>r?null:((s>n||n!=n)&&(n=s),(i<r||r!=r)&&(r=i),c>=0?(a=(e.min.z-h.z)*c,o=(e.max.z-h.z)*c):(a=(e.max.z-h.z)*c,o=(e.min.z-h.z)*c),n>o||a>r?null:((a>n||n!=n)&&(n=a),(o<r||r!=r)&&(r=o),r<0?null:this.at(n>=0?n:r,t)))},intersectsBox:(w=new te.Vector3,function(e){return null!==this.intersectBox(e,w)}),intersectTriangle:function(){var e=new te.Vector3,t=new te.Vector3,n=new te.Vector3,r=new te.Vector3;return function(s,i,a,o,l){t.subVectors(i,s),n.subVectors(a,s),r.crossVectors(t,n);var u,c=this.direction.dot(r);if(c>0){if(o)return null;u=1}else{if(!(c<0))return null;u=-1,c=-c}e.subVectors(this.origin,s);var h=u*this.direction.dot(n.crossVectors(e,n));if(h<0)return null;var d=u*this.direction.dot(t.cross(e));if(d<0)return null;if(h+d>c)return null;var p=-u*e.dot(r);return p<0?null:this.at(p/c,l)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},te.Sphere=function(e,t){this.center=void 0!==e?e:new te.Vector3,this.radius=void 0!==t?t:0},te.Sphere.prototype={constructor:te.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new te.Box3;return function(t,n){var r=this.center;void 0!==n?r.copy(n):e.setFromPoints(t).center(r);for(var s=0,i=0,a=t.length;i<a;i++)s=Math.max(s,r.distanceToSquared(t[i]));return this.radius=Math.sqrt(s),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(this.center.dot(e.normal)-e.constant)<=this.radius},clampPoint:function(e,t){var n=this.center.distanceToSquared(e),r=t||new te.Vector3;return r.copy(e),n>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){var t=e||new te.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},te.Frustum=function(e,t,n,r,s,i){this.planes=[void 0!==e?e:new te.Plane,void 0!==t?t:new te.Plane,void 0!==n?n:new te.Plane,void 0!==r?r:new te.Plane,void 0!==s?s:new te.Plane,void 0!==i?i:new te.Plane]},te.Frustum.prototype={constructor:te.Frustum,set:function(e,t,n,r,s,i){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(s),a[5].copy(i),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements,r=n[0],s=n[1],i=n[2],a=n[3],o=n[4],l=n[5],u=n[6],c=n[7],h=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],y=n[14],b=n[15];return t[0].setComponents(a-r,c-o,f-h,b-m).normalize(),t[1].setComponents(a+r,c+o,f+h,b+m).normalize(),t[2].setComponents(a+s,c+l,f+d,b+g).normalize(),t[3].setComponents(a-s,c-l,f-d,b-g).normalize(),t[4].setComponents(a-i,c-u,f-p,b-y).normalize(),t[5].setComponents(a+i,c+u,f+p,b+y).normalize(),this},intersectsObject:(C=new te.Sphere,function(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),C.copy(t.boundingSphere),C.applyMatrix4(e.matrixWorld),this.intersectsSphere(C)}),intersectsSphere:function(e){for(var t=this.planes,n=e.center,r=-e.radius,s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0},intersectsBox:(I=new te.Vector3,T=new te.Vector3,function(e){for(var t=this.planes,n=0;n<6;n++){var r=t[n];I.x=r.normal.x>0?e.min.x:e.max.x,T.x=r.normal.x>0?e.max.x:e.min.x,I.y=r.normal.y>0?e.min.y:e.max.y,T.y=r.normal.y>0?e.max.y:e.min.y,I.z=r.normal.z>0?e.min.z:e.max.z,T.z=r.normal.z>0?e.max.z:e.min.z;var s=r.distanceToPoint(I),i=r.distanceToPoint(T);if(s<0&&i<0)return!1}return!0}),containsPoint:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}},te.Plane=function(e,t){this.normal=void 0!==e?e:new te.Vector3(1,0,0),this.constant=void 0!==t?t:0},te.Plane.prototype={constructor:te.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new te.Vector3,t=new te.Vector3;return function(n,r,s){var i=e.subVectors(s,r).cross(t.subVectors(n,r)).normalize();return this.setFromNormalAndCoplanarPoint(i,n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var n=this.distanceToPoint(e);return(t||new te.Vector3).copy(this.normal).multiplyScalar(n)},intersectLine:function(){var e=new te.Vector3;return function(t,n){var r=n||new te.Vector3,s=t.delta(e),i=this.normal.dot(s);if(0===i)return 0===this.distanceToPoint(t.start)?r.copy(t.start):void 0;var a=-(t.start.dot(this.normal)+this.constant)/i;return a<0||a>1?void 0:r.copy(s).multiplyScalar(a).add(t.start)}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return(e||new te.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new te.Vector3,t=new te.Vector3,n=new te.Matrix3;return function(r,s){var i=s||n.getNormalMatrix(r),a=e.copy(this.normal).applyMatrix3(i),o=this.coplanarPoint(t);return o.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(a,o),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},te.Math={generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),n=new Array(36),r=0;return function(){for(var s=0;s<36;s++)8===s||13===s||18===s||23===s?n[s]="-":14===s?n[s]="4":(r<=2&&(r=33554432+16777216*Math.random()|0),e=15&r,r>>=4,n[s]=t[19===s?3&e|8:e]);return n.join("")}}(),clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,r,s){return r+(e-t)*(s-r)/(n-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},random16:function(){return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),Math.random()},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:(A=Math.PI/180,function(e){return e*A}),radToDeg:(N=180/Math.PI,function(e){return e*N}),isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}},te.Spline=function(e){this.points=e;var t,n,r,s,i,a,o,l,u,c=[],h={x:0,y:0,z:0};function d(e,t,n,r,s,i,a){var o=.5*(n-e),l=.5*(r-t);return(2*(t-n)+o+l)*a+(-3*(t-n)-2*o-l)*i+o*s+t}this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return t=(this.points.length-1)*e,n=Math.floor(t),r=t-n,c[0]=0===n?n:n-1,c[1]=n,c[2]=n>this.points.length-2?this.points.length-1:n+1,c[3]=n>this.points.length-3?this.points.length-1:n+2,a=this.points[c[0]],o=this.points[c[1]],l=this.points[c[2]],u=this.points[c[3]],i=r*(s=r*r),h.x=d(a.x,o.x,l.x,u.x,r,s,i),h.y=d(a.y,o.y,l.y,u.y,r,s,i),h.z=d(a.z,o.z,l.z,u.z,r,s,i),h},this.getControlPointsArray=function(){var e,t,n=this.points.length,r=[];for(e=0;e<n;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,n,r,s,i=0,a=0,o=0,l=new te.Vector3,u=new te.Vector3,c=[],h=0;for(c[0]=0,e||(e=100),r=this.points.length*e,l.copy(this.points[0]),t=1;t<r;t++)n=t/r,s=this.getPoint(n),u.copy(s),h+=u.distanceTo(l),l.copy(s),i=(this.points.length-1)*n,(a=Math.floor(i))!==o&&(c[a]=h,o=a);return c[c.length]=h,{chunks:c,total:h}},this.reparametrizeByArcLength=function(e){var t,n,r,s,i,a,o,l,u=[],c=new te.Vector3,h=this.getLength();for(u.push(c.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(a=h.chunks[t]-h.chunks[t-1],o=Math.ceil(e*a/h.total),s=(t-1)/(this.points.length-1),i=t/(this.points.length-1),n=1;n<o-1;n++)r=s+n*(1/o)*(i-s),l=this.getPoint(r),u.push(c.copy(l).clone());u.push(c.copy(this.points[t]).clone())}this.points=u}},te.Triangle=function(e,t,n){this.a=void 0!==e?e:new te.Vector3,this.b=void 0!==t?t:new te.Vector3,this.c=void 0!==n?n:new te.Vector3},te.Triangle.normal=(M=new te.Vector3,function(e,t,n,r){var s=r||new te.Vector3;s.subVectors(n,t),M.subVectors(e,t),s.cross(M);var i=s.lengthSq();return i>0?s.multiplyScalar(1/Math.sqrt(i)):s.set(0,0,0)}),te.Triangle.barycoordFromPoint=function(){var e=new te.Vector3,t=new te.Vector3,n=new te.Vector3;return function(r,s,i,a,o){e.subVectors(a,s),t.subVectors(i,s),n.subVectors(r,s);var l=e.dot(e),u=e.dot(t),c=e.dot(n),h=t.dot(t),d=t.dot(n),p=l*h-u*u,f=o||new te.Vector3;if(0===p)return f.set(-2,-1,-1);var m=1/p,g=(h*c-u*d)*m,y=(l*d-u*c)*m;return f.set(1-g-y,y,g)}}(),te.Triangle.containsPoint=function(){var e=new te.Vector3;return function(t,n,r,s){var i=te.Triangle.barycoordFromPoint(t,n,r,s,e);return i.x>=0&&i.y>=0&&i.x+i.y<=1}}(),te.Triangle.prototype={constructor:te.Triangle,set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new te.Vector3,t=new te.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new te.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return te.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new te.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return te.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return te.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},te.Interpolant=function(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n},te.Interpolant.prototype={constructor:te.Intepolant,evaluate:function(e){var t=this.parameterPositions,n=this._cachedIndex,r=t[n],s=t[n-1];e:{t:{var i;n:{r:if(!(e<r)){for(var a=n+2;;){if(void 0===r){if(e<s)break r;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===a)break;if(s=r,e<(r=t[++n]))break t}i=t.length;break n}if(e>=s)break e;var o=t[1];for(e<o&&(n=2,s=o),a=n-2;;){if(void 0===s)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===a)break;if(r=s,e>=(s=t[--n-1]))break t}i=n,n=0}for(;n<i;){var l=n+i>>>1;e<t[l]?i=l:n=l+1}if(r=t[n],void 0===(s=t[n-1]))return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,e,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=e*r,i=0;i!==r;++i)t[i]=n[s+i];return t},interpolate_:function(e,t,n,r){throw new Error("call to abstract method")},intervalChanged_:function(e,t,n){}},Object.assign(te.Interpolant.prototype,{beforeStart_:te.Interpolant.prototype.copySampleValue_,afterEnd_:te.Interpolant.prototype.copySampleValue_}),te.CubicInterpolant=function(e,t,n,r){te.Interpolant.call(this,e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0},te.CubicInterpolant.prototype=Object.assign(Object.create(te.Interpolant.prototype),{constructor:te.CubicInterpolant,DefaultSettings_:{endingStart:te.ZeroCurvatureEnding,endingEnd:te.ZeroCurvatureEnding},intervalChanged_:function(e,t,n){var r=this.parameterPositions,s=e-2,i=e+1,a=r[s],o=r[i];if(void 0===a)switch(this.getSettings_().endingStart){case te.ZeroSlopeEnding:s=e,a=2*t-n;break;case te.WrapAroundEnding:a=t+r[s=r.length-2]-r[s+1];break;default:s=e,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case te.ZeroSlopeEnding:i=e,o=2*n-t;break;case te.WrapAroundEnding:i=1,o=n+r[1]-r[0];break;default:i=e-1,o=t}var l=.5*(n-t),u=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(o-n),this._offsetPrev=s*u,this._offsetNext=i*u},interpolate_:function(e,t,n,r){for(var s=this.resultBuffer,i=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),f=p*p,m=f*p,g=-h*m+2*h*f-h*p,y=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,b=(-1-d)*m+(1.5+d)*f+.5*p,v=d*m-d*f,x=0;x!==a;++x)s[x]=g*i[u+x]+y*i[l+x]+b*i[o+x]+v*i[c+x];return s}}),te.DiscreteInterpolant=function(e,t,n,r){te.Interpolant.call(this,e,t,n,r)},te.DiscreteInterpolant.prototype=Object.assign(Object.create(te.Interpolant.prototype),{constructor:te.DiscreteInterpolant,interpolate_:function(e,t,n,r){return this.copySampleValue_(e-1)}}),te.LinearInterpolant=function(e,t,n,r){te.Interpolant.call(this,e,t,n,r)},te.LinearInterpolant.prototype=Object.assign(Object.create(te.Interpolant.prototype),{constructor:te.LinearInterpolant,interpolate_:function(e,t,n,r){for(var s=this.resultBuffer,i=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,u=(n-t)/(r-t),c=1-u,h=0;h!==a;++h)s[h]=i[l+h]*c+i[o+h]*u;return s}}),te.QuaternionLinearInterpolant=function(e,t,n,r){te.Interpolant.call(this,e,t,n,r)},te.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(te.Interpolant.prototype),{constructor:te.QuaternionLinearInterpolant,interpolate_:function(e,t,n,r){for(var s=this.resultBuffer,i=this.sampleValues,a=this.valueSize,o=e*a,l=(n-t)/(r-t),u=o+a;o!==u;o+=4)te.Quaternion.slerpFlat(s,0,i,o-a,i,o,l);return s}}),te.Clock=function(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},te.Clock.prototype={constructor:te.Clock,start:function(){this.startTime=self.performance.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=self.performance.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e}},te.EventDispatcher=function(){},te.EventDispatcher.prototype={constructor:te.EventDispatcher,apply:function(e){e.addEventListener=te.EventDispatcher.prototype.addEventListener,e.hasEventListener=te.EventDispatcher.prototype.hasEventListener,e.removeEventListener=te.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=te.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var n=this._listeners[e];if(void 0!==n){var r=n.indexOf(t);-1!==r&&n.splice(r,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var n=[],r=t.length,s=0;s<r;s++)n[s]=t[s];for(s=0;s<r;s++)n[s].call(this,e)}}}},te.Layers=function(){this.mask=1},te.Layers.prototype={constructor:te.Layers,set:function(e){this.mask=1<<e},enable:function(e){this.mask|=1<<e},toggle:function(e){this.mask^=1<<e},disable:function(e){this.mask&=~(1<<e)},test:function(e){return 0!=(this.mask&e.mask)}},function(e){function t(e,t){return e.distance-t.distance}function n(e,t,r,s){if(!1!==e.visible&&(e.raycast(t,r),!0===s))for(var i=e.children,a=0,o=i.length;a<o;a++)n(i[a],t,r,!0)}e.Raycaster=function(t,n,r,s){this.ray=new e.Ray(t,n),this.near=r||0,this.far=s||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})},e.Raycaster.prototype={constructor:e.Raycaster,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,n){n instanceof e.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(n.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(n).sub(this.ray.origin).normalize()):n instanceof e.OrthographicCamera?(this.ray.origin.set(t.x,t.y,-1).unproject(n),this.ray.direction.set(0,0,-1).transformDirection(n.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,r){var s=[];return n(e,this,s,r),s.sort(t),s},intersectObjects:function(e,r){var s=[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),s;for(var i=0,a=e.length;i<a;i++)n(e[i],this,s,r);return s.sort(t),s}}}(te),te.Object3D=function(){Object.defineProperty(this,"id",{value:te.Object3DIdCount++}),this.uuid=te.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=te.Object3D.DefaultUp.clone();var e=new te.Vector3,t=new te.Euler,n=new te.Quaternion,r=new te.Vector3(1,1,1);t.onChange((function(){n.setFromEuler(t,!1)})),n.onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:n},scale:{enumerable:!0,value:r},modelViewMatrix:{value:new te.Matrix4},normalMatrix:{value:new te.Matrix3}}),this.rotationAutoUpdate=!0,this.matrix=new te.Matrix4,this.matrixWorld=new te.Matrix4,this.matrixAutoUpdate=te.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new te.Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},te.Object3D.DefaultUp=new te.Vector3(0,1,0),te.Object3D.DefaultMatrixAutoUpdate=!0,te.Object3D.prototype={constructor:te.Object3D,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:($=new te.Quaternion,function(e,t){return $.setFromAxisAngle(e,t),this.quaternion.multiply($),this}),rotateX:function(){var e=new te.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new te.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new te.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new te.Vector3;return function(t,n){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(n)),this}}(),translateX:function(){var e=new te.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new te.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new te.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:(D=new te.Matrix4,function(e){return e.applyMatrix4(D.getInverse(this.matrixWorld))}),lookAt:function(){var e=new te.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e instanceof te.Object3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);var n=this.children.indexOf(e);-1!==n&&(e.parent=null,e.dispatchEvent({type:"removed"}),this.children.splice(n,1))},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,r=this.children.length;n<r;n++){var s=this.children[n].getObjectByProperty(e,t);if(void 0!==s)return s}},getWorldPosition:function(e){var t=e||new te.Vector3;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:(_=new te.Vector3,R=new te.Vector3,function(e){var t=e||new te.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(_,t,R),t}),getWorldRotation:function(){var e=new te.Quaternion;return function(t){var n=t||new te.Euler;return this.getWorldQuaternion(e),n.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new te.Vector3,t=new te.Quaternion;return function(n){var r=n||new te.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,r),r}}(),getWorldDirection:function(){var e=new te.Quaternion;return function(t){var n=t||new te.Vector3;return this.getWorldQuaternion(e),n.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==e||(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,n=this.children.length;t<n;t++)this.children[t].updateMatrixWorld(e)},toJSON:function(e){var t=void 0===e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{}},n.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"});var r={};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),r.matrix=this.matrix.toArray(),void 0!==this.geometry&&(void 0===e.geometries[this.geometry.uuid]&&(e.geometries[this.geometry.uuid]=this.geometry.toJSON(e)),r.geometry=this.geometry.uuid),void 0!==this.material&&(void 0===e.materials[this.material.uuid]&&(e.materials[this.material.uuid]=this.material.toJSON(e)),r.material=this.material.uuid),this.children.length>0){r.children=[];for(var s=0;s<this.children.length;s++)r.children.push(this.children[s].toJSON(e).object)}if(t){var i=u(e.geometries),a=u(e.materials),o=u(e.textures),l=u(e.images);i.length>0&&(n.geometries=i),a.length>0&&(n.materials=a),o.length>0&&(n.textures=o),l.length>0&&(n.images=l)}return n.object=r,n;function u(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.rotationAutoUpdate=e.rotationAutoUpdate,this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var r=e.children[n];this.add(r.clone())}return this}},te.EventDispatcher.prototype.apply(te.Object3D.prototype),te.Object3DIdCount=0,te.Face3=function(e,t,n,r,s,i){this.a=e,this.b=t,this.c=n,this.normal=r instanceof te.Vector3?r:new te.Vector3,this.vertexNormals=Array.isArray(r)?r:[],this.color=s instanceof te.Color?s:new te.Color,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=void 0!==i?i:0},te.Face3.prototype={constructor:te.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}},te.Face4=function(e,t,n,r,s,i,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new te.Face3(e,t,n,s,i,a)},te.BufferAttribute=function(e,t){this.uuid=te.Math.generateUUID(),this.array=e,this.itemSize=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},te.BufferAttribute.prototype={constructor:te.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(e){!0===e&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,n=0,r=0,s=e.length;r<s;r++){var i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),i=new te.Color),t[n++]=i.r,t[n++]=i.g,t[n++]=i.b}return this},copyIndicesArray:function(e){for(var t=this.array,n=0,r=0,s=e.length;r<s;r++){var i=e[r];t[n++]=i.a,t[n++]=i.b,t[n++]=i.c}return this},copyVector2sArray:function(e){for(var t=this.array,n=0,r=0,s=e.length;r<s;r++){var i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),i=new te.Vector2),t[n++]=i.x,t[n++]=i.y}return this},copyVector3sArray:function(e){for(var t=this.array,n=0,r=0,s=e.length;r<s;r++){var i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new te.Vector3),t[n++]=i.x,t[n++]=i.y,t[n++]=i.z}return this},copyVector4sArray:function(e){for(var t=this.array,n=0,r=0,s=e.length;r<s;r++){var i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),i=new te.Vector4),t[n++]=i.x,t[n++]=i.y,t[n++]=i.z,t[n++]=i.w}return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this},clone:function(){return(new this.constructor).copy(this)}},te.Int8Attribute=function(e,t){return new te.BufferAttribute(new Int8Array(e),t)},te.Uint8Attribute=function(e,t){return new te.BufferAttribute(new Uint8Array(e),t)},te.Uint8ClampedAttribute=function(e,t){return new te.BufferAttribute(new Uint8ClampedArray(e),t)},te.Int16Attribute=function(e,t){return new te.BufferAttribute(new Int16Array(e),t)},te.Uint16Attribute=function(e,t){return new te.BufferAttribute(new Uint16Array(e),t)},te.Int32Attribute=function(e,t){return new te.BufferAttribute(new Int32Array(e),t)},te.Uint32Attribute=function(e,t){return new te.BufferAttribute(new Uint32Array(e),t)},te.Float32Attribute=function(e,t){return new te.BufferAttribute(new Float32Array(e),t)},te.Float64Attribute=function(e,t){return new te.BufferAttribute(new Float64Array(e),t)},te.DynamicBufferAttribute=function(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new te.BufferAttribute(e,t).setDynamic(!0)},te.InstancedBufferAttribute=function(e,t,n){te.BufferAttribute.call(this,e,t),this.meshPerAttribute=n||1},te.InstancedBufferAttribute.prototype=Object.create(te.BufferAttribute.prototype),te.InstancedBufferAttribute.prototype.constructor=te.InstancedBufferAttribute,te.InstancedBufferAttribute.prototype.copy=function(e){return te.BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},te.InterleavedBuffer=function(e,t){this.uuid=te.Math.generateUUID(),this.array=e,this.stride=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},te.InterleavedBuffer.prototype={constructor:te.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(e){!0===e&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.stride=e.stride,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[n+r];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)}},te.InstancedInterleavedBuffer=function(e,t,n){te.InterleavedBuffer.call(this,e,t),this.meshPerAttribute=n||1},te.InstancedInterleavedBuffer.prototype=Object.create(te.InterleavedBuffer.prototype),te.InstancedInterleavedBuffer.prototype.constructor=te.InstancedInterleavedBuffer,te.InstancedInterleavedBuffer.prototype.copy=function(e){return te.InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},te.InterleavedBufferAttribute=function(e,t,n){this.uuid=te.Math.generateUUID(),this.data=e,this.itemSize=t,this.offset=n},te.InterleavedBufferAttribute.prototype={constructor:te.InterleavedBufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.data.count},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=s,this}},te.Geometry=function(){Object.defineProperty(this,"id",{value:te.GeometryIdCount++}),this.uuid=te.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1},te.Geometry.prototype={constructor:te.Geometry,applyMatrix:function(e){for(var t=(new te.Matrix3).getNormalMatrix(e),n=0,r=this.vertices.length;n<r;n++)this.vertices[n].applyMatrix4(e);for(n=0,r=this.faces.length;n<r;n++){var s=this.faces[n];s.normal.applyMatrix3(t).normalize();for(var i=0,a=s.vertexNormals.length;i<a;i++)s.vertexNormals[i].applyMatrix3(t).normalize()}null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0},rotateX:function(){var e;return function(t){return void 0===e&&(e=new te.Matrix4),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new te.Matrix4),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new te.Matrix4),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,n,r){return void 0===e&&(e=new te.Matrix4),e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,n,r){return void 0===e&&(e=new te.Matrix4),e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(e){void 0===L&&(L=new te.Object3D),L.lookAt(e),L.updateMatrix(),this.applyMatrix(L.matrix)},fromBufferGeometry:function(e){var t=this,n=null!==e.index?e.index.array:void 0,r=e.attributes,s=r.position.array,i=void 0!==r.normal?r.normal.array:void 0,a=void 0!==r.color?r.color.array:void 0,o=void 0!==r.uv?r.uv.array:void 0,l=void 0!==r.uv2?r.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=[]);for(var u=[],c=[],h=[],d=0,p=0;d<s.length;d+=3,p+=2)t.vertices.push(new te.Vector3(s[d],s[d+1],s[d+2])),void 0!==i&&u.push(new te.Vector3(i[d],i[d+1],i[d+2])),void 0!==a&&t.colors.push(new te.Color(a[d],a[d+1],a[d+2])),void 0!==o&&c.push(new te.Vector2(o[p],o[p+1])),void 0!==l&&h.push(new te.Vector2(l[p],l[p+1]));function f(e,n,r){var s=void 0!==i?[u[e].clone(),u[n].clone(),u[r].clone()]:[],d=void 0!==a?[t.colors[e].clone(),t.colors[n].clone(),t.colors[r].clone()]:[],p=new te.Face3(e,n,r,s,d);t.faces.push(p),void 0!==o&&t.faceVertexUvs[0].push([c[e].clone(),c[n].clone(),c[r].clone()]),void 0!==l&&t.faceVertexUvs[1].push([h[e].clone(),h[n].clone(),h[r].clone()])}if(void 0!==n){var m=e.groups;if(m.length>0)for(d=0;d<m.length;d++)for(var g=m[d],y=g.start,b=(p=y,y+g.count);p<b;p+=3)f(n[p],n[p+1],n[p+2]);else for(d=0;d<n.length;d+=3)f(n[d],n[d+1],n[d+2])}else for(d=0;d<s.length/3;d+=3)f(d,d+1,d+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,n=0===t?1:1/t,r=new te.Matrix4;return r.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var e=new te.Vector3,t=new te.Vector3,n=0,r=this.faces.length;n<r;n++){var s=this.faces[n],i=this.vertices[s.a],a=this.vertices[s.b],o=this.vertices[s.c];e.subVectors(o,a),t.subVectors(i,a),e.cross(t),e.normalize(),s.normal.copy(e)}},computeVertexNormals:function(e){var t,n,r,s,i,a;for(a=new Array(this.vertices.length),t=0,n=this.vertices.length;t<n;t++)a[t]=new te.Vector3;if(e){var o,l,u,c=new te.Vector3,h=new te.Vector3;for(r=0,s=this.faces.length;r<s;r++)i=this.faces[r],o=this.vertices[i.a],l=this.vertices[i.b],u=this.vertices[i.c],c.subVectors(u,l),h.subVectors(o,l),c.cross(h),a[i.a].add(c),a[i.b].add(c),a[i.c].add(c)}else for(r=0,s=this.faces.length;r<s;r++)a[(i=this.faces[r]).a].add(i.normal),a[i.b].add(i.normal),a[i.c].add(i.normal);for(t=0,n=this.vertices.length;t<n;t++)a[t].normalize();for(r=0,s=this.faces.length;r<s;r++){var d=(i=this.faces[r]).vertexNormals;3===d.length?(d[0].copy(a[i.a]),d[1].copy(a[i.b]),d[2].copy(a[i.c])):(d[0]=a[i.a].clone(),d[1]=a[i.b].clone(),d[2]=a[i.c].clone())}},computeMorphNormals:function(){var e,t,n,r,s;for(n=0,r=this.faces.length;n<r;n++)for((s=this.faces[n]).__originalFaceNormal?s.__originalFaceNormal.copy(s.normal):s.__originalFaceNormal=s.normal.clone(),s.__originalVertexNormals||(s.__originalVertexNormals=[]),e=0,t=s.vertexNormals.length;e<t;e++)s.__originalVertexNormals[e]?s.__originalVertexNormals[e].copy(s.vertexNormals[e]):s.__originalVertexNormals[e]=s.vertexNormals[e].clone();var i=new te.Geometry;for(i.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var a=this.morphNormals[e].faceNormals,o=this.morphNormals[e].vertexNormals;for(n=0,r=this.faces.length;n<r;n++)l=new te.Vector3,u={a:new te.Vector3,b:new te.Vector3,c:new te.Vector3},a.push(l),o.push(u)}var l,u,c=this.morphNormals[e];for(i.vertices=this.morphTargets[e].vertices,i.computeFaceNormals(),i.computeVertexNormals(),n=0,r=this.faces.length;n<r;n++)s=this.faces[n],l=c.faceNormals[n],u=c.vertexNormals[n],l.copy(s.normal),u.a.copy(s.vertexNormals[0]),u.b.copy(s.vertexNormals[1]),u.c.copy(s.vertexNormals[2])}for(n=0,r=this.faces.length;n<r;n++)(s=this.faces[n]).normal=s.__originalFaceNormal,s.vertexNormals=s.__originalVertexNormals},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){for(var e=0,t=this.vertices,n=0,r=t.length;n<r;n++)n>0&&(e+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new te.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new te.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(e instanceof te.Geometry!=0){var r,s=this.vertices.length,i=this.vertices,a=e.vertices,o=this.faces,l=e.faces,u=this.faceVertexUvs[0],c=e.faceVertexUvs[0];void 0===n&&(n=0),void 0!==t&&(r=(new te.Matrix3).getNormalMatrix(t));for(var h=0,d=a.length;h<d;h++){var p=a[h].clone();void 0!==t&&p.applyMatrix4(t),i.push(p)}for(h=0,d=l.length;h<d;h++){var f,m,g,y=l[h],b=y.vertexNormals,v=y.vertexColors;(f=new te.Face3(y.a+s,y.b+s,y.c+s)).normal.copy(y.normal),void 0!==r&&f.normal.applyMatrix3(r).normalize();for(var x=0,w=b.length;x<w;x++)m=b[x].clone(),void 0!==r&&m.applyMatrix3(r).normalize(),f.vertexNormals.push(m);for(f.color.copy(y.color),x=0,w=v.length;x<w;x++)g=v[x],f.vertexColors.push(g.clone());f.materialIndex=y.materialIndex+n,o.push(f)}for(h=0,d=c.length;h<d;h++){var k=c[h],S=[];if(void 0!==k){for(x=0,w=k.length;x<w;x++)S.push(k[x].clone());u.push(S)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e)},mergeMesh:function(e){e instanceof te.Mesh!=0?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},mergeVertices:function(){var e,t,n,r,s,i,a,o,l={},u=[],c=[],h=Math.pow(10,4);for(n=0,r=this.vertices.length;n<r;n++)e=this.vertices[n],void 0===l[t=Math.round(e.x*h)+"_"+Math.round(e.y*h)+"_"+Math.round(e.z*h)]?(l[t]=n,u.push(this.vertices[n]),c[n]=u.length-1):c[n]=c[l[t]];var d=[];for(n=0,r=this.faces.length;n<r;n++){(s=this.faces[n]).a=c[s.a],s.b=c[s.b],s.c=c[s.c],i=[s.a,s.b,s.c];for(var p=0;p<3;p++)if(i[p]===i[(p+1)%3]){d.push(n);break}}for(n=d.length-1;n>=0;n--){var f=d[n];for(this.faces.splice(f,1),a=0,o=this.faceVertexUvs.length;a<o;a++)this.faceVertexUvs[a].splice(f,1)}var m=this.vertices.length-u.length;return this.vertices=u,m},sortFacesByMaterialIndex:function(){for(var e=this.faces,t=e.length,n=0;n<t;n++)e[n]._id=n;e.sort((function(e,t){return e.materialIndex-t.materialIndex}));var r,s,i=this.faceVertexUvs[0],a=this.faceVertexUvs[1];for(i&&i.length===t&&(r=[]),a&&a.length===t&&(s=[]),n=0;n<t;n++){var o=e[n]._id;r&&r.push(i[o]),s&&s.push(a[o])}r&&(this.faceVertexUvs[0]=r),s&&(this.faceVertexUvs[1]=s)},toJSON:function(){var e={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}for(var r=[],s=0;s<this.vertices.length;s++){var i=this.vertices[s];r.push(i.x,i.y,i.z)}var a=[],o=[],l={},u=[],c={},h=[],d={};for(s=0;s<this.faces.length;s++){var p=this.faces[s],f=void 0!==this.faceVertexUvs[0][s],m=p.normal.length()>0,g=p.vertexNormals.length>0,y=1!==p.color.r||1!==p.color.g||1!==p.color.b,b=p.vertexColors.length>0,v=0;if(v=S(v,0,0),v=S(v,1,!0),v=S(v,2,!1),v=S(v,3,f),v=S(v,4,m),v=S(v,5,g),v=S(v,6,y),v=S(v,7,b),a.push(v),a.push(p.a,p.b,p.c),a.push(p.materialIndex),f){var x=this.faceVertexUvs[0][s];a.push(T(x[0]),T(x[1]),T(x[2]))}if(m&&a.push(E(p.normal)),g){var w=p.vertexNormals;a.push(E(w[0]),E(w[1]),E(w[2]))}if(y&&a.push(I(p.color)),b){var k=p.vertexColors;a.push(I(k[0]),I(k[1]),I(k[2]))}}function S(e,t,n){return n?e|1<<t:e&~(1<<t)}function E(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==l[t]||(l[t]=o.length/3,o.push(e.x,e.y,e.z)),l[t]}function I(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==c[t]||(c[t]=u.length,u.push(e.getHex())),c[t]}function T(e){var t=e.x.toString()+e.y.toString();return void 0!==d[t]||(d[t]=h.length/2,h.push(e.x,e.y)),d[t]}return e.data={},e.data.vertices=r,e.data.normals=o,u.length>0&&(e.data.colors=u),h.length>0&&(e.data.uvs=[h]),e.data.faces=a,e},clone:function(){return(new te.Geometry).copy(this)},copy:function(e){this.vertices=[],this.faces=[],this.faceVertexUvs=[[]];for(var t=e.vertices,n=0,r=t.length;n<r;n++)this.vertices.push(t[n].clone());var s=e.faces;for(n=0,r=s.length;n<r;n++)this.faces.push(s[n].clone());for(n=0,r=e.faceVertexUvs.length;n<r;n++){var i=e.faceVertexUvs[n];void 0===this.faceVertexUvs[n]&&(this.faceVertexUvs[n]=[]);for(var a=0,o=i.length;a<o;a++){for(var l=i[a],u=[],c=0,h=l.length;c<h;c++){var d=l[c];u.push(d.clone())}this.faceVertexUvs[n].push(u)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},te.EventDispatcher.prototype.apply(te.Geometry.prototype),te.GeometryIdCount=0,te.DirectGeometry=function(){Object.defineProperty(this,"id",{value:te.GeometryIdCount++}),this.uuid=te.Math.generateUUID(),this.name="",this.type="DirectGeometry",this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1},te.DirectGeometry.prototype={constructor:te.DirectGeometry,computeBoundingBox:te.Geometry.prototype.computeBoundingBox,computeBoundingSphere:te.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(e){for(var t,n,r=[],s=e.faces,i=0;i<s.length;i++){var a=s[i];a.materialIndex!==n&&(n=a.materialIndex,void 0!==t&&(t.count=3*i-t.start,r.push(t)),t={start:3*i,materialIndex:n})}void 0!==t&&(t.count=3*i-t.start,r.push(t)),this.groups=r},fromGeometry:function(e){var t,n=e.faces,r=e.vertices,s=e.faceVertexUvs,i=s[0]&&s[0].length>0,a=s[1]&&s[1].length>0,o=e.morphTargets,l=o.length;if(l>0){t=[];for(var u=0;u<l;u++)t[u]=[];this.morphTargets.position=t}var c,h=e.morphNormals,d=h.length;if(d>0){for(c=[],u=0;u<d;u++)c[u]=[];this.morphTargets.normal=c}var p=e.skinIndices,f=e.skinWeights,m=p.length===r.length,g=f.length===r.length;for(u=0;u<n.length;u++){var y=n[u];this.vertices.push(r[y.a],r[y.b],r[y.c]);var b=y.vertexNormals;if(3===b.length)this.normals.push(b[0],b[1],b[2]);else{var v=y.normal;this.normals.push(v,v,v)}var x,w=y.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var k=y.color;this.colors.push(k,k,k)}!0===i&&(void 0!==(x=s[0][u])?this.uvs.push(x[0],x[1],x[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",u),this.uvs.push(new te.Vector2,new te.Vector2,new te.Vector2))),!0===a&&(void 0!==(x=s[1][u])?this.uvs2.push(x[0],x[1],x[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",u),this.uvs2.push(new te.Vector2,new te.Vector2,new te.Vector2)));for(var S=0;S<l;S++){var E=o[S].vertices;t[S].push(E[y.a],E[y.b],E[y.c])}for(S=0;S<d;S++){var I=h[S].vertexNormals[u];c[S].push(I.a,I.b,I.c)}m&&this.skinIndices.push(p[y.a],p[y.b],p[y.c]),g&&this.skinWeights.push(f[y.a],f[y.b],f[y.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},te.EventDispatcher.prototype.apply(te.DirectGeometry.prototype),te.BufferGeometry=function(){Object.defineProperty(this,"id",{value:te.GeometryIdCount++}),this.uuid=te.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}},te.BufferGeometry.prototype={constructor:te.BufferGeometry,getIndex:function(){return this.index},setIndex:function(e){this.index=e},addAttribute:function(e,t){return t instanceof te.BufferAttribute==0&&t instanceof te.InterleavedBufferAttribute==0?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(e,new te.BufferAttribute(arguments[1],arguments[2]))):"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(t)):void(this.attributes[e]=t)},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){delete this.attributes[e]},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0);var n=this.attributes.normal;void 0!==n&&((new te.Matrix3).getNormalMatrix(e).applyToVector3Array(n.array),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere()},rotateX:function(){var e;return function(t){return void 0===e&&(e=new te.Matrix4),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new te.Matrix4),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new te.Matrix4),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,n,r){return void 0===e&&(e=new te.Matrix4),e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,n,r){return void 0===e&&(e=new te.Matrix4),e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(t){void 0===e&&(e=new te.Object3D),e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},setFromObject:function(e){var t=e.geometry;if(e instanceof te.Points||e instanceof te.Line){var n=new te.Float32Attribute(3*t.vertices.length,3),r=new te.Float32Attribute(3*t.colors.length,3);if(this.addAttribute("position",n.copyVector3sArray(t.vertices)),this.addAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var s=new te.Float32Attribute(t.lineDistances.length,1);this.addAttribute("lineDistance",s.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e instanceof te.Mesh&&t instanceof te.Geometry&&this.fromGeometry(t);return this},updateFromObject:function(e){var t,n=e.geometry;if(e instanceof te.Mesh){var r=n.__directGeometry;if(void 0===r)return this.fromGeometry(n);r.verticesNeedUpdate=n.verticesNeedUpdate,r.normalsNeedUpdate=n.normalsNeedUpdate,r.colorsNeedUpdate=n.colorsNeedUpdate,r.uvsNeedUpdate=n.uvsNeedUpdate,r.groupsNeedUpdate=n.groupsNeedUpdate,n.verticesNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.groupsNeedUpdate=!1,n=r}return!0===n.verticesNeedUpdate&&(void 0!==(t=this.attributes.position)&&(t.copyVector3sArray(n.vertices),t.needsUpdate=!0),n.verticesNeedUpdate=!1),!0===n.normalsNeedUpdate&&(void 0!==(t=this.attributes.normal)&&(t.copyVector3sArray(n.normals),t.needsUpdate=!0),n.normalsNeedUpdate=!1),!0===n.colorsNeedUpdate&&(void 0!==(t=this.attributes.color)&&(t.copyColorsArray(n.colors),t.needsUpdate=!0),n.colorsNeedUpdate=!1),n.uvsNeedUpdate&&(void 0!==(t=this.attributes.uv)&&(t.copyVector2sArray(n.uvs),t.needsUpdate=!0),n.uvsNeedUpdate=!1),n.lineDistancesNeedUpdate&&(void 0!==(t=this.attributes.lineDistance)&&(t.copyArray(n.lineDistances),t.needsUpdate=!0),n.lineDistancesNeedUpdate=!1),n.groupsNeedUpdate&&(n.computeGroups(e.geometry),this.groups=n.groups,n.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new te.DirectGeometry).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);if(this.addAttribute("position",new te.BufferAttribute(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var n=new Float32Array(3*e.normals.length);this.addAttribute("normal",new te.BufferAttribute(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var r=new Float32Array(3*e.colors.length);this.addAttribute("color",new te.BufferAttribute(r,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var s=new Float32Array(2*e.uvs.length);this.addAttribute("uv",new te.BufferAttribute(s,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var i=new Float32Array(2*e.uvs2.length);this.addAttribute("uv2",new te.BufferAttribute(i,2).copyVector2sArray(e.uvs2))}if(e.indices.length>0){var a=new(e.vertices.length>65535?Uint32Array:Uint16Array)(3*e.indices.length);this.setIndex(new te.BufferAttribute(a,1).copyIndicesArray(e.indices))}for(var o in this.groups=e.groups,e.morphTargets){for(var l=[],u=e.morphTargets[o],c=0,h=u.length;c<h;c++){var d=u[c],p=new te.Float32Attribute(3*d.length,3);l.push(p.copyVector3sArray(d))}this.morphAttributes[o]=l}if(e.skinIndices.length>0){var f=new te.Float32Attribute(4*e.skinIndices.length,4);this.addAttribute("skinIndex",f.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var m=new te.Float32Attribute(4*e.skinWeights.length,4);this.addAttribute("skinWeight",m.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:(F=new te.Vector3,function(){null===this.boundingBox&&(this.boundingBox=new te.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox;t.makeEmpty();for(var n=0,r=e.length;n<r;n+=3)F.fromArray(e,n),t.expandByPoint(F)}void 0!==e&&0!==e.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}),computeBoundingSphere:function(){var e=new te.Box3,t=new te.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new te.Sphere);var n=this.attributes.position.array;if(n){e.makeEmpty();for(var r=this.boundingSphere.center,s=0,i=n.length;s<i;s+=3)t.fromArray(n,s),e.expandByPoint(t);e.center(r);var a=0;for(s=0,i=n.length;s<i;s+=3)t.fromArray(n,s),a=Math.max(a,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,n=this.groups;if(t.position){var r=t.position.array;if(void 0===t.normal)this.addAttribute("normal",new te.BufferAttribute(new Float32Array(r.length),3));else for(var s=t.normal.array,i=0,a=s.length;i<a;i++)s[i]=0;var o,l,u,c=t.normal.array,h=new te.Vector3,d=new te.Vector3,p=new te.Vector3,f=new te.Vector3,m=new te.Vector3;if(e){var g=e.array;0===n.length&&this.addGroup(0,g.length);for(var y=0,b=n.length;y<b;++y){var v=n[y],x=v.start;for(i=x,a=x+v.count;i<a;i+=3)o=3*g[i+0],l=3*g[i+1],u=3*g[i+2],h.fromArray(r,o),d.fromArray(r,l),p.fromArray(r,u),f.subVectors(p,d),m.subVectors(h,d),f.cross(m),c[o]+=f.x,c[o+1]+=f.y,c[o+2]+=f.z,c[l]+=f.x,c[l+1]+=f.y,c[l+2]+=f.z,c[u]+=f.x,c[u+1]+=f.y,c[u+2]+=f.z}}else for(i=0,a=r.length;i<a;i+=9)h.fromArray(r,i),d.fromArray(r,i+3),p.fromArray(r,i+6),f.subVectors(p,d),m.subVectors(h,d),f.cross(m),c[i]=f.x,c[i+1]=f.y,c[i+2]=f.z,c[i+3]=f.x,c[i+4]=f.y,c[i+5]=f.z,c[i+6]=f.x,c[i+7]=f.y,c[i+8]=f.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(e instanceof te.BufferGeometry!=0){void 0===t&&(t=0);var n=this.attributes;for(var r in n)if(void 0!==e.attributes[r])for(var s=n[r].array,i=e.attributes[r],a=i.array,o=0,l=i.itemSize*t;o<a.length;o++,l++)s[l]=a[o];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)},normalizeNormals:function(){for(var e,t,n,r,s=this.attributes.normal.array,i=0,a=s.length;i<a;i+=3)e=s[i],t=s[i+1],n=s[i+2],r=1/Math.sqrt(e*e+t*t+n*n),s[i]*=r,s[i+1]*=r,s[i+2]*=r},toJSON:function(){var e={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};var r=this.index;if(null!==r){var s=Array.prototype.slice.call(r.array);e.data.index={type:r.array.constructor.name,array:s}}var i=this.attributes;for(var n in i){var a=i[n];s=Array.prototype.slice.call(a.array),e.data.attributes[n]={itemSize:a.itemSize,type:a.array.constructor.name,array:s}}var o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));var l=this.boundingSphere;return null!==l&&(e.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),e},clone:function(){return(new te.BufferGeometry).copy(this)},copy:function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var n=e.attributes;for(var r in n){var s=n[r];this.addAttribute(r,s.clone())}for(var i=e.groups,a=0,o=i.length;a<o;a++){var l=i[a];this.addGroup(l.start,l.count)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},te.EventDispatcher.prototype.apply(te.BufferGeometry.prototype),te.BufferGeometry.MaxIndex=65535,te.InstancedBufferGeometry=function(){te.BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0},te.InstancedBufferGeometry.prototype=Object.create(te.BufferGeometry.prototype),te.InstancedBufferGeometry.prototype.constructor=te.InstancedBufferGeometry,te.InstancedBufferGeometry.prototype.addGroup=function(e,t,n){this.groups.push({start:e,count:t,instances:n})},te.InstancedBufferGeometry.prototype.copy=function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var n=e.attributes;for(var r in n){var s=n[r];this.addAttribute(r,s.clone())}for(var i=e.groups,a=0,o=i.length;a<o;a++){var l=i[a];this.addGroup(l.start,l.count,l.instances)}return this},te.EventDispatcher.prototype.apply(te.InstancedBufferGeometry.prototype),te.Uniform=function(e,t){this.type=e,this.value=t,this.dynamic=!1},te.Uniform.prototype={constructor:te.Uniform,onUpdate:function(e){return this.dynamic=!0,this.onUpdateCallback=e,this}},te.AnimationClip=function(e,t,n){this.name=e||te.Math.generateUUID(),this.tracks=n,this.duration=void 0!==t?t:-1,this.duration<0&&this.resetDuration(),this.trim(),this.optimize()},te.AnimationClip.prototype={constructor:te.AnimationClip,resetDuration:function(){for(var e=0,t=0,n=this.tracks.length;t!==n;++t){var r=this.tracks[t];e=Math.max(e,r.times[r.times.length-1])}this.duration=e},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}},Object.assign(te.AnimationClip,{parse:function(e){for(var t=[],n=e.tracks,r=1/(e.fps||1),s=0,i=n.length;s!==i;++s)t.push(te.KeyframeTrack.parse(n[s]).scale(r));return new te.AnimationClip(e.name,e.duration,t)},toJSON:function(e){for(var t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t},s=0,i=n.length;s!==i;++s)t.push(te.KeyframeTrack.toJSON(n[s]));return r},CreateFromMorphTargetSequence:function(e,t,n){for(var r=t.length,s=[],i=0;i<r;i++){var a=[],o=[];a.push((i+r-1)%r,i,(i+1)%r),o.push(0,1,0);var l=te.AnimationUtils.getKeyframeOrder(a);a=te.AnimationUtils.sortedArray(a,1,l),o=te.AnimationUtils.sortedArray(o,1,l),0===a[0]&&(a.push(r),o.push(o[0])),s.push(new te.NumberKeyframeTrack(".morphTargetInfluences["+t[i].name+"]",a,o).scale(1/n))}return new te.AnimationClip(e,-1,s)},findByName:function(e,t){for(var n=0;n<e.length;n++)if(e[n].name===t)return e[n];return null},CreateClipsFromMorphTargetSequences:function(e,t){for(var n={},r=/^([\w-]*?)([\d]+)$/,s=0,i=e.length;s<i;s++){var a=e[s],o=a.name.match(r);if(o&&o.length>1){var l=n[c=o[1]];l||(n[c]=l=[]),l.push(a)}}var u=[];for(var c in n)u.push(te.AnimationClip.CreateFromMorphTargetSequence(c,n[c],t));return u},parseAnimation:function(e,t,n){if(!e)return console.error("  no animation in JSONLoader data"),null;for(var r=function(e,t,n,r,s){if(0!==n.length){var i=[],a=[];te.AnimationUtils.flattenJSON(n,i,a,r),0!==i.length&&s.push(new e(t,i,a))}},s=[],i=e.name||"default",a=e.length||-1,o=e.fps||30,l=e.hierarchy||[],u=0;u<l.length;u++){var c=l[u].keys;if(c&&0!=c.length)if(c[0].morphTargets){for(var h={},d=0;d<c.length;d++)if(c[d].morphTargets)for(var p=0;p<c[d].morphTargets.length;p++)h[c[d].morphTargets[p]]=-1;for(var f in h){var m=[],g=[];for(p=0;p!==c[d].morphTargets.length;++p){var y=c[d];m.push(y.time),g.push(y.morphTarget===f?1:0)}s.push(new te.NumberKeyframeTrack(".morphTargetInfluence["+f+"]",m,g))}a=h.length*(o||1)}else{var b=".bones["+t[u].name+"]";r(te.VectorKeyframeTrack,b+".position",c,"pos",s),r(te.QuaternionKeyframeTrack,b+".quaternion",c,"rot",s),r(te.VectorKeyframeTrack,b+".scale",c,"scl",s)}}return 0===s.length?null:new te.AnimationClip(i,a,s)}}),te.AnimationMixer=function(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1},te.AnimationMixer.prototype={constructor:te.AnimationMixer,clipAction:function(e,t){var n,r=(t||this._root).uuid,s="string"==typeof e?e:e.name,i=e!==s?e:null,a=this._actionsByClip[s];if(void 0!==a){var o=a.actionByRoot[r];if(void 0!==o)return o;if(i=(n=a.knownActions[0])._clip,e!==s&&e!==i)throw new Error("Different clips with the same name detected!")}if(null===i)return null;var l=new te.AnimationMixer._Action(this,i,t);return this._bindAction(l,n),this._addInactiveAction(l,s,r),l},existingAction:function(e,t){var n=(t||this._root).uuid,r="string"==typeof e?e:e.name,s=this._actionsByClip[r];return void 0!==s&&s.actionByRoot[n]||null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,n=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var s=0;s!==t;++s)e[s].reset();for(s=0;s!==r;++s)n[s].useCount=0;return this},update:function(e){e*=this.timeScale;for(var t=this._actions,n=this._nActiveActions,r=this.time+=e,s=Math.sign(e),i=this._accuIndex^=1,a=0;a!==n;++a){var o=t[a];o.enabled&&o._update(r,e,s,i)}var l=this._bindings,u=this._nActiveBindings;for(a=0;a!==u;++a)l[a].apply(i);return this},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,n=e.name,r=this._actionsByClip,s=r[n];if(void 0!==s){for(var i=s.knownActions,a=0,o=i.length;a!==o;++a){var l=i[a];this._deactivateAction(l);var u=l._cacheIndex,c=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,c._cacheIndex=u,t[u]=c,t.pop(),this._removeInactiveBindingsForAction(l)}delete r[n]}},uncacheRoot:function(e){var t=e.uuid,n=this._actionsByClip;for(var r in n){var s=n[r].actionByRoot[t];void 0!==s&&(this._deactivateAction(s),this._removeInactiveAction(s))}var i=this._bindingsByRootAndName[t];if(void 0!==i)for(var a in i){var o=i[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}},uncacheAction:function(e,t){var n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}},te.EventDispatcher.prototype.apply(te.AnimationMixer.prototype),te.AnimationMixer._Action=function(e,t,n){this._mixer=e,this._clip=t,this._localRoot=n||null;for(var r=t.tracks,s=r.length,i=new Array(s),a={endingStart:te.ZeroCurvatureEnding,endingEnd:te.ZeroCurvatureEnding},o=0;o!==s;++o){var l=r[o].createInterpolant(null);i[o]=l,l.settings=a}this._interpolantSettings=a,this._interpolants=i,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=te.LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0},te.AnimationMixer._Action.prototype={constructor:te.AnimationMixer._Action,play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this._startTime,this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,n){if(this._mixer,e.fadeOut(t),this.fadeIn(t),n){var r=this._clip.duration,s=e._clip.duration,i=s/r,a=r/s;e.warp(1,i,t),this.warp(a,1,t)}return this},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n)},stopFading:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._currentTimeScale,0,e)},warp:function(e,t,n){var r=this._mixer,s=r.time,i=this._timeScaleInterpolant,a=this.timeScale;null===i&&(i=r._lendControlInterpolant(),this._timeScaleInterpolant=i);var o=i.parameterPositions,l=i.sampleValues;return o[0]=s,o[1]=s+n,l[0]=e/a,l[1]=t/a,this},stopWarping:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,n,r){var s=this._startTime;if(null!==s){var i=(e-s)*n;if(i<0||0===n)return;this._startTime=null,t=n*i}t*=this._updateTimeScale(e);var a=this._updateTime(t),o=this._updateWeight(e);if(o>0)for(var l=this._interpolants,u=this._propertyBindings,c=0,h=l.length;c!==h;++c)l[c].evaluate(a),u[c].accumulate(r,o)},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(null!==n){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;null!==n&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.pause=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t},_updateTime:function(e){var t=this.time+e;if(0===e)return t;var n=this._clip.duration,r=this.loop,s=this._loopCount,i=!1;switch(r){case te.LoopOnce:case te.LoopOnceClamp:if(-1===s&&(this.loopCount=0,this._setEndings(!0,!0,!1)),t>=n)t=n;else{if(!(t<0))break;t=0}this.clampWhenFinished?this.pause=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1});break;case te.LoopPingPong:i=!0;case te.LoopRepeat:if(-1===s&&(e>0?(s=0,this._setEndings(!0,0===this.repetitions,i)):this._setEndings(0===this.repetitions,!0,i)),t>=n||t<0){var a=Math.floor(t/n);t-=n*a,s+=Math.abs(a);var o=this.repetitions-s;if(o<0){this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?n:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});break}if(0===o){var l=e<0;this._setEndings(l,!l,i)}else this._setEndings(!1,!1,i);this._loopCount=s,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}if(r===te.LoopPingPong&&1==(1&s))return this.time=t,n-t}return this.time=t,t},_setEndings:function(e,t,n){var r=this._interpolantSettings;n?(r.endingStart=te.ZeroSlopeEnding,r.endingEnd=te.ZeroSlopeEnding):(r.endingStart=e?this.zeroSlopeAtStart?te.ZeroSlopeEnding:te.ZeroCurvatureEnding:te.WrapAroundEnding,r.endingEnd=t?this.zeroSlopeAtEnd?te.ZeroSlopeEnding:te.ZeroCurvatureEnding:te.WrapAroundEnding)},_scheduleFading:function(e,t,n){var r=this._mixer,s=r.time,i=this._weightInterpolant;null===i&&(i=r._lendControlInterpolant(),this._weightInterpolant=i);var a=i.parameterPositions,o=i.sampleValues;return a[0]=s,o[0]=t,a[1]=s+e,o[1]=n,this}},Object.assign(te.AnimationMixer.prototype,{_bindAction:function(e,t){var n=e._localRoot||this._root,r=e._clip.tracks,s=r.length,i=e._propertyBindings,a=e._interpolants,o=n.uuid,l=this._bindingsByRootAndName,u=l[o];void 0===u&&(u={},l[o]=u);for(var c=0;c!==s;++c){var h=r[c],d=h.name,p=u[d];if(void 0!==p)i[c]=p;else{if(void 0!==(p=i[c])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,o,d));continue}var f=t&&t._propertyBindings[c].binding.parsedPath;++(p=new te.PropertyMixer(te.PropertyBinding.create(n,d,f),h.ValueTypeName,h.getValueSize())).referenceCount,this._addInactiveBinding(p,o,d),i[c]=p}a[c].resultBuffer=p.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var t=(e._localRoot||this._root).uuid,n=e._clip.name,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}for(var s=e._propertyBindings,i=0,a=s.length;i!==a;++i){var o=s[i];0==o.useCount++&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var s=t[n];0==--s.useCount&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){var r=this._actions,s=this._actionsByClip,i=s[t];if(void 0===i)i={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=i;else{var a=i.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=r.length,r.push(e),i.actionByRoot[n]=e},_removeInactiveAction:function(e){var t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;var s=e._clip.name,i=this._actionsByClip,a=i[s],o=a.knownActions,l=o[o.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),e._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete i[s],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var s=t[n];0==--s.referenceCount&&this._removeInactiveBinding(s)}},_lendAction:function(e){var t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s},_takeBackAction:function(e){var t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s},_addInactiveBinding:function(e,t,n){var r=this._bindingsByRootAndName,s=r[t],i=this._bindings;void 0===s&&(s={},r[t]=s),s[n]=e,e._cacheIndex=i.length,i.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,n=e.binding,r=n.rootNode.uuid,s=n.path,i=this._bindingsByRootAndName,a=i[r],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete a[s];e:{for(var u in a)break e;delete i[r]}},_lendBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s},_takeBackBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return void 0===n&&((n=new te.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=t[r];e.__cacheIndex=r,t[r]=e,s.__cacheIndex=n,t[n]=s},_controlInterpolantsResultBuffer:new Float32Array(1)}),te.AnimationObjectGroup=function(e){this.uuid=te.Math.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var n=0,r=arguments.length;n!==r;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var s=this;this.stats={objects:{get total(){return s._objects.length},get inUse(){return this.total-s.nCachedObjects_}},get bindingsPerObject(){return s._bindings.length}}},te.AnimationObjectGroup.prototype={constructor:te.AnimationObjectGroup,add:function(e){for(var t=this._objects,n=t.length,r=this.nCachedObjects_,s=this._indicesByUUID,i=this._paths,a=this._parsedPaths,o=this._bindings,l=o.length,u=0,c=arguments.length;u!==c;++u){var h=arguments[u],d=h.uuid,p=s[d];if(void 0===p){p=n++,s[d]=p,t.push(h);for(var f=0,m=l;f!==m;++f)o[f].push(new te.PropertyBinding(h,i[f],a[f]))}else if(p<r){var g=t[p],y=--r,b=t[y];for(s[b.uuid]=p,t[p]=b,s[d]=y,t[y]=h,f=0,m=l;f!==m;++f){var v=o[f],x=v[y],w=v[p];v[p]=x,void 0===w&&(w=new te.PropertyBinding(h,i[f],a[f])),v[y]=w}}else t[p]!==g&&console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")}this.nCachedObjects_=r},remove:function(e){for(var t=this._objects,n=(t.length,this.nCachedObjects_),r=this._indicesByUUID,s=this._bindings,i=s.length,a=0,o=arguments.length;a!==o;++a){var l=arguments[a],u=l.uuid,c=r[u];if(void 0!==c&&c>=n){var h=n++,d=t[h];r[d.uuid]=c,t[c]=d,r[u]=h,t[h]=l;for(var p=0,f=i;p!==f;++p){var m=s[p],g=m[h],y=m[c];m[c]=g,m[h]=y}}}this.nCachedObjects_=n},uncache:function(e){for(var t=this._objects,n=t.length,r=this.nCachedObjects_,s=this._indicesByUUID,i=this._bindings,a=i.length,o=0,l=arguments.length;o!==l;++o){var u=arguments[o].uuid,c=s[u];if(void 0!==c)if(delete s[u],c<r){var h=--r,d=t[h],p=t[b=--n];s[d.uuid]=c,t[c]=d,s[p.uuid]=h,t[h]=p,t.pop();for(var f=0,m=a;f!==m;++f){var g=(v=i[f])[h],y=v[b];v[c]=g,v[h]=y,v.pop()}}else{var b;for(s[(p=t[b=--n]).uuid]=c,t[c]=p,t.pop(),f=0,m=a;f!==m;++f){var v;(v=i[f])[c]=v[b],v.pop()}}}this.nCachedObjects_=r},subscribe_:function(e,t){var n=this._bindingsIndicesByPath,r=n[e],s=this._bindings;if(void 0!==r)return s[r];var i=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,u=this.nCachedObjects_,c=new Array(l);r=s.length,n[e]=r,i.push(e),a.push(t),s.push(c);for(var h=u,d=o.length;h!==d;++h){var p=o[h];c[h]=new te.PropertyBinding(p,e,t)}return c},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){var r=this._paths,s=this._parsedPaths,i=this._bindings,a=i.length-1,o=i[a];t[e[a]]=n,i[n]=o,i.pop(),s[n]=s[a],s.pop(),r[n]=r[a],r.pop()}}},te.AnimationUtils={arraySlice:function(e,t,n){return te.AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,n)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){for(var t=e.length,n=new Array(t),r=0;r!==t;++r)n[r]=r;return n.sort((function(t,n){return e[t]-e[n]})),n},sortedArray:function(e,t,n){for(var r=e.length,s=new e.constructor(r),i=0,a=0;a!==r;++i)for(var o=n[i]*t,l=0;l!==t;++l)s[a++]=e[o+l];return s},flattenJSON:function(e,t,n,r){for(var s=1,i=e[0];void 0!==i&&void 0===i[r];)i=e[s++];if(void 0!==i){var a=i[r];if(void 0!==a)if(Array.isArray(a))do{void 0!==(a=i[r])&&(t.push(i.time),n.push.apply(n,a)),i=e[s++]}while(void 0!==i);else if(void 0!==a.toArray)do{void 0!==(a=i[r])&&(t.push(i.time),a.toArray(n,n.length)),i=e[s++]}while(void 0!==i);else do{void 0!==(a=i[r])&&(t.push(i.time),n.push(a)),i=e[s++]}while(void 0!==i)}}},te.KeyframeTrack=function(e,t,n,r){if(void 0===e)throw new Error("track name is undefined");if(void 0===t||0===t.length)throw new Error("no keyframes in track named "+e);this.name=e,this.times=te.AnimationUtils.convertArray(t,this.TimeBufferType),this.values=te.AnimationUtils.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation),this.validate(),this.optimize()},te.KeyframeTrack.prototype={constructor:te.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:te.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(e){return new te.DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new te.LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new te.CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t=void 0;switch(e){case te.InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case te.InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case te.InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth}if(void 0!==t)this.createInterpolant=t;else{var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}console.warn(n)}},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return te.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return te.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return te.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]+=e;return this},scale:function(e){if(1!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]*=e;return this},trim:function(e,t){for(var n=this.times,r=n.length,s=0,i=1;i!==r;++i)n[i]<=e&&++s;var a=0;for(i=r-2;0!==i&&n[i]>=t;--i)++a;if(s+a!==0){var o=s,l=r-a-s;this.times=te.AnimationUtils.arraySlice(n,o,l);var u=this.values,c=this.getValueSize();this.values=te.AnimationUtils.arraySlice(u,o*c,l*c)}return this},validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("invalid value size in track",this),e=!1);var n=this.times,r=this.values,s=n.length;0===s&&(console.error("track is empty",this),e=!1);for(var i=null,a=0;a!==s;a++){var o=n[a];if("number"==typeof o&&isNaN(o)){console.error("time is not a valid number",this,a,o),e=!1;break}if(null!==i&&i>o){console.error("out of order keys",this,a,o,i),e=!1;break}i=o}if(void 0!==r&&te.AnimationUtils.isTypedArray(r)){a=0;for(var l=r.length;a!==l;++a){var u=r[a];if(isNaN(u)){console.error("value is not a valid number",this,a,u),e=!1;break}}}return e},optimize:function(){for(var e=this.times,t=this.values,n=this.getValueSize(),r=1,s=1,i=e.length-1;s<=i;++s){var a=!1,o=e[s];if(o!==e[s+1]&&(1!==s||o!==o[0]))for(var l=s*n,u=l-n,c=l+n,h=0;h!==n;++h){var d=t[l+h];if(d!==t[u+h]||d!==t[c+h]){a=!0;break}}if(a){if(s!==r){e[r]=e[s];var p=s*n,f=r*n;for(h=0;h!==n;++h)t[f+h]=t[p+h]}++r}}return r!==e.length&&(this.times=te.AnimationUtils.arraySlice(e,0,r),this.values=te.AnimationUtils.arraySlice(t,0,r*n)),this}},Object.assign(te.KeyframeTrack,{parse:function(e){if(void 0===e.type)throw new Error("track type undefined, can not parse");var t=te.KeyframeTrack._getTrackTypeForValueTypeName(e.type);if(void 0===e.times){console.warn("legacy JSON format detected, converting");var n=[],r=[];te.AnimationUtils.flattenJSON(e.keys,n,r,"value"),e.times=n,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)},toJSON:function(e){var t,n=e.constructor;if(void 0!==n.toJSON)t=n.toJSON(e);else{t={name:e.name,times:te.AnimationUtils.convertArray(e.times,Array),values:te.AnimationUtils.convertArray(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(t.interpolation=r)}return t.type=e.ValueTypeName,t},_getTrackTypeForValueTypeName:function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return te.NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return te.VectorKeyframeTrack;case"color":return te.ColorKeyframeTrack;case"quaternion":return te.QuaternionKeyframeTrack;case"bool":case"boolean":return te.BooleanKeyframeTrack;case"string":return te.StringKeyframeTrack}throw new Error("Unsupported typeName: "+e)}}),te.PropertyBinding=function(e,t,n){this.path=t,this.parsedPath=n||te.PropertyBinding.parseTrackName(t),this.node=te.PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e},te.PropertyBinding.prototype={constructor:te.PropertyBinding,getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){var e=this.node,t=this.parsedPath,n=t.objectName,r=t.propertyName,s=t.propertyIndex;if(e||(e=te.PropertyBinding.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,e){if(n){var i=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("  can not bind to material as node does not have a material",this);if(!e.material.materials)return void console.error("  can not bind to material.materials as node.material does not have a materials array",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("  can not bind to bones as node does not have a skeleton",this);e=e.skeleton.bones;for(var a=0;a<e.length;a++)if(e[a].name===i){i=a;break}break;default:if(void 0===e[n])return void console.error("  can not bind to objectName of node, undefined",this);e=e[n]}if(void 0!==i){if(void 0===e[i])return void console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,e);e=e[i]}}var o=e[r];if(o){var l=this.Versioning.None;void 0!==e.needsUpdate?(l=this.Versioning.NeedsUpdate,this.targetObject=e):void 0!==e.matrixWorldNeedsUpdate&&(l=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=e);var u=this.BindingType.Direct;if(void 0!==s){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this);if(!e.geometry.morphTargets)return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);for(a=0;a<this.node.geometry.morphTargets.length;a++)if(e.geometry.morphTargets[a].name===s){s=a;break}}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else void 0!==o.fromArray&&void 0!==o.toArray?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):void 0!==o.length?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][l]}else{var c=t.nodeName;console.error("  trying to update property for track: "+c+"."+r+" but it wasn't found.",e)}}else console.error("  trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}},Object.assign(te.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:te.PropertyBinding.prototype.getValue,_setValue_unbound:te.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){for(var n=this.resolvedProperty,r=0,s=n.length;r!==s;++r)e[t++]=n[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.node[this.propertyName]=e[t]},function(e,t){this.node[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.node[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){for(var n=this.resolvedProperty,r=0,s=n.length;r!==s;++r)n[r]=e[t++]},function(e,t){for(var n=this.resolvedProperty,r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){for(var n=this.resolvedProperty,r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]]}),te.PropertyBinding.Composite=function(e,t,n){var r=n||te.PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)},te.PropertyBinding.Composite.prototype={constructor:te.PropertyBinding.Composite,getValue:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)},setValue:function(e,t){for(var n=this._bindings,r=this._targetGroup.nCachedObjects_,s=n.length;r!==s;++r)n[r].setValue(e,t)},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},te.PropertyBinding.create=function(e,t,n){return e instanceof te.AnimationObjectGroup?new te.PropertyBinding.Composite(e,t,n):new te.PropertyBinding(e,t,n)},te.PropertyBinding.parseTrackName=function(e){var t=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_. ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,n=t.exec(e);if(!n)throw new Error("cannot parse trackName at all: "+e);n.index===t.lastIndex&&t.lastIndex++;var r={nodeName:n[3],objectName:n[5],objectIndex:n[7],propertyName:n[9],propertyIndex:n[11]};if(null===r.propertyName||0===r.propertyName.length)throw new Error("can not parse propertyName from trackName: "+e);return r},te.PropertyBinding.findNode=function(e,t){if(!t||""===t||"root"===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=function(e){for(var n=0;n<e.bones.length;n++){var r=e.bones[n];if(r.name===t)return r}return null}(e.skeleton);if(n)return n}if(e.children){var r=function(e){for(var n=0;n<e.length;n++){var s=e[n];if(s.name===t||s.uuid===t)return s;var i=r(s.children);if(i)return i}return null},s=r(e.children);if(s)return s}return null},te.PropertyMixer=function(e,t,n){this.binding=e,this.valueSize=n;var r,s=Float64Array;switch(t){case"quaternion":r=this._slerp;break;case"string":case"bool":s=Array,r=this._select;break;default:r=this._lerp}this.buffer=new s(4*n),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0},te.PropertyMixer.prototype={constructor:te.PropertyMixer,accumulate:function(e,t){var n=this.buffer,r=this.valueSize,s=e*r+r,i=this.cumulativeWeight;if(0===i){for(var a=0;a!==r;++a)n[s+a]=n[a];i=t}else{var o=t/(i+=t);this._mixBufferRegion(n,s,0,o,r)}this.cumulativeWeight=i},apply:function(e){var t=this.valueSize,n=this.buffer,r=e*t+t,s=this.cumulativeWeight,i=this.binding;if(this.cumulativeWeight=0,s<1){var a=3*t;this._mixBufferRegion(n,r,a,1-s,t)}for(var o=t,l=t+t;o!==l;++o)if(n[o]!==n[o+t]){i.setValue(n,r);break}},saveOriginalState:function(){var e=this.binding,t=this.buffer,n=this.valueSize,r=3*n;e.getValue(t,r);for(var s=n,i=r;s!==i;++s)t[s]=t[r+s%n];this.cumulativeWeight=0},restoreOriginalState:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_select:function(e,t,n,r,s){if(r>=.5)for(var i=0;i!==s;++i)e[t+i]=e[n+i]},_slerp:function(e,t,n,r,s){te.Quaternion.slerpFlat(e,t,e,t,e,n,r)},_lerp:function(e,t,n,r,s){for(var i=1-r,a=0;a!==s;++a){var o=t+a;e[o]=e[o]*i+e[n+a]*r}}},te.BooleanKeyframeTrack=function(e,t,n){te.KeyframeTrack.call(this,e,t,n)},te.BooleanKeyframeTrack.prototype=Object.assign(Object.create(te.KeyframeTrack.prototype),{constructor:te.BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:te.IntepolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),te.NumberKeyframeTrack=function(e,t,n,r){te.KeyframeTrack.call(this,e,t,n,r)},te.NumberKeyframeTrack.prototype=Object.assign(Object.create(te.KeyframeTrack.prototype),{constructor:te.NumberKeyframeTrack,ValueTypeName:"number"}),te.QuaternionKeyframeTrack=function(e,t,n,r){te.KeyframeTrack.call(this,e,t,n,r)},te.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(te.KeyframeTrack.prototype),{constructor:te.QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:te.InterpolateLinear,InterpolantFactoryMethodLinear:function(e){return new te.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),te.StringKeyframeTrack=function(e,t,n,r){te.KeyframeTrack.call(this,e,t,n,r)},te.StringKeyframeTrack.prototype=Object.assign(Object.create(te.KeyframeTrack.prototype),{constructor:te.StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:te.IntepolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),te.VectorKeyframeTrack=function(e,t,n,r){te.KeyframeTrack.call(this,e,t,n,r)},te.VectorKeyframeTrack.prototype=Object.assign(Object.create(te.KeyframeTrack.prototype),{constructor:te.VectorKeyframeTrack,ValueTypeName:"vector"}),te.Audio=function(e){te.Object3D.call(this),this.type="Audio",this.context=e.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filter=null},te.Audio.prototype=Object.create(te.Object3D.prototype),te.Audio.prototype.constructor=te.Audio,te.Audio.prototype.getOutput=function(){return this.gain},te.Audio.prototype.load=function(e){var t=new te.AudioBuffer(this.context);return t.load(e),this.setBuffer(t),this},te.Audio.prototype.setNodeSource=function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},te.Audio.prototype.setBuffer=function(e){var t=this;return e.onReady((function(e){t.source.buffer=e,t.sourceType="buffer",t.autoplay&&t.play()})),this},te.Audio.prototype.play=function(){if(!0!==this.isPlaying)if(!1!==this.hasPlaybackControl){var e=this.context.createBufferSource();e.buffer=this.source.buffer,e.loop=this.source.loop,e.onended=this.source.onended,e.start(0,this.startTime),e.playbackRate.value=this.playbackRate,this.isPlaying=!0,this.source=e,this.connect()}else console.warn("THREE.Audio: this Audio has no playback control.");else console.warn("THREE.Audio: Audio is already playing.")},te.Audio.prototype.pause=function(){!1!==this.hasPlaybackControl?(this.source.stop(),this.startTime=this.context.currentTime):console.warn("THREE.Audio: this Audio has no playback control.")},te.Audio.prototype.stop=function(){!1!==this.hasPlaybackControl?(this.source.stop(),this.startTime=0):console.warn("THREE.Audio: this Audio has no playback control.")},te.Audio.prototype.connect=function(){null!==this.filter?(this.source.connect(this.filter),this.filter.connect(this.getOutput())):this.source.connect(this.getOutput())},te.Audio.prototype.disconnect=function(){null!==this.filter?(this.source.disconnect(this.filter),this.filter.disconnect(this.getOutput())):this.source.disconnect(this.getOutput())},te.Audio.prototype.getFilter=function(){return this.filter},te.Audio.prototype.setFilter=function(e){void 0===e&&(e=null),!0===this.isPlaying?(this.disconnect(),this.filter=e,this.connect()):this.filter=e},te.Audio.prototype.setPlaybackRate=function(e){!1!==this.hasPlaybackControl?(this.playbackRate=e,!0===this.isPlaying&&(this.source.playbackRate.value=this.playbackRate)):console.warn("THREE.Audio: this Audio has no playback control.")},te.Audio.prototype.getPlaybackRate=function(){return this.playbackRate},te.Audio.prototype.onEnded=function(){this.isPlaying=!1},te.Audio.prototype.setLoop=function(e){!1!==this.hasPlaybackControl?this.source.loop=e:console.warn("THREE.Audio: this Audio has no playback control.")},te.Audio.prototype.getLoop=function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.source.loop},te.Audio.prototype.setVolume=function(e){this.gain.gain.value=e},te.Audio.prototype.getVolume=function(){return this.gain.gain.value},te.AudioAnalyser=function(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0!==t?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)},te.AudioAnalyser.prototype={constructor:te.AudioAnalyser,getData:function(){return this.analyser.getByteFrequencyData(this.data),this.data}},te.AudioBuffer=function(e){this.context=e,this.ready=!1,this.readyCallbacks=[]},te.AudioBuffer.prototype.load=function(e){var t=this,n=new XMLHttpRequest;return n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=function(e){t.context.decodeAudioData(this.response,(function(e){t.buffer=e,t.ready=!0;for(var n=0;n<t.readyCallbacks.length;n++)t.readyCallbacks[n](t.buffer);t.readyCallbacks=[]}))},n.send(),this},te.AudioBuffer.prototype.onReady=function(e){this.ready?e(this.buffer):this.readyCallbacks.push(e)},te.PositionalAudio=function(e){te.Audio.call(this,e),this.panner=this.context.createPanner(),this.panner.connect(this.gain)},te.PositionalAudio.prototype=Object.create(te.Audio.prototype),te.PositionalAudio.prototype.constructor=te.PositionalAudio,te.PositionalAudio.prototype.getOutput=function(){return this.panner},te.PositionalAudio.prototype.setRefDistance=function(e){this.panner.refDistance=e},te.PositionalAudio.prototype.getRefDistance=function(){return this.panner.refDistance},te.PositionalAudio.prototype.setRolloffFactor=function(e){this.panner.rolloffFactor=e},te.PositionalAudio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor},te.PositionalAudio.prototype.setDistanceModel=function(e){this.panner.distanceModel=e},te.PositionalAudio.prototype.getDistanceModel=function(){return this.panner.distanceModel},te.PositionalAudio.prototype.setMaxDistance=function(e){this.panner.maxDistance=e},te.PositionalAudio.prototype.getMaxDistance=function(){return this.panner.maxDistance},te.PositionalAudio.prototype.updateMatrixWorld=function(){var e=new te.Vector3;return function(t){te.Object3D.prototype.updateMatrixWorld.call(this,t),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}(),te.AudioListener=function(){te.Object3D.call(this),this.type="AudioListener",this.context=new(window.AudioContext||window.webkitAudioContext),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null},te.AudioListener.prototype=Object.create(te.Object3D.prototype),te.AudioListener.prototype.constructor=te.AudioListener,te.AudioListener.prototype.getInput=function(){return this.gain},te.AudioListener.prototype.removeFilter=function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},te.AudioListener.prototype.setFilter=function(e){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},te.AudioListener.prototype.getFilter=function(){return this.filter},te.AudioListener.prototype.setMasterVolume=function(e){this.gain.gain.value=e},te.AudioListener.prototype.getMasterVolume=function(){return this.gain.gain.value},te.AudioListener.prototype.updateMatrixWorld=function(){var e=new te.Vector3,t=new te.Quaternion,n=new te.Vector3,r=new te.Vector3;return function(s){te.Object3D.prototype.updateMatrixWorld.call(this,s);var i=this.context.listener,a=this.up;this.matrixWorld.decompose(e,t,n),r.set(0,0,-1).applyQuaternion(t),i.setPosition(e.x,e.y,e.z),i.setOrientation(r.x,r.y,r.z,a.x,a.y,a.z)}}(),te.Camera=function(){te.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new te.Matrix4,this.projectionMatrix=new te.Matrix4},te.Camera.prototype=Object.create(te.Object3D.prototype),te.Camera.prototype.constructor=te.Camera,te.Camera.prototype.getWorldDirection=function(){var e=new te.Quaternion;return function(t){var n=t||new te.Vector3;return this.getWorldQuaternion(e),n.set(0,0,-1).applyQuaternion(e)}}(),te.Camera.prototype.lookAt=function(){var e=new te.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),te.Camera.prototype.clone=function(){return(new this.constructor).copy(this)},te.Camera.prototype.copy=function(e){return te.Object3D.prototype.copy.call(this,e),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},te.CubeCamera=function(e,t,n){te.Object3D.call(this),this.type="CubeCamera";var r=90,s=new te.PerspectiveCamera(r,1,e,t);s.up.set(0,-1,0),s.lookAt(new te.Vector3(1,0,0)),this.add(s);var i=new te.PerspectiveCamera(r,1,e,t);i.up.set(0,-1,0),i.lookAt(new te.Vector3(-1,0,0)),this.add(i);var a=new te.PerspectiveCamera(r,1,e,t);a.up.set(0,0,1),a.lookAt(new te.Vector3(0,1,0)),this.add(a);var o=new te.PerspectiveCamera(r,1,e,t);o.up.set(0,0,-1),o.lookAt(new te.Vector3(0,-1,0)),this.add(o);var l=new te.PerspectiveCamera(r,1,e,t);l.up.set(0,-1,0),l.lookAt(new te.Vector3(0,0,1)),this.add(l);var u=new te.PerspectiveCamera(r,1,e,t);u.up.set(0,-1,0),u.lookAt(new te.Vector3(0,0,-1)),this.add(u);var c={format:te.RGBFormat,magFilter:te.LinearFilter,minFilter:te.LinearFilter};this.renderTarget=new te.WebGLRenderTargetCube(n,n,c),this.updateCubeMap=function(e,t){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,r=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,n.activeCubeFace=0,e.render(t,s,n),n.activeCubeFace=1,e.render(t,i,n),n.activeCubeFace=2,e.render(t,a,n),n.activeCubeFace=3,e.render(t,o,n),n.activeCubeFace=4,e.render(t,l,n),n.texture.generateMipmaps=r,n.activeCubeFace=5,e.render(t,u,n),e.setRenderTarget(null)}},te.CubeCamera.prototype=Object.create(te.Object3D.prototype),te.CubeCamera.prototype.constructor=te.CubeCamera,te.OrthographicCamera=function(e,t,n,r,s,i){te.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=void 0!==s?s:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},te.OrthographicCamera.prototype=Object.create(te.Camera.prototype),te.OrthographicCamera.prototype.constructor=te.OrthographicCamera,te.OrthographicCamera.prototype.updateProjectionMatrix=function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(n-e,n+e,r+t,r-t,this.near,this.far)},te.OrthographicCamera.prototype.copy=function(e){return te.Camera.prototype.copy.call(this,e),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this},te.OrthographicCamera.prototype.toJSON=function(e){var t=te.Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,t},te.PerspectiveCamera=function(e,t,n,r){te.Camera.call(this),this.type="PerspectiveCamera",this.zoom=1,this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==n?n:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},te.PerspectiveCamera.prototype=Object.create(te.Camera.prototype),te.PerspectiveCamera.prototype.constructor=te.PerspectiveCamera,te.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*te.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},te.PerspectiveCamera.prototype.setViewOffset=function(e,t,n,r,s,i){this.fullWidth=e,this.fullHeight=t,this.x=n,this.y=r,this.width=s,this.height=i,this.updateProjectionMatrix()},te.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var e=te.Math.radToDeg(2*Math.atan(Math.tan(.5*te.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var t=this.fullWidth/this.fullHeight,n=Math.tan(te.Math.degToRad(.5*e))*this.near,r=-n,s=t*r,i=t*n,a=Math.abs(i-s),o=Math.abs(n-r);this.projectionMatrix.makeFrustum(s+this.x*a/this.fullWidth,s+(this.x+this.width)*a/this.fullWidth,n-(this.y+this.height)*o/this.fullHeight,n-this.y*o/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(e,this.aspect,this.near,this.far)},te.PerspectiveCamera.prototype.copy=function(e){return te.Camera.prototype.copy.call(this,e),this.fov=e.fov,this.aspect=e.aspect,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this},te.PerspectiveCamera.prototype.toJSON=function(e){var t=te.Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.fov=this.fov,t.object.aspect=this.aspect,t.object.near=this.near,t.object.far=this.far,t},te.StereoCamera=function(e,t,n,r){te.PerspectiveCamera.call(this,e,t,n,r),this.type="StereoCamera",this.focalLength=125,this.cameraL=new te.PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new te.PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1},te.StereoCamera.prototype=Object.create(te.PerspectiveCamera.prototype),te.StereoCamera.prototype.constructor=te.StereoCamera,te.StereoCamera.prototype.updateMatrixWorld=(U=new te.Matrix4,H=new te.Matrix4,function(e){if(te.Object3D.prototype.updateMatrixWorld.call(this,e),O!==this.focalLength||z!==this.fov||P!==this.aspect||B!==this.near||V!==this.far){O=this.focalLength,z=this.fov,P=this.aspect,B=this.near,V=this.far;var t,n,r=this.projectionMatrix.clone(),s=O/30*.5,i=s*B/O,a=B*Math.tan(te.Math.degToRad(.5*z));H.elements[12]=-s,U.elements[12]=s,t=-a*P+i,n=a*P+i,r.elements[0]=2*B/(n-t),r.elements[8]=(n+t)/(n-t),this.cameraL.projectionMatrix.copy(r),t=-a*P-i,n=a*P-i,r.elements[0]=2*B/(n-t),r.elements[8]=(n+t)/(n-t),this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(this.matrixWorld).multiply(H),this.cameraR.matrixWorld.copy(this.matrixWorld).multiply(U)}),te.Light=function(e,t){te.Object3D.call(this),this.type="Light",this.color=new te.Color(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0},te.Light.prototype=Object.create(te.Object3D.prototype),te.Light.prototype.constructor=te.Light,te.Light.prototype.copy=function(e){return te.Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},te.Light.prototype.toJSON=function(e){var t=te.Object3D.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.exponent&&(t.object.exponent=this.exponent),t},te.LightShadow=function(e){this.camera=e,this.bias=0,this.darkness=1,this.mapSize=new te.Vector2(512,512),this.map=null,this.matrix=null},te.LightShadow.prototype={constructor:te.LightShadow,copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.darkness=e.darkness,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)}},te.AmbientLight=function(e,t){te.Light.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0},te.AmbientLight.prototype=Object.create(te.Light.prototype),te.AmbientLight.prototype.constructor=te.AmbientLight,te.DirectionalLight=function(e,t){te.Light.call(this,e,t),this.type="DirectionalLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new te.Object3D,this.shadow=new te.LightShadow(new te.OrthographicCamera(-5,5,5,-5,.5,500))},te.DirectionalLight.prototype=Object.create(te.Light.prototype),te.DirectionalLight.prototype.constructor=te.DirectionalLight,te.DirectionalLight.prototype.copy=function(e){return te.Light.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this},te.HemisphereLight=function(e,t,n){te.Light.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.set(0,1,0),this.updateMatrix(),this.groundColor=new te.Color(t)},te.HemisphereLight.prototype=Object.create(te.Light.prototype),te.HemisphereLight.prototype.constructor=te.HemisphereLight,te.HemisphereLight.prototype.copy=function(e){return te.Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this},te.PointLight=function(e,t,n,r){te.Light.call(this,e,t),this.type="PointLight",this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,this.shadow=new te.LightShadow(new te.PerspectiveCamera(90,1,.5,500))},te.PointLight.prototype=Object.create(te.Light.prototype),te.PointLight.prototype.constructor=te.PointLight,te.PointLight.prototype.copy=function(e){return te.Light.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this},te.SpotLight=function(e,t,n,r,s,i){te.Light.call(this,e,t),this.type="SpotLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new te.Object3D,this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.exponent=void 0!==s?s:10,this.decay=void 0!==i?i:1,this.shadow=new te.LightShadow(new te.PerspectiveCamera(50,1,.5,500))},te.SpotLight.prototype=Object.create(te.Light.prototype),te.SpotLight.prototype.constructor=te.SpotLight,te.SpotLight.prototype.copy=function(e){return te.Light.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.exponent=e.exponent,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this},te.Cache={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},te.Loader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},te.Loader.prototype={constructor:te.Loader,crossOrigin:void 0,extractUrlBase:function(e){var t=e.split("/");return 1===t.length?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(e,t,n){for(var r=[],s=0;s<e.length;++s)r[s]=this.createMaterial(e[s],t,n);return r},createMaterial:function(e,t,n){void 0===W&&(W=new te.Color),void 0===G&&(G=new te.TextureLoader),void 0===j&&(j=new te.MaterialLoader);var r={};function s(e,s,i,a,o){var l,u=t+e,c=te.Loader.Handlers.get(u);null!==c?l=c.load(u):(G.setCrossOrigin(n),l=G.load(u)),void 0!==s&&(l.repeat.fromArray(s),1!==s[0]&&(l.wrapS=te.RepeatWrapping),1!==s[1]&&(l.wrapT=te.RepeatWrapping)),void 0!==i&&l.offset.fromArray(i),void 0!==a&&("repeat"===a[0]&&(l.wrapS=te.RepeatWrapping),"mirror"===a[0]&&(l.wrapS=te.MirroredRepeatWrapping),"repeat"===a[1]&&(l.wrapT=te.RepeatWrapping),"mirror"===a[1]&&(l.wrapT=te.MirroredRepeatWrapping)),void 0!==o&&(l.anisotropy=o);var h=te.Math.generateUUID();return r[h]=l,h}var i={uuid:te.Math.generateUUID(),type:"MeshLambertMaterial"};for(var a in e){var o=e[a];switch(a){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"DbgName":i.name=o;break;case"blending":i.blending=te[o];break;case"colorAmbient":console.warn("THREE.Loader.createMaterial: colorAmbient is no longer supported");break;case"colorDiffuse":i.color=W.fromArray(o).getHex();break;case"colorSpecular":i.specular=W.fromArray(o).getHex();break;case"colorEmissive":i.emissive=W.fromArray(o).getHex();break;case"specularCoef":i.shininess=o;break;case"shading":"basic"===o.toLowerCase()&&(i.type="MeshBasicMaterial"),"phong"===o.toLowerCase()&&(i.type="MeshPhongMaterial");break;case"mapDiffuse":i.map=s(o,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy);break;case"mapLight":i.lightMap=s(o,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy);break;case"mapAO":i.aoMap=s(o,e.mapAORepeat,e.mapAOOffset,e.mapAOWrap,e.mapAOAnisotropy);break;case"mapBump":i.bumpMap=s(o,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy);break;case"mapBumpScale":i.bumpScale=o;break;case"mapNormal":i.normalMap=s(o,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy);break;case"mapNormalFactor":i.normalScale=[o,o];break;case"mapSpecular":i.specularMap=s(o,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy);break;case"mapAlpha":i.alphaMap=s(o,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy);break;case"flipSided":i.side=te.BackSide;break;case"doubleSided":i.side=te.DoubleSide;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),i.opacity=o;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":i[a]=o;break;case"vertexColors":!0===o&&(i.vertexColors=te.VertexColors),"face"===o&&(i.vertexColors=te.FaceColors);break;default:console.error("THREE.Loader.createMaterial: Unsupported",a,o)}}return"MeshBasicMaterial"===i.type&&delete i.emissive,"MeshPhongMaterial"!==i.type&&delete i.specular,i.opacity<1&&(i.transparent=!0),j.setTextures(r),j.parse(i)}},te.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=this.handlers,n=0,r=t.length;n<r;n+=2){var s=t[n],i=t[n+1];if(s.test(e))return i}return null}},te.XHRLoader=function(e){this.manager=void 0!==e?e:te.DefaultLoadingManager},te.XHRLoader.prototype={constructor:te.XHRLoader,load:function(e,t,n,r){void 0!==this.path&&(e=this.path+e);var s=this,i=te.Cache.get(e);if(void 0!==i)return t&&setTimeout((function(){t(i)}),0),i;var a=new XMLHttpRequest;return a.overrideMimeType("text/plain"),a.open("GET",e,!0),a.addEventListener("load",(function(n){var i=n.target.response;te.Cache.add(e,i),200===this.status?(t&&t(i),s.manager.itemEnd(e)):0===this.status?(console.warn("THREE.XHRLoader: HTTP Status 0 received."),t&&t(i),s.manager.itemEnd(e)):(r&&r(n),s.manager.itemError(e))}),!1),void 0!==n&&a.addEventListener("progress",(function(e){n(e)}),!1),a.addEventListener("error",(function(t){r&&r(t),s.manager.itemError(e)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.send(null),s.manager.itemStart(e),a},setPath:function(e){this.path=e},setResponseType:function(e){this.responseType=e},setWithCredentials:function(e){this.withCredentials=e}},te.ImageLoader=function(e){this.manager=void 0!==e?e:te.DefaultLoadingManager},te.ImageLoader.prototype={constructor:te.ImageLoader,load:function(e,t,n,r){void 0!==this.path&&(e=this.path+e);var s=this,i=te.Cache.get(e);if(void 0!==i)return s.manager.itemStart(e),t?setTimeout((function(){t(i),s.manager.itemEnd(e)}),0):s.manager.itemEnd(e),i;var a=document.createElement("img");return a.addEventListener("load",(function(n){te.Cache.add(e,this),t&&t(this),s.manager.itemEnd(e)}),!1),void 0!==n&&a.addEventListener("progress",(function(e){n(e)}),!1),a.addEventListener("error",(function(t){r&&r(t),s.manager.itemError(e)}),!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e}},te.JSONLoader=function(e){"boolean"==typeof e&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),e=void 0),this.manager=void 0!==e?e:te.DefaultLoadingManager,this.withCredentials=!1},te.JSONLoader.prototype={constructor:te.JSONLoader,get statusDomElement(){return void 0===this._statusDomElement&&(this._statusDomElement=document.createElement("div")),console.warn("THREE.JSONLoader: .statusDomElement has been removed."),this._statusDomElement},load:function(e,t,n,r){var s=this,i=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:te.Loader.prototype.extractUrlBase(e),a=new te.XHRLoader(this.manager);a.setWithCredentials(this.withCredentials),a.load(e,(function(n){var r=JSON.parse(n),a=r.metadata;if(void 0!==a){var o=a.type;if(void 0!==o){if("object"===o.toLowerCase())return void console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.ObjectLoader instead.");if("scene"===o.toLowerCase())return void console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.SceneLoader instead.")}}var l=s.parse(r,i);t(l.geometry,l.materials)}),n,r)},setTexturePath:function(e){this.texturePath=e},parse:function(e,t){var n=new te.Geometry,r=void 0!==e.scale?1/e.scale:1;if(function(t){function r(e,t){return e&1<<t}var s,i,a,o,l,u,c,h,d,p,f,m,g,y,b,v,x,w,k,S,E,I,T,C,N,A,M,_=e.faces,R=e.vertices,D=e.normals,$=e.colors,L=0;if(void 0!==e.uvs){for(s=0;s<e.uvs.length;s++)e.uvs[s].length&&L++;for(s=0;s<L;s++)n.faceVertexUvs[s]=[]}for(o=0,l=R.length;o<l;)(w=new te.Vector3).x=R[o++]*t,w.y=R[o++]*t,w.z=R[o++]*t,n.vertices.push(w);for(o=0,l=_.length;o<l;)if(f=r(p=_[o++],0),m=r(p,1),g=r(p,3),y=r(p,4),b=r(p,5),v=r(p,6),x=r(p,7),f){if((S=new te.Face3).a=_[o],S.b=_[o+1],S.c=_[o+3],(E=new te.Face3).a=_[o+1],E.b=_[o+2],E.c=_[o+3],o+=4,m&&(d=_[o++],S.materialIndex=d,E.materialIndex=d),a=n.faces.length,g)for(s=0;s<L;s++)for(C=e.uvs[s],n.faceVertexUvs[s][a]=[],n.faceVertexUvs[s][a+1]=[],i=0;i<4;i++)A=C[2*(h=_[o++])],M=C[2*h+1],N=new te.Vector2(A,M),2!==i&&n.faceVertexUvs[s][a].push(N),0!==i&&n.faceVertexUvs[s][a+1].push(N);if(y&&(c=3*_[o++],S.normal.set(D[c++],D[c++],D[c]),E.normal.copy(S.normal)),b)for(s=0;s<4;s++)c=3*_[o++],T=new te.Vector3(D[c++],D[c++],D[c]),2!==s&&S.vertexNormals.push(T),0!==s&&E.vertexNormals.push(T);if(v&&(I=$[u=_[o++]],S.color.setHex(I),E.color.setHex(I)),x)for(s=0;s<4;s++)I=$[u=_[o++]],2!==s&&S.vertexColors.push(new te.Color(I)),0!==s&&E.vertexColors.push(new te.Color(I));n.faces.push(S),n.faces.push(E)}else{if((k=new te.Face3).a=_[o++],k.b=_[o++],k.c=_[o++],m&&(d=_[o++],k.materialIndex=d),a=n.faces.length,g)for(s=0;s<L;s++)for(C=e.uvs[s],n.faceVertexUvs[s][a]=[],i=0;i<3;i++)A=C[2*(h=_[o++])],M=C[2*h+1],N=new te.Vector2(A,M),n.faceVertexUvs[s][a].push(N);if(y&&(c=3*_[o++],k.normal.set(D[c++],D[c++],D[c])),b)for(s=0;s<3;s++)c=3*_[o++],T=new te.Vector3(D[c++],D[c++],D[c]),k.vertexNormals.push(T);if(v&&(u=_[o++],k.color.setHex($[u])),x)for(s=0;s<3;s++)u=_[o++],k.vertexColors.push(new te.Color($[u]));n.faces.push(k)}}(r),function(){var t=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var r=0,s=e.skinWeights.length;r<s;r+=t){var i=e.skinWeights[r],a=t>1?e.skinWeights[r+1]:0,o=t>2?e.skinWeights[r+2]:0,l=t>3?e.skinWeights[r+3]:0;n.skinWeights.push(new te.Vector4(i,a,o,l))}if(e.skinIndices)for(r=0,s=e.skinIndices.length;r<s;r+=t){var u=e.skinIndices[r],c=t>1?e.skinIndices[r+1]:0,h=t>2?e.skinIndices[r+2]:0,d=t>3?e.skinIndices[r+3]:0;n.skinIndices.push(new te.Vector4(u,c,h,d))}n.bones=e.bones,n.bones&&n.bones.length>0&&(n.skinWeights.length!==n.skinIndices.length||n.skinIndices.length!==n.vertices.length)&&console.warn("When skinning, number of vertices ("+n.vertices.length+"), skinIndices ("+n.skinIndices.length+"), and skinWeights ("+n.skinWeights.length+") should match.")}(),function(t){if(void 0!==e.morphTargets)for(var r=0,s=e.morphTargets.length;r<s;r++){n.morphTargets[r]={},n.morphTargets[r].name=e.morphTargets[r].name,n.morphTargets[r].vertices=[];for(var i=n.morphTargets[r].vertices,a=e.morphTargets[r].vertices,o=0,l=a.length;o<l;o+=3){var u=new te.Vector3;u.x=a[o]*t,u.y=a[o+1]*t,u.z=a[o+2]*t,i.push(u)}}if(void 0!==e.morphColors&&e.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');var c=n.faces,h=e.morphColors[0].colors;for(r=0,s=c.length;r<s;r++)c[r].color.fromArray(h,3*r)}}(r),function(){var t=[],r=[];void 0!==e.animation&&r.push(e.animation),void 0!==e.animations&&(e.animations.length?r=r.concat(e.animations):r.push(e.animations));for(var s=0;s<r.length;s++){var i=te.AnimationClip.parseAnimation(r[s],n.bones);i&&t.push(i)}if(n.morphTargets){var a=te.AnimationClip.CreateClipsFromMorphTargetSequences(n.morphTargets,10);t=t.concat(a)}t.length>0&&(n.animations=t)}(),n.computeFaceNormals(),n.computeBoundingSphere(),void 0===e.materials||0===e.materials.length)return{geometry:n};var s=te.Loader.prototype.initMaterials(e.materials,t,this.crossOrigin);return{geometry:n,materials:s}}},te.LoadingManager=function(e,t,n){var r=this,s=!1,i=0,a=0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){a++,!1===s&&void 0!==r.onStart&&r.onStart(e,i,a),s=!0},this.itemEnd=function(e){i++,void 0!==r.onProgress&&r.onProgress(e,i,a),i===a&&(s=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)}},te.DefaultLoadingManager=new te.LoadingManager,te.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:te.DefaultLoadingManager},te.BufferGeometryLoader.prototype={constructor:te.BufferGeometryLoader,load:function(e,t,n,r){var s=this;new te.XHRLoader(s.manager).load(e,(function(e){t(s.parse(JSON.parse(e)))}),n,r)},parse:function(e){var t=new te.BufferGeometry,n=e.data.index;if(void 0!==n){var r=new self[n.type](n.array);t.setIndex(new te.BufferAttribute(r,1))}var s=e.data.attributes;for(var i in s){var a=s[i];r=new self[a.type](a.array),t.addAttribute(i,new te.BufferAttribute(r,a.itemSize))}var o=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==o)for(var l=0,u=o.length;l!==u;++l){var c=o[l];t.addGroup(c.start,c.count,c.materialIndex)}var h=e.data.boundingSphere;if(void 0!==h){var d=new te.Vector3;void 0!==h.center&&d.fromArray(h.center),t.boundingSphere=new te.Sphere(d,h.radius)}return t}},te.MaterialLoader=function(e){this.manager=void 0!==e?e:te.DefaultLoadingManager,this.textures={}},te.MaterialLoader.prototype={constructor:te.MaterialLoader,load:function(e,t,n,r){var s=this;new te.XHRLoader(s.manager).load(e,(function(e){t(s.parse(JSON.parse(e)))}),n,r)},setTextures:function(e){this.textures=e},getTexture:function(e){var t=this.textures;return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]},parse:function(e){var t=new te[e.type];if(void 0!==e.uuid&&(t.uuid=e.uuid),void 0!==e.name&&(t.name=e.name),void 0!==e.color&&t.color.setHex(e.color),void 0!==e.roughness&&(t.roughness=e.roughness),void 0!==e.metalness&&(t.metalness=e.metalness),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.uniforms&&(t.uniforms=e.uniforms),void 0!==e.vertexShader&&(t.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(t.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.shading&&(t.shading=e.shading),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.alphaTest&&(t.alphaTest=e.alphaTest),void 0!==e.depthTest&&(t.depthTest=e.depthTest),void 0!==e.depthWrite&&(t.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(t.colorWrite=e.colorWrite),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(t.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.size&&(t.size=e.size),void 0!==e.sizeAttenuation&&(t.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(t.map=this.getTexture(e.map)),void 0!==e.alphaMap&&(t.alphaMap=this.getTexture(e.alphaMap),t.transparent=!0),void 0!==e.bumpMap&&(t.bumpMap=this.getTexture(e.bumpMap)),void 0!==e.bumpScale&&(t.bumpScale=e.bumpScale),void 0!==e.normalMap&&(t.normalMap=this.getTexture(e.normalMap)),void 0!==e.normalScale){var n=e.normalScale;!1===Array.isArray(n)&&(n=[n,n]),t.normalScale=(new te.Vector2).fromArray(n)}if(void 0!==e.displacementMap&&(t.displacementMap=this.getTexture(e.displacementMap)),void 0!==e.displacementScale&&(t.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(t.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(t.roughnessMap=this.getTexture(e.roughnessMap)),void 0!==e.metalnessMap&&(t.metalnessMap=this.getTexture(e.metalnessMap)),void 0!==e.emissiveMap&&(t.emissiveMap=this.getTexture(e.emissiveMap)),void 0!==e.specularMap&&(t.specularMap=this.getTexture(e.specularMap)),void 0!==e.envMap&&(t.envMap=this.getTexture(e.envMap),t.combine=te.MultiplyOperation),e.reflectivity&&(t.reflectivity=e.reflectivity),void 0!==e.lightMap&&(t.lightMap=this.getTexture(e.lightMap)),void 0!==e.lightMapIntensity&&(t.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(t.aoMap=this.getTexture(e.aoMap)),void 0!==e.aoMapIntensity&&(t.aoMapIntensity=e.aoMapIntensity),void 0!==e.materials)for(var r=0,s=e.materials.length;r<s;r++)t.materials.push(this.parse(e.materials[r]));return t}},te.ObjectLoader=function(e){this.manager=void 0!==e?e:te.DefaultLoadingManager,this.texturePath=""},te.ObjectLoader.prototype={constructor:te.ObjectLoader,load:function(e,t,n,r){""===this.texturePath&&(this.texturePath=e.substring(0,e.lastIndexOf("/")+1));var s=this;new te.XHRLoader(s.manager).load(e,(function(e){s.parse(JSON.parse(e),t)}),n,r)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var n=this.parseGeometries(e.geometries),r=this.parseImages(e.images,(function(){void 0!==t&&t(a)})),s=this.parseTextures(e.textures,r),i=this.parseMaterials(e.materials,s),a=this.parseObject(e.object,n,i);return e.animations&&(a.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(a),a},parseGeometries:function(e){var t={};if(void 0!==e)for(var n=new te.JSONLoader,r=new te.BufferGeometryLoader,s=0,i=e.length;s<i;s++){var a,o=e[s];switch(o.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new te[o.type](o.width,o.height,o.widthSegments,o.heightSegments);break;case"BoxGeometry":case"CubeGeometry":a=new te.BoxGeometry(o.width,o.height,o.depth,o.widthSegments,o.heightSegments,o.depthSegments);break;case"CircleBufferGeometry":a=new te.CircleBufferGeometry(o.radius,o.segments,o.thetaStart,o.thetaLength);break;case"CircleGeometry":a=new te.CircleGeometry(o.radius,o.segments,o.thetaStart,o.thetaLength);break;case"CylinderGeometry":a=new te.CylinderGeometry(o.radiusTop,o.radiusBottom,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"SphereGeometry":a=new te.SphereGeometry(o.radius,o.widthSegments,o.heightSegments,o.phiStart,o.phiLength,o.thetaStart,o.thetaLength);break;case"SphereBufferGeometry":a=new te.SphereBufferGeometry(o.radius,o.widthSegments,o.heightSegments,o.phiStart,o.phiLength,o.thetaStart,o.thetaLength);break;case"DodecahedronGeometry":a=new te.DodecahedronGeometry(o.radius,o.detail);break;case"IcosahedronGeometry":a=new te.IcosahedronGeometry(o.radius,o.detail);break;case"OctahedronGeometry":a=new te.OctahedronGeometry(o.radius,o.detail);break;case"TetrahedronGeometry":a=new te.TetrahedronGeometry(o.radius,o.detail);break;case"RingGeometry":a=new te.RingGeometry(o.innerRadius,o.outerRadius,o.thetaSegments,o.phiSegments,o.thetaStart,o.thetaLength);break;case"TorusGeometry":a=new te.TorusGeometry(o.radius,o.tube,o.radialSegments,o.tubularSegments,o.arc);break;case"TorusKnotGeometry":a=new te.TorusKnotGeometry(o.radius,o.tube,o.radialSegments,o.tubularSegments,o.p,o.q,o.heightScale);break;case"BufferGeometry":a=r.parse(o);break;case"Geometry":a=n.parse(o.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+o.type+'"');continue}a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),t[o.uuid]=a}return t},parseMaterials:function(e,t){var n={};if(void 0!==e){var r=new te.MaterialLoader;r.setTextures(t);for(var s=0,i=e.length;s<i;s++){var a=r.parse(e[s]);n[a.uuid]=a}}return n},parseAnimations:function(e){for(var t=[],n=0;n<e.length;n++){var r=te.AnimationClip.parse(e[n]);t.push(r)}return t},parseImages:function(e,t){var n=this,r={};function s(e){return n.manager.itemStart(e),a.load(e,(function(){n.manager.itemEnd(e)}))}if(void 0!==e&&e.length>0){var i=new te.LoadingManager(t),a=new te.ImageLoader(i);a.setCrossOrigin(this.crossOrigin);for(var o=0,l=e.length;o<l;o++){var u=e[o],c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(u.url)?u.url:n.texturePath+u.url;r[u.uuid]=s(c)}}return r},parseTextures:function(e,t){function n(e){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),te[e])}var r={};if(void 0!==e)for(var s=0,i=e.length;s<i;s++){var a=e[s];void 0===a.image&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),void 0===t[a.image]&&console.warn("THREE.ObjectLoader: Undefined image",a.image);var o=new te.Texture(t[a.image]);o.needsUpdate=!0,o.uuid=a.uuid,void 0!==a.name&&(o.name=a.name),void 0!==a.mapping&&(o.mapping=n(a.mapping)),void 0!==a.offset&&(o.offset=new te.Vector2(a.offset[0],a.offset[1])),void 0!==a.repeat&&(o.repeat=new te.Vector2(a.repeat[0],a.repeat[1])),void 0!==a.minFilter&&(o.minFilter=n(a.minFilter)),void 0!==a.magFilter&&(o.magFilter=n(a.magFilter)),void 0!==a.anisotropy&&(o.anisotropy=a.anisotropy),Array.isArray(a.wrap)&&(o.wrapS=n(a.wrap[0]),o.wrapT=n(a.wrap[1])),r[a.uuid]=o}return r},parseObject:function(){var e=new te.Matrix4;return function(t,n,r){var s;function i(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),n[e]}function a(e){if(void 0!==e)return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),r[e]}switch(t.type){case"Scene":s=new te.Scene;break;case"PerspectiveCamera":s=new te.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":s=new te.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":s=new te.AmbientLight(t.color,t.intensity);break;case"DirectionalLight":s=new te.DirectionalLight(t.color,t.intensity);break;case"PointLight":s=new te.PointLight(t.color,t.intensity,t.distance,t.decay);break;case"SpotLight":s=new te.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent,t.decay);break;case"HemisphereLight":s=new te.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":var o=i(t.geometry),l=a(t.material);s=o.bones&&o.bones.length>0?new te.SkinnedMesh(o,l):new te.Mesh(o,l);break;case"LOD":s=new te.LOD;break;case"Line":s=new te.Line(i(t.geometry),a(t.material),t.mode);break;case"PointCloud":case"Points":s=new te.Points(i(t.geometry),a(t.material));break;case"Sprite":s=new te.Sprite(a(t.material));break;case"Group":s=new te.Group;break;default:s=new te.Object3D}if(s.uuid=t.uuid,void 0!==t.name&&(s.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(s.position,s.quaternion,s.scale)):(void 0!==t.position&&s.position.fromArray(t.position),void 0!==t.rotation&&s.rotation.fromArray(t.rotation),void 0!==t.scale&&s.scale.fromArray(t.scale)),void 0!==t.castShadow&&(s.castShadow=t.castShadow),void 0!==t.receiveShadow&&(s.receiveShadow=t.receiveShadow),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.userData&&(s.userData=t.userData),void 0!==t.children)for(var u in t.children)s.add(this.parseObject(t.children[u],n,r));if("LOD"===t.type)for(var c=t.levels,h=0;h<c.length;h++){var d=c[h];void 0!==(u=s.getObjectByProperty("uuid",d.object))&&s.addLevel(u,d.distance)}return s}}()},te.TextureLoader=function(e){this.manager=void 0!==e?e:te.DefaultLoadingManager},te.TextureLoader.prototype={constructor:te.TextureLoader,load:function(e,t,n,r){var s=new te.Texture,i=new te.ImageLoader(this.manager);return i.setCrossOrigin(this.crossOrigin),i.setPath(this.path),i.load(e,(function(e){s.image=e,s.needsUpdate=!0,void 0!==t&&t(s)}),n,r),s},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e}},te.CubeTextureLoader=function(e){this.manager=void 0!==e?e:te.DefaultLoadingManager},te.CubeTextureLoader.prototype={constructor:te.CubeTextureLoader,load:function(e,t,n,r){var s=new te.CubeTexture([]),i=new te.ImageLoader;i.setCrossOrigin(this.crossOrigin),i.setPath(this.path);var a=0;function o(n){i.load(e[n],(function(e){s.images[n]=e,6==++a&&(s.needsUpdate=!0,t&&t(s))}),void 0,r)}for(var l=0;l<e.length;++l)o(l);return s},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e}},te.DataTextureLoader=te.BinaryTextureLoader=function(e){this.manager=void 0!==e?e:te.DefaultLoadingManager,this._parser=null},te.BinaryTextureLoader.prototype={constructor:te.BinaryTextureLoader,load:function(e,t,n,r){var s=this,i=new te.DataTexture,a=new te.XHRLoader(this.manager);return a.setResponseType("arraybuffer"),a.load(e,(function(e){var n=s._parser(e);n&&(void 0!==n.image?i.image=n.image:void 0!==n.data&&(i.image.width=n.width,i.image.height=n.height,i.image.data=n.data),i.wrapS=void 0!==n.wrapS?n.wrapS:te.ClampToEdgeWrapping,i.wrapT=void 0!==n.wrapT?n.wrapT:te.ClampToEdgeWrapping,i.magFilter=void 0!==n.magFilter?n.magFilter:te.LinearFilter,i.minFilter=void 0!==n.minFilter?n.minFilter:te.LinearMipMapLinearFilter,i.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(i.format=n.format),void 0!==n.type&&(i.type=n.type),void 0!==n.mipmaps&&(i.mipmaps=n.mipmaps),1===n.mipmapCount&&(i.minFilter=te.LinearFilter),i.needsUpdate=!0,t&&t(i,n))}),n,r),i}},te.CompressedTextureLoader=function(e){this.manager=void 0!==e?e:te.DefaultLoadingManager,this._parser=null},te.CompressedTextureLoader.prototype={constructor:te.CompressedTextureLoader,load:function(e,t,n,r){var s=this,i=[],a=new te.CompressedTexture;a.image=i;var o=new te.XHRLoader(this.manager);function l(l){o.load(e[l],(function(e){var n=s._parser(e,!0);i[l]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},6===(u+=1)&&(1===n.mipmapCount&&(a.minFilter=te.LinearFilter),a.format=n.format,a.needsUpdate=!0,t&&t(a))}),n,r)}if(o.setPath(this.path),o.setResponseType("arraybuffer"),Array.isArray(e))for(var u=0,c=0,h=e.length;c<h;++c)l(c);else o.load(e,(function(e){var n=s._parser(e,!0);if(n.isCubemap)for(var r=n.mipmaps.length/n.mipmapCount,o=0;o<r;o++){i[o]={mipmaps:[]};for(var l=0;l<n.mipmapCount;l++)i[o].mipmaps.push(n.mipmaps[o*n.mipmapCount+l]),i[o].format=n.format,i[o].width=n.width,i[o].height=n.height}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=te.LinearFilter),a.format=n.format,a.needsUpdate=!0,t&&t(a)}),n,r);return a},setPath:function(e){this.path=e}},te.Material=function(){Object.defineProperty(this,"id",{value:te.MaterialIdCount++}),this.uuid=te.Math.generateUUID(),this.name="",this.type="Material",this.side=te.FrontSide,this.opacity=1,this.transparent=!1,this.blending=te.NormalBlending,this.blendSrc=te.SrcAlphaFactor,this.blendDst=te.OneMinusSrcAlphaFactor,this.blendEquation=te.AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=te.LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this._needsUpdate=!0},te.Material.prototype={constructor:te.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update(),this._needsUpdate=e},setValues:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0!==n){var r=this[t];void 0!==r?r instanceof te.Color?r.set(n):r instanceof te.Vector3&&n instanceof te.Vector3?r.copy(n):this[t]="overdraw"===t?Number(n):n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},toJSON:function(e){var t=void 0===e;t&&(e={textures:{},images:{}});var n={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};function r(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color instanceof te.Color&&(n.color=this.color.getHex()),.5!==this.roughness&&(n.roughness=this.roughness),this.metalness>0&&(n.metalness=this.metalness),this.emissive instanceof te.Color&&(n.emissive=this.emissive.getHex()),this.specular instanceof te.Color&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),this.map instanceof te.Texture&&(n.map=this.map.toJSON(e).uuid),this.alphaMap instanceof te.Texture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap instanceof te.Texture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap instanceof te.Texture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap instanceof te.Texture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalScale=this.normalScale.toArray()),this.displacementMap instanceof te.Texture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap instanceof te.Texture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap instanceof te.Texture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap instanceof te.Texture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap instanceof te.Texture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap instanceof te.Texture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),void 0!==this.vertexColors&&this.vertexColors!==te.NoColors&&(n.vertexColors=this.vertexColors),void 0!==this.shading&&this.shading!==te.SmoothShading&&(n.shading=this.shading),void 0!==this.blending&&this.blending!==te.NormalBlending&&(n.blending=this.blending),void 0!==this.side&&this.side!==te.FrontSide&&(n.side=this.side),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),t){var s=r(e.textures),i=r(e.images);s.length>0&&(n.textures=s),i.length>0&&(n.images=i)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.side=e.side,this.opacity=e.opacity,this.transparent=e.transparent,this.blending=e.blending,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.alphaTest=e.alphaTest,this.overdraw=e.overdraw,this.visible=e.visible,this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},te.EventDispatcher.prototype.apply(te.Material.prototype),te.MaterialIdCount=0,te.LineBasicMaterial=function(e){te.Material.call(this),this.type="LineBasicMaterial",this.color=new te.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=te.NoColors,this.fog=!0,this.setValues(e)},te.LineBasicMaterial.prototype=Object.create(te.Material.prototype),te.LineBasicMaterial.prototype.constructor=te.LineBasicMaterial,te.LineBasicMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.vertexColors=e.vertexColors,this.fog=e.fog,this},te.LineDashedMaterial=function(e){te.Material.call(this),this.type="LineDashedMaterial",this.color=new te.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=te.NoColors,this.fog=!0,this.setValues(e)},te.LineDashedMaterial.prototype=Object.create(te.Material.prototype),te.LineDashedMaterial.prototype.constructor=te.LineDashedMaterial,te.LineDashedMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this.vertexColors=e.vertexColors,this.fog=e.fog,this},te.MeshBasicMaterial=function(e){te.Material.call(this),this.type="MeshBasicMaterial",this.color=new te.Color(16777215),this.map=null,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=te.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=te.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=te.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},te.MeshBasicMaterial.prototype=Object.create(te.Material.prototype),te.MeshBasicMaterial.prototype.constructor=te.MeshBasicMaterial,te.MeshBasicMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},te.MeshLambertMaterial=function(e){te.Material.call(this),this.type="MeshLambertMaterial",this.color=new te.Color(16777215),this.emissive=new te.Color(0),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=te.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=te.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},te.MeshLambertMaterial.prototype=Object.create(te.Material.prototype),te.MeshLambertMaterial.prototype.constructor=te.MeshLambertMaterial,te.MeshLambertMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.emissive.copy(e.emissive),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissiveMap=e.emissiveMap,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},te.MeshPhongMaterial=function(e){te.Material.call(this),this.type="MeshPhongMaterial",this.color=new te.Color(16777215),this.emissive=new te.Color(0),this.specular=new te.Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new te.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=te.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=te.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=te.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},te.MeshPhongMaterial.prototype=Object.create(te.Material.prototype),te.MeshPhongMaterial.prototype.constructor=te.MeshPhongMaterial,te.MeshPhongMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.emissive.copy(e.emissive),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissiveMap=e.emissiveMap,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},te.MeshStandardMaterial=function(e){te.Material.call(this),this.type="MeshStandardMaterial",this.color=new te.Color(16777215),this.roughness=.5,this.metalness=.5,this.emissive=new te.Color(0),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new te.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.fog=!0,this.shading=te.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=te.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},te.MeshStandardMaterial.prototype=Object.create(te.Material.prototype),te.MeshStandardMaterial.prototype.constructor=te.MeshStandardMaterial,te.MeshStandardMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.emissive.copy(e.emissive),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissiveMap=e.emissiveMap,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},te.MeshDepthMaterial=function(e){te.Material.call(this),this.type="MeshDepthMaterial",this.morphTargets=!1,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},te.MeshDepthMaterial.prototype=Object.create(te.Material.prototype),te.MeshDepthMaterial.prototype.constructor=te.MeshDepthMaterial,te.MeshDepthMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},te.MeshNormalMaterial=function(e){te.Material.call(this,e),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},te.MeshNormalMaterial.prototype=Object.create(te.Material.prototype),te.MeshNormalMaterial.prototype.constructor=te.MeshNormalMaterial,te.MeshNormalMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},te.MultiMaterial=function(e){this.uuid=te.Math.generateUUID(),this.type="MultiMaterial",this.materials=e instanceof Array?e:[],this.visible=!0},te.MultiMaterial.prototype={constructor:te.MultiMaterial,toJSON:function(e){for(var t={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},n=this.materials,r=0,s=n.length;r<s;r++){var i=n[r].toJSON(e);delete i.metadata,t.materials.push(i)}return t.visible=this.visible,t},clone:function(){for(var e=new this.constructor,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e.visible=this.visible,e}},te.PointsMaterial=function(e){te.Material.call(this),this.type="PointsMaterial",this.color=new te.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=te.NoColors,this.fog=!0,this.setValues(e)},te.PointsMaterial.prototype=Object.create(te.Material.prototype),te.PointsMaterial.prototype.constructor=te.PointsMaterial,te.PointsMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.vertexColors=e.vertexColors,this.fog=e.fog,this},te.ShaderMaterial=function(e){te.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=te.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=te.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))},te.ShaderMaterial.prototype=Object.create(te.Material.prototype),te.ShaderMaterial.prototype.constructor=te.ShaderMaterial,te.ShaderMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=te.UniformsUtils.clone(e.uniforms),this.defines=e.defines,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},te.ShaderMaterial.prototype.toJSON=function(e){var t=te.Material.prototype.toJSON.call(this,e);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t},te.RawShaderMaterial=function(e){te.ShaderMaterial.call(this,e),this.type="RawShaderMaterial"},te.RawShaderMaterial.prototype=Object.create(te.ShaderMaterial.prototype),te.RawShaderMaterial.prototype.constructor=te.RawShaderMaterial,te.SpriteMaterial=function(e){te.Material.call(this),this.type="SpriteMaterial",this.color=new te.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},te.SpriteMaterial.prototype=Object.create(te.Material.prototype),te.SpriteMaterial.prototype.constructor=te.SpriteMaterial,te.SpriteMaterial.prototype.copy=function(e){return te.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this.fog=e.fog,this},te.Texture=function(e,t,n,r,s,i,a,o,l){Object.defineProperty(this,"id",{value:te.TextureIdCount++}),this.uuid=te.Math.generateUUID(),this.name="",this.sourceFile="",this.image=void 0!==e?e:te.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:te.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:te.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:te.ClampToEdgeWrapping,this.magFilter=void 0!==s?s:te.LinearFilter,this.minFilter=void 0!==i?i:te.LinearMipMapLinearFilter,this.anisotropy=void 0!==l?l:1,this.format=void 0!==a?a:te.RGBAFormat,this.type=void 0!==o?o:te.UnsignedByteType,this.offset=new te.Vector2(0,0),this.repeat=new te.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.version=0,this.onUpdate=null},te.Texture.DEFAULT_IMAGE=void 0,te.Texture.DEFAULT_MAPPING=te.UVMapping,te.Texture.prototype={constructor:te.Texture,set needsUpdate(e){!0===e&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this},toJSON:function(e){if(void 0!==e.textures[this.uuid])return e.textures[this.uuid];var t={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(void 0!==this.image){var n=this.image;void 0===n.uuid&&(n.uuid=te.Math.generateUUID()),void 0===e.images[n.uuid]&&(e.images[n.uuid]={uuid:n.uuid,url:function(e){var t;return void 0!==e.toDataURL?t=e:((t=document.createElement("canvas")).width=e.width,t.height=e.height,t.getContext("2d").drawImage(e,0,0,e.width,e.height)),t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}(n)}),t.image=n.uuid}return e.textures[this.uuid]=t,t},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping===te.UVMapping){if(e.multiply(this.repeat),e.add(this.offset),e.x<0||e.x>1)switch(this.wrapS){case te.RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case te.ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case te.MirroredRepeatWrapping:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case te.RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case te.ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case te.MirroredRepeatWrapping:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}}},te.EventDispatcher.prototype.apply(te.Texture.prototype),te.TextureIdCount=0,te.CanvasTexture=function(e,t,n,r,s,i,a,o,l){te.Texture.call(this,e,t,n,r,s,i,a,o,l),this.needsUpdate=!0},te.CanvasTexture.prototype=Object.create(te.Texture.prototype),te.CanvasTexture.prototype.constructor=te.CanvasTexture,te.CubeTexture=function(e,t,n,r,s,i,a,o,l){t=void 0!==t?t:te.CubeReflectionMapping,te.Texture.call(this,e,t,n,r,s,i,a,o,l),this.images=e,this.flipY=!1},te.CubeTexture.prototype=Object.create(te.Texture.prototype),te.CubeTexture.prototype.constructor=te.CubeTexture,te.CubeTexture.prototype.copy=function(e){return te.Texture.prototype.copy.call(this,e),this.images=e.images,this},te.CompressedTexture=function(e,t,n,r,s,i,a,o,l,u,c){te.Texture.call(this,null,i,a,o,l,u,r,s,c),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1},te.CompressedTexture.prototype=Object.create(te.Texture.prototype),te.CompressedTexture.prototype.constructor=te.CompressedTexture,te.DataTexture=function(e,t,n,r,s,i,a,o,l,u,c){te.Texture.call(this,null,i,a,o,l,u,r,s,c),this.image={data:e,width:t,height:n},this.magFilter=void 0!==l?l:te.NearestFilter,this.minFilter=void 0!==u?u:te.NearestFilter,this.flipY=!1,this.generateMipmaps=!1},te.DataTexture.prototype=Object.create(te.Texture.prototype),te.DataTexture.prototype.constructor=te.DataTexture,te.VideoTexture=function(e,t,n,r,s,i,a,o,l){te.Texture.call(this,e,t,n,r,s,i,a,o,l),this.generateMipmaps=!1;var u=this;!function t(){requestAnimationFrame(t),e.readyState===e.HAVE_ENOUGH_DATA&&(u.needsUpdate=!0)}()},te.VideoTexture.prototype=Object.create(te.Texture.prototype),te.VideoTexture.prototype.constructor=te.VideoTexture,te.Group=function(){te.Object3D.call(this),this.type="Group"},te.Group.prototype=Object.create(te.Object3D.prototype),te.Group.prototype.constructor=te.Group,te.Points=function(e,t){te.Object3D.call(this),this.type="Points",this.geometry=void 0!==e?e:new te.Geometry,this.material=void 0!==t?t:new te.PointsMaterial({color:16777215*Math.random()})},te.Points.prototype=Object.create(te.Object3D.prototype),te.Points.prototype.constructor=te.Points,te.Points.prototype.raycast=function(){var e=new te.Matrix4,t=new te.Ray,n=new te.Sphere;return function(r,s){var i=this,a=this.geometry,o=this.matrixWorld,l=r.params.Points.threshold;if(null===a.boundingSphere&&a.computeBoundingSphere(),n.copy(a.boundingSphere),n.applyMatrix4(o),!1!==r.ray.intersectsSphere(n)){e.getInverse(o),t.copy(r.ray).applyMatrix4(e);var u=l/((this.scale.x+this.scale.y+this.scale.z)/3),c=u*u,h=new te.Vector3;if(a instanceof te.BufferGeometry){var d=a.index,p=a.attributes.position.array;if(null!==d)for(var f=d.array,m=0,g=f.length;m<g;m++){var y=f[m];h.fromArray(p,3*y),x(h,y)}else{m=0;for(var b=p.length/3;m<b;m++)h.fromArray(p,3*m),x(h,m)}}else{var v=a.vertices;for(m=0,b=v.length;m<b;m++)x(v[m],m)}}function x(e,n){var a=t.distanceSqToPoint(e);if(a<c){var l=t.closestPointToPoint(e);l.applyMatrix4(o);var u=r.ray.origin.distanceTo(l);if(u<r.near||u>r.far)return;s.push({distance:u,distanceToRay:Math.sqrt(a),point:l.clone(),index:n,face:null,object:i})}}}}(),te.Points.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},te.Line=function(e,t,n){if(1===n)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new te.LineSegments(e,t);te.Object3D.call(this),this.type="Line",this.geometry=void 0!==e?e:new te.Geometry,this.material=void 0!==t?t:new te.LineBasicMaterial({color:16777215*Math.random()})},te.Line.prototype=Object.create(te.Object3D.prototype),te.Line.prototype.constructor=te.Line,te.Line.prototype.raycast=function(){var e=new te.Matrix4,t=new te.Ray,n=new te.Sphere;return function(r,s){var i=r.linePrecision,a=i*i,o=this.geometry,l=this.matrixWorld;if(null===o.boundingSphere&&o.computeBoundingSphere(),n.copy(o.boundingSphere),n.applyMatrix4(l),!1!==r.ray.intersectsSphere(n)){e.getInverse(l),t.copy(r.ray).applyMatrix4(e);var u=new te.Vector3,c=new te.Vector3,h=new te.Vector3,d=new te.Vector3,p=this instanceof te.LineSegments?2:1;if(o instanceof te.BufferGeometry){var f=o.index,m=o.attributes.position.array;if(null!==f)for(var g=f.array,y=0,b=g.length-1;y<b;y+=p){var v=g[y],x=g[y+1];u.fromArray(m,3*v),c.fromArray(m,3*x),t.distanceSqToSegment(u,c,d,h)>a||(d.applyMatrix4(this.matrixWorld),(S=r.ray.origin.distanceTo(d))<r.near||S>r.far||s.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this}))}else for(y=0,b=m.length/3-1;y<b;y+=p)u.fromArray(m,3*y),c.fromArray(m,3*y+3),t.distanceSqToSegment(u,c,d,h)>a||(d.applyMatrix4(this.matrixWorld),(S=r.ray.origin.distanceTo(d))<r.near||S>r.far||s.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this}))}else if(o instanceof te.Geometry){var w=o.vertices,k=w.length;for(y=0;y<k-1;y+=p){var S;t.distanceSqToSegment(w[y],w[y+1],d,h)>a||(d.applyMatrix4(this.matrixWorld),(S=r.ray.origin.distanceTo(d))<r.near||S>r.far||s.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this}))}}}}}(),te.Line.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},te.LineStrip=0,te.LinePieces=1,te.LineSegments=function(e,t){te.Line.call(this,e,t),this.type="LineSegments"},te.LineSegments.prototype=Object.create(te.Line.prototype),te.LineSegments.prototype.constructor=te.LineSegments,te.Mesh=function(e,t){te.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new te.Geometry,this.material=void 0!==t?t:new te.MeshBasicMaterial({color:16777215*Math.random()}),this.drawMode=te.TrianglesDrawMode,this.updateMorphTargets()},te.Mesh.prototype=Object.create(te.Object3D.prototype),te.Mesh.prototype.constructor=te.Mesh,te.Mesh.prototype.setDrawMode=function(e){this.drawMode=e},te.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},te.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},te.Mesh.prototype.raycast=function(){var e=new te.Matrix4,t=new te.Ray,n=new te.Sphere,r=new te.Vector3,s=new te.Vector3,i=new te.Vector3,a=new te.Vector3,o=new te.Vector3,l=new te.Vector3,u=new te.Vector2,c=new te.Vector2,h=new te.Vector2,d=new te.Vector3,p=new te.Vector3,f=new te.Vector3;function m(e,t,n,r,s,i,a){return te.Triangle.barycoordFromPoint(e,t,n,r,d),s.multiplyScalar(d.x),i.multiplyScalar(d.y),a.multiplyScalar(d.z),s.add(i).add(a),s.clone()}function g(e,t,n,r,s,i,a){var o=e.material;if(null===(o.side===te.BackSide?n.intersectTriangle(i,s,r,!0,a):n.intersectTriangle(r,s,i,o.side!==te.DoubleSide,a)))return null;f.copy(a),f.applyMatrix4(e.matrixWorld);var l=t.ray.origin.distanceTo(f);return l<t.near||l>t.far?null:{distance:l,point:f.clone(),object:e}}function y(e,t,n,a,o,l,d,f){r.fromArray(a,3*l),s.fromArray(a,3*d),i.fromArray(a,3*f);var y=g(e,t,n,r,s,i,p);return y&&(o&&(u.fromArray(o,2*l),c.fromArray(o,2*d),h.fromArray(o,2*f),y.uv=m(p,r,s,i,u,c,h)),y.face=new te.Face3(l,d,f,te.Triangle.normal(r,s,i)),y.faceIndex=l),y}return function(d,f){var b,v,x=this.geometry,w=this.material,k=this.matrixWorld;if(void 0!==w&&(null===x.boundingSphere&&x.computeBoundingSphere(),n.copy(x.boundingSphere),n.applyMatrix4(k),!1!==d.ray.intersectsSphere(n)&&(e.getInverse(k),t.copy(d.ray).applyMatrix4(e),null===x.boundingBox||!1!==t.intersectsBox(x.boundingBox))))if(x instanceof te.BufferGeometry){var S,E,I,T=x.index,C=x.attributes,N=C.position.array;if(void 0!==C.uv&&(b=C.uv.array),null!==T)for(var A=T.array,M=0,_=A.length;M<_;M+=3)S=A[M],E=A[M+1],I=A[M+2],(v=y(this,d,t,N,b,S,E,I))&&(v.faceIndex=Math.floor(M/3),f.push(v));else for(M=0,_=N.length;M<_;M+=9)(v=y(this,d,t,N,b,S=M/3,E=S+1,I=S+2))&&(v.index=S,f.push(v))}else if(x instanceof te.Geometry){var R,D,$,L=w instanceof te.MeshFaceMaterial,F=!0===L?w.materials:null,O=x.vertices,z=x.faces,P=x.faceVertexUvs[0];P.length>0&&(b=P);for(var B=0,V=z.length;B<V;B++){var U=z[B],H=!0===L?F[U.materialIndex]:w;if(void 0!==H){if(R=O[U.a],D=O[U.b],$=O[U.c],!0===H.morphTargets){var W=x.morphTargets,G=this.morphTargetInfluences;r.set(0,0,0),s.set(0,0,0),i.set(0,0,0);for(var j=0,q=W.length;j<q;j++){var K=G[j];if(0!==K){var X=W[j].vertices;r.addScaledVector(a.subVectors(X[U.a],R),K),s.addScaledVector(o.subVectors(X[U.b],D),K),i.addScaledVector(l.subVectors(X[U.c],$),K)}}r.add(R),s.add(D),i.add($),R=r,D=s,$=i}if(v=g(this,d,t,R,D,$,p)){if(b){var Z=b[B];u.copy(Z[0]),c.copy(Z[1]),h.copy(Z[2]),v.uv=m(p,R,D,$,u,c,h)}v.face=U,v.faceIndex=B,f.push(v)}}}}}}(),te.Mesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},te.Bone=function(e){te.Object3D.call(this),this.type="Bone",this.skin=e},te.Bone.prototype=Object.create(te.Object3D.prototype),te.Bone.prototype.constructor=te.Bone,te.Bone.prototype.copy=function(e){return te.Object3D.prototype.copy.call(this,e),this.skin=e.skin,this},te.Skeleton=function(e,t,n){if(this.useVertexTexture=void 0===n||n,this.identityMatrix=new te.Matrix4,e=e||[],this.bones=e.slice(0),this.useVertexTexture){var r=Math.sqrt(4*this.bones.length);r=te.Math.nextPowerOfTwo(Math.ceil(r)),r=Math.max(r,4),this.boneTextureWidth=r,this.boneTextureHeight=r,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new te.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,te.RGBAFormat,te.FloatType)}else this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var s=0,i=this.bones.length;s<i;s++)this.boneInverses.push(new te.Matrix4)}},te.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var n=new te.Matrix4;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},te.Skeleton.prototype.pose=function(){for(var e,t=0,n=this.bones.length;t<n;t++)(e=this.bones[t])&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,n=this.bones.length;t<n;t++)(e=this.bones[t])&&(e.parent?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},te.Skeleton.prototype.update=(q=new te.Matrix4,function(){for(var e=0,t=this.bones.length;e<t;e++){var n=this.bones[e]?this.bones[e].matrixWorld:this.identityMatrix;q.multiplyMatrices(n,this.boneInverses[e]),q.flattenToArrayOffset(this.boneMatrices,16*e)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}),te.Skeleton.prototype.clone=function(){return new te.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)},te.SkinnedMesh=function(e,t,n){te.Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new te.Matrix4,this.bindMatrixInverse=new te.Matrix4;var r=[];if(this.geometry&&void 0!==this.geometry.bones){for(var s,i,a=0,o=this.geometry.bones.length;a<o;++a)i=this.geometry.bones[a],s=new te.Bone(this),r.push(s),s.name=i.name,s.position.fromArray(i.pos),s.quaternion.fromArray(i.rotq),void 0!==i.scl&&s.scale.fromArray(i.scl);for(a=0,o=this.geometry.bones.length;a<o;++a)-1!==(i=this.geometry.bones[a]).parent&&null!==i.parent?r[i.parent].add(r[a]):this.add(r[a])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new te.Skeleton(r,void 0,n),this.matrixWorld)},te.SkinnedMesh.prototype=Object.create(te.Mesh.prototype),te.SkinnedMesh.prototype.constructor=te.SkinnedMesh,te.SkinnedMesh.prototype.bind=function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},te.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},te.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof te.Geometry)for(var e=0;e<this.geometry.skinWeights.length;e++){var t=this.geometry.skinWeights[e];(s=1/t.lengthManhattan())!=1/0?t.multiplyScalar(s):t.set(1,0,0,0)}else if(this.geometry instanceof te.BufferGeometry){var n=new te.Vector4,r=this.geometry.attributes.skinWeight;for(e=0;e<r.count;e++){var s;n.x=r.getX(e),n.y=r.getY(e),n.z=r.getZ(e),n.w=r.getW(e),(s=1/n.lengthManhattan())!=1/0?n.multiplyScalar(s):n.set(1,0,0,0),r.setXYZW(e,n.x,n.y,n.z,n.w)}}},te.SkinnedMesh.prototype.updateMatrixWorld=function(e){te.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)},te.SkinnedMesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)},te.LOD=function(){te.Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}})},te.LOD.prototype=Object.create(te.Object3D.prototype),te.LOD.prototype.constructor=te.LOD,te.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var n=this.levels,r=0;r<n.length&&!(t<n[r].distance);r++);n.splice(r,0,{distance:t,object:e}),this.add(e)},te.LOD.prototype.getObjectForDistance=function(e){for(var t=this.levels,n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object},te.LOD.prototype.raycast=(K=new te.Vector3,function(e,t){K.setFromMatrixPosition(this.matrixWorld);var n=e.ray.origin.distanceTo(K);this.getObjectForDistance(n).raycast(e,t)}),te.LOD.prototype.update=function(){var e=new te.Vector3,t=new te.Vector3;return function(n){var r=this.levels;if(r.length>1){e.setFromMatrixPosition(n.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var s=e.distanceTo(t);r[0].object.visible=!0;for(var i=1,a=r.length;i<a&&s>=r[i].distance;i++)r[i-1].object.visible=!1,r[i].object.visible=!0;for(;i<a;i++)r[i].object.visible=!1}}}(),te.LOD.prototype.copy=function(e){te.Object3D.prototype.copy.call(this,e,!1);for(var t=e.levels,n=0,r=t.length;n<r;n++){var s=t[n];this.addLevel(s.object.clone(),s.distance)}return this},te.LOD.prototype.toJSON=function(e){var t=te.Object3D.prototype.toJSON.call(this,e);t.object.levels=[];for(var n=this.levels,r=0,s=n.length;r<s;r++){var i=n[r];t.object.levels.push({object:i.object.uuid,distance:i.distance})}return t},te.Sprite=(X=new Uint16Array([0,1,2,0,2,3]),Z=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),Q=new Float32Array([0,0,1,0,1,1,0,1]),(Y=new te.BufferGeometry).setIndex(new te.BufferAttribute(X,1)),Y.addAttribute("position",new te.BufferAttribute(Z,3)),Y.addAttribute("uv",new te.BufferAttribute(Q,2)),function(e){te.Object3D.call(this),this.type="Sprite",this.geometry=Y,this.material=void 0!==e?e:new te.SpriteMaterial}),te.Sprite.prototype=Object.create(te.Object3D.prototype),te.Sprite.prototype.constructor=te.Sprite,te.Sprite.prototype.raycast=function(){var e=new te.Vector3;return function(t,n){e.setFromMatrixPosition(this.matrixWorld);var r=t.ray.distanceSqToPoint(e);r>this.scale.x*this.scale.y||n.push({distance:Math.sqrt(r),point:this.position,face:null,object:this})}}(),te.Sprite.prototype.clone=function(){return new this.constructor(this.material).copy(this)},te.Particle=te.Sprite,te.LensFlare=function(e,t,n,r,s){te.Object3D.call(this),this.lensFlares=[],this.positionScreen=new te.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,n,r,s)},te.LensFlare.prototype=Object.create(te.Object3D.prototype),te.LensFlare.prototype.constructor=te.LensFlare,te.LensFlare.prototype.add=function(e,t,n,r,s,i){void 0===t&&(t=-1),void 0===n&&(n=0),void 0===i&&(i=1),void 0===s&&(s=new te.Color(16777215)),void 0===r&&(r=te.NormalBlending),n=Math.min(n,Math.max(0,n)),this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:0,opacity:i,color:s,blending:r})},te.LensFlare.prototype.updateLensFlares=function(){var e,t,n=this.lensFlares.length,r=2*-this.positionScreen.x,s=2*-this.positionScreen.y;for(e=0;e<n;e++)(t=this.lensFlares[e]).x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+s*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},te.LensFlare.prototype.copy=function(e){te.Object3D.prototype.copy.call(this,e),this.positionScreen.copy(e.positionScreen),this.customUpdateCallback=e.customUpdateCallback;for(var t=0,n=e.lensFlares.length;t<n;t++)this.lensFlares.push(e.lensFlares[t]);return this},te.Scene=function(){te.Object3D.call(this),this.type="Scene",this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0},te.Scene.prototype=Object.create(te.Object3D.prototype),te.Scene.prototype.constructor=te.Scene,te.Scene.prototype.copy=function(e){return te.Object3D.prototype.copy.call(this,e),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},te.Fog=function(e,t,n){this.name="",this.color=new te.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3},te.Fog.prototype.clone=function(){return new te.Fog(this.color.getHex(),this.near,this.far)},te.FogExp2=function(e,t){this.name="",this.color=new te.Color(e),this.density=void 0!==t?t:25e-5},te.FogExp2.prototype.clone=function(){return new te.FogExp2(this.color.getHex(),this.density)},te.ShaderChunk={},te.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",te.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",te.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",te.ShaderChunk.ambient_pars="uniform vec3 ambientLightColor;\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\treturn PI * ambientLightColor;\n\n}\n",te.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n\n\treflectedLight.indirectDiffuse *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n#endif\n",te.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif",te.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n",te.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",te.ShaderChunk.bsdfs='float calcLightAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n\tif ( decayExponent > 0.0 ) {\n\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n}\n\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick \'94\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\n\tfloat a2 = alpha * alpha;\n\n\tfloat gl = dotNL + pow( a2 + ( 1.0 - a2 ) * dotNL * dotNL, 0.5 );\n\n\tfloat gv = dotNV + pow( a2 + ( 1.0 - a2 ) * dotNV * dotNV, 0.5 );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = alpha * alpha;\n\n\tfloat denom = dotNH * dotNH * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / ( denom * denom );\n\n}\n\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = roughness * roughness; // UE4\'s roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_Smith( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n\treturn specularColor * AB.x + AB.y;\n\n} // validated\n\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / square( ggxRoughness + 0.0001 ) - 2.0 );\n}',te.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n",te.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif",te.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",te.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif",te.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif",te.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nfloat square( const in float x ) { return x*x; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\n\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nvec3 inputToLinear( in vec3 a ) {\n\n\t#ifdef GAMMA_INPUT\n\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n\nvec3 linearToOutput( in vec3 a ) {\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n",te.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n",te.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n",te.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n",te.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\n\n\ttotalEmissiveLight *= emissiveColor.rgb;\n\n#endif\n",te.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n",te.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\tenvColor.xyz = inputToLinear( envColor.xyz );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n",te.ShaderChunk.envmap_pars_fragment="#if defined( USE_ENVMAP ) || defined( STANDARD )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n\n#ifdef USE_ENVMAP\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n",te.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n",te.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n",te.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif",te.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif",te.ShaderChunk.lights_pars="#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t  vec3 direction;\n\t  vec3 color;\n\t  int shadow;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tIncidentLight getDirectionalDirectLight( const in DirectionalLight directionalLight, const in GeometricContext geometry ) {\n\n\t\tIncidentLight directLight;\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\n\t\treturn directLight;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t  vec3 position;\n\t  vec3 color;\n\t  float distance;\n\t  float decay;\n\t  int shadow;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\tIncidentLight getPointDirectLight( const in PointLight pointLight, const in GeometricContext geometry ) {\n\n\t\tIncidentLight directLight;\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= calcLightAttenuation( length( lVector ), pointLight.distance, pointLight.decay );\n\n\t\treturn directLight;\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t  vec3 position;\n\t  vec3 direction;\n\t  vec3 color;\n\t  float distance;\n\t  float decay;\n\t  float angleCos;\n\t  float exponent;\n\t  int shadow;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\tIncidentLight getSpotDirectLight( const in SpotLight spotLight, const in GeometricContext geometry ) {\n\n\t\tIncidentLight directLight;\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat spotEffect = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( spotEffect > spotLight.angleCos ) {\n\n\t\t\tfloat spotEffect = dot( spotLight.direction, directLight.direction );\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLight.exponent ) );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= ( spotEffect * calcLightAttenuation( length( lVector ), spotLight.distance, spotLight.decay ) );\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\n\t\t}\n\n\t\treturn directLight;\n\n\t}\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t  vec3 direction;\n\t  vec3 skyColor;\n\t  vec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\treturn PI * mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t}\n\n#endif\n\n\n#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#else\n\n\t\t\tfloat flipNormal = 1.0;\n\n\t\t#endif\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvec3 envMapColor = vec3( 0.0 );\n\n\t\t#endif\n\n\t\tenvMapColor.rgb = inputToLinear( envMapColor.rgb );\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n\t\t//float envMapWidth = pow( 2.0, maxMIPLevelScalar );\n\t\t//float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( square( blinnShininessExponent ) + 1.0 );\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( square( blinnShininessExponent ) + 1.0 );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\n\t\t#endif\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#else\n\n\t\t\tfloat flipNormal = 1.0;\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tenvMapColor.rgb = inputToLinear( envMapColor.rgb );\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n",te.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif",te.ShaderChunk.lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\n\n#if NUM_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tIncidentLight directLight = getPointDirectLight( pointLights[ i ], geometry );\n\n\t\tfloat dotNL = dot( geometry.normal, directLight.direction );\n\t\tvec3 directLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tIncidentLight directLight = getSpotDirectLight( spotLights[ i ], geometry );\n\n\t\tfloat dotNL = dot( geometry.normal, directLight.direction );\n\t\tvec3 directLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\n#endif\n\n#if NUM_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tIncidentLight directLight = getDirectionalDirectLight( directionalLights[ i ], geometry );\n\n\t\tfloat dotNL = dot( geometry.normal, directLight.direction );\n\t\tvec3 directLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n\t{\n\n\n\t\t#if NUM_HEMI_LIGHTS > 0\n\n\t\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t\t\t#endif\n\n\t\t\t}\n\n\t\t#endif\n\n\t}\n",te.ShaderChunk.lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",te.ShaderChunk.lights_phong_pars_fragment="#ifdef USE_ENVMAP\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * PI * directLight.color; // punctual light\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n",te.ShaderChunk.lights_phong_pars_vertex="#ifdef USE_ENVMAP\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n",te.ShaderChunk.lights_phong_vertex="#ifdef USE_ENVMAP\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif\n",te.ShaderChunk.lights_standard_fragment="StandardMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\nmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n",te.ShaderChunk.lights_standard_pars_fragment="struct StandardMaterial {\n\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\n};\n\nvoid RE_Direct_Standard( const in IncidentLight directLight, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * PI * directLight.color; // punctual light\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\n}\n\nvoid RE_IndirectDiffuse_Standard( const in vec3 irradiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Standard( const in vec3 radiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Standard\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Standard\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Standard\n\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n",te.ShaderChunk.lights_template="//\n// This is a template that can be used to light a material, it uses pluggable RenderEquations (RE)\n//   for specific lighting scenarios.\n//\n// Instructions for use:\n//  - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n//  - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n//  - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n//\n// TODO:\n//  - Add area light support.\n//  - Add sphere light support.\n//  - Add diffuse light probe (irradiance cubemap) support.\n//\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tPointLight pointLight = pointLights[ i ];\n\n\t\tIncidentLight directLight = getPointDirectLight( pointLight, geometry );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tif ( pointLight.shadow > - 1 ) {\n\t\t\tfor ( int j = 0; j < NUM_SHADOWS; j ++ ) {\n\t\t\t\tif ( j == pointLight.shadow ) {\n\t\t\t\t\tdirectLight.color *= shadows[ j ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tSpotLight spotLight = spotLights[ i ];\n\n\t\tIncidentLight directLight = getSpotDirectLight( spotLight, geometry );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tif ( spotLight.shadow > - 1 ) {\n\t\t\tfor ( int j = 0; j < NUM_SHADOWS; j ++ ) {\n\t\t\t\tif ( j == spotLight.shadow ) {\n\t\t\t\t\tdirectLight.color *= shadows[ j ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tDirectionalLight directionalLight = directionalLights[ i ];\n\n\t\tIncidentLight directLight = getDirectionalDirectLight( directionalLight, geometry );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tif ( directionalLight.shadow > - 1 ) {\n\t\t\tfor ( int j = 0; j < NUM_SHADOWS; j ++ ) {\n\t\t\t\tif ( j == directionalLight.shadow ) {\n\t\t\t\t\tdirectLight.color *= shadows[ j ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\t{\n\n\t\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\t\t#ifdef USE_LIGHTMAP\n\n\t\t\tirradiance += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n\t\t#endif\n\n\t\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t\t}\n\n\t\t#endif\n\n\t\t// #if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\t\t// TODO, replace 8 with the real maxMIPLevel\n\t\t\t// irradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, 8 ); // comment out until seams are fixed\n\n\t\t// #endif\n\n\t\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\t{\n\n\t\t// TODO, replace 8 with the real maxMIPLevel\n\t\tvec3 radiance = getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_BlinnShininessExponent( material ), 8 );\n\n\t\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n",te.ShaderChunk.linear_to_gamma_fragment="\n\toutgoingLight = linearToOutput( outgoingLight );\n",te.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",te.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif\n",te.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif",te.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n\t#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif\n",te.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\n\n\tdiffuseColor *= texelColor;\n\n#endif\n",te.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",te.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n",te.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n\n#endif\n",te.ShaderChunk.metalnessmap_fragment="float metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n\n#endif\n",te.ShaderChunk.metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif",te.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n",te.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif",te.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n",te.ShaderChunk.normal_fragment="#ifdef FLAT_SHADED\n\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n\t#endif\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n",te.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",te.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n",te.ShaderChunk.roughnessmap_fragment="float roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n\n#endif\n",te.ShaderChunk.roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif",te.ShaderChunk.shadowmap_fragment="vec3 shadowMask = vec3( 1.0 );\n\n#ifdef USE_SHADOWMAP\n\n\tfloat shadows[ NUM_SHADOWS ];\n\n\tfor ( int i = 0; i < NUM_SHADOWS; i ++ ) {\n\n\t\tfloat texelSizeY =  1.0 / shadowMapSize[ i ].y;\n\n\t\tfloat shadow = 0.0;\n\n#ifdef POINT_LIGHT_SHADOWS\n\n\t\t// to save on uniform space, we use the sign of @shadowDarkness[ i ] to determine\n\t\t// whether or not this light is a point light ( shadowDarkness[ i ] < 0 == point light)\n\t\tbool isPointLight = shadowDarkness[ i ] < 0.0;\n\n\t\tif ( isPointLight ) {\n\n\t\t\t// get the real shadow darkness\n\t\t\tfloat realShadowDarkness = abs( shadowDarkness[ i ] );\n\n\t\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t\t// the distance from the light to the world-space position of the fragment.\n\t\t\tvec3 lightToPosition = vShadowCoord[ i ].xyz;\n\n\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t// bd3D = base direction 3D\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\t// dp = distance from light to fragment position\n\t\t\tfloat dp = length( lightToPosition );\n\n\t\t\t// base measurement\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\t// Dr = disk radius\n\n\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tconst float Dr = 1.25;\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tconst float Dr = 2.25;\n\t#endif\n\n\t\t\t// os = offset scale\n\t\t\tfloat os = Dr *  2.0 * texelSizeY;\n\n\t\t\tconst vec3 Gsd = vec3( - 1, 0, 1 );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tshadow *= realShadowDarkness * ( 1.0 / 21.0 );\n\n\t#else // no percentage-closer filtering:\n\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tfloat dp = length( lightToPosition );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tshadow *= realShadowDarkness;\n\n\t#endif\n\n\t\t} else {\n\n#endif // POINT_LIGHT_SHADOWS\n\n\t\t\tfloat texelSizeX =  1.0 / shadowMapSize[ i ].x;\n\n\t\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t\tbool frustumTest = all( frustumTestVec );\n\n\t\t\tif ( frustumTest ) {\n\n\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t// Percentage-close filtering\n\t\t\t\t// (9 pixel kernel)\n\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\t\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\t\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\t\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\t\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\t\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\t\tshadow += 1.0;\n\t\t\t\t\t}\n\t\t\t\t\tshadow /= 9.0;\n\t\t\t\t*/\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tconst float ShadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = texelSizeX;\n\t\t\t\tfloat yPixelOffset = texelSizeY;\n\n\t\t\t\tfloat dx0 = - 1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = - 1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfloat fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tshadow *= shadowDarkness[ i ];\n\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t// Percentage-close filtering\n\t\t\t\t// (9 pixel kernel)\n\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tfloat xPixelOffset = texelSizeX;\n\t\t\t\tfloat yPixelOffset = texelSizeY;\n\n\t\t\t\tfloat dx0 = - 1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = - 1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[ 0 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[ 0 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[ 0 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[ 1 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[ 1 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[ 1 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[ 0 ] = vec3( lessThan( depthKernel[ 0 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 0 ] *= vec3( 0.25 );\n\n\t\t\t\tshadowKernel[ 1 ] = vec3( lessThan( depthKernel[ 1 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 1 ] *= vec3( 0.25 );\n\n\t\t\t\tshadowKernel[ 2 ] = vec3( lessThan( depthKernel[ 2 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 2 ] *= vec3( 0.25 );\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[ i ].xy );\n\n\t\t\t\tshadowKernel[ 0 ] = mix( shadowKernel[ 1 ], shadowKernel[ 0 ], fractionalCoord.x );\n\t\t\t\tshadowKernel[ 1 ] = mix( shadowKernel[ 2 ], shadowKernel[ 1 ], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[ 0 ][ 1 ], shadowKernel[ 0 ][ 0 ], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[ 0 ][ 2 ], shadowKernel[ 0 ][ 1 ], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[ 1 ][ 1 ], shadowKernel[ 1 ][ 0 ], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[ 1 ][ 2 ], shadowKernel[ 1 ][ 1 ], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) ) * shadowDarkness[ i ];\n\n\t#else // no percentage-closer filtering:\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\tshadow = shadowDarkness[ i ];\n\n\t#endif\n\n\t\t\t}\n\n#ifdef SHADOWMAP_DEBUG\n\n\t\t\tif ( inFrustum ) {\n\n\t\t\t\tif ( i == 0 ) {\n\n\t\t\t\t\toutgoingLight *= vec3( 1.0, 0.5, 0.0 );\n\n\t\t\t\t} else if ( i == 1 ) {\n\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 1.0, 0.8 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 0.5, 1.0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n#endif\n\n#ifdef POINT_LIGHT_SHADOWS\n\n\t\t}\n\n#endif\n\n\t\tshadowMask = shadowMask * vec3( 1.0 - shadow );\n\n\t\tshadows[ i ] = 1.0 - shadow;\n\n\t}\n\n#endif\n",te.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ NUM_SHADOWS ];\n\tuniform vec2 shadowMapSize[ NUM_SHADOWS ];\n\n\tuniform float shadowDarkness[ NUM_SHADOWS ];\n\tuniform float shadowBias[ NUM_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ NUM_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n\t#ifdef POINT_LIGHT_SHADOWS\n\n\t\t// adjustShadowValue1K() upacks the depth value stored in @textureData, adds @bias to it, and then\n\t\t// comapres the result with @testDepth. If @testDepth is larger than or equal to that result, then\n\t\t// @shadowValue is incremented by 1.0.\n\n\t\tvoid adjustShadowValue1K( const float testDepth, const vec4 textureData, const float bias, inout float shadowValue ) {\n\n\t\t\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\t\tif ( testDepth >= dot( textureData, bitSh ) * 1000.0 + bias )\n\t\t\t\tshadowValue += 1.0;\n\n\t\t}\n\n\t\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t\t// 2D texture:\n\t\t//\n\t\t// xzXZ\n\t\t//  y Y\n\t\t//\n\t\t// Y - Positive y direction\n\t\t// y - Negative y direction\n\t\t// X - Positive x direction\n\t\t// x - Negative x direction\n\t\t// Z - Positive z direction\n\t\t// z - Negative z direction\n\t\t//\n\t\t// Source and test bed:\n\t\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\t\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t\t// Number of texels to avoid at the edge of each square\n\n\t\t\tvec3 absV = abs( v );\n\n\t\t\t// Intersect unit cube\n\n\t\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\t\tabsV *= scaleToCube;\n\n\t\t\t// Apply scale to avoid seams\n\n\t\t\t// two texels less per square (one texel will do for NEAREST)\n\t\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t\t// Unwrap\n\n\t\t\t// space: -1 ... 1 range for each square\n\t\t\t//\n\t\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\t\tvec2 planar = v.xy;\n\n\t\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\t\tif ( absV.z >= almostOne ) {\n\n\t\t\t\tif ( v.z > 0.0 )\n\t\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\t\tfloat signX = sign( v.x );\n\t\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\t\tfloat signY = sign( v.y );\n\t\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t\t}\n\n\t\t\t// Transform to UV space\n\n\t\t\t// scale := 0.5 / dim\n\t\t\t// translate := ( center + 0.5 ) / dim\n\t\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t\t}\n\n\t#endif\n\n#endif\n",te.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tuniform mat4 shadowMatrix[ NUM_SHADOWS ];\n\tvarying vec4 vShadowCoord[ NUM_SHADOWS ];\n\n#endif\n",te.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor ( int i = 0; i < NUM_SHADOWS; i ++ ) {\n\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif",te.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",te.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",te.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n",te.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n",te.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif",te.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif",te.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif",te.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n#endif",te.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = uv2;\n\n#endif",te.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvarying vec2 vUv;\n\n#endif",te.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n",te.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",te.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n\t#endif\n\n#endif\n",te.UniformsUtils={merge:function(e){for(var t={},n=0;n<e.length;n++){var r=this.clone(e[n]);for(var s in r)t[s]=r[s]}return t},clone:function(e){var t={};for(var n in e)for(var r in t[n]={},e[n]){var s=e[n][r];s instanceof te.Color||s instanceof te.Vector2||s instanceof te.Vector3||s instanceof te.Vector4||s instanceof te.Matrix3||s instanceof te.Matrix4||s instanceof te.Texture?t[n][r]=s.clone():Array.isArray(s)?t[n][r]=s.slice():t[n][r]=s}return t}},te.UniformsLib={common:{diffuse:{type:"c",value:new te.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new te.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new te.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"f",value:1},displacementBias:{type:"f",value:0}},roughnessmap:{roughnessMap:{type:"t",value:null}},metalnessmap:{metalnessMap:{type:"t",value:null}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new te.Color(16777215)}},ambient:{ambientLightColor:{type:"fv",value:[]}},lights:{directionalLights:{type:"sa",value:[],properties:{direction:{type:"v3"},color:{type:"c"},shadow:{type:"i"}}},hemisphereLights:{type:"sa",value:[],properties:{direction:{type:"v3"},skyColor:{type:"c"},groundColor:{type:"c"}}},pointLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},decay:{type:"f"},distance:{type:"f"},shadow:{type:"i"}}},spotLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},direction:{type:"v3"},distance:{type:"f"},angleCos:{type:"f"},exponent:{type:"f"},decay:{type:"f"},shadow:{type:"i"}}}},points:{diffuse:{type:"c",value:new te.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new te.Vector4(0,0,1,1)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},te.ShaderLib={basic:{uniforms:te.UniformsUtils.merge([te.UniformsLib.common,te.UniformsLib.aomap,te.UniformsLib.fog,te.UniformsLib.shadowmap]),vertexShader:[te.ShaderChunk.common,te.ShaderChunk.uv_pars_vertex,te.ShaderChunk.uv2_pars_vertex,te.ShaderChunk.envmap_pars_vertex,te.ShaderChunk.color_pars_vertex,te.ShaderChunk.morphtarget_pars_vertex,te.ShaderChunk.skinning_pars_vertex,te.ShaderChunk.shadowmap_pars_vertex,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",te.ShaderChunk.uv_vertex,te.ShaderChunk.uv2_vertex,te.ShaderChunk.color_vertex,te.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",te.ShaderChunk.beginnormal_vertex,te.ShaderChunk.morphnormal_vertex,te.ShaderChunk.skinnormal_vertex,te.ShaderChunk.defaultnormal_vertex,"\t#endif",te.ShaderChunk.begin_vertex,te.ShaderChunk.morphtarget_vertex,te.ShaderChunk.skinning_vertex,te.ShaderChunk.project_vertex,te.ShaderChunk.logdepthbuf_vertex,te.ShaderChunk.worldpos_vertex,te.ShaderChunk.envmap_vertex,te.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif",te.ShaderChunk.common,te.ShaderChunk.color_pars_fragment,te.ShaderChunk.uv_pars_fragment,te.ShaderChunk.uv2_pars_fragment,te.ShaderChunk.map_pars_fragment,te.ShaderChunk.alphamap_pars_fragment,te.ShaderChunk.aomap_pars_fragment,te.ShaderChunk.envmap_pars_fragment,te.ShaderChunk.fog_pars_fragment,te.ShaderChunk.shadowmap_pars_fragment,te.ShaderChunk.specularmap_pars_fragment,te.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec4 diffuseColor = vec4( diffuse, opacity );",te.ShaderChunk.logdepthbuf_fragment,te.ShaderChunk.map_fragment,te.ShaderChunk.color_fragment,te.ShaderChunk.alphamap_fragment,te.ShaderChunk.alphatest_fragment,te.ShaderChunk.specularmap_fragment,"\tReflectedLight reflectedLight;","\treflectedLight.directDiffuse = vec3( 0.0 );","\treflectedLight.directSpecular = vec3( 0.0 );","\treflectedLight.indirectDiffuse = diffuseColor.rgb;","\treflectedLight.indirectSpecular = vec3( 0.0 );",te.ShaderChunk.aomap_fragment,te.ShaderChunk.shadowmap_fragment,"reflectedLight.indirectDiffuse *= shadowMask;","vec3 outgoingLight = reflectedLight.indirectDiffuse;",te.ShaderChunk.envmap_fragment,te.ShaderChunk.linear_to_gamma_fragment,te.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},lambert:{uniforms:te.UniformsUtils.merge([te.UniformsLib.common,te.UniformsLib.aomap,te.UniformsLib.lightmap,te.UniformsLib.emissivemap,te.UniformsLib.fog,te.UniformsLib.ambient,te.UniformsLib.lights,te.UniformsLib.shadowmap,{emissive:{type:"c",value:new te.Color(0)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",te.ShaderChunk.common,te.ShaderChunk.uv_pars_vertex,te.ShaderChunk.uv2_pars_vertex,te.ShaderChunk.envmap_pars_vertex,te.ShaderChunk.bsdfs,te.ShaderChunk.lights_pars,te.ShaderChunk.color_pars_vertex,te.ShaderChunk.morphtarget_pars_vertex,te.ShaderChunk.skinning_pars_vertex,te.ShaderChunk.shadowmap_pars_vertex,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",te.ShaderChunk.uv_vertex,te.ShaderChunk.uv2_vertex,te.ShaderChunk.color_vertex,te.ShaderChunk.beginnormal_vertex,te.ShaderChunk.morphnormal_vertex,te.ShaderChunk.skinbase_vertex,te.ShaderChunk.skinnormal_vertex,te.ShaderChunk.defaultnormal_vertex,te.ShaderChunk.begin_vertex,te.ShaderChunk.morphtarget_vertex,te.ShaderChunk.skinning_vertex,te.ShaderChunk.project_vertex,te.ShaderChunk.logdepthbuf_vertex,te.ShaderChunk.worldpos_vertex,te.ShaderChunk.envmap_vertex,te.ShaderChunk.lights_lambert_vertex,te.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform vec3 emissive;","uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",te.ShaderChunk.common,te.ShaderChunk.color_pars_fragment,te.ShaderChunk.uv_pars_fragment,te.ShaderChunk.uv2_pars_fragment,te.ShaderChunk.map_pars_fragment,te.ShaderChunk.alphamap_pars_fragment,te.ShaderChunk.aomap_pars_fragment,te.ShaderChunk.lightmap_pars_fragment,te.ShaderChunk.emissivemap_pars_fragment,te.ShaderChunk.envmap_pars_fragment,te.ShaderChunk.ambient_pars,te.ShaderChunk.fog_pars_fragment,te.ShaderChunk.shadowmap_pars_fragment,te.ShaderChunk.specularmap_pars_fragment,te.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );","\tvec3 totalAmbientLight = getAmbientLightIrradiance( ambientLightColor );","\tvec3 totalEmissiveLight = emissive;",te.ShaderChunk.logdepthbuf_fragment,te.ShaderChunk.map_fragment,te.ShaderChunk.color_fragment,te.ShaderChunk.alphamap_fragment,te.ShaderChunk.alphatest_fragment,te.ShaderChunk.specularmap_fragment,te.ShaderChunk.emissivemap_fragment,te.ShaderChunk.shadowmap_fragment,"\t#ifdef USE_LIGHTMAP","\t\ttotalAmbientLight += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;","\t#endif","\t#ifdef USE_AOMAP","\t\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;","\t#endif","\t#ifdef DOUBLE_SIDED","\t\tif ( gl_FrontFacing )","\t\t\toutgoingLight += RECIPROCAL_PI * diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + totalEmissiveLight;","\t\telse","\t\t\toutgoingLight += RECIPROCAL_PI * diffuseColor.rgb * ( vLightBack * shadowMask + totalAmbientLight ) + totalEmissiveLight;","\t#else","\t\toutgoingLight += RECIPROCAL_PI * diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + totalEmissiveLight;","\t#endif",te.ShaderChunk.envmap_fragment,te.ShaderChunk.linear_to_gamma_fragment,te.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},phong:{uniforms:te.UniformsUtils.merge([te.UniformsLib.common,te.UniformsLib.aomap,te.UniformsLib.lightmap,te.UniformsLib.emissivemap,te.UniformsLib.bumpmap,te.UniformsLib.normalmap,te.UniformsLib.displacementmap,te.UniformsLib.fog,te.UniformsLib.ambient,te.UniformsLib.lights,te.UniformsLib.shadowmap,{emissive:{type:"c",value:new te.Color(0)},specular:{type:"c",value:new te.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif",te.ShaderChunk.common,te.ShaderChunk.uv_pars_vertex,te.ShaderChunk.uv2_pars_vertex,te.ShaderChunk.displacementmap_pars_vertex,te.ShaderChunk.envmap_pars_vertex,te.ShaderChunk.lights_phong_pars_vertex,te.ShaderChunk.color_pars_vertex,te.ShaderChunk.morphtarget_pars_vertex,te.ShaderChunk.skinning_pars_vertex,te.ShaderChunk.shadowmap_pars_vertex,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",te.ShaderChunk.uv_vertex,te.ShaderChunk.uv2_vertex,te.ShaderChunk.color_vertex,te.ShaderChunk.beginnormal_vertex,te.ShaderChunk.morphnormal_vertex,te.ShaderChunk.skinbase_vertex,te.ShaderChunk.skinnormal_vertex,te.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","\tvNormal = normalize( transformedNormal );","#endif",te.ShaderChunk.begin_vertex,te.ShaderChunk.displacementmap_vertex,te.ShaderChunk.morphtarget_vertex,te.ShaderChunk.skinning_vertex,te.ShaderChunk.project_vertex,te.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = - mvPosition.xyz;",te.ShaderChunk.worldpos_vertex,te.ShaderChunk.envmap_vertex,te.ShaderChunk.lights_phong_vertex,te.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;",te.ShaderChunk.common,te.ShaderChunk.color_pars_fragment,te.ShaderChunk.uv_pars_fragment,te.ShaderChunk.uv2_pars_fragment,te.ShaderChunk.map_pars_fragment,te.ShaderChunk.alphamap_pars_fragment,te.ShaderChunk.aomap_pars_fragment,te.ShaderChunk.lightmap_pars_fragment,te.ShaderChunk.emissivemap_pars_fragment,te.ShaderChunk.envmap_pars_fragment,te.ShaderChunk.fog_pars_fragment,te.ShaderChunk.bsdfs,te.ShaderChunk.ambient_pars,te.ShaderChunk.lights_pars,te.ShaderChunk.lights_phong_pars_fragment,te.ShaderChunk.shadowmap_pars_fragment,te.ShaderChunk.bumpmap_pars_fragment,te.ShaderChunk.normalmap_pars_fragment,te.ShaderChunk.specularmap_pars_fragment,te.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec4 diffuseColor = vec4( diffuse, opacity );","\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","\tvec3 totalEmissiveLight = emissive;",te.ShaderChunk.logdepthbuf_fragment,te.ShaderChunk.map_fragment,te.ShaderChunk.color_fragment,te.ShaderChunk.alphamap_fragment,te.ShaderChunk.alphatest_fragment,te.ShaderChunk.specularmap_fragment,te.ShaderChunk.normal_fragment,te.ShaderChunk.emissivemap_fragment,te.ShaderChunk.shadowmap_fragment,te.ShaderChunk.lights_phong_fragment,te.ShaderChunk.lights_template,te.ShaderChunk.aomap_fragment,"vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;",te.ShaderChunk.envmap_fragment,te.ShaderChunk.linear_to_gamma_fragment,te.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},standard:{uniforms:te.UniformsUtils.merge([te.UniformsLib.common,te.UniformsLib.aomap,te.UniformsLib.lightmap,te.UniformsLib.emissivemap,te.UniformsLib.bumpmap,te.UniformsLib.normalmap,te.UniformsLib.displacementmap,te.UniformsLib.roughnessmap,te.UniformsLib.metalnessmap,te.UniformsLib.fog,te.UniformsLib.ambient,te.UniformsLib.lights,te.UniformsLib.shadowmap,{emissive:{type:"c",value:new te.Color(0)},roughness:{type:"f",value:.5},metalness:{type:"f",value:0},envMapIntensity:{type:"f",value:1}}]),vertexShader:["#define STANDARD","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif",te.ShaderChunk.common,te.ShaderChunk.uv_pars_vertex,te.ShaderChunk.uv2_pars_vertex,te.ShaderChunk.displacementmap_pars_vertex,te.ShaderChunk.envmap_pars_vertex,te.ShaderChunk.color_pars_vertex,te.ShaderChunk.morphtarget_pars_vertex,te.ShaderChunk.skinning_pars_vertex,te.ShaderChunk.shadowmap_pars_vertex,te.ShaderChunk.specularmap_pars_fragment,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",te.ShaderChunk.uv_vertex,te.ShaderChunk.uv2_vertex,te.ShaderChunk.color_vertex,te.ShaderChunk.beginnormal_vertex,te.ShaderChunk.morphnormal_vertex,te.ShaderChunk.skinbase_vertex,te.ShaderChunk.skinnormal_vertex,te.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","\tvNormal = normalize( transformedNormal );","#endif",te.ShaderChunk.begin_vertex,te.ShaderChunk.displacementmap_vertex,te.ShaderChunk.morphtarget_vertex,te.ShaderChunk.skinning_vertex,te.ShaderChunk.project_vertex,te.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = - mvPosition.xyz;",te.ShaderChunk.worldpos_vertex,te.ShaderChunk.envmap_vertex,te.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define STANDARD","uniform vec3 diffuse;","uniform vec3 emissive;","uniform float roughness;","uniform float metalness;","uniform float opacity;","uniform float envMapIntensity;","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif",te.ShaderChunk.common,te.ShaderChunk.color_pars_fragment,te.ShaderChunk.uv_pars_fragment,te.ShaderChunk.uv2_pars_fragment,te.ShaderChunk.map_pars_fragment,te.ShaderChunk.alphamap_pars_fragment,te.ShaderChunk.aomap_pars_fragment,te.ShaderChunk.lightmap_pars_fragment,te.ShaderChunk.emissivemap_pars_fragment,te.ShaderChunk.envmap_pars_fragment,te.ShaderChunk.fog_pars_fragment,te.ShaderChunk.bsdfs,te.ShaderChunk.ambient_pars,te.ShaderChunk.lights_pars,te.ShaderChunk.lights_standard_pars_fragment,te.ShaderChunk.shadowmap_pars_fragment,te.ShaderChunk.bumpmap_pars_fragment,te.ShaderChunk.normalmap_pars_fragment,te.ShaderChunk.roughnessmap_pars_fragment,te.ShaderChunk.metalnessmap_pars_fragment,te.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec4 diffuseColor = vec4( diffuse, opacity );","\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","\tvec3 totalEmissiveLight = emissive;",te.ShaderChunk.logdepthbuf_fragment,te.ShaderChunk.map_fragment,te.ShaderChunk.color_fragment,te.ShaderChunk.alphamap_fragment,te.ShaderChunk.alphatest_fragment,te.ShaderChunk.specularmap_fragment,te.ShaderChunk.roughnessmap_fragment,te.ShaderChunk.metalnessmap_fragment,te.ShaderChunk.normal_fragment,te.ShaderChunk.emissivemap_fragment,te.ShaderChunk.shadowmap_fragment,te.ShaderChunk.lights_standard_fragment,te.ShaderChunk.lights_template,te.ShaderChunk.aomap_fragment,"vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;",te.ShaderChunk.linear_to_gamma_fragment,te.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},points:{uniforms:te.UniformsUtils.merge([te.UniformsLib.points,te.UniformsLib.fog,te.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",te.ShaderChunk.common,te.ShaderChunk.color_pars_vertex,te.ShaderChunk.shadowmap_pars_vertex,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",te.ShaderChunk.color_vertex,te.ShaderChunk.begin_vertex,te.ShaderChunk.project_vertex,"\t#ifdef USE_SIZEATTENUATION","\t\tgl_PointSize = size * ( scale / - mvPosition.z );","\t#else","\t\tgl_PointSize = size;","\t#endif",te.ShaderChunk.logdepthbuf_vertex,te.ShaderChunk.worldpos_vertex,te.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",te.ShaderChunk.common,te.ShaderChunk.color_pars_fragment,te.ShaderChunk.map_particle_pars_fragment,te.ShaderChunk.fog_pars_fragment,te.ShaderChunk.shadowmap_pars_fragment,te.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );",te.ShaderChunk.logdepthbuf_fragment,te.ShaderChunk.map_particle_fragment,te.ShaderChunk.color_fragment,te.ShaderChunk.alphatest_fragment,te.ShaderChunk.shadowmap_fragment,"\toutgoingLight = diffuseColor.rgb * shadowMask;",te.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},dashed:{uniforms:te.UniformsUtils.merge([te.UniformsLib.common,te.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",te.ShaderChunk.common,te.ShaderChunk.color_pars_vertex,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",te.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;","\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\tgl_Position = projectionMatrix * mvPosition;",te.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",te.ShaderChunk.common,te.ShaderChunk.color_pars_fragment,te.ShaderChunk.fog_pars_fragment,te.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tif ( mod( vLineDistance, totalSize ) > dashSize ) {","\t\tdiscard;","\t}","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );",te.ShaderChunk.logdepthbuf_fragment,te.ShaderChunk.color_fragment,"\toutgoingLight = diffuseColor.rgb;",te.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[te.ShaderChunk.common,te.ShaderChunk.morphtarget_pars_vertex,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",te.ShaderChunk.begin_vertex,te.ShaderChunk.morphtarget_vertex,te.ShaderChunk.project_vertex,te.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",te.ShaderChunk.common,te.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",te.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;","\t#else","\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;","\t#endif","\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );","\tgl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",te.ShaderChunk.common,te.ShaderChunk.morphtarget_pars_vertex,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvNormal = normalize( normalMatrix * normal );",te.ShaderChunk.begin_vertex,te.ShaderChunk.morphtarget_vertex,te.ShaderChunk.project_vertex,te.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",te.ShaderChunk.common,te.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",te.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",te.ShaderChunk.common,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvWorldPosition = transformDirection( position, modelMatrix );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",te.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",te.ShaderChunk.common,te.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",te.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",te.ShaderChunk.common,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvWorldPosition = transformDirection( position, modelMatrix );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",te.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","uniform float tFlip;","varying vec3 vWorldPosition;",te.ShaderChunk.common,te.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","vec3 direction = normalize( vWorldPosition );","vec2 sampleUV;","sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );","sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","gl_FragColor = texture2D( tEquirect, sampleUV );",te.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[te.ShaderChunk.common,te.ShaderChunk.morphtarget_pars_vertex,te.ShaderChunk.skinning_pars_vertex,te.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",te.ShaderChunk.skinbase_vertex,te.ShaderChunk.begin_vertex,te.ShaderChunk.morphtarget_vertex,te.ShaderChunk.skinning_vertex,te.ShaderChunk.project_vertex,te.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[te.ShaderChunk.common,te.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","\tres -= res.xxyz * bit_mask;","\treturn res;","}","void main() {",te.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","\t#else","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","\t#endif","}"].join("\n")},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new te.Vector3(0,0,0)}},vertexShader:["varying vec4 vWorldPosition;",te.ShaderChunk.common,te.ShaderChunk.morphtarget_pars_vertex,te.ShaderChunk.skinning_pars_vertex,"void main() {",te.ShaderChunk.skinbase_vertex,te.ShaderChunk.begin_vertex,te.ShaderChunk.morphtarget_vertex,te.ShaderChunk.skinning_vertex,te.ShaderChunk.project_vertex,te.ShaderChunk.worldpos_vertex,"vWorldPosition = worldPosition;","}"].join("\n"),fragmentShader:["uniform vec3 lightPos;","varying vec4 vWorldPosition;",te.ShaderChunk.common,"vec4 pack1K ( float depth ) {","   depth /= 1000.0;","   const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","\tvec4 res = fract( depth * bitSh );","\tres -= res.xxyz * bitMsk;","\treturn res; ","}","float unpack1K ( vec4 color ) {","\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","\treturn dot( color, bitSh ) * 1000.0;","}","void main () {","\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );","}"].join("\n")}},te.WebGLRenderer=function(e){console.log("THREE.WebGLRenderer",te.REVISION);var t=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),n=void 0!==e.context?e.context:null,r=t.width,s=t.height,i=1,a=void 0!==e.alpha&&e.alpha,o=void 0===e.depth||e.depth,l=void 0===e.stencil||e.stencil,u=void 0!==e.antialias&&e.antialias,c=void 0===e.premultipliedAlpha||e.premultipliedAlpha,h=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,d=new te.Color(0),p=0,f=[],m=[],g=-1,y=[],b=-1,v=new Float32Array(8),x=[],w=[];this.domElement=t,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0;var k,S=this,E=null,I=null,T=null,C=null,N=-1,A="",M=null,_=0,R=new te.Vector4(0,0,t.width,t.height),D=!1,$=new te.Vector4(0,0,t.width,t.height),L=new te.Frustum,F=new te.Matrix4,O=new te.Vector3,z={hash:"",ambient:[0,0,0],directional:[],point:[],spot:[],hemi:[],shadows:[],shadowsPointLight:0},P={geometries:0,textures:0},B={calls:0,vertices:0,faces:0,points:0};this.info={render:B,memory:P,programs:null};try{var V={alpha:a,depth:o,stencil:l,antialias:u,premultipliedAlpha:c,preserveDrawingBuffer:h};if(null===(k=n||t.getContext("webgl",V)||t.getContext("experimental-webgl",V)))throw null!==t.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";t.addEventListener("webglcontextlost",ae,!1)}catch(e){console.error("THREE.WebGLRenderer: "+e)}var U=new te.WebGLExtensions(k);U.get("OES_texture_float"),U.get("OES_texture_float_linear"),U.get("OES_texture_half_float"),U.get("OES_texture_half_float_linear"),U.get("OES_standard_derivatives"),U.get("ANGLE_instanced_arrays"),U.get("OES_element_index_uint")&&(te.BufferGeometry.MaxIndex=4294967296);var H=new te.WebGLCapabilities(k,U,e),W=new te.WebGLState(k,U,Me),G=new te.WebGLProperties,j=new te.WebGLObjects(k,G,this.info),q=new te.WebGLPrograms(this,H),K=new te.WebGLLights;this.info.programs=q.programs;var X=new te.WebGLBufferRenderer(k,U,B),Z=new te.WebGLIndexedBufferRenderer(k,U,B);function Q(){return null===T?i:1}function Y(e,t,n,r){!0===c&&(e*=r,t*=r,n*=r),k.clearColor(e,t,n,r)}function J(){W.init(),W.scissor(R),W.viewport($),Y(d.r,d.g,d.b,p)}function ee(){I=null,M=null,A="",N=-1,W.reset()}J(),this.context=k,this.capabilities=H,this.extensions=U,this.properties=G,this.state=W;var ne=new te.WebGLShadowMap(this,z,j);this.shadowMap=ne;var re,se=new te.SpritePlugin(this,x),ie=new te.LensFlarePlugin(this,w);function ae(e){e.preventDefault(),ee(),J(),G.clear()}function oe(e){var t=e.target;t.removeEventListener("dispose",oe),function(e){var t=G.get(e);if(e.image&&t.__image__webglTextureCube)k.deleteTexture(t.__image__webglTextureCube);else{if(void 0===t.__webglInit)return;k.deleteTexture(t.__webglTexture)}G.delete(e)}(t),P.textures--}function le(e){var t=e.target;t.removeEventListener("dispose",le),function(e){var t=G.get(e),n=G.get(e.texture);if(e&&void 0!==n.__webglTexture){if(k.deleteTexture(n.__webglTexture),e instanceof te.WebGLRenderTargetCube)for(var r=0;r<6;r++)k.deleteFramebuffer(t.__webglFramebuffer[r]),k.deleteRenderbuffer(t.__webglDepthbuffer[r]);else k.deleteFramebuffer(t.__webglFramebuffer),k.deleteRenderbuffer(t.__webglDepthbuffer);G.delete(e.texture),G.delete(e)}}(t),P.textures--}function ue(e){var t=e.target;t.removeEventListener("dispose",ue),function(e){ce(e),G.delete(e)}(t)}function ce(e){var t=G.get(e).program;e.program=void 0,void 0!==t&&q.releaseProgram(t)}function he(e,t){return Math.abs(t[0])-Math.abs(e[0])}function de(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function pe(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function fe(e,t,n,r,s){var i,a;n.transparent?(i=y,a=++b):(i=m,a=++g);var o=i[a];void 0!==o?(o.id=e.id,o.object=e,o.geometry=t,o.material=n,o.z=O.z,o.group=s):(o={id:e.id,object:e,geometry:t,material:n,z:O.z,group:s},i.push(o))}function me(e,t){if(!1!==e.visible){if(e.layers.test(t.layers))if(e instanceof te.Light)f.push(e);else if(e instanceof te.Sprite)!1!==e.frustumCulled&&!0!==L.intersectsObject(e)||x.push(e);else if(e instanceof te.LensFlare)w.push(e);else if(e instanceof te.ImmediateRenderObject)!0===S.sortObjects&&(O.setFromMatrixPosition(e.matrixWorld),O.applyProjection(F)),fe(e,null,e.material,O.z,null);else if((e instanceof te.Mesh||e instanceof te.Line||e instanceof te.Points)&&(e instanceof te.SkinnedMesh&&e.skeleton.update(),!1===e.frustumCulled||!0===L.intersectsObject(e))){var n=e.material;if(!0===n.visible){!0===S.sortObjects&&(O.setFromMatrixPosition(e.matrixWorld),O.applyProjection(F));var r=j.update(e);if(n instanceof te.MultiMaterial)for(var s=r.groups,i=n.materials,a=0,o=s.length;a<o;a++){var l=s[a],u=i[l.materialIndex];!0===u.visible&&fe(e,r,u,O.z,l)}else fe(e,r,n,O.z,null)}}var c=e.children;for(a=0,o=c.length;a<o;a++)me(c[a],t)}}function ge(e,t,n,r){for(var s=0,i=e.length;s<i;s++){var a=e[s],o=a.object,l=a.geometry,u=void 0===r?a.material:r,c=a.group;if(o.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,o.matrixWorld),o.normalMatrix.getNormalMatrix(o.modelViewMatrix),o instanceof te.ImmediateRenderObject){ye(u);var h=be(t,n,u,o);A="",o.render((function(e){S.renderBufferImmediate(e,h,u)}))}else S.renderBufferDirect(t,n,l,u,o,c)}}function ye(e){!function(e){e.side!==te.DoubleSide?W.enable(k.CULL_FACE):W.disable(k.CULL_FACE),W.setFlipSided(e.side===te.BackSide)}(e),!0===e.transparent?W.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha):W.setBlending(te.NoBlending),W.setDepthFunc(e.depthFunc),W.setDepthTest(e.depthTest),W.setDepthWrite(e.depthWrite),W.setColorWrite(e.colorWrite),W.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function be(e,n,r,s){_=0;var i=G.get(r);void 0===i.program&&(r.needsUpdate=!0),void 0!==i.lightsHash&&i.lightsHash!==z.hash&&(r.needsUpdate=!0),r.needsUpdate&&(function(e,t,n){var r=G.get(e),s=q.getParameters(e,z,t,n),i=q.getProgramCode(e,s),a=r.program,o=!0;if(void 0===a)e.addEventListener("dispose",ue);else if(a.code!==i)ce(e);else{if(void 0!==s.shaderID)return;o=!1}if(o){if(s.shaderID){var l=te.ShaderLib[s.shaderID];r.__webglShader={name:e.type,uniforms:te.UniformsUtils.clone(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}}else r.__webglShader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};e.__webglShader=r.__webglShader,a=q.acquireProgram(e,s,i),r.program=a,e.program=a}var u=a.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var c=0;c<S.maxMorphTargets;c++)u["morphTarget"+c]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals)for(e.numSupportedMorphNormals=0,c=0;c<S.maxMorphNormals;c++)u["morphNormal"+c]>=0&&e.numSupportedMorphNormals++;r.uniformsList=[];var h=r.__webglShader.uniforms,d=r.program.getUniforms();for(var p in h){var f=d[p];f&&r.uniformsList.push([r.__webglShader.uniforms[p],f])}(e instanceof te.MeshPhongMaterial||e instanceof te.MeshLambertMaterial||e instanceof te.MeshStandardMaterial||e.lights)&&(r.lightsHash=z.hash,h.ambientLightColor.value=z.ambient,h.directionalLights.value=z.directional,h.pointLights.value=z.point,h.spotLights.value=z.spot,h.hemisphereLights.value=z.hemi),r.hasDynamicUniforms=!1;for(var m=0,g=r.uniformsList.length;m<g;m++)if(!0===r.uniformsList[m][0].dynamic){r.hasDynamicUniforms=!0;break}}(r,n,s),r.needsUpdate=!1);var a=!1,o=!1,l=!1,u=i.program,c=u.getUniforms(),h=i.__webglShader.uniforms;if(u.id!==I&&(k.useProgram(u.program),I=u.id,a=!0,o=!0,l=!0),r.id!==N&&(N=r.id,o=!0),(a||e!==M)&&(k.uniformMatrix4fv(c.projectionMatrix,!1,e.projectionMatrix.elements),H.logarithmicDepthBuffer&&k.uniform1f(c.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==M&&(M=e,o=!0,l=!0),(r instanceof te.ShaderMaterial||r instanceof te.MeshPhongMaterial||r instanceof te.MeshStandardMaterial||r.envMap)&&void 0!==c.cameraPosition&&(O.setFromMatrixPosition(e.matrixWorld),k.uniform3f(c.cameraPosition,O.x,O.y,O.z)),(r instanceof te.MeshPhongMaterial||r instanceof te.MeshLambertMaterial||r instanceof te.MeshBasicMaterial||r instanceof te.MeshStandardMaterial||r instanceof te.ShaderMaterial||r.skinning)&&void 0!==c.viewMatrix&&k.uniformMatrix4fv(c.viewMatrix,!1,e.matrixWorldInverse.elements)),r.skinning)if(s.bindMatrix&&void 0!==c.bindMatrix&&k.uniformMatrix4fv(c.bindMatrix,!1,s.bindMatrix.elements),s.bindMatrixInverse&&void 0!==c.bindMatrixInverse&&k.uniformMatrix4fv(c.bindMatrixInverse,!1,s.bindMatrixInverse.elements),H.floatVertexTextures&&s.skeleton&&s.skeleton.useVertexTexture){if(void 0!==c.boneTexture){var d=xe();k.uniform1i(c.boneTexture,d),S.setTexture(s.skeleton.boneTexture,d)}void 0!==c.boneTextureWidth&&k.uniform1i(c.boneTextureWidth,s.skeleton.boneTextureWidth),void 0!==c.boneTextureHeight&&k.uniform1i(c.boneTextureHeight,s.skeleton.boneTextureHeight)}else s.skeleton&&s.skeleton.boneMatrices&&void 0!==c.boneGlobalMatrices&&k.uniformMatrix4fv(c.boneGlobalMatrices,!1,s.skeleton.boneMatrices);return o&&((r instanceof te.MeshPhongMaterial||r instanceof te.MeshLambertMaterial||r instanceof te.MeshStandardMaterial||r.lights)&&function(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLights.needsUpdate=t,e.pointLights.needsUpdate=t,e.spotLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}(h,l),n&&r.fog&&function(e,t){e.fogColor.value=t.color,t instanceof te.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof te.FogExp2&&(e.fogDensity.value=t.density)}(h,n),(r instanceof te.MeshBasicMaterial||r instanceof te.MeshLambertMaterial||r instanceof te.MeshPhongMaterial||r instanceof te.MeshStandardMaterial)&&function(e,t){var n;if(e.opacity.value=t.opacity,e.diffuse.value=t.color,t.emissive&&(e.emissive.value=t.emissive),e.map.value=t.map,e.specularMap.value=t.specularMap,e.alphaMap.value=t.alphaMap,t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity),t.map?n=t.map:t.specularMap?n=t.specularMap:t.displacementMap?n=t.displacementMap:t.normalMap?n=t.normalMap:t.bumpMap?n=t.bumpMap:t.roughnessMap?n=t.roughnessMap:t.metalnessMap?n=t.metalnessMap:t.alphaMap?n=t.alphaMap:t.emissiveMap&&(n=t.emissiveMap),void 0!==n){n instanceof te.WebGLRenderTarget&&(n=n.texture);var r=n.offset,s=n.repeat;e.offsetRepeat.value.set(r.x,r.y,s.x,s.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof te.WebGLRenderTargetCube?1:-1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio}(h,r),r instanceof te.LineBasicMaterial?ve(h,r):r instanceof te.LineDashedMaterial?(ve(h,r),function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(h,r)):r instanceof te.PointsMaterial?function(e,n){if(e.diffuse.value=n.color,e.opacity.value=n.opacity,e.size.value=n.size,e.scale.value=t.height/2,e.map.value=n.map,null!==n.map){var r=n.map.offset,s=n.map.repeat;e.offsetRepeat.value.set(r.x,r.y,s.x,s.y)}}(h,r):r instanceof te.MeshLambertMaterial?function(e,t){t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(h,r):r instanceof te.MeshPhongMaterial?function(e,t){e.specular.value=t.specular,e.shininess.value=Math.max(t.shininess,1e-4),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(h,r):r instanceof te.MeshStandardMaterial?function(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}(h,r):r instanceof te.MeshDepthMaterial?(h.mNear.value=e.near,h.mFar.value=e.far,h.opacity.value=r.opacity):r instanceof te.MeshNormalMaterial&&(h.opacity.value=r.opacity),ne.enabled&&s.receiveShadow&&!r._shadowPass&&function(e,t){if(e.shadowMatrix)for(var n=z.shadows,r=0,s=n.length;r<s;r++){var i=n[r],a=i.shadow;i instanceof te.PointLight?(O.setFromMatrixPosition(i.matrixWorld).negate(),a.matrix.identity().setPosition(O),e.shadowDarkness.value[r]=-a.darkness):e.shadowDarkness.value[r]=a.darkness,e.shadowBias.value[r]=a.bias,e.shadowMap.value[r]=a.map,e.shadowMapSize.value[r]=a.mapSize,e.shadowMatrix.value[r]=a.matrix}}(h),we(i.uniformsList)),function(e,t){k.uniformMatrix4fv(e.modelViewMatrix,!1,t.modelViewMatrix.elements),e.normalMatrix&&k.uniformMatrix3fv(e.normalMatrix,!1,t.normalMatrix.elements)}(c,s),void 0!==c.modelMatrix&&k.uniformMatrix4fv(c.modelMatrix,!1,s.matrixWorld.elements),!0===i.hasDynamicUniforms&&function(e,t,n){for(var r=[],s=0,i=e.length;s<i;s++){var a=e[s][0],o=a.onUpdateCallback;void 0!==o&&(o.bind(a)(t,n),r.push(e[s]))}we(r)}(i.uniformsList,s,e),u}function ve(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function xe(){var e=_;return e>=H.maxTextures&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+H.maxTextures),_+=1,e}function we(e){for(var t,n,r=0,s=e.length;r<s;r++){var i=e[r][0];if(!1!==i.needsUpdate){var a=i.type,o=i.value,l=e[r][1];switch(a){case"1i":case"i":k.uniform1i(l,o);break;case"1f":case"f":k.uniform1f(l,o);break;case"2f":k.uniform2f(l,o[0],o[1]);break;case"3f":k.uniform3f(l,o[0],o[1],o[2]);break;case"4f":k.uniform4f(l,o[0],o[1],o[2],o[3]);break;case"1iv":case"iv1":k.uniform1iv(l,o);break;case"3iv":case"iv":k.uniform3iv(l,o);break;case"1fv":case"fv1":k.uniform1fv(l,o);break;case"2fv":k.uniform2fv(l,o);break;case"3fv":case"fv":k.uniform3fv(l,o);break;case"4fv":k.uniform4fv(l,o);break;case"Matrix2fv":k.uniformMatrix2fv(l,!1,o);break;case"Matrix3fv":k.uniformMatrix3fv(l,!1,o);break;case"Matrix4fv":k.uniformMatrix4fv(l,!1,o);break;case"v2":k.uniform2f(l,o.x,o.y);break;case"v3":k.uniform3f(l,o.x,o.y,o.z);break;case"v4":k.uniform4f(l,o.x,o.y,o.z,o.w);break;case"c":k.uniform3f(l,o.r,o.g,o.b);break;case"sa":for(var u=0;u<o.length;u++)for(var c in i.properties){var h=i.properties[c],d=l[u][c],p=o[u][c];switch(h.type){case"i":k.uniform1i(d,p);break;case"f":k.uniform1f(d,p);break;case"v2":k.uniform2f(d,p.x,p.y);break;case"v3":k.uniform3f(d,p.x,p.y,p.z);break;case"v4":k.uniform4f(d,p.x,p.y,p.z,p.w);break;case"c":k.uniform3f(d,p.r,p.g,p.b)}}break;case"v2v":void 0===i._array&&(i._array=new Float32Array(2*o.length)),u=0;for(var f=0,m=o.length;u<m;u++,f+=2)i._array[f+0]=o[u].x,i._array[f+1]=o[u].y;k.uniform2fv(l,i._array);break;case"v3v":void 0===i._array&&(i._array=new Float32Array(3*o.length)),u=0;var g=0;for(m=o.length;u<m;u++,g+=3)i._array[g+0]=o[u].x,i._array[g+1]=o[u].y,i._array[g+2]=o[u].z;k.uniform3fv(l,i._array);break;case"v4v":void 0===i._array&&(i._array=new Float32Array(4*o.length)),u=0;var y=0;for(m=o.length;u<m;u++,y+=4)i._array[y+0]=o[u].x,i._array[y+1]=o[u].y,i._array[y+2]=o[u].z,i._array[y+3]=o[u].w;k.uniform4fv(l,i._array);break;case"m2":k.uniformMatrix2fv(l,!1,o.elements);break;case"m3":k.uniformMatrix3fv(l,!1,o.elements);break;case"m3v":for(void 0===i._array&&(i._array=new Float32Array(9*o.length)),u=0,m=o.length;u<m;u++)o[u].flattenToArrayOffset(i._array,9*u);k.uniformMatrix3fv(l,!1,i._array);break;case"m4":k.uniformMatrix4fv(l,!1,o.elements);break;case"m4v":for(void 0===i._array&&(i._array=new Float32Array(16*o.length)),u=0,m=o.length;u<m;u++)o[u].flattenToArrayOffset(i._array,16*u);k.uniformMatrix4fv(l,!1,i._array);break;case"t":if(t=o,n=xe(),k.uniform1i(l,n),!t)continue;t instanceof te.CubeTexture||Array.isArray(t.image)&&6===t.image.length?Ie(t,n):t instanceof te.WebGLRenderTargetCube?Te(t.texture,n):t instanceof te.WebGLRenderTarget?S.setTexture(t.texture,n):S.setTexture(t,n);break;case"tv":for(void 0===i._array&&(i._array=[]),u=0,m=i.value.length;u<m;u++)i._array[u]=xe();for(k.uniform1iv(l,i._array),u=0,m=i.value.length;u<m;u++)t=i.value[u],n=i._array[u],t&&(t instanceof te.CubeTexture||t.image instanceof Array&&6===t.image.length?Ie(t,n):t instanceof te.WebGLRenderTarget?S.setTexture(t.texture,n):t instanceof te.WebGLRenderTargetCube?Te(t.texture,n):S.setTexture(t,n));break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+a)}}}}function ke(e,t,n){var r;if(n?(k.texParameteri(e,k.TEXTURE_WRAP_S,Me(t.wrapS)),k.texParameteri(e,k.TEXTURE_WRAP_T,Me(t.wrapT)),k.texParameteri(e,k.TEXTURE_MAG_FILTER,Me(t.magFilter)),k.texParameteri(e,k.TEXTURE_MIN_FILTER,Me(t.minFilter))):(k.texParameteri(e,k.TEXTURE_WRAP_S,k.CLAMP_TO_EDGE),k.texParameteri(e,k.TEXTURE_WRAP_T,k.CLAMP_TO_EDGE),t.wrapS===te.ClampToEdgeWrapping&&t.wrapT===te.ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",t),k.texParameteri(e,k.TEXTURE_MAG_FILTER,Ae(t.magFilter)),k.texParameteri(e,k.TEXTURE_MIN_FILTER,Ae(t.minFilter)),t.minFilter!==te.NearestFilter&&t.minFilter!==te.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",t)),r=U.get("EXT_texture_filter_anisotropic")){if(t.type===te.FloatType&&null===U.get("OES_texture_float_linear"))return;if(t.type===te.HalfFloatType&&null===U.get("OES_texture_half_float_linear"))return;(t.anisotropy>1||G.get(t).__currentAnisotropy)&&(k.texParameterf(e,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,S.getMaxAnisotropy())),G.get(t).__currentAnisotropy=t.anisotropy)}}function Se(e,t){if(e.width>t||e.height>t){var n=t/Math.max(e.width,e.height),r=document.createElement("canvas");return r.width=Math.floor(e.width*n),r.height=Math.floor(e.height*n),r.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,r.width,r.height),console.warn("THREE.WebGLRenderer: image is too big ("+e.width+"x"+e.height+"). Resized to "+r.width+"x"+r.height,e),r}return e}function Ee(e){return te.Math.isPowerOfTwo(e.width)&&te.Math.isPowerOfTwo(e.height)}function Ie(e,t){var n=G.get(e);if(6===e.image.length)if(e.version>0&&n.__version!==e.version){n.__image__webglTextureCube||(e.addEventListener("dispose",oe),n.__image__webglTextureCube=k.createTexture(),P.textures++),W.activeTexture(k.TEXTURE0+t),W.bindTexture(k.TEXTURE_CUBE_MAP,n.__image__webglTextureCube),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof te.CompressedTexture,s=e.image[0]instanceof te.DataTexture,i=[],a=0;a<6;a++)!S.autoScaleCubemaps||r||s?i[a]=s?e.image[a].image:e.image[a]:i[a]=Se(e.image[a],H.maxCubemapSize);var o=Ee(i[0]),l=Me(e.format),u=Me(e.type);for(ke(k.TEXTURE_CUBE_MAP,e,o),a=0;a<6;a++)if(r)for(var c,h=i[a].mipmaps,d=0,p=h.length;d<p;d++)c=h[d],e.format!==te.RGBAFormat&&e.format!==te.RGBFormat?W.getCompressedTextureFormats().indexOf(l)>-1?W.compressedTexImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+a,d,l,c.width,c.height,0,c.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):W.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+a,d,l,c.width,c.height,0,l,u,c.data);else s?W.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,l,i[a].width,i[a].height,0,l,u,i[a].data):W.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,l,l,u,i[a]);e.generateMipmaps&&o&&k.generateMipmap(k.TEXTURE_CUBE_MAP),n.__version=e.version,e.onUpdate&&e.onUpdate(e)}else W.activeTexture(k.TEXTURE0+t),W.bindTexture(k.TEXTURE_CUBE_MAP,n.__image__webglTextureCube)}function Te(e,t){W.activeTexture(k.TEXTURE0+t),W.bindTexture(k.TEXTURE_CUBE_MAP,G.get(e).__webglTexture)}function Ce(e,t,n,r){var s=Me(t.texture.format),i=Me(t.texture.type);W.texImage2D(r,0,s,t.width,t.height,0,s,i,null),k.bindFramebuffer(k.FRAMEBUFFER,e),k.framebufferTexture2D(k.FRAMEBUFFER,n,r,G.get(t.texture).__webglTexture,0),k.bindFramebuffer(k.FRAMEBUFFER,null)}function Ne(e,t){k.bindRenderbuffer(k.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_COMPONENT16,t.width,t.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_ATTACHMENT,k.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_STENCIL,t.width,t.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_STENCIL_ATTACHMENT,k.RENDERBUFFER,e)):k.renderbufferStorage(k.RENDERBUFFER,k.RGBA4,t.width,t.height),k.bindRenderbuffer(k.RENDERBUFFER,null)}function Ae(e){return e===te.NearestFilter||e===te.NearestMipMapNearestFilter||e===te.NearestMipMapLinearFilter?k.NEAREST:k.LINEAR}function Me(e){var t;if(e===te.RepeatWrapping)return k.REPEAT;if(e===te.ClampToEdgeWrapping)return k.CLAMP_TO_EDGE;if(e===te.MirroredRepeatWrapping)return k.MIRRORED_REPEAT;if(e===te.NearestFilter)return k.NEAREST;if(e===te.NearestMipMapNearestFilter)return k.NEAREST_MIPMAP_NEAREST;if(e===te.NearestMipMapLinearFilter)return k.NEAREST_MIPMAP_LINEAR;if(e===te.LinearFilter)return k.LINEAR;if(e===te.LinearMipMapNearestFilter)return k.LINEAR_MIPMAP_NEAREST;if(e===te.LinearMipMapLinearFilter)return k.LINEAR_MIPMAP_LINEAR;if(e===te.UnsignedByteType)return k.UNSIGNED_BYTE;if(e===te.UnsignedShort4444Type)return k.UNSIGNED_SHORT_4_4_4_4;if(e===te.UnsignedShort5551Type)return k.UNSIGNED_SHORT_5_5_5_1;if(e===te.UnsignedShort565Type)return k.UNSIGNED_SHORT_5_6_5;if(e===te.ByteType)return k.BYTE;if(e===te.ShortType)return k.SHORT;if(e===te.UnsignedShortType)return k.UNSIGNED_SHORT;if(e===te.IntType)return k.INT;if(e===te.UnsignedIntType)return k.UNSIGNED_INT;if(e===te.FloatType)return k.FLOAT;if(null!==(t=U.get("OES_texture_half_float"))&&e===te.HalfFloatType)return t.HALF_FLOAT_OES;if(e===te.AlphaFormat)return k.ALPHA;if(e===te.RGBFormat)return k.RGB;if(e===te.RGBAFormat)return k.RGBA;if(e===te.LuminanceFormat)return k.LUMINANCE;if(e===te.LuminanceAlphaFormat)return k.LUMINANCE_ALPHA;if(e===te.AddEquation)return k.FUNC_ADD;if(e===te.SubtractEquation)return k.FUNC_SUBTRACT;if(e===te.ReverseSubtractEquation)return k.FUNC_REVERSE_SUBTRACT;if(e===te.ZeroFactor)return k.ZERO;if(e===te.OneFactor)return k.ONE;if(e===te.SrcColorFactor)return k.SRC_COLOR;if(e===te.OneMinusSrcColorFactor)return k.ONE_MINUS_SRC_COLOR;if(e===te.SrcAlphaFactor)return k.SRC_ALPHA;if(e===te.OneMinusSrcAlphaFactor)return k.ONE_MINUS_SRC_ALPHA;if(e===te.DstAlphaFactor)return k.DST_ALPHA;if(e===te.OneMinusDstAlphaFactor)return k.ONE_MINUS_DST_ALPHA;if(e===te.DstColorFactor)return k.DST_COLOR;if(e===te.OneMinusDstColorFactor)return k.ONE_MINUS_DST_COLOR;if(e===te.SrcAlphaSaturateFactor)return k.SRC_ALPHA_SATURATE;if(null!==(t=U.get("WEBGL_compressed_texture_s3tc"))){if(e===te.RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===te.RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===te.RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===te.RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(null!==(t=U.get("WEBGL_compressed_texture_pvrtc"))){if(e===te.RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===te.RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===te.RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===te.RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(null!==(t=U.get("EXT_blend_minmax"))){if(e===te.MinEquation)return t.MIN_EXT;if(e===te.MaxEquation)return t.MAX_EXT}return 0}this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){U.get("WEBGL_lose_context").loseContext()},this.getMaxAnisotropy=function(){if(void 0!==re)return re;var e=U.get("EXT_texture_filter_anisotropic");return re=null!==e?k.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},this.getPrecision=function(){return H.precision},this.getPixelRatio=function(){return i},this.setPixelRatio=function(e){void 0!==e&&(i=e)},this.getSize=function(){return{width:r,height:s}},this.setSize=function(e,n,a){r=e,s=n,t.width=e*i,t.height=n*i,!1!==a&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n)},this.setViewport=function(e,t,n,r){$.set(e,t,n,r).multiplyScalar(i),W.viewport($)},this.setScissor=function(e,t,n,r){R.set(e,t,n,r).multiplyScalar(i),W.scissor(R)},this.setScissorTest=function(e){D=e,W.setScissorTest(e)},this.getClearColor=function(){return d},this.setClearColor=function(e,t){d.set(e),p=void 0!==t?t:1,Y(d.r,d.g,d.b,p)},this.getClearAlpha=function(){return p},this.setClearAlpha=function(e){p=e,Y(d.r,d.g,d.b,p)},this.clear=function(e,t,n){var r=0;(void 0===e||e)&&(r|=k.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=k.DEPTH_BUFFER_BIT),(void 0===n||n)&&(r|=k.STENCIL_BUFFER_BIT),k.clear(r)},this.clearColor=function(){k.clear(k.COLOR_BUFFER_BIT)},this.clearDepth=function(){k.clear(k.DEPTH_BUFFER_BIT)},this.clearStencil=function(){k.clear(k.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,n,r){this.setRenderTarget(e),this.clear(t,n,r)},this.resetGLState=ee,this.dispose=function(){t.removeEventListener("webglcontextlost",ae,!1)},this.renderBufferImmediate=function(e,t,n){W.initAttributes();var r=G.get(e);e.hasPositions&&!r.position&&(r.position=k.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=k.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=k.createBuffer()),e.hasColors&&!r.color&&(r.color=k.createBuffer());var s=t.getAttributes();if(e.hasPositions&&(k.bindBuffer(k.ARRAY_BUFFER,r.position),k.bufferData(k.ARRAY_BUFFER,e.positionArray,k.DYNAMIC_DRAW),W.enableAttribute(s.position),k.vertexAttribPointer(s.position,3,k.FLOAT,!1,0,0)),e.hasNormals){if(k.bindBuffer(k.ARRAY_BUFFER,r.normal),"MeshPhongMaterial"!==n.type&&"MeshStandardMaterial"!==n.type&&n.shading===te.FlatShading)for(var i=0,a=3*e.count;i<a;i+=9){var o=e.normalArray,l=(o[i+0]+o[i+3]+o[i+6])/3,u=(o[i+1]+o[i+4]+o[i+7])/3,c=(o[i+2]+o[i+5]+o[i+8])/3;o[i+0]=l,o[i+1]=u,o[i+2]=c,o[i+3]=l,o[i+4]=u,o[i+5]=c,o[i+6]=l,o[i+7]=u,o[i+8]=c}k.bufferData(k.ARRAY_BUFFER,e.normalArray,k.DYNAMIC_DRAW),W.enableAttribute(s.normal),k.vertexAttribPointer(s.normal,3,k.FLOAT,!1,0,0)}e.hasUvs&&n.map&&(k.bindBuffer(k.ARRAY_BUFFER,r.uv),k.bufferData(k.ARRAY_BUFFER,e.uvArray,k.DYNAMIC_DRAW),W.enableAttribute(s.uv),k.vertexAttribPointer(s.uv,2,k.FLOAT,!1,0,0)),e.hasColors&&n.vertexColors!==te.NoColors&&(k.bindBuffer(k.ARRAY_BUFFER,r.color),k.bufferData(k.ARRAY_BUFFER,e.colorArray,k.DYNAMIC_DRAW),W.enableAttribute(s.color),k.vertexAttribPointer(s.color,3,k.FLOAT,!1,0,0)),W.disableUnusedAttributes(),k.drawArrays(k.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,s,i){ye(r);var a=be(e,t,r,s),o=!1,l=n.id+"_"+a.id+"_"+r.wireframe;l!==A&&(A=l,o=!0);var u=s.morphTargetInfluences;if(void 0!==u){for(var c=[],h=0,d=u.length;h<d;h++){var p=u[h];c.push([p,h])}c.sort(he),c.length>8&&(c.length=8);var f=n.morphAttributes;for(h=0,d=c.length;h<d;h++)if(p=c[h],v[h]=p[0],0!==p[0]){var m=p[1];!0===r.morphTargets&&f.position&&n.addAttribute("morphTarget"+h,f.position[m]),!0===r.morphNormals&&f.normal&&n.addAttribute("morphNormal"+h,f.normal[m])}else!0===r.morphTargets&&n.removeAttribute("morphTarget"+h),!0===r.morphNormals&&n.removeAttribute("morphNormal"+h);var g=a.getUniforms();null!==g.morphTargetInfluences&&k.uniform1fv(g.morphTargetInfluences,v),o=!0}m=n.index;var y,b=n.attributes.position;!0===r.wireframe&&(m=j.getWireframeAttribute(n)),null!==m?(y=Z).setIndex(m):y=X,o&&(function(e,t,n,r){var s;if(n instanceof te.InstancedBufferGeometry&&null===(s=U.get("ANGLE_instanced_arrays")))console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");else{void 0===r&&(r=0),W.initAttributes();var i=n.attributes,a=t.getAttributes(),o=e.defaultAttributeValues;for(var l in a){var u=a[l];if(u>=0){var c=i[l];if(void 0!==c){var h=c.itemSize,d=j.getAttributeBuffer(c);if(c instanceof te.InterleavedBufferAttribute){var p=c.data,f=p.stride,m=c.offset;p instanceof te.InstancedInterleavedBuffer?(W.enableAttributeAndDivisor(u,p.meshPerAttribute,s),void 0===n.maxInstancedCount&&(n.maxInstancedCount=p.meshPerAttribute*p.count)):W.enableAttribute(u),k.bindBuffer(k.ARRAY_BUFFER,d),k.vertexAttribPointer(u,h,k.FLOAT,!1,f*p.array.BYTES_PER_ELEMENT,(r*f+m)*p.array.BYTES_PER_ELEMENT)}else c instanceof te.InstancedBufferAttribute?(W.enableAttributeAndDivisor(u,c.meshPerAttribute,s),void 0===n.maxInstancedCount&&(n.maxInstancedCount=c.meshPerAttribute*c.count)):W.enableAttribute(u),k.bindBuffer(k.ARRAY_BUFFER,d),k.vertexAttribPointer(u,h,k.FLOAT,!1,0,r*h*4)}else if(void 0!==o){var g=o[l];if(void 0!==g)switch(g.length){case 2:k.vertexAttrib2fv(u,g);break;case 3:k.vertexAttrib3fv(u,g);break;case 4:k.vertexAttrib4fv(u,g);break;default:k.vertexAttrib1fv(u,g)}}}}W.disableUnusedAttributes()}}(r,a,n),null!==m&&k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,j.getAttributeBuffer(m)));var x=1/0;null!==m?x=m.count:void 0!==b&&(x=b.count);var w=n.drawRange.start,S=n.drawRange.count,E=null!==i?i.start:0,I=null!==i?i.count:1/0,T=Math.max(0,w,E),C=Math.min(0+x,w+S,E+I)-1,N=Math.max(0,C-T+1);if(s instanceof te.Mesh)if(!0===r.wireframe)W.setLineWidth(r.wireframeLinewidth*Q()),y.setMode(k.LINES);else switch(s.drawMode){case te.TrianglesDrawMode:y.setMode(k.TRIANGLES);break;case te.TriangleStripDrawMode:y.setMode(k.TRIANGLE_STRIP);break;case te.TriangleFanDrawMode:y.setMode(k.TRIANGLE_FAN)}else if(s instanceof te.Line){var M=r.linewidth;void 0===M&&(M=1),W.setLineWidth(M*Q()),s instanceof te.LineSegments?y.setMode(k.LINES):y.setMode(k.LINE_STRIP)}else s instanceof te.Points&&y.setMode(k.POINTS);n instanceof te.InstancedBufferGeometry&&n.maxInstancedCount>0?y.renderInstances(n,T,N):y.render(T,N)},this.render=function(e,t,n,r){if(t instanceof te.Camera!=0){var s=e.fog;if(A="",N=-1,M=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),F.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),L.setFromMatrix(F),f.length=0,g=-1,b=-1,x.length=0,w.length=0,me(e,t),m.length=g+1,y.length=b+1,!0===S.sortObjects&&(m.sort(de),y.sort(pe)),function(e,t){var n,r,s,i,a,o,l=0,u=0,c=0,h=t.matrixWorldInverse,d=0,p=0,f=0,m=0,g=0;for(z.shadowsPointLight=0,n=0,r=e.length;n<r;n++)if(i=(s=e[n]).color,a=s.intensity,o=s.distance,s instanceof te.AmbientLight)l+=i.r*a,u+=i.g*a,c+=i.b*a;else if(s instanceof te.DirectionalLight)(y=K.get(s)).direction.setFromMatrixPosition(s.matrixWorld),O.setFromMatrixPosition(s.target.matrixWorld),y.direction.sub(O),y.direction.transformDirection(h),y.color.copy(s.color).multiplyScalar(s.intensity),s.castShadow?(y.shadow=g,z.shadows[g++]=s):y.shadow=-1,z.directional[d++]=y;else if(s instanceof te.PointLight)(y=K.get(s)).position.setFromMatrixPosition(s.matrixWorld),y.position.applyMatrix4(h),y.color.copy(s.color).multiplyScalar(s.intensity),y.distance=s.distance,y.decay=0===s.distance?0:s.decay,s.castShadow?(y.shadow=g,z.shadows[g++]=s,z.shadowsPointLight++):y.shadow=-1,z.point[p++]=y;else if(s instanceof te.SpotLight)(y=K.get(s)).position.setFromMatrixPosition(s.matrixWorld),y.position.applyMatrix4(h),y.color.copy(i).multiplyScalar(a),y.distance=o,y.direction.setFromMatrixPosition(s.matrixWorld),O.setFromMatrixPosition(s.target.matrixWorld),y.direction.sub(O),y.direction.transformDirection(h),y.angleCos=Math.cos(s.angle),y.exponent=s.exponent,y.decay=0===s.distance?0:s.decay,s.castShadow?(y.shadow=g,z.shadows[g++]=s):y.shadow=-1,z.spot[f++]=y;else if(s instanceof te.HemisphereLight){var y;(y=K.get(s)).direction.setFromMatrixPosition(s.matrixWorld),y.direction.transformDirection(h),y.direction.normalize(),y.skyColor.copy(s.color).multiplyScalar(a),y.groundColor.copy(s.groundColor).multiplyScalar(a),z.hemi[m++]=y}z.ambient[0]=l,z.ambient[1]=u,z.ambient[2]=c,z.directional.length=d,z.point.length=p,z.spot.length=f,z.hemi.length=m,z.shadows.length=g,z.hash=d+","+p+","+f+","+m+","+g}(f,t),ne.render(e,t),B.calls=0,B.vertices=0,B.faces=0,B.points=0,void 0===n&&(n=null),this.setRenderTarget(n),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),e.overrideMaterial){var i=e.overrideMaterial;ge(m,t,s,i),ge(y,t,s,i)}else W.setBlending(te.NoBlending),ge(m,t,s),ge(y,t,s);if(se.render(e,t),ie.render(e,t,E),n){var a=n.texture;a.generateMipmaps&&Ee(n)&&a.minFilter!==te.NearestFilter&&a.minFilter!==te.LinearFilter&&function(e){var t=e instanceof te.WebGLRenderTargetCube?k.TEXTURE_CUBE_MAP:k.TEXTURE_2D,n=G.get(e.texture).__webglTexture;W.bindTexture(t,n),k.generateMipmap(t),W.bindTexture(t,null)}(n)}W.setDepthTest(!0),W.setDepthWrite(!0),W.setColorWrite(!0)}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.setFaceCulling=function(e,t){e===te.CullFaceNone?W.disable(k.CULL_FACE):(t===te.FrontFaceDirectionCW?k.frontFace(k.CW):k.frontFace(k.CCW),e===te.CullFaceBack?k.cullFace(k.BACK):e===te.CullFaceFront?k.cullFace(k.FRONT):k.cullFace(k.FRONT_AND_BACK),W.enable(k.CULL_FACE))},this.setTexture=function(e,t){var n=G.get(e);if(e.version>0&&n.__version!==e.version){var r=e.image;return void 0===r?void console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",e):!1===r.complete?void console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",e):void function(e,t,n){void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",oe),e.__webglTexture=k.createTexture(),P.textures++),W.activeTexture(k.TEXTURE0+n),W.bindTexture(k.TEXTURE_2D,e.__webglTexture),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,t.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,t.unpackAlignment),t.image=Se(t.image,H.maxTextureSize),function(e){return e.wrapS!==te.ClampToEdgeWrapping||e.wrapT!==te.ClampToEdgeWrapping||e.minFilter!==te.NearestFilter&&e.minFilter!==te.LinearFilter}(t)&&!1===Ee(t.image)&&(t.image=function(e){if(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement){var t=document.createElement("canvas");return t.width=te.Math.nearestPowerOfTwo(e.width),t.height=te.Math.nearestPowerOfTwo(e.height),t.getContext("2d").drawImage(e,0,0,t.width,t.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}(t.image));var r=t.image,s=Ee(r),i=Me(t.format),a=Me(t.type);ke(k.TEXTURE_2D,t,s);var o,l=t.mipmaps;if(t instanceof te.DataTexture)if(l.length>0&&s){for(var u=0,c=l.length;u<c;u++)o=l[u],W.texImage2D(k.TEXTURE_2D,u,i,o.width,o.height,0,i,a,o.data);t.generateMipmaps=!1}else W.texImage2D(k.TEXTURE_2D,0,i,r.width,r.height,0,i,a,r.data);else if(t instanceof te.CompressedTexture)for(u=0,c=l.length;u<c;u++)o=l[u],t.format!==te.RGBAFormat&&t.format!==te.RGBFormat?W.getCompressedTextureFormats().indexOf(i)>-1?W.compressedTexImage2D(k.TEXTURE_2D,u,i,o.width,o.height,0,o.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):W.texImage2D(k.TEXTURE_2D,u,i,o.width,o.height,0,i,a,o.data);else if(l.length>0&&s){for(u=0,c=l.length;u<c;u++)o=l[u],W.texImage2D(k.TEXTURE_2D,u,i,i,a,o);t.generateMipmaps=!1}else W.texImage2D(k.TEXTURE_2D,0,i,i,a,t.image);t.generateMipmaps&&s&&k.generateMipmap(k.TEXTURE_2D),e.__version=t.version,t.onUpdate&&t.onUpdate(t)}(n,e,t)}W.activeTexture(k.TEXTURE0+t),W.bindTexture(k.TEXTURE_2D,n.__webglTexture)},this.setRenderTarget=function(e){T=e,e&&void 0===G.get(e).__webglFramebuffer&&function(e){var t=G.get(e),n=G.get(e.texture);e.addEventListener("dispose",le),n.__webglTexture=k.createTexture(),P.textures++;var r=e instanceof te.WebGLRenderTargetCube,s=te.Math.isPowerOfTwo(e.width)&&te.Math.isPowerOfTwo(e.height);if(r){t.__webglFramebuffer=[];for(var i=0;i<6;i++)t.__webglFramebuffer[i]=k.createFramebuffer()}else t.__webglFramebuffer=k.createFramebuffer();if(r){for(W.bindTexture(k.TEXTURE_CUBE_MAP,n.__webglTexture),ke(k.TEXTURE_CUBE_MAP,e.texture,s),i=0;i<6;i++)Ce(t.__webglFramebuffer[i],e,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+i);e.texture.generateMipmaps&&s&&k.generateMipmap(k.TEXTURE_CUBE_MAP),W.bindTexture(k.TEXTURE_CUBE_MAP,null)}else W.bindTexture(k.TEXTURE_2D,n.__webglTexture),ke(k.TEXTURE_2D,e.texture,s),Ce(t.__webglFramebuffer,e,k.COLOR_ATTACHMENT0,k.TEXTURE_2D),e.texture.generateMipmaps&&s&&k.generateMipmap(k.TEXTURE_2D),W.bindTexture(k.TEXTURE_2D,null);e.depthBuffer&&function(e){var t=G.get(e);if(e instanceof te.WebGLRenderTargetCube){t.__webglDepthbuffer=[];for(var n=0;n<6;n++)k.bindFramebuffer(k.FRAMEBUFFER,t.__webglFramebuffer[n]),t.__webglDepthbuffer[n]=k.createRenderbuffer(),Ne(t.__webglDepthbuffer[n],e)}else k.bindFramebuffer(k.FRAMEBUFFER,t.__webglFramebuffer),t.__webglDepthbuffer=k.createRenderbuffer(),Ne(t.__webglDepthbuffer,e);k.bindFramebuffer(k.FRAMEBUFFER,null)}(e)}(e);var t,n,r,s,i=e instanceof te.WebGLRenderTargetCube;if(e){var a=G.get(e);t=i?a.__webglFramebuffer[e.activeCubeFace]:a.__webglFramebuffer,n=e.scissor,r=e.scissorTest,s=e.viewport}else t=null,n=R,r=D,s=$;if(t!==C&&(k.bindFramebuffer(k.FRAMEBUFFER,t),C=t),W.scissor(n),W.setScissorTest(r),W.viewport(s),i){var o=G.get(e.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,o.__webglTexture,0)}E=s},this.readRenderTargetPixels=function(e,t,n,r,s,i){if(e instanceof te.WebGLRenderTarget!=0){var a=G.get(e).__webglFramebuffer;if(a){var o=!1;a!==C&&(k.bindFramebuffer(k.FRAMEBUFFER,a),o=!0);try{var l=e.texture;if(l.format!==te.RGBAFormat&&Me(l.format)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(l.type===te.UnsignedByteType||Me(l.type)===k.getParameter(k.IMPLEMENTATION_COLOR_READ_TYPE)||l.type===te.FloatType&&U.get("WEBGL_color_buffer_float")||l.type===te.HalfFloatType&&U.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");k.checkFramebufferStatus(k.FRAMEBUFFER)===k.FRAMEBUFFER_COMPLETE?k.readPixels(t,n,r,s,Me(l.format),Me(l.type),i):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{o&&k.bindFramebuffer(k.FRAMEBUFFER,C)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")}},te.WebGLRenderTarget=function(e,t,n){this.uuid=te.Math.generateUUID(),this.width=e,this.height=t,this.scissor=new te.Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new te.Vector4(0,0,e,t),void 0===(n=n||{}).minFilter&&(n.minFilter=te.LinearFilter),this.texture=new te.Texture(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy),this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0===n.stencilBuffer||n.stencilBuffer},te.WebGLRenderTarget.prototype={constructor:te.WebGLRenderTarget,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.shareDepthFrom=e.shareDepthFrom,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},te.EventDispatcher.prototype.apply(te.WebGLRenderTarget.prototype),te.WebGLRenderTargetCube=function(e,t,n){te.WebGLRenderTarget.call(this,e,t,n),this.activeCubeFace=0},te.WebGLRenderTargetCube.prototype=Object.create(te.WebGLRenderTarget.prototype),te.WebGLRenderTargetCube.prototype.constructor=te.WebGLRenderTargetCube,te.WebGLBufferRenderer=function(e,t,n){var r;this.setMode=function(e){r=e},this.render=function(t,s){e.drawArrays(r,t,s),n.calls++,n.vertices+=s,r===e.TRIANGLES&&(n.faces+=s/3)},this.renderInstances=function(e){var n=t.get("ANGLE_instanced_arrays");if(null!==n){var s=e.attributes.position;s instanceof te.InterleavedBufferAttribute?n.drawArraysInstancedANGLE(r,0,s.data.count,e.maxInstancedCount):n.drawArraysInstancedANGLE(r,0,s.count,e.maxInstancedCount)}else console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}},te.WebGLIndexedBufferRenderer=function(e,t,n){var r,s,i;this.setMode=function(e){r=e},this.setIndex=function(n){n.array instanceof Uint32Array&&t.get("OES_element_index_uint")?(s=e.UNSIGNED_INT,i=4):(s=e.UNSIGNED_SHORT,i=2)},this.render=function(t,a){e.drawElements(r,a,s,t*i),n.calls++,n.vertices+=a,r===e.TRIANGLES&&(n.faces+=a/3)},this.renderInstances=function(e,n,a){var o=t.get("ANGLE_instanced_arrays");null!==o?o.drawElementsInstancedANGLE(r,a,s,n*i,e.maxInstancedCount):console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}},te.WebGLExtensions=function(e){var t={};this.get=function(n){if(void 0!==t[n])return t[n];var r;switch(n){case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return null===r&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=r,r}},te.WebGLCapabilities=function(e,t,n){function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}this.getMaxPrecision=r,this.precision=void 0!==n.precision?n.precision:"highp",this.logarithmicDepthBuffer=void 0!==n.logarithmicDepthBuffer&&n.logarithmicDepthBuffer,this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS),this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=this.maxVertexTextures>0,this.floatFragmentTextures=!!t.get("OES_texture_float"),this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;var s=r(this.precision);s!==this.precision&&(console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",s,"instead."),this.precision=s),this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!t.get("EXT_frag_depth"))},te.WebGLGeometries=function(e,t,n){var r={};function s(e){var a=e.target,o=r[a.id];null!==o.index&&i(o.index),function(e){for(var t in e)i(e[t])}(o.attributes),a.removeEventListener("dispose",s),delete r[a.id];var l=t.get(a);l.wireframe&&i(l.wireframe),t.delete(a);var u=t.get(o);u.wireframe&&i(u.wireframe),t.delete(o),n.memory.geometries--}function i(n){var r=function(e){return e instanceof te.InterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer}(n);void 0!==r&&(e.deleteBuffer(r),function(e){e instanceof te.InterleavedBufferAttribute?t.delete(e.data):t.delete(e)}(n))}this.get=function(e){var t,i=e.geometry;return void 0!==r[i.id]?r[i.id]:(i.addEventListener("dispose",s),i instanceof te.BufferGeometry?t=i:i instanceof te.Geometry&&(void 0===i._bufferGeometry&&(i._bufferGeometry=(new te.BufferGeometry).setFromObject(e)),t=i._bufferGeometry),r[i.id]=t,n.memory.geometries++,t)}},te.WebGLLights=function(){var e={};this.get=function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case"HemisphereLight":n={direction:new te.Vector3,skyColor:new te.Color,groundColor:new te.Color};break;case"DirectionalLight":n={direction:new te.Vector3,color:new te.Color,shadow:-1};break;case"PointLight":n={position:new te.Vector3,color:new te.Color,distance:0,decay:0,shadow:-1};break;case"SpotLight":n={position:new te.Vector3,direction:new te.Vector3,color:new te.Color,distance:0,angleCos:0,exponent:0,decay:0,shadow:-1}}return e[t.id]=n,n}},te.WebGLObjects=function(e,t,n){var r=new te.WebGLGeometries(e,t,n);function s(n,r){var s=n instanceof te.InterleavedBufferAttribute?n.data:n,i=t.get(s);void 0===i.__webglBuffer?function(t,n,r){t.__webglBuffer=e.createBuffer(),e.bindBuffer(r,t.__webglBuffer);var s=n.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW;e.bufferData(r,n.array,s),t.version=n.version}(i,s,r):i.version!==s.version&&function(t,n,r){e.bindBuffer(r,t.__webglBuffer),!1===n.dynamic||-1===n.updateRange.count?e.bufferSubData(r,0,n.array):0===n.updateRange.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(r,n.updateRange.offset*n.array.BYTES_PER_ELEMENT,n.array.subarray(n.updateRange.offset,n.updateRange.offset+n.updateRange.count)),n.updateRange.count=0),t.version=n.version}(i,s,r)}function i(e,t,n){if(t>n){var r=t;t=n,n=r}var s=e[t];return void 0===s?(e[t]=[n],!0):-1===s.indexOf(n)&&(s.push(n),!0)}this.getAttributeBuffer=function(e){return e instanceof te.InterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer},this.getWireframeAttribute=function(n){var r=t.get(n);if(void 0!==r.wireframe)return r.wireframe;var a,o=[],l=n.index,u=n.attributes,c=u.position;if(null!==l)for(var h={},d=0,p=(a=l.array).length;d<p;d+=3){var f=a[d+0],m=a[d+1],g=a[d+2];i(h,f,m)&&o.push(f,m),i(h,m,g)&&o.push(m,g),i(h,g,f)&&o.push(g,f)}else for(d=0,p=(a=u.position.array).length/3-1;d<p;d+=3)f=d+0,m=d+1,g=d+2,o.push(f,m,m,g,g,f);var y=c.count>65535?Uint32Array:Uint16Array,b=new te.BufferAttribute(new y(o),1);return s(b,e.ELEMENT_ARRAY_BUFFER),r.wireframe=b,b},this.update=function(t){var n=r.get(t);t.geometry instanceof te.Geometry&&n.updateFromObject(t);var i=n.index,a=n.attributes;for(var o in null!==i&&s(i,e.ELEMENT_ARRAY_BUFFER),a)s(a[o],e.ARRAY_BUFFER);var l=n.morphAttributes;for(var o in l)for(var u=l[o],c=0,h=u.length;c<h;c++)s(u[c],e.ARRAY_BUFFER);return n}},te.WebGLProgram=function(){var e=0,t=/^([\w\d_]+)\.([\w\d_]+)$/,n=/^([\w\d_]+)\[(\d+)\]\.([\w\d_]+)$/,r=/^([\w\d_]+)\[0\]$/;function s(e){return""!==e}return function(i,a,o,l){var u=i.context,c=o.extensions,h=o.defines,d=o.__webglShader.vertexShader,p=o.__webglShader.fragmentShader,f="SHADOWMAP_TYPE_BASIC";l.shadowMapType===te.PCFShadowMap?f="SHADOWMAP_TYPE_PCF":l.shadowMapType===te.PCFSoftShadowMap&&(f="SHADOWMAP_TYPE_PCF_SOFT");var m="ENVMAP_TYPE_CUBE",g="ENVMAP_MODE_REFLECTION",y="ENVMAP_BLENDING_MULTIPLY";if(l.envMap){switch(o.envMap.mapping){case te.CubeReflectionMapping:case te.CubeRefractionMapping:m="ENVMAP_TYPE_CUBE";break;case te.EquirectangularReflectionMapping:case te.EquirectangularRefractionMapping:m="ENVMAP_TYPE_EQUIREC";break;case te.SphericalReflectionMapping:m="ENVMAP_TYPE_SPHERE"}switch(o.envMap.mapping){case te.CubeRefractionMapping:case te.EquirectangularRefractionMapping:g="ENVMAP_MODE_REFRACTION"}switch(o.combine){case te.MultiplyOperation:y="ENVMAP_BLENDING_MULTIPLY";break;case te.MixOperation:y="ENVMAP_BLENDING_MIX";break;case te.AddOperation:y="ENVMAP_BLENDING_ADD"}}var b,v,x=i.gammaFactor>0?i.gammaFactor:1,w=function(e,t,n){return[(e=e||{}).derivatives||t.bumpMap||t.normalMap||t.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||t.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||t.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(s).join("\n")}(c,l,i.extensions),k=function(e){var t=[];for(var n in e){var r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(h),S=u.createProgram();o instanceof te.RawShaderMaterial?(b="",v=""):(b=["precision "+l.precision+" float;","precision "+l.precision+" int;","#define SHADER_NAME "+o.__webglShader.name,k,l.supportsVertexTextures?"#define VERTEX_TEXTURES":"",i.gammaInput?"#define GAMMA_INPUT":"",i.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+x,"#define NUM_DIR_LIGHTS "+l.numDirLights,"#define NUM_POINT_LIGHTS "+l.numPointLights,"#define NUM_SPOT_LIGHTS "+l.numSpotLights,"#define NUM_HEMI_LIGHTS "+l.numHemiLights,"#define NUM_SHADOWS "+l.numShadows,"#define MAX_BONES "+l.maxBones,l.map?"#define USE_MAP":"",l.envMap?"#define USE_ENVMAP":"",l.envMap?"#define "+g:"",l.lightMap?"#define USE_LIGHTMAP":"",l.aoMap?"#define USE_AOMAP":"",l.emissiveMap?"#define USE_EMISSIVEMAP":"",l.bumpMap?"#define USE_BUMPMAP":"",l.normalMap?"#define USE_NORMALMAP":"",l.displacementMap&&l.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",l.specularMap?"#define USE_SPECULARMAP":"",l.roughnessMap?"#define USE_ROUGHNESSMAP":"",l.metalnessMap?"#define USE_METALNESSMAP":"",l.alphaMap?"#define USE_ALPHAMAP":"",l.vertexColors?"#define USE_COLOR":"",l.flatShading?"#define FLAT_SHADED":"",l.skinning?"#define USE_SKINNING":"",l.useVertexTexture?"#define BONE_TEXTURE":"",l.morphTargets?"#define USE_MORPHTARGETS":"",l.morphNormals&&!1===l.flatShading?"#define USE_MORPHNORMALS":"",l.doubleSided?"#define DOUBLE_SIDED":"",l.flipSided?"#define FLIP_SIDED":"",l.shadowMapEnabled?"#define USE_SHADOWMAP":"",l.shadowMapEnabled?"#define "+f:"",l.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",l.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",l.sizeAttenuation?"#define USE_SIZEATTENUATION":"",l.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",l.logarithmicDepthBuffer&&i.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(s).join("\n"),v=[w,"precision "+l.precision+" float;","precision "+l.precision+" int;","#define SHADER_NAME "+o.__webglShader.name,k,"#define NUM_DIR_LIGHTS "+l.numDirLights,"#define NUM_POINT_LIGHTS "+l.numPointLights,"#define NUM_SPOT_LIGHTS "+l.numSpotLights,"#define NUM_HEMI_LIGHTS "+l.numHemiLights,"#define NUM_SHADOWS "+l.numShadows,l.alphaTest?"#define ALPHATEST "+l.alphaTest:"",i.gammaInput?"#define GAMMA_INPUT":"",i.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+x,l.useFog&&l.fog?"#define USE_FOG":"",l.useFog&&l.fogExp?"#define FOG_EXP2":"",l.map?"#define USE_MAP":"",l.envMap?"#define USE_ENVMAP":"",l.envMap?"#define "+m:"",l.envMap?"#define "+g:"",l.envMap?"#define "+y:"",l.lightMap?"#define USE_LIGHTMAP":"",l.aoMap?"#define USE_AOMAP":"",l.emissiveMap?"#define USE_EMISSIVEMAP":"",l.bumpMap?"#define USE_BUMPMAP":"",l.normalMap?"#define USE_NORMALMAP":"",l.specularMap?"#define USE_SPECULARMAP":"",l.roughnessMap?"#define USE_ROUGHNESSMAP":"",l.metalnessMap?"#define USE_METALNESSMAP":"",l.alphaMap?"#define USE_ALPHAMAP":"",l.vertexColors?"#define USE_COLOR":"",l.flatShading?"#define FLAT_SHADED":"",l.doubleSided?"#define DOUBLE_SIDED":"",l.flipSided?"#define FLIP_SIDED":"",l.shadowMapEnabled?"#define USE_SHADOWMAP":"",l.shadowMapEnabled?"#define "+f:"",l.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",l.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",l.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",l.logarithmicDepthBuffer&&i.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",l.envMap&&i.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","\n"].filter(s).join("\n"));var E=b+d,I=v+p,T=te.WebGLShader(u,u.VERTEX_SHADER,E),C=te.WebGLShader(u,u.FRAGMENT_SHADER,I);u.attachShader(S,T),u.attachShader(S,C),void 0!==o.index0AttributeName?u.bindAttribLocation(S,0,o.index0AttributeName):!0===l.morphTargets&&u.bindAttribLocation(S,0,"position"),u.linkProgram(S);var N,A,M=u.getProgramInfoLog(S),_=u.getShaderInfoLog(T),R=u.getShaderInfoLog(C),D=!0,$=!0;return!1===u.getProgramParameter(S,u.LINK_STATUS)?(D=!1,console.error("THREE.WebGLProgram: shader error: ",u.getError(),"gl.VALIDATE_STATUS",u.getProgramParameter(S,u.VALIDATE_STATUS),"gl.getProgramInfoLog",M,_,R)):""!==M?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",M):""!==_&&""!==R||($=!1),$&&(this.diagnostics={runnable:D,material:o,programLog:M,vertexShader:{log:_,prefix:b},fragmentShader:{log:R,prefix:v}}),u.deleteShader(T),u.deleteShader(C),this.getUniforms=function(){return void 0===N&&(N=function(e,s,i){for(var a={},o=e.getProgramParameter(s,e.ACTIVE_UNIFORMS),l=0;l<o;l++){var u=e.getActiveUniform(s,l).name,c=e.getUniformLocation(s,u),h=t.exec(u);if(h){var d=h[1],p=h[2],f=a[d];f||(f=a[d]={}),f[p]=c}else if(h=n.exec(u)){var m=h[1],g=h[2],y=h[3],b=a[m];b||(b=a[m]=[]);var v=b[g];v||(v=b[g]={}),v[y]=c}else(h=r.exec(u))?a[m=h[1]]=c:a[u]=c}return a}(u,S)),N},this.getAttributes=function(){return void 0===A&&(A=function(e,t,n){for(var r={},s=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),i=0;i<s;i++){var a=e.getActiveAttrib(t,i).name;r[a]=e.getAttribLocation(t,a)}return r}(u,S)),A},this.destroy=function(){u.deleteProgram(S),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=e++,this.code=a,this.usedTimes=1,this.program=S,this.vertexShader=T,this.fragmentShader=C,this}}(),te.WebGLPrograms=function(e,t){var n=[],r={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshStandardMaterial:"standard",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},s=["precision","supportsVertexTextures","map","envMap","envMapMode","lightMap","aoMap","emissiveMap","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","numDirLights","numPointLights","numSpotLights","numHemiLights","numShadows","shadowMapEnabled","pointLightShadows","shadowMapType","shadowMapDebug","alphaTest","doubleSided","flipSided"];this.getParameters=function(n,s,i,a){var o=r[n.type],l=function(e){if(t.floatVertexTextures&&e&&e.skeleton&&e.skeleton.useVertexTexture)return 1024;var n=t.maxVertexUniforms,r=Math.floor((n-20)/4);return void 0!==e&&e instanceof te.SkinnedMesh&&(r=Math.min(e.skeleton.bones.length,r))<e.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.skeleton.bones.length+", this GPU supports just "+r+" (try OpenGL instead of ANGLE)"),r}(a),u=e.getPrecision();return null!==n.precision&&(u=t.getMaxPrecision(n.precision))!==n.precision&&console.warn("THREE.WebGLProgram.getParameters:",n.precision,"not supported, using",u,"instead."),{shaderID:o,precision:u,supportsVertexTextures:t.vertexTextures,map:!!n.map,envMap:!!n.envMap,envMapMode:n.envMap&&n.envMap.mapping,lightMap:!!n.lightMap,aoMap:!!n.aoMap,emissiveMap:!!n.emissiveMap,bumpMap:!!n.bumpMap,normalMap:!!n.normalMap,displacementMap:!!n.displacementMap,roughnessMap:!!n.roughnessMap,metalnessMap:!!n.metalnessMap,specularMap:!!n.specularMap,alphaMap:!!n.alphaMap,combine:n.combine,vertexColors:n.vertexColors,fog:i,useFog:n.fog,fogExp:i instanceof te.FogExp2,flatShading:n.shading===te.FlatShading,sizeAttenuation:n.sizeAttenuation,logarithmicDepthBuffer:t.logarithmicDepthBuffer,skinning:n.skinning,maxBones:l,useVertexTexture:t.floatVertexTextures&&a&&a.skeleton&&a.skeleton.useVertexTexture,morphTargets:n.morphTargets,morphNormals:n.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numHemiLights:s.hemi.length,numShadows:s.shadows.length,pointLightShadows:s.shadowsPointLight,shadowMapEnabled:e.shadowMap.enabled&&a.receiveShadow&&s.shadows.length>0,shadowMapType:e.shadowMap.type,shadowMapDebug:e.shadowMap.debug,alphaTest:n.alphaTest,doubleSided:n.side===te.DoubleSide,flipSided:n.side===te.BackSide}},this.getProgramCode=function(e,t){var n=[];if(t.shaderID?n.push(t.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)n.push(r),n.push(e.defines[r]);for(var i=0;i<s.length;i++){var a=s[i];n.push(a),n.push(t[a])}return n.join()},this.acquireProgram=function(t,r,s){for(var i,a=0,o=n.length;a<o;a++){var l=n[a];if(l.code===s){++(i=l).usedTimes;break}}return void 0===i&&(i=new te.WebGLProgram(e,s,t,r),n.push(i)),i},this.releaseProgram=function(e){if(0==--e.usedTimes){var t=n.indexOf(e);n[t]=n[n.length-1],n.pop(),e.destroy()}},this.programs=n},te.WebGLProperties=function(){var e={};this.get=function(t){var n=t.uuid,r=e[n];return void 0===r&&(r={},e[n]=r),r},this.delete=function(t){delete e[t.uuid]},this.clear=function(){e={}}},te.WebGLShader=function(e,t,n){var r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),!1===e.getShaderParameter(r,e.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==e.getShaderInfoLog(r)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t===e.VERTEX_SHADER?"vertex":"fragment",e.getShaderInfoLog(r),function(e){for(var t=e.split("\n"),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}(n)),r},te.WebGLShadowMap=function(e,t,n){for(var r=e.context,s=e.state,i=new te.Frustum,a=new te.Matrix4,o=new te.Vector3,l=new te.Vector3,u=[],c=1,h=2,d=1+(c|h),p=new Array(d),f=new Array(d),m=[new te.Vector3(1,0,0),new te.Vector3(-1,0,0),new te.Vector3(0,0,1),new te.Vector3(0,0,-1),new te.Vector3(0,1,0),new te.Vector3(0,-1,0)],g=[new te.Vector3(0,1,0),new te.Vector3(0,1,0),new te.Vector3(0,1,0),new te.Vector3(0,1,0),new te.Vector3(0,0,1),new te.Vector3(0,0,-1)],y=[new te.Vector4,new te.Vector4,new te.Vector4,new te.Vector4,new te.Vector4,new te.Vector4],b=te.ShaderLib.depthRGBA,v=te.UniformsUtils.clone(b.uniforms),x=te.ShaderLib.distanceRGBA,w=te.UniformsUtils.clone(x.uniforms),k=0;k!==d;++k){var S=0!=(k&c),E=0!=(k&h),I=new te.ShaderMaterial({uniforms:v,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader,morphTargets:S,skinning:E});I._shadowPass=!0,p[k]=I;var T=new te.ShaderMaterial({uniforms:w,vertexShader:x.vertexShader,fragmentShader:x.fragmentShader,morphTargets:S,skinning:E});T._shadowPass=!0,f[k]=T}var C=this;function N(e,t,n,r){var s=e.geometry,i=null,a=p,o=e.customDepthMaterial;if(n&&(a=f,o=e.customDistanceMaterial),o)i=o;else{var l=void 0!==s.morphTargets&&s.morphTargets.length>0&&t.morphTargets,u=e instanceof te.SkinnedMesh&&t.skinning,d=0;l&&(d|=c),u&&(d|=h),i=a[d]}return i.visible=t.visible,i.wireframe=t.wireframe,i.wireframeLinewidth=t.wireframeLinewidth,n&&void 0!==i.uniforms.lightPos&&i.uniforms.lightPos.value.copy(r),i}function A(e,t,n){if(!1!==e.visible){e.layers.test(t.layers)&&(e instanceof te.Mesh||e instanceof te.Line||e instanceof te.Points)&&(!e.castShadow||!1!==e.frustumCulled&&!0!==i.intersectsObject(e)||!0===e.material.visible&&(e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),u.push(e)));for(var r=e.children,s=0,a=r.length;s<a;s++)A(r[s],t,n)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=te.PCFShadowMap,this.cullFace=te.CullFaceFront,this.render=function(c,h){var d,p;if(!1!==C.enabled&&(!1!==C.autoUpdate||!1!==C.needsUpdate)){r.clearColor(1,1,1,1),s.disable(r.BLEND),s.enable(r.CULL_FACE),r.frontFace(r.CCW),r.cullFace(C.cullFace===te.CullFaceFront?r.FRONT:r.BACK),s.setDepthTest(!0),s.setScissorTest(!1);for(var f=t.shadows,b=0,v=f.length;b<v;b++){var x=f[b],w=x.shadow,k=w.camera,S=w.mapSize;if(x instanceof te.PointLight){d=6,p=!0;var E=S.x/4,I=S.y/2;y[0].set(2*E,I,E,I),y[1].set(0,I,E,I),y[2].set(3*E,I,E,I),y[3].set(E,I,E,I),y[4].set(3*E,0,E,I),y[5].set(E,0,E,I)}else d=1,p=!1;if(null===w.map){var T=te.LinearFilter;C.type===te.PCFSoftShadowMap&&(T=te.NearestFilter);var M={minFilter:T,magFilter:T,format:te.RGBAFormat};w.map=new te.WebGLRenderTarget(S.x,S.y,M),w.matrix=new te.Matrix4,x instanceof te.SpotLight&&(k.aspect=S.x/S.y),k.updateProjectionMatrix()}var _=w.map,R=w.matrix;l.setFromMatrixPosition(x.matrixWorld),k.position.copy(l),e.setRenderTarget(_),e.clear();for(var D=0;D<d;D++){if(p){o.copy(k.position),o.add(m[D]),k.up.copy(g[D]),k.lookAt(o);var $=y[D];s.viewport($)}else o.setFromMatrixPosition(x.target.matrixWorld),k.lookAt(o);k.updateMatrixWorld(),k.matrixWorldInverse.getInverse(k.matrixWorld),R.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),R.multiply(k.projectionMatrix),R.multiply(k.matrixWorldInverse),a.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),i.setFromMatrix(a),u.length=0,A(c,h,k);for(var L=0,F=u.length;L<F;L++){var O=u[L],z=n.update(O),P=O.material;if(P instanceof te.MeshFaceMaterial)for(var B=z.groups,V=P.materials,U=0,H=B.length;U<H;U++){var W=B[U],G=V[W.materialIndex];if(!0===G.visible){var j=N(O,G,p,l);e.renderBufferDirect(k,null,z,j,O,W)}}else j=N(O,P,p,l),e.renderBufferDirect(k,null,z,j,O,null)}}e.resetGLState()}var q=e.getClearColor(),K=e.getClearAlpha();e.setClearColor(q,K),s.enable(r.BLEND),C.cullFace===te.CullFaceFront&&r.cullFace(r.BACK),e.resetGLState(),C.needsUpdate=!1}}},te.WebGLState=function(e,t,n){var r=this,s=new Uint8Array(16),i=new Uint8Array(16),a=new Uint8Array(16),o={},l=null,u=null,c=null,h=null,d=null,p=null,f=null,m=null,g=null,y=null,b=null,v=null,x=null,w=null,k=null,S=null,E=null,I=null,T=null,C=null,N=null,A=null,M=null,_=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),R=void 0,D={},$=new te.Vector4,L=new te.Vector4;this.init=function(){e.clearColor(0,0,0,1),e.clearDepth(1),e.clearStencil(0),this.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.frontFace(e.CCW),e.cullFace(e.BACK),this.enable(e.CULL_FACE),this.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA)},this.initAttributes=function(){for(var e=0,t=s.length;e<t;e++)s[e]=0},this.enableAttribute=function(n){s[n]=1,0===i[n]&&(e.enableVertexAttribArray(n),i[n]=1),0!==a[n]&&(t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n,0),a[n]=0)},this.enableAttributeAndDivisor=function(t,n,r){s[t]=1,0===i[t]&&(e.enableVertexAttribArray(t),i[t]=1),a[t]!==n&&(r.vertexAttribDivisorANGLE(t,n),a[t]=n)},this.disableUnusedAttributes=function(){for(var t=0,n=i.length;t<n;t++)i[t]!==s[t]&&(e.disableVertexAttribArray(t),i[t]=0)},this.enable=function(t){!0!==o[t]&&(e.enable(t),o[t]=!0)},this.disable=function(t){!1!==o[t]&&(e.disable(t),o[t]=!1)},this.getCompressedTextureFormats=function(){if(null===l&&(l=[],t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")))for(var n=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS),r=0;r<n.length;r++)l.push(n[r]);return l},this.setBlending=function(t,r,s,i,a,o,l){t===te.NoBlending?this.disable(e.BLEND):this.enable(e.BLEND),t!==u&&(t===te.AdditiveBlending?(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):t===te.SubtractiveBlending?(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):t===te.MultiplyBlending?(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),u=t),t===te.CustomBlending?(a=a||r,o=o||s,l=l||i,r===c&&a===p||(e.blendEquationSeparate(n(r),n(a)),c=r,p=a),s===h&&i===d&&o===f&&l===m||(e.blendFuncSeparate(n(s),n(i),n(o),n(l)),h=s,d=i,f=o,m=l)):(c=null,h=null,d=null,p=null,f=null,m=null)},this.setDepthFunc=function(t){if(g!==t){if(t)switch(t){case te.NeverDepth:e.depthFunc(e.NEVER);break;case te.AlwaysDepth:e.depthFunc(e.ALWAYS);break;case te.LessDepth:e.depthFunc(e.LESS);break;case te.LessEqualDepth:e.depthFunc(e.LEQUAL);break;case te.EqualDepth:e.depthFunc(e.EQUAL);break;case te.GreaterEqualDepth:e.depthFunc(e.GEQUAL);break;case te.GreaterDepth:e.depthFunc(e.GREATER);break;case te.NotEqualDepth:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}else e.depthFunc(e.LEQUAL);g=t}},this.setDepthTest=function(t){t?this.enable(e.DEPTH_TEST):this.disable(e.DEPTH_TEST)},this.setDepthWrite=function(t){y!==t&&(e.depthMask(t),y=t)},this.setColorWrite=function(t){b!==t&&(e.colorMask(t,t,t,t),b=t)},this.setStencilFunc=function(t,n,r){x===t&&w===n&&k===r||(e.stencilFunc(t,n,r),x=t,w=n,k=r)},this.setStencilOp=function(t,n,r){S===t&&E===n&&I===r||(e.stencilOp(t,n,r),S=t,E=n,I=r)},this.setStencilTest=function(t){t?this.enable(e.STENCIL_TEST):this.disable(e.STENCIL_TEST)},this.setStencilWrite=function(t){v!==t&&(e.stencilMask(t),v=t)},this.setFlipSided=function(t){T!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),T=t)},this.setLineWidth=function(t){t!==C&&(e.lineWidth(t),C=t)},this.setPolygonOffset=function(t,n,r){t?this.enable(e.POLYGON_OFFSET_FILL):this.disable(e.POLYGON_OFFSET_FILL),!t||N===n&&A===r||(e.polygonOffset(n,r),N=n,A=r)},this.getScissorTest=function(){return M},this.setScissorTest=function(t){M=t,t?this.enable(e.SCISSOR_TEST):this.disable(e.SCISSOR_TEST)},this.activeTexture=function(t){void 0===t&&(t=e.TEXTURE0+_-1),R!==t&&(e.activeTexture(t),R=t)},this.bindTexture=function(t,n){void 0===R&&r.activeTexture();var s=D[R];void 0===s&&(s={type:void 0,texture:void 0},D[R]=s),s.type===t&&s.texture===n||(e.bindTexture(t,n),s.type=t,s.texture=n)},this.compressedTexImage2D=function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error(e)}},this.texImage2D=function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error(e)}},this.scissor=function(t){!1===$.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),$.copy(t))},this.viewport=function(t){!1===L.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),L.copy(t))},this.reset=function(){for(var t=0;t<i.length;t++)1===i[t]&&(e.disableVertexAttribArray(t),i[t]=0);o={},l=null,u=null,y=null,b=null,T=null}},te.LensFlarePlugin=function(e,t){var n,r,s,i,a,o,l,u,c=e.context,h=e.state;this.render=function(d,p,f){if(0!==t.length){var m=new te.Vector3,g=f.w/f.z,y=.5*f.z,b=.5*f.w,v=16/f.w,x=new te.Vector2(v*g,v),w=new te.Vector3(1,1,0),k=new te.Vector2(1,1);void 0===s&&function(){var t,d=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),p=new Uint16Array([0,1,2,0,2,3]);n=c.createBuffer(),r=c.createBuffer(),c.bindBuffer(c.ARRAY_BUFFER,n),c.bufferData(c.ARRAY_BUFFER,d,c.STATIC_DRAW),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,r),c.bufferData(c.ELEMENT_ARRAY_BUFFER,p,c.STATIC_DRAW),l=c.createTexture(),u=c.createTexture(),h.bindTexture(c.TEXTURE_2D,l),c.texImage2D(c.TEXTURE_2D,0,c.RGB,16,16,0,c.RGB,c.UNSIGNED_BYTE,null),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST),h.bindTexture(c.TEXTURE_2D,u),c.texImage2D(c.TEXTURE_2D,0,c.RGBA,16,16,0,c.RGBA,c.UNSIGNED_BYTE,null),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST),t=(o=c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0)?{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},s=function(t){var n=c.createProgram(),r=c.createShader(c.FRAGMENT_SHADER),s=c.createShader(c.VERTEX_SHADER),i="precision "+e.getPrecision()+" float;\n";return c.shaderSource(r,i+t.fragmentShader),c.shaderSource(s,i+t.vertexShader),c.compileShader(r),c.compileShader(s),c.attachShader(n,r),c.attachShader(n,s),c.linkProgram(n),n}(t),i={vertex:c.getAttribLocation(s,"position"),uv:c.getAttribLocation(s,"uv")},a={renderType:c.getUniformLocation(s,"renderType"),map:c.getUniformLocation(s,"map"),occlusionMap:c.getUniformLocation(s,"occlusionMap"),opacity:c.getUniformLocation(s,"opacity"),color:c.getUniformLocation(s,"color"),scale:c.getUniformLocation(s,"scale"),rotation:c.getUniformLocation(s,"rotation"),screenPosition:c.getUniformLocation(s,"screenPosition")}}(),c.useProgram(s),h.initAttributes(),h.enableAttribute(i.vertex),h.enableAttribute(i.uv),h.disableUnusedAttributes(),c.uniform1i(a.occlusionMap,0),c.uniform1i(a.map,1),c.bindBuffer(c.ARRAY_BUFFER,n),c.vertexAttribPointer(i.vertex,2,c.FLOAT,!1,16,0),c.vertexAttribPointer(i.uv,2,c.FLOAT,!1,16,8),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,r),h.disable(c.CULL_FACE),h.setDepthWrite(!1);for(var S=0,E=t.length;S<E;S++){v=16/f.w,x.set(v*g,v);var I=t[S];if(m.set(I.matrixWorld.elements[12],I.matrixWorld.elements[13],I.matrixWorld.elements[14]),m.applyMatrix4(p.matrixWorldInverse),m.applyProjection(p.projectionMatrix),w.copy(m),k.x=w.x*y+y,k.y=w.y*b+b,o||k.x>0&&k.x<f.z&&k.y>0&&k.y<f.w){h.activeTexture(c.TEXTURE0),h.bindTexture(c.TEXTURE_2D,null),h.activeTexture(c.TEXTURE1),h.bindTexture(c.TEXTURE_2D,l),c.copyTexImage2D(c.TEXTURE_2D,0,c.RGB,f.x+k.x-8,f.y+k.y-8,16,16,0),c.uniform1i(a.renderType,0),c.uniform2f(a.scale,x.x,x.y),c.uniform3f(a.screenPosition,w.x,w.y,w.z),h.disable(c.BLEND),h.enable(c.DEPTH_TEST),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0),h.activeTexture(c.TEXTURE0),h.bindTexture(c.TEXTURE_2D,u),c.copyTexImage2D(c.TEXTURE_2D,0,c.RGBA,f.x+k.x-8,f.y+k.y-8,16,16,0),c.uniform1i(a.renderType,1),h.disable(c.DEPTH_TEST),h.activeTexture(c.TEXTURE1),h.bindTexture(c.TEXTURE_2D,l),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0),I.positionScreen.copy(w),I.customUpdateCallback?I.customUpdateCallback(I):I.updateLensFlares(),c.uniform1i(a.renderType,2),h.enable(c.BLEND);for(var T=0,C=I.lensFlares.length;T<C;T++){var N=I.lensFlares[T];N.opacity>.001&&N.scale>.001&&(w.x=N.x,w.y=N.y,w.z=N.z,v=N.size*N.scale/f.w,x.x=v*g,x.y=v,c.uniform3f(a.screenPosition,w.x,w.y,w.z),c.uniform2f(a.scale,x.x,x.y),c.uniform1f(a.rotation,N.rotation),c.uniform1f(a.opacity,N.opacity),c.uniform3f(a.color,N.color.r,N.color.g,N.color.b),h.setBlending(N.blending,N.blendEquation,N.blendSrc,N.blendDst),e.setTexture(N.texture,1),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0))}}}h.enable(c.CULL_FACE),h.enable(c.DEPTH_TEST),h.setDepthWrite(!0),e.resetGLState()}}},te.SpritePlugin=function(e,t){var n,r,s,i,a,o,l=e.context,u=e.state,c=new te.Vector3,h=new te.Quaternion,d=new te.Vector3;function p(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}this.render=function(f,m){if(0!==t.length){void 0===s&&function(){var t=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),u=new Uint16Array([0,1,2,0,2,3]);n=l.createBuffer(),r=l.createBuffer(),l.bindBuffer(l.ARRAY_BUFFER,n),l.bufferData(l.ARRAY_BUFFER,t,l.STATIC_DRAW),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,r),l.bufferData(l.ELEMENT_ARRAY_BUFFER,u,l.STATIC_DRAW),s=function(){var t=l.createProgram(),n=l.createShader(l.VERTEX_SHADER),r=l.createShader(l.FRAGMENT_SHADER);return l.shaderSource(n,["precision "+e.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),l.shaderSource(r,["precision "+e.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),l.compileShader(n),l.compileShader(r),l.attachShader(t,n),l.attachShader(t,r),l.linkProgram(t),t}(),i={position:l.getAttribLocation(s,"position"),uv:l.getAttribLocation(s,"uv")},a={uvOffset:l.getUniformLocation(s,"uvOffset"),uvScale:l.getUniformLocation(s,"uvScale"),rotation:l.getUniformLocation(s,"rotation"),scale:l.getUniformLocation(s,"scale"),color:l.getUniformLocation(s,"color"),map:l.getUniformLocation(s,"map"),opacity:l.getUniformLocation(s,"opacity"),modelViewMatrix:l.getUniformLocation(s,"modelViewMatrix"),projectionMatrix:l.getUniformLocation(s,"projectionMatrix"),fogType:l.getUniformLocation(s,"fogType"),fogDensity:l.getUniformLocation(s,"fogDensity"),fogNear:l.getUniformLocation(s,"fogNear"),fogFar:l.getUniformLocation(s,"fogFar"),fogColor:l.getUniformLocation(s,"fogColor"),alphaTest:l.getUniformLocation(s,"alphaTest")};var c=document.createElement("canvas");c.width=8,c.height=8;var h=c.getContext("2d");h.fillStyle="white",h.fillRect(0,0,8,8),(o=new te.Texture(c)).needsUpdate=!0}(),l.useProgram(s),u.initAttributes(),u.enableAttribute(i.position),u.enableAttribute(i.uv),u.disableUnusedAttributes(),u.disable(l.CULL_FACE),u.enable(l.BLEND),l.bindBuffer(l.ARRAY_BUFFER,n),l.vertexAttribPointer(i.position,2,l.FLOAT,!1,16,0),l.vertexAttribPointer(i.uv,2,l.FLOAT,!1,16,8),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,r),l.uniformMatrix4fv(a.projectionMatrix,!1,m.projectionMatrix.elements),u.activeTexture(l.TEXTURE0),l.uniform1i(a.map,0);var g=0,y=0,b=f.fog;b?(l.uniform3f(a.fogColor,b.color.r,b.color.g,b.color.b),b instanceof te.Fog?(l.uniform1f(a.fogNear,b.near),l.uniform1f(a.fogFar,b.far),l.uniform1i(a.fogType,1),g=1,y=1):b instanceof te.FogExp2&&(l.uniform1f(a.fogDensity,b.density),l.uniform1i(a.fogType,2),g=2,y=2)):(l.uniform1i(a.fogType,0),g=0,y=0);for(var v=0,x=t.length;v<x;v++)(k=t[v]).modelViewMatrix.multiplyMatrices(m.matrixWorldInverse,k.matrixWorld),k.z=-k.modelViewMatrix.elements[14];t.sort(p);var w=[];for(v=0,x=t.length;v<x;v++){var k,S=(k=t[v]).material;l.uniform1f(a.alphaTest,S.alphaTest),l.uniformMatrix4fv(a.modelViewMatrix,!1,k.modelViewMatrix.elements),k.matrixWorld.decompose(c,h,d),w[0]=d.x,w[1]=d.y;var E=0;f.fog&&S.fog&&(E=y),g!==E&&(l.uniform1i(a.fogType,E),g=E),null!==S.map?(l.uniform2f(a.uvOffset,S.map.offset.x,S.map.offset.y),l.uniform2f(a.uvScale,S.map.repeat.x,S.map.repeat.y)):(l.uniform2f(a.uvOffset,0,0),l.uniform2f(a.uvScale,1,1)),l.uniform1f(a.opacity,S.opacity),l.uniform3f(a.color,S.color.r,S.color.g,S.color.b),l.uniform1f(a.rotation,S.rotation),l.uniform2fv(a.scale,w),u.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst),u.setDepthTest(S.depthTest),u.setDepthWrite(S.depthWrite),S.map&&S.map.image&&S.map.image.width?e.setTexture(S.map,0):e.setTexture(o,0),l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0)}u.enable(l.CULL_FACE),e.resetGLState()}}},Object.defineProperties(te.Box2.prototype,{empty:{value:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()}},isIntersectionBox:{value:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)}}}),Object.defineProperties(te.Box3.prototype,{empty:{value:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()}},isIntersectionBox:{value:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)}},isIntersectionSphere:{value:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}}),Object.defineProperties(te.Matrix3.prototype,{multiplyVector3:{value:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)}},multiplyVector3Array:{value:function(e){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)}}}),Object.defineProperties(te.Matrix4.prototype,{extractPosition:{value:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)}},setRotationFromQuaternion:{value:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)}},multiplyVector3:{value:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)}},multiplyVector4:{value:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)}},multiplyVector3Array:{value:function(e){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)}},rotateAxis:{value:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)}},crossVector:{value:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)}},translate:{value:function(e){console.error("THREE.Matrix4: .translate() has been removed.")}},rotateX:{value:function(e){console.error("THREE.Matrix4: .rotateX() has been removed.")}},rotateY:{value:function(e){console.error("THREE.Matrix4: .rotateY() has been removed.")}},rotateZ:{value:function(e){console.error("THREE.Matrix4: .rotateZ() has been removed.")}},rotateByAxis:{value:function(e,t){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")}}}),Object.defineProperties(te.Plane.prototype,{isIntersectionLine:{value:function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)}}}),Object.defineProperties(te.Quaternion.prototype,{multiplyVector3:{value:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)}}}),Object.defineProperties(te.Ray.prototype,{isIntersectionBox:{value:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)}},isIntersectionPlane:{value:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)}},isIntersectionSphere:{value:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}}),Object.defineProperties(te.Vector3.prototype,{setEulerFromRotationMatrix:{value:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")}},setEulerFromQuaternion:{value:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")}},getPositionFromMatrix:{value:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)}},getScaleFromMatrix:{value:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)}},getColumnFromMatrix:{value:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)}}}),Object.defineProperties(te.Object3D.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},getChildByName:{value:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)}},renderDepth:{set:function(e){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")}},translate:{value:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(e){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(te,{PointCloud:{value:function(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new te.Points(e,t)}},ParticleSystem:{value:function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new te.Points(e,t)}}}),Object.defineProperties(te.Light.prototype,{onlyShadow:{set:function(e){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){this.shadow.camera.far=e}},shadowCameraVisible:{set:function(e){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){this.shadow.bias=e}},shadowDarkness:{set:function(e){this.shadow.darkness=e}},shadowMapWidth:{set:function(e){this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){this.shadow.mapSize.height=e}}}),Object.defineProperties(te.BufferAttribute.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length}}}),Object.defineProperties(te.BufferGeometry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}},addIndex:{value:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)}},addDrawCall:{value:function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)}},clearDrawCalls:{value:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()}},computeTangents:{value:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")}},computeOffsets:{value:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}}),Object.defineProperties(te.Material.prototype,{wrapAround:{get:function(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set:function(e){console.warn("THREE."+this.type+": .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE."+this.type+": .wrapRGB has been removed."),new te.Color}}}),Object.defineProperties(te,{PointCloudMaterial:{value:function(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new te.PointsMaterial(e)}},ParticleBasicMaterial:{value:function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new te.PointsMaterial(e)}},ParticleSystemMaterial:{value:function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new te.PointsMaterial(e)}}}),Object.defineProperties(te.MeshPhongMaterial.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(e){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(te.ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.defineProperties(te.WebGLRenderer.prototype,{supportsFloatTextures:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")}},supportsHalfFloatTextures:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")}},supportsStandardDerivatives:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")}},supportsCompressedTextureS3TC:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")}},supportsCompressedTexturePVRTC:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")}},supportsBlendMinMax:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")}},supportsVertexTextures:{value:function(){return this.capabilities.vertexTextures}},supportsInstancedArrays:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")}},enableScissorTest:{value:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)}},initMaterial:{value:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")}},addPrePlugin:{value:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")}},addPostPlugin:{value:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")}},updateShadowMap:{value:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}},shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=e}},shadowMapDebug:{get:function(){return this.shadowMap.debug},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug."),this.shadowMap.debug=e}}}),Object.defineProperties(te.WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),te.GeometryUtils={merge:function(e,t,n){var r;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),t instanceof te.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry),e.merge(t,r,n)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}},te.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var s=new te.TextureLoader;s.setCrossOrigin(this.crossOrigin);var i=s.load(e,n,void 0,r);return t&&(i.mapping=t),i},loadTextureCube:function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var s=new te.CubeTextureLoader;s.setCrossOrigin(this.crossOrigin);var i=s.load(e,n,void 0,r);return t&&(i.mapping=t),i},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}},te.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(e,t){console.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(e,t){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},te.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},te.TextGeometry=function(){console.error("THREE.TextGeometry has been moved to /examples/js/geometries/TextGeometry.js"),console.error("THREE.FontUtils has been moved to /examples/js/utils/FontUtils.js")},te.MeshFaceMaterial=te.MultiMaterial,te.CurveUtils={tangentQuadraticBezier:function(e,t,n,r){return 2*(1-e)*(n-t)+2*e*(r-n)},tangentCubicBezier:function(e,t,n,r,s){return-3*t*(1-e)*(1-e)+3*n*(1-e)*(1-e)-6*e*n*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*s},tangentSpline:function(e,t,n,r,s){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,n,r,s){var i=.5*(n-e),a=.5*(r-t),o=s*s;return(2*t-2*n+i+a)*(s*o)+(-3*t+3*n-2*i-a)*o+i*s+t}},te.SceneUtils={createMultiMaterialObject:function(e,t){for(var n=new te.Group,r=0,s=t.length;r<s;r++)n.add(new te.Mesh(e,t[r]));return n},detach:function(e,t,n){e.applyMatrix(t.matrixWorld),t.remove(e),n.add(e)},attach:function(e,t,n){var r=new te.Matrix4;r.getInverse(n.matrixWorld),e.applyMatrix(r),t.remove(e),n.add(e)}},te.ShapeUtils={area:function(e){for(var t=e.length,n=0,r=t-1,s=0;s<t;r=s++)n+=e[r].x*e[s].y-e[s].x*e[r].y;return.5*n},triangulate:function(){function e(e,t,n,r,s,i){var a,o,l,u,c,h,d,p,f,m,g,y,b,v,x,w,k;if(o=e[i[t]].x,l=e[i[t]].y,u=e[i[n]].x,c=e[i[n]].y,h=e[i[r]].x,d=e[i[r]].y,Number.EPSILON>(u-o)*(d-l)-(c-l)*(h-o))return!1;for(m=h-u,g=d-c,y=o-h,b=l-d,v=u-o,x=c-l,a=0;a<s;a++)if(p=e[i[a]].x,f=e[i[a]].y,!(p===o&&f===l||p===u&&f===c||p===h&&f===d)&&(w=v*(f-l)-x*(p-o),k=y*(f-d)-b*(p-h),m*(f-c)-g*(p-u)>=-Number.EPSILON&&k>=-Number.EPSILON&&w>=-Number.EPSILON))return!1;return!0}return function(t,n){var r=t.length;if(r<3)return null;var s,i,a,o=[],l=[],u=[];if(te.ShapeUtils.area(t)>0)for(i=0;i<r;i++)l[i]=i;else for(i=0;i<r;i++)l[i]=r-1-i;var c=r,h=2*c;for(i=c-1;c>2;){if(h--<=0)return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),n?u:o;if(c<=(s=i)&&(s=0),c<=(i=s+1)&&(i=0),c<=(a=i+1)&&(a=0),e(t,s,i,a,c,l)){var d,p,f,m,g;for(d=l[s],p=l[i],f=l[a],o.push([t[d],t[p],t[f]]),u.push([l[s],l[i],l[a]]),m=i,g=i+1;g<c;m++,g++)l[m]=l[g];h=2*--c}}return n?u:o}}(),triangulateShape:function(e,t){function n(e,t,n){return e.x!==t.x?e.x<t.x?e.x<=n.x&&n.x<=t.x:t.x<=n.x&&n.x<=e.x:e.y<t.y?e.y<=n.y&&n.y<=t.y:t.y<=n.y&&n.y<=e.y}function r(e,t,r,s,i){var a=t.x-e.x,o=t.y-e.y,l=s.x-r.x,u=s.y-r.y,c=e.x-r.x,h=e.y-r.y,d=o*l-a*u,p=o*c-a*h;if(Math.abs(d)>Number.EPSILON){var f;if(d>0){if(p<0||p>d)return[];if((f=u*c-l*h)<0||f>d)return[]}else{if(p>0||p<d)return[];if((f=u*c-l*h)>0||f<d)return[]}if(0===f)return!i||0!==p&&p!==d?[e]:[];if(f===d)return!i||0!==p&&p!==d?[t]:[];if(0===p)return[r];if(p===d)return[s];var m=f/d;return[{x:e.x+m*a,y:e.y+m*o}]}if(0!==p||u*c!=l*h)return[];var g,y,b,v,x,w,k,S,E=0===a&&0===o,I=0===l&&0===u;return E&&I?e.x!==r.x||e.y!==r.y?[]:[e]:E?n(r,s,e)?[e]:[]:I?n(e,t,r)?[r]:[]:(0!==a?(e.x<t.x?(g=e,b=e.x,y=t,v=t.x):(g=t,b=t.x,y=e,v=e.x),r.x<s.x?(x=r,k=r.x,w=s,S=s.x):(x=s,k=s.x,w=r,S=r.x)):(e.y<t.y?(g=e,b=e.y,y=t,v=t.y):(g=t,b=t.y,y=e,v=e.y),r.y<s.y?(x=r,k=r.y,w=s,S=s.y):(x=s,k=s.y,w=r,S=r.y)),b<=k?v<k?[]:v===k?i?[]:[x]:v<=S?[x,y]:[x,w]:b>S?[]:b===S?i?[]:[g]:v<=S?[g,y]:[g,w])}function s(e,t,n,r){var s=t.x-e.x,i=t.y-e.y,a=n.x-e.x,o=n.y-e.y,l=r.x-e.x,u=r.y-e.y,c=s*o-i*a,h=s*u-i*l;if(Math.abs(c)>Number.EPSILON){var d=l*o-u*a;return c>0?h>=0&&d>=0:h>=0||d>=0}return h>0}for(var i,a,o,l,u,c,h={},d=e.concat(),p=0,f=t.length;p<f;p++)Array.prototype.push.apply(d,t[p]);for(i=0,a=d.length;i<a;i++)void 0!==h[u=d[i].x+":"+d[i].y]&&console.warn("THREE.Shape: Duplicate point",u),h[u]=i;var m=function(e,t){var n,i=e.concat();function a(e,t){var r=i.length-1,a=e-1;a<0&&(a=r);var o=e+1;o>r&&(o=0);var l=s(i[e],i[a],i[o],n[t]);if(!l)return!1;var u=n.length-1,c=t-1;c<0&&(c=u);var h=t+1;return h>u&&(h=0),!!(l=s(n[t],n[c],n[h],i[e]))}function o(e,t){var n,s;for(n=0;n<i.length;n++)if(s=n+1,s%=i.length,r(e,t,i[n],i[s],!0).length>0)return!0;return!1}var l=[];function u(e,n){var s,i,a,o;for(s=0;s<l.length;s++)for(i=t[l[s]],a=0;a<i.length;a++)if(o=a+1,o%=i.length,r(e,n,i[a],i[o],!0).length>0)return!0;return!1}for(var c,h,d,p,f,m,g,y,b,v,x=[],w=0,k=t.length;w<k;w++)l.push(w);for(var S=0,E=2*l.length;l.length>0;){if(--E<0){console.log("Infinite Loop! Holes left:"+l.length+", Probably Hole outside Shape!");break}for(h=S;h<i.length;h++){for(d=i[h],c=-1,w=0;w<l.length;w++)if(f=l[w],void 0===x[m=d.x+":"+d.y+":"+f]){n=t[f];for(var I=0;I<n.length;I++)if(p=n[I],a(h,I)&&!o(d,p)&&!u(d,p)){c=I,l.splice(w,1),g=i.slice(0,h+1),y=i.slice(h),b=n.slice(c),v=n.slice(0,c+1),i=g.concat(b).concat(v).concat(y),S=h;break}if(c>=0)break;x[m]=!0}if(c>=0)break}}return i}(e,t),g=te.ShapeUtils.triangulate(m,!1);for(i=0,a=g.length;i<a;i++)for(l=g[i],o=0;o<3;o++)void 0!==(c=h[u=l[o].x+":"+l[o].y])&&(l[o]=c);return g.concat()},isClockWise:function(e){return te.ShapeUtils.area(e)<0},b2:function(e,t,n,r){return function(e,t){var n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,r)},b3:function(e,t,n,r,s){return function(e,t){var n=1-e;return n*n*n*t}(e,t)+function(e,t){var n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,r)+function(e,t){return e*e*e*t}(e,s)}},te.Curve=function(){},te.Curve.prototype={constructor:te.Curve,getPoint:function(e){return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},getPointAt:function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},getPoints:function(e){e||(e=5);var t,n=[];for(t=0;t<=e;t++)n.push(this.getPoint(t/e));return n},getSpacedPoints:function(e){e||(e=5);var t,n=[];for(t=0;t<=e;t++)n.push(this.getPointAt(t/e));return n},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,n,r=[],s=this.getPoint(0),i=0;for(r.push(0),n=1;n<=e;n++)i+=(t=this.getPoint(n/e)).distanceTo(s),r.push(i),s=t;return this.cacheArcLengths=r,r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var n,r=this.getLengths(),s=0,i=r.length;n=t||e*r[i-1];for(var a,o=0,l=i-1;o<=l;)if((a=r[s=Math.floor(o+(l-o)/2)]-n)<0)o=s+1;else{if(!(a>0)){l=s;break}l=s-1}if(r[s=l]===n)return s/(i-1);var u=r[s];return(s+(n-u)/(r[s+1]-u))/(i-1)},getTangent:function(e){var t=1e-4,n=e-t,r=e+t;n<0&&(n=0),r>1&&(r=1);var s=this.getPoint(n);return this.getPoint(r).clone().sub(s).normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)}},te.Curve.Utils=te.CurveUtils,te.Curve.create=function(e,t){return e.prototype=Object.create(te.Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},te.CurvePath=function(){this.curves=[],this.autoClose=!1},te.CurvePath.prototype=Object.create(te.Curve.prototype),te.CurvePath.prototype.constructor=te.CurvePath,te.CurvePath.prototype.add=function(e){this.curves.push(e)},te.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new te.LineCurve(t,e))},te.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),r=0;r<n.length;){if(n[r]>=t){var s=n[r]-t,i=this.curves[r],a=1-s/i.getLength();return i.getPointAt(a)}r++}return null},te.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},te.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},te.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e);return this.createGeometry(t)},te.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e);return this.createGeometry(t)},te.CurvePath.prototype.createGeometry=function(e){for(var t=new te.Geometry,n=0,r=e.length;n<r;n++){var s=e[n];t.vertices.push(new te.Vector3(s.x,s.y,s.z||0))}return t},te.Path=function(e){te.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},te.Path.prototype=Object.create(te.CurvePath.prototype),te.Path.prototype.constructor=te.Path,te.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)},te.Path.prototype.moveTo=function(e,t){this.actions.push({action:"moveTo",args:[e,t]})},te.Path.prototype.lineTo=function(e,t){var n=this.actions[this.actions.length-1].args,r=n[n.length-2],s=n[n.length-1],i=new te.LineCurve(new te.Vector2(r,s),new te.Vector2(e,t));this.curves.push(i),this.actions.push({action:"lineTo",args:[e,t]})},te.Path.prototype.quadraticCurveTo=function(e,t,n,r){var s=this.actions[this.actions.length-1].args,i=s[s.length-2],a=s[s.length-1],o=new te.QuadraticBezierCurve(new te.Vector2(i,a),new te.Vector2(e,t),new te.Vector2(n,r));this.curves.push(o),this.actions.push({action:"quadraticCurveTo",args:[e,t,n,r]})},te.Path.prototype.bezierCurveTo=function(e,t,n,r,s,i){var a=this.actions[this.actions.length-1].args,o=a[a.length-2],l=a[a.length-1],u=new te.CubicBezierCurve(new te.Vector2(o,l),new te.Vector2(e,t),new te.Vector2(n,r),new te.Vector2(s,i));this.curves.push(u),this.actions.push({action:"bezierCurveTo",args:[e,t,n,r,s,i]})},te.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),n=this.actions[this.actions.length-1].args,r=n[n.length-2],s=n[n.length-1],i=[new te.Vector2(r,s)];Array.prototype.push.apply(i,e);var a=new te.SplineCurve(i);this.curves.push(a),this.actions.push({action:"splineThru",args:t})},te.Path.prototype.arc=function(e,t,n,r,s,i){var a=this.actions[this.actions.length-1].args,o=a[a.length-2],l=a[a.length-1];this.absarc(e+o,t+l,n,r,s,i)},te.Path.prototype.absarc=function(e,t,n,r,s,i){this.absellipse(e,t,n,n,r,s,i)},te.Path.prototype.ellipse=function(e,t,n,r,s,i,a,o){var l=this.actions[this.actions.length-1].args,u=l[l.length-2],c=l[l.length-1];this.absellipse(e+u,t+c,n,r,s,i,a,o)},te.Path.prototype.absellipse=function(e,t,n,r,s,i,a,o){var l=[e,t,n,r,s,i,a,o||0],u=new te.EllipseCurve(e,t,n,r,s,i,a,o);this.curves.push(u);var c=u.getPoint(1);l.push(c.x),l.push(c.y),this.actions.push({action:"ellipse",args:l})},te.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],n=0;n<e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},te.Path.prototype.getPoints=function(e){e=e||12;for(var t,n,r,s,i,a,o,l,u,c,h,d=te.ShapeUtils.b2,p=te.ShapeUtils.b3,f=[],m=0,g=this.actions.length;m<g;m++){var y=this.actions[m],b=y.action,v=y.args;switch(b){case"moveTo":case"lineTo":f.push(new te.Vector2(v[0],v[1]));break;case"quadraticCurveTo":t=v[2],n=v[3],i=v[0],a=v[1],f.length>0?(o=(u=f[f.length-1]).x,l=u.y):(o=(u=this.actions[m-1].args)[u.length-2],l=u[u.length-1]);for(var x=1;x<=e;x++)c=d(R=x/e,o,i,t),h=d(R,l,a,n),f.push(new te.Vector2(c,h));break;case"bezierCurveTo":for(t=v[4],n=v[5],i=v[0],a=v[1],r=v[2],s=v[3],f.length>0?(o=(u=f[f.length-1]).x,l=u.y):(o=(u=this.actions[m-1].args)[u.length-2],l=u[u.length-1]),x=1;x<=e;x++)c=p(R=x/e,o,i,r,t),h=p(R,l,a,s,n),f.push(new te.Vector2(c,h));break;case"splineThru":u=this.actions[m-1].args;var w=[new te.Vector2(u[u.length-2],u[u.length-1])],k=e*v[0].length;w=w.concat(v[0]);var S=new te.SplineCurve(w);for(x=1;x<=k;x++)f.push(S.getPointAt(x/k));break;case"arc":var E=v[0],I=v[1],T=v[2],C=v[3],N=v[4],A=!!v[5],M=N-C,_=2*e;for(x=1;x<=_;x++){var R=x/_;A||(R=1-R),D=C+R*M,c=E+T*Math.cos(D),h=I+T*Math.sin(D),f.push(new te.Vector2(c,h))}break;case"ellipse":E=v[0],I=v[1];var D,$,L,F=v[2],O=v[3],z=(C=v[4],N=v[5],A=!!v[6],v[7]);for(M=N-C,_=2*e,0!==z&&($=Math.cos(z),L=Math.sin(z)),x=1;x<=_;x++){if(R=x/_,A||(R=1-R),D=C+R*M,c=E+F*Math.cos(D),h=I+O*Math.sin(D),0!==z){var P=c;c=(P-E)*$-(h-I)*L+E,h=(P-E)*L+(h-I)*$+I}f.push(new te.Vector2(c,h))}}}var B=f[f.length-1];return Math.abs(B.x-f[0].x)<Number.EPSILON&&Math.abs(B.y-f[0].y)<Number.EPSILON&&f.splice(f.length-1,1),this.autoClose&&f.push(f[0]),f},te.Path.prototype.toShapes=function(e,t){function n(e){for(var t=[],n=0,r=e.length;n<r;n++){var s=e[n],i=new te.Shape;i.actions=s.actions,i.curves=s.curves,t.push(i)}return t}function r(e,t){for(var n=t.length,r=!1,s=n-1,i=0;i<n;s=i++){var a=t[s],o=t[i],l=o.x-a.x,u=o.y-a.y;if(Math.abs(u)>Number.EPSILON){if(u<0&&(a=t[i],l=-l,o=t[s],u=-u),e.y<a.y||e.y>o.y)continue;if(e.y===a.y){if(e.x===a.x)return!0}else{var c=u*(e.x-a.x)-l*(e.y-a.y);if(0===c)return!0;if(c<0)continue;r=!r}}else{if(e.y!==a.y)continue;if(o.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=o.x)return!0}}return r}var s=te.ShapeUtils.isClockWise,i=function(e){for(var t=[],n=new te.Path,r=0,s=e.length;r<s;r++){var i=e[r],a=i.args,o=i.action;"moveTo"===o&&0!==n.actions.length&&(t.push(n),n=new te.Path),n[o].apply(n,a)}return 0!==n.actions.length&&t.push(n),t}(this.actions);if(0===i.length)return[];if(!0===t)return n(i);var a,o,l,u=[];if(1===i.length)return o=i[0],(l=new te.Shape).actions=o.actions,l.curves=o.curves,u.push(l),u;var c=!s(i[0].getPoints());c=e?!c:c;var h,d,p=[],f=[],m=[],g=0;f[g]=void 0,m[g]=[];for(var y=0,b=i.length;y<b;y++)a=s(h=(o=i[y]).getPoints()),(a=e?!a:a)?(!c&&f[g]&&g++,f[g]={s:new te.Shape,p:h},f[g].s.actions=o.actions,f[g].s.curves=o.curves,c&&g++,m[g]=[]):m[g].push({h:o,p:h[0]});if(!f[0])return n(i);if(f.length>1){for(var v=!1,x=[],w=0,k=f.length;w<k;w++)p[w]=[];for(w=0,k=f.length;w<k;w++)for(var S=m[w],E=0;E<S.length;E++){for(var I=S[E],T=!0,C=0;C<f.length;C++)r(I.p,f[C].p)&&(w!==C&&x.push({froms:w,tos:C,hole:E}),T?(T=!1,p[C].push(I)):v=!0);T&&p[w].push(I)}x.length>0&&(v||(m=p))}y=0;for(var N=f.length;y<N;y++){l=f[y].s,u.push(l);for(var A=0,M=(d=m[y]).length;A<M;A++)l.holes.push(d[A].h)}return u},te.Shape=function(){te.Path.apply(this,arguments),this.holes=[]},te.Shape.prototype=Object.create(te.Path.prototype),te.Shape.prototype.constructor=te.Shape,te.Shape.prototype.extrude=function(e){return new te.ExtrudeGeometry(this,e)},te.Shape.prototype.makeGeometry=function(e){return new te.ShapeGeometry(this,e)},te.Shape.prototype.getPointsHoles=function(e){for(var t=[],n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t},te.Shape.prototype.extractAllPoints=function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},te.Shape.prototype.extractPoints=function(e){return this.extractAllPoints(e)},te.Shape.Utils=te.ShapeUtils,te.LineCurve=function(e,t){this.v1=e,this.v2=t},te.LineCurve.prototype=Object.create(te.Curve.prototype),te.LineCurve.prototype.constructor=te.LineCurve,te.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},te.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},te.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},te.QuadraticBezierCurve=function(e,t,n){this.v0=e,this.v1=t,this.v2=n},te.QuadraticBezierCurve.prototype=Object.create(te.Curve.prototype),te.QuadraticBezierCurve.prototype.constructor=te.QuadraticBezierCurve,te.QuadraticBezierCurve.prototype.getPoint=function(e){var t=te.ShapeUtils.b2;return new te.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y))},te.QuadraticBezierCurve.prototype.getTangent=function(e){var t=te.CurveUtils.tangentQuadraticBezier;return new te.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y)).normalize()},te.CubicBezierCurve=function(e,t,n,r){this.v0=e,this.v1=t,this.v2=n,this.v3=r},te.CubicBezierCurve.prototype=Object.create(te.Curve.prototype),te.CubicBezierCurve.prototype.constructor=te.CubicBezierCurve,te.CubicBezierCurve.prototype.getPoint=function(e){var t=te.ShapeUtils.b3;return new te.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y))},te.CubicBezierCurve.prototype.getTangent=function(e){var t=te.CurveUtils.tangentCubicBezier;return new te.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()},te.SplineCurve=function(e){this.points=null==e?[]:e},te.SplineCurve.prototype=Object.create(te.Curve.prototype),te.SplineCurve.prototype.constructor=te.SplineCurve,te.SplineCurve.prototype.getPoint=function(e){var t=this.points,n=(t.length-1)*e,r=Math.floor(n),s=n-r,i=t[0===r?r:r-1],a=t[r],o=t[r>t.length-2?t.length-1:r+1],l=t[r>t.length-3?t.length-1:r+2],u=te.CurveUtils.interpolate;return new te.Vector2(u(i.x,a.x,o.x,l.x,s),u(i.y,a.y,o.y,l.y,s))},te.EllipseCurve=function(e,t,n,r,s,i,a,o){this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=i,this.aClockwise=a,this.aRotation=o||0},te.EllipseCurve.prototype=Object.create(te.Curve.prototype),te.EllipseCurve.prototype.constructor=te.EllipseCurve,te.EllipseCurve.prototype.getPoint=function(e){var t,n=this.aEndAngle-this.aStartAngle;n<0&&(n+=2*Math.PI),n>2*Math.PI&&(n-=2*Math.PI),t=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-n):this.aStartAngle+e*n;var r=this.aX+this.xRadius*Math.cos(t),s=this.aY+this.yRadius*Math.sin(t);if(0!==this.aRotation){var i=Math.cos(this.aRotation),a=Math.sin(this.aRotation),o=r,l=s;r=(o-this.aX)*i-(l-this.aY)*a+this.aX,s=(o-this.aX)*a+(l-this.aY)*i+this.aY}return new te.Vector2(r,s)},te.ArcCurve=function(e,t,n,r,s,i){te.EllipseCurve.call(this,e,t,n,n,r,s,i)},te.ArcCurve.prototype=Object.create(te.EllipseCurve.prototype),te.ArcCurve.prototype.constructor=te.ArcCurve,te.LineCurve3=te.Curve.create((function(e,t){this.v1=e,this.v2=t}),(function(e){var t=new te.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t})),te.QuadraticBezierCurve3=te.Curve.create((function(e,t,n){this.v0=e,this.v1=t,this.v2=n}),(function(e){var t=te.ShapeUtils.b2;return new te.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y),t(e,this.v0.z,this.v1.z,this.v2.z))})),te.CubicBezierCurve3=te.Curve.create((function(e,t,n,r){this.v0=e,this.v1=t,this.v2=n,this.v3=r}),(function(e){var t=te.ShapeUtils.b3;return new te.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z))})),te.SplineCurve3=te.Curve.create((function(e){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"),this.points=null==e?[]:e}),(function(e){var t=this.points,n=(t.length-1)*e,r=Math.floor(n),s=n-r,i=t[0==r?r:r-1],a=t[r],o=t[r>t.length-2?t.length-1:r+1],l=t[r>t.length-3?t.length-1:r+2],u=te.CurveUtils.interpolate;return new te.Vector3(u(i.x,a.x,o.x,l.x,s),u(i.y,a.y,o.y,l.y,s),u(i.z,a.z,o.z,l.z,s))})),te.CatmullRomCurve3=function(){var e=new te.Vector3,t=new s,n=new s,r=new s;function s(){}return s.prototype.init=function(e,t,n,r){this.c0=e,this.c1=n,this.c2=-3*e+3*t-2*n-r,this.c3=2*e-2*t+n+r},s.prototype.initNonuniformCatmullRom=function(e,t,n,r,s,i,a){var o=(t-e)/s-(n-e)/(s+i)+(n-t)/i,l=(n-t)/i-(r-t)/(i+a)+(r-n)/a;o*=i,l*=i,this.init(t,n,o,l)},s.prototype.initCatmullRom=function(e,t,n,r,s){this.init(t,n,s*(n-e),s*(r-t))},s.prototype.calc=function(e){var t=e*e,n=t*e;return this.c0+this.c1*e+this.c2*t+this.c3*n},te.Curve.create((function(e){this.points=e||[],this.closed=!1}),(function(s){var i,a,o,l,u,c,h,d,p=this.points;if((l=p.length)<2&&console.log("duh, you need at least 2 points"),o=(i=(l-(this.closed?0:1))*s)-(a=Math.floor(i)),this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/p.length)+1)*p.length:0===o&&a===l-1&&(a=l-2,o=1),this.closed||a>0?u=p[(a-1)%l]:(e.subVectors(p[0],p[1]).add(p[0]),u=e),c=p[a%l],h=p[(a+1)%l],this.closed||a+2<l?d=p[(a+2)%l]:(e.subVectors(p[l-1],p[l-2]).add(p[l-2]),d=e),void 0===this.type||"centripetal"===this.type||"chordal"===this.type){var f="chordal"===this.type?.5:.25,m=Math.pow(u.distanceToSquared(c),f),g=Math.pow(c.distanceToSquared(h),f),y=Math.pow(h.distanceToSquared(d),f);g<1e-4&&(g=1),m<1e-4&&(m=g),y<1e-4&&(y=g),t.initNonuniformCatmullRom(u.x,c.x,h.x,d.x,m,g,y),n.initNonuniformCatmullRom(u.y,c.y,h.y,d.y,m,g,y),r.initNonuniformCatmullRom(u.z,c.z,h.z,d.z,m,g,y)}else if("catmullrom"===this.type){var b=void 0!==this.tension?this.tension:.5;t.initCatmullRom(u.x,c.x,h.x,d.x,b),n.initCatmullRom(u.y,c.y,h.y,d.y,b),r.initCatmullRom(u.z,c.z,h.z,d.z,b)}return new te.Vector3(t.calc(o),n.calc(o),r.calc(o))}))}(),te.ClosedSplineCurve3=function(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3."),te.CatmullRomCurve3.call(this,e),this.type="catmullrom",this.closed=!0},te.ClosedSplineCurve3.prototype=Object.create(te.CatmullRomCurve3.prototype),te.BoxGeometry=function(e,t,n,r,s,i){te.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:i},this.widthSegments=r||1,this.heightSegments=s||1,this.depthSegments=i||1;var a=this,o=e/2,l=t/2,u=n/2;function c(e,t,n,r,s,i,o,l){var u,c,h,d=a.widthSegments,p=a.heightSegments,f=s/2,m=i/2,g=a.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?u="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(u="y",p=a.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(u="x",d=a.depthSegments);var y=d+1,b=p+1,v=s/d,x=i/p,w=new te.Vector3;for(w[u]=o>0?1:-1,h=0;h<b;h++)for(c=0;c<y;c++){var k=new te.Vector3;k[e]=(c*v-f)*n,k[t]=(h*x-m)*r,k[u]=o,a.vertices.push(k)}for(h=0;h<p;h++)for(c=0;c<d;c++){var S=c+y*h,E=c+y*(h+1),I=c+1+y*(h+1),T=c+1+y*h,C=new te.Vector2(c/d,1-h/p),N=new te.Vector2(c/d,1-(h+1)/p),A=new te.Vector2((c+1)/d,1-(h+1)/p),M=new te.Vector2((c+1)/d,1-h/p),_=new te.Face3(S+g,E+g,T+g);_.normal.copy(w),_.vertexNormals.push(w.clone(),w.clone(),w.clone()),_.materialIndex=l,a.faces.push(_),a.faceVertexUvs[0].push([C,N,M]),(_=new te.Face3(E+g,I+g,T+g)).normal.copy(w),_.vertexNormals.push(w.clone(),w.clone(),w.clone()),_.materialIndex=l,a.faces.push(_),a.faceVertexUvs[0].push([N.clone(),A,M.clone()])}}c("z","y",-1,-1,n,t,o,0),c("z","y",1,-1,n,t,-o,1),c("x","z",1,1,e,n,l,2),c("x","z",1,-1,e,n,-l,3),c("x","y",1,-1,e,t,u,4),c("x","y",-1,-1,e,t,-u,5),this.mergeVertices()},te.BoxGeometry.prototype=Object.create(te.Geometry.prototype),te.BoxGeometry.prototype.constructor=te.BoxGeometry,te.CubeGeometry=te.BoxGeometry,te.CircleGeometry=function(e,t,n,r){te.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new te.CircleBufferGeometry(e,t,n,r))},te.CircleGeometry.prototype=Object.create(te.Geometry.prototype),te.CircleGeometry.prototype.constructor=te.CircleGeometry,te.CircleBufferGeometry=function(e,t,n,r){te.BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},e=e||50,t=void 0!==t?Math.max(3,t):8,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var s=t+2,i=new Float32Array(3*s),a=new Float32Array(3*s),o=new Float32Array(2*s);a[2]=1,o[0]=.5,o[1]=.5;for(var l=0,u=3,c=2;l<=t;l++,u+=3,c+=2){var h=n+l/t*r;i[u]=e*Math.cos(h),i[u+1]=e*Math.sin(h),a[u+2]=1,o[c]=(i[u]/e+1)/2,o[c+1]=(i[u+1]/e+1)/2}var d=[];for(u=1;u<=t;u++)d.push(u,u+1,0);this.setIndex(new te.BufferAttribute(new Uint16Array(d),1)),this.addAttribute("position",new te.BufferAttribute(i,3)),this.addAttribute("normal",new te.BufferAttribute(a,3)),this.addAttribute("uv",new te.BufferAttribute(o,2)),this.boundingSphere=new te.Sphere(new te.Vector3,e)},te.CircleBufferGeometry.prototype=Object.create(te.BufferGeometry.prototype),te.CircleBufferGeometry.prototype.constructor=te.CircleBufferGeometry,te.CylinderGeometry=function(e,t,n,r,s,i,a,o){te.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:i,thetaStart:a,thetaLength:o},e=void 0!==e?e:20,t=void 0!==t?t:20,n=void 0!==n?n:100,r=r||8,s=s||1,i=void 0!==i&&i,a=void 0!==a?a:0,o=void 0!==o?o:2*Math.PI;var l,u,c=n/2,h=[],d=[];for(u=0;u<=s;u++){var p=[],f=[],m=u/s,g=m*(t-e)+e;for(l=0;l<=r;l++){var y=l/r,b=new te.Vector3;b.x=g*Math.sin(y*o+a),b.y=-m*n+c,b.z=g*Math.cos(y*o+a),this.vertices.push(b),p.push(this.vertices.length-1),f.push(new te.Vector2(y,1-m))}h.push(p),d.push(f)}var v,x,w=(t-e)/n;for(l=0;l<r;l++)for(0!==e?(v=this.vertices[h[0][l]].clone(),x=this.vertices[h[0][l+1]].clone()):(v=this.vertices[h[1][l]].clone(),x=this.vertices[h[1][l+1]].clone()),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*w).normalize(),x.setY(Math.sqrt(x.x*x.x+x.z*x.z)*w).normalize(),u=0;u<s;u++){var k=h[u][l],S=h[u+1][l],E=h[u+1][l+1],I=h[u][l+1],T=v.clone(),C=v.clone(),N=x.clone(),A=x.clone(),M=d[u][l].clone(),_=d[u+1][l].clone(),R=d[u+1][l+1].clone(),D=d[u][l+1].clone();this.faces.push(new te.Face3(k,S,I,[T,C,A])),this.faceVertexUvs[0].push([M,_,D]),this.faces.push(new te.Face3(S,E,I,[C.clone(),N,A.clone()])),this.faceVertexUvs[0].push([_.clone(),R,D.clone()])}if(!1===i&&e>0)for(this.vertices.push(new te.Vector3(0,c,0)),l=0;l<r;l++)k=h[0][l],S=h[0][l+1],E=this.vertices.length-1,T=new te.Vector3(0,1,0),C=new te.Vector3(0,1,0),N=new te.Vector3(0,1,0),M=d[0][l].clone(),_=d[0][l+1].clone(),R=new te.Vector2(_.x,0),this.faces.push(new te.Face3(k,S,E,[T,C,N],void 0,1)),this.faceVertexUvs[0].push([M,_,R]);if(!1===i&&t>0)for(this.vertices.push(new te.Vector3(0,-c,0)),l=0;l<r;l++)k=h[s][l+1],S=h[s][l],E=this.vertices.length-1,T=new te.Vector3(0,-1,0),C=new te.Vector3(0,-1,0),N=new te.Vector3(0,-1,0),M=d[s][l+1].clone(),_=d[s][l].clone(),R=new te.Vector2(_.x,1),this.faces.push(new te.Face3(k,S,E,[T,C,N],void 0,2)),this.faceVertexUvs[0].push([M,_,R]);this.computeFaceNormals()},te.CylinderGeometry.prototype=Object.create(te.Geometry.prototype),te.CylinderGeometry.prototype.constructor=te.CylinderGeometry,te.EdgesGeometry=function(e,t){te.BufferGeometry.call(this),t=void 0!==t?t:1;var n=Math.cos(te.Math.degToRad(t)),r=[0,0],s={};function i(e,t){return e-t}var a,o=["a","b","c"];e instanceof te.BufferGeometry?(a=new te.Geometry).fromBufferGeometry(e):a=e.clone(),a.mergeVertices(),a.computeFaceNormals();for(var l=a.vertices,u=a.faces,c=0,h=u.length;c<h;c++)for(var d=u[c],p=0;p<3;p++)r[0]=d[o[p]],r[1]=d[o[(p+1)%3]],r.sort(i),void 0===s[m=r.toString()]?s[m]={vert1:r[0],vert2:r[1],face1:c,face2:void 0}:s[m].face2=c;var f=[];for(var m in s){var g=s[m];if(void 0===g.face2||u[g.face1].normal.dot(u[g.face2].normal)<=n){var y=l[g.vert1];f.push(y.x),f.push(y.y),f.push(y.z),y=l[g.vert2],f.push(y.x),f.push(y.y),f.push(y.z)}}this.addAttribute("position",new te.BufferAttribute(new Float32Array(f),3))},te.EdgesGeometry.prototype=Object.create(te.BufferGeometry.prototype),te.EdgesGeometry.prototype.constructor=te.EdgesGeometry,te.ExtrudeGeometry=function(e,t){void 0!==e?(te.Geometry.call(this),this.type="ExtrudeGeometry",e=Array.isArray(e)?e:[e],this.addShapeList(e,t),this.computeFaceNormals()):e=[]},te.ExtrudeGeometry.prototype=Object.create(te.Geometry.prototype),te.ExtrudeGeometry.prototype.constructor=te.ExtrudeGeometry,te.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var n=e.length,r=0;r<n;r++){var s=e[r];this.addShape(s,t)}},te.ExtrudeGeometry.prototype.addShape=function(e,t){var n,r,s,i,a,o,l,u,c=void 0!==t.amount?t.amount:100,h=void 0!==t.bevelThickness?t.bevelThickness:6,d=void 0!==t.bevelSize?t.bevelSize:h-2,p=void 0!==t.bevelSegments?t.bevelSegments:3,f=void 0===t.bevelEnabled||t.bevelEnabled,m=void 0!==t.curveSegments?t.curveSegments:12,g=void 0!==t.steps?t.steps:1,y=t.extrudePath,b=!1,v=void 0!==t.UVGenerator?t.UVGenerator:te.ExtrudeGeometry.WorldUVGenerator;y&&(n=y.getSpacedPoints(g),b=!0,f=!1,r=void 0!==t.frames?t.frames:new te.TubeGeometry.FrenetFrames(y,g,!1),s=new te.Vector3,i=new te.Vector3,a=new te.Vector3),f||(p=0,h=0,d=0);var x=this,w=this.vertices.length,k=e.extractPoints(m),S=k.shape,E=k.holes,I=!te.ShapeUtils.isClockWise(S);if(I){for(S=S.reverse(),l=0,u=E.length;l<u;l++)o=E[l],te.ShapeUtils.isClockWise(o)&&(E[l]=o.reverse());I=!1}var T=te.ShapeUtils.triangulateShape(S,E),C=S;for(l=0,u=E.length;l<u;l++)o=E[l],S=S.concat(o);function N(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}var A,M,_,R,D,$,L=S.length,F=T.length;function O(e,t,n){var r,s,i=1,a=e.x-t.x,o=e.y-t.y,l=n.x-e.x,u=n.y-e.y,c=a*a+o*o,h=a*u-o*l;if(Math.abs(h)>Number.EPSILON){var d=Math.sqrt(c),p=Math.sqrt(l*l+u*u),f=t.x-o/d,m=t.y+a/d,g=((n.x-u/p-f)*u-(n.y+l/p-m)*l)/(a*u-o*l),y=(r=f+a*g-e.x)*r+(s=m+o*g-e.y)*s;if(y<=2)return new te.Vector2(r,s);i=Math.sqrt(y/2)}else{var b=!1;a>Number.EPSILON?l>Number.EPSILON&&(b=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(b=!0):Math.sign(o)===Math.sign(u)&&(b=!0),b?(r=-o,s=a,i=Math.sqrt(c)):(r=a,s=o,i=Math.sqrt(c/2))}return new te.Vector2(r/i,s/i)}for(var z=[],P=0,B=C.length,V=B-1,U=P+1;P<B;P++,V++,U++)V===B&&(V=0),U===B&&(U=0),z[P]=O(C[P],C[V],C[U]);var H,W,G=[],j=z.concat();for(l=0,u=E.length;l<u;l++){for(o=E[l],H=[],P=0,V=(B=o.length)-1,U=P+1;P<B;P++,V++,U++)V===B&&(V=0),U===B&&(U=0),H[P]=O(o[P],o[V],o[U]);G.push(H),j=j.concat(H)}for(A=0;A<p;A++){for(R=h*(1-(_=A/p)),M=d*Math.sin(_*Math.PI/2),P=0,B=C.length;P<B;P++)K((D=N(C[P],z[P],M)).x,D.y,-R);for(l=0,u=E.length;l<u;l++)for(o=E[l],H=G[l],P=0,B=o.length;P<B;P++)K((D=N(o[P],H[P],M)).x,D.y,-R)}for(M=d,P=0;P<L;P++)D=f?N(S[P],j[P],M):S[P],b?(i.copy(r.normals[0]).multiplyScalar(D.x),s.copy(r.binormals[0]).multiplyScalar(D.y),a.copy(n[0]).add(i).add(s),K(a.x,a.y,a.z)):K(D.x,D.y,0);for(W=1;W<=g;W++)for(P=0;P<L;P++)D=f?N(S[P],j[P],M):S[P],b?(i.copy(r.normals[W]).multiplyScalar(D.x),s.copy(r.binormals[W]).multiplyScalar(D.y),a.copy(n[W]).add(i).add(s),K(a.x,a.y,a.z)):K(D.x,D.y,c/g*W);for(A=p-1;A>=0;A--){for(R=h*(1-(_=A/p)),M=d*Math.sin(_*Math.PI/2),P=0,B=C.length;P<B;P++)K((D=N(C[P],z[P],M)).x,D.y,c+R);for(l=0,u=E.length;l<u;l++)for(o=E[l],H=G[l],P=0,B=o.length;P<B;P++)D=N(o[P],H[P],M),b?K(D.x,D.y+n[g-1].y,n[g-1].x+R):K(D.x,D.y,c+R)}function q(e,t){var n,r;for(P=e.length;--P>=0;){n=P,(r=P-1)<0&&(r=e.length-1);var s=0,i=g+2*p;for(s=0;s<i;s++){var a=L*s,o=L*(s+1);Z(t+n+a,t+r+a,t+r+o,t+n+o)}}}function K(e,t,n){x.vertices.push(new te.Vector3(e,t,n))}function X(e,t,n){e+=w,t+=w,n+=w,x.faces.push(new te.Face3(e,t,n,null,null,0));var r=v.generateTopUV(x,e,t,n);x.faceVertexUvs[0].push(r)}function Z(e,t,n,r,s,i,a,o,l){e+=w,t+=w,n+=w,r+=w,x.faces.push(new te.Face3(e,t,r,null,null,1)),x.faces.push(new te.Face3(t,n,r,null,null,1));var u=v.generateSideWallUV(x,e,t,n,r);x.faceVertexUvs[0].push([u[0],u[1],u[3]]),x.faceVertexUvs[0].push([u[1],u[2],u[3]])}!function(){if(f){var e=0,t=L*e;for(P=0;P<F;P++)X(($=T[P])[2]+t,$[1]+t,$[0]+t);for(t=L*(e=g+2*p),P=0;P<F;P++)X(($=T[P])[0]+t,$[1]+t,$[2]+t)}else{for(P=0;P<F;P++)X(($=T[P])[2],$[1],$[0]);for(P=0;P<F;P++)X(($=T[P])[0]+L*g,$[1]+L*g,$[2]+L*g)}}(),function(){var e=0;for(q(C,e),e+=C.length,l=0,u=E.length;l<u;l++)q(o=E[l],e),e+=o.length}()},te.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,n,r){var s=e.vertices,i=s[t],a=s[n],o=s[r];return[new te.Vector2(i.x,i.y),new te.Vector2(a.x,a.y),new te.Vector2(o.x,o.y)]},generateSideWallUV:function(e,t,n,r,s){var i=e.vertices,a=i[t],o=i[n],l=i[r],u=i[s];return Math.abs(a.y-o.y)<.01?[new te.Vector2(a.x,1-a.z),new te.Vector2(o.x,1-o.z),new te.Vector2(l.x,1-l.z),new te.Vector2(u.x,1-u.z)]:[new te.Vector2(a.y,1-a.z),new te.Vector2(o.y,1-o.z),new te.Vector2(l.y,1-l.z),new te.Vector2(u.y,1-u.z)]}},te.ShapeGeometry=function(e,t){te.Geometry.call(this),this.type="ShapeGeometry",!1===Array.isArray(e)&&(e=[e]),this.addShapeList(e,t),this.computeFaceNormals()},te.ShapeGeometry.prototype=Object.create(te.Geometry.prototype),te.ShapeGeometry.prototype.constructor=te.ShapeGeometry,te.ShapeGeometry.prototype.addShapeList=function(e,t){for(var n=0,r=e.length;n<r;n++)this.addShape(e[n],t);return this},te.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var n,r,s,i=void 0!==t.curveSegments?t.curveSegments:12,a=t.material,o=void 0===t.UVGenerator?te.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,l=this.vertices.length,u=e.extractPoints(i),c=u.shape,h=u.holes,d=!te.ShapeUtils.isClockWise(c);if(d){for(c=c.reverse(),n=0,r=h.length;n<r;n++)s=h[n],te.ShapeUtils.isClockWise(s)&&(h[n]=s.reverse());d=!1}var p=te.ShapeUtils.triangulateShape(c,h);for(n=0,r=h.length;n<r;n++)s=h[n],c=c.concat(s);var f,m,g=c.length,y=p.length;for(n=0;n<g;n++)f=c[n],this.vertices.push(new te.Vector3(f.x,f.y,0));for(n=0;n<y;n++){var b=(m=p[n])[0]+l,v=m[1]+l,x=m[2]+l;this.faces.push(new te.Face3(b,v,x,null,null,a)),this.faceVertexUvs[0].push(o.generateTopUV(this,b,v,x))}},te.LatheGeometry=function(e,t,n,r){te.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=t||12,n=n||0,r=r||2*Math.PI;for(var s=1/(e.length-1),i=1/t,a=0,o=t;a<=o;a++)for(var l=n+a*i*r,u=Math.cos(l),c=Math.sin(l),h=0,d=e.length;h<d;h++){var p=e[h],f=new te.Vector3;f.x=u*p.x-c*p.y,f.y=c*p.x+u*p.y,f.z=p.z,this.vertices.push(f)}var m=e.length;for(a=0,o=t;a<o;a++)for(h=0,d=e.length-1;h<d;h++){var g=h+m*a,y=g,b=g+m,v=(u=g+1+m,g+1),x=a*i,w=h*s,k=x+i,S=w+s;this.faces.push(new te.Face3(y,b,v)),this.faceVertexUvs[0].push([new te.Vector2(x,w),new te.Vector2(k,w),new te.Vector2(x,S)]),this.faces.push(new te.Face3(b,u,v)),this.faceVertexUvs[0].push([new te.Vector2(k,w),new te.Vector2(k,S),new te.Vector2(x,S)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},te.LatheGeometry.prototype=Object.create(te.Geometry.prototype),te.LatheGeometry.prototype.constructor=te.LatheGeometry,te.PlaneGeometry=function(e,t,n,r){te.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new te.PlaneBufferGeometry(e,t,n,r))},te.PlaneGeometry.prototype=Object.create(te.Geometry.prototype),te.PlaneGeometry.prototype.constructor=te.PlaneGeometry,te.PlaneBufferGeometry=function(e,t,n,r){te.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};for(var s=e/2,i=t/2,a=Math.floor(n)||1,o=Math.floor(r)||1,l=a+1,u=o+1,c=e/a,h=t/o,d=new Float32Array(l*u*3),p=new Float32Array(l*u*3),f=new Float32Array(l*u*2),m=0,g=0,y=0;y<u;y++)for(var b=y*h-i,v=0;v<l;v++){var x=v*c-s;d[m]=x,d[m+1]=-b,p[m+2]=1,f[g]=v/a,f[g+1]=1-y/o,m+=3,g+=2}m=0;var w=new(d.length/3>65535?Uint32Array:Uint16Array)(a*o*6);for(y=0;y<o;y++)for(v=0;v<a;v++){var k=v+l*y,S=v+l*(y+1),E=v+1+l*(y+1),I=v+1+l*y;w[m]=k,w[m+1]=S,w[m+2]=I,w[m+3]=S,w[m+4]=E,w[m+5]=I,m+=6}this.setIndex(new te.BufferAttribute(w,1)),this.addAttribute("position",new te.BufferAttribute(d,3)),this.addAttribute("normal",new te.BufferAttribute(p,3)),this.addAttribute("uv",new te.BufferAttribute(f,2))},te.PlaneBufferGeometry.prototype=Object.create(te.BufferGeometry.prototype),te.PlaneBufferGeometry.prototype.constructor=te.PlaneBufferGeometry,te.RingGeometry=function(e,t,n,r,s,i){te.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:s,thetaLength:i},e=e||0,t=t||50,s=void 0!==s?s:0,i=void 0!==i?i:2*Math.PI,n=void 0!==n?Math.max(3,n):8;var a,o,l=[],u=e,c=(t-e)/(r=void 0!==r?Math.max(1,r):8);for(a=0;a<r+1;a++){for(o=0;o<n+1;o++){var h=new te.Vector3,d=s+o/n*i;h.x=u*Math.cos(d),h.y=u*Math.sin(d),this.vertices.push(h),l.push(new te.Vector2((h.x/t+1)/2,(h.y/t+1)/2))}u+=c}var p=new te.Vector3(0,0,1);for(a=0;a<r;a++){var f=a*(n+1);for(o=0;o<n;o++){var m=d=o+f,g=d+n+1,y=d+n+2;this.faces.push(new te.Face3(m,g,y,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([l[m].clone(),l[g].clone(),l[y].clone()]),m=d,g=d+n+2,y=d+1,this.faces.push(new te.Face3(m,g,y,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([l[m].clone(),l[g].clone(),l[y].clone()])}}this.computeFaceNormals(),this.boundingSphere=new te.Sphere(new te.Vector3,u)},te.RingGeometry.prototype=Object.create(te.Geometry.prototype),te.RingGeometry.prototype.constructor=te.RingGeometry,te.SphereGeometry=function(e,t,n,r,s,i,a){te.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:s,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new te.SphereBufferGeometry(e,t,n,r,s,i,a))},te.SphereGeometry.prototype=Object.create(te.Geometry.prototype),te.SphereGeometry.prototype.constructor=te.SphereGeometry,te.SphereBufferGeometry=function(e,t,n,r,s,i,a){te.BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:s,thetaStart:i,thetaLength:a},e=e||50,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),r=void 0!==r?r:0,s=void 0!==s?s:2*Math.PI;for(var o=(i=void 0!==i?i:0)+(a=void 0!==a?a:Math.PI),l=(t+1)*(n+1),u=new te.BufferAttribute(new Float32Array(3*l),3),c=new te.BufferAttribute(new Float32Array(3*l),3),h=new te.BufferAttribute(new Float32Array(2*l),2),d=0,p=[],f=new te.Vector3,m=0;m<=n;m++){for(var g=[],y=m/n,b=0;b<=t;b++){var v=b/t,x=-e*Math.cos(r+v*s)*Math.sin(i+y*a),w=e*Math.cos(i+y*a),k=e*Math.sin(r+v*s)*Math.sin(i+y*a);f.set(x,w,k).normalize(),u.setXYZ(d,x,w,k),c.setXYZ(d,f.x,f.y,f.z),h.setXY(d,v,1-y),g.push(d),d++}p.push(g)}var S=[];for(m=0;m<n;m++)for(b=0;b<t;b++){var E=p[m][b+1],I=p[m][b],T=p[m+1][b],C=p[m+1][b+1];(0!==m||i>0)&&S.push(E,I,C),(m!==n-1||o<Math.PI)&&S.push(I,T,C)}this.setIndex(new(u.count>65535?te.Uint32Attribute:te.Uint16Attribute)(S,1)),this.addAttribute("position",u),this.addAttribute("normal",c),this.addAttribute("uv",h),this.boundingSphere=new te.Sphere(new te.Vector3,e)},te.SphereBufferGeometry.prototype=Object.create(te.BufferGeometry.prototype),te.SphereBufferGeometry.prototype.constructor=te.SphereBufferGeometry,te.TorusGeometry=function(e,t,n,r,s){te.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:s},e=e||100,t=t||40,n=n||8,r=r||6,s=s||2*Math.PI;for(var i=new te.Vector3,a=[],o=[],l=0;l<=n;l++)for(var u=0;u<=r;u++){var c=u/r*s,h=l/n*Math.PI*2;i.x=e*Math.cos(c),i.y=e*Math.sin(c);var d=new te.Vector3;d.x=(e+t*Math.cos(h))*Math.cos(c),d.y=(e+t*Math.cos(h))*Math.sin(c),d.z=t*Math.sin(h),this.vertices.push(d),a.push(new te.Vector2(u/r,l/n)),o.push(d.clone().sub(i).normalize())}for(l=1;l<=n;l++)for(u=1;u<=r;u++){var p=(r+1)*l+u-1,f=(r+1)*(l-1)+u-1,m=(r+1)*(l-1)+u,g=(r+1)*l+u,y=new te.Face3(p,f,g,[o[p].clone(),o[f].clone(),o[g].clone()]);this.faces.push(y),this.faceVertexUvs[0].push([a[p].clone(),a[f].clone(),a[g].clone()]),y=new te.Face3(f,m,g,[o[f].clone(),o[m].clone(),o[g].clone()]),this.faces.push(y),this.faceVertexUvs[0].push([a[f].clone(),a[m].clone(),a[g].clone()])}this.computeFaceNormals()},te.TorusGeometry.prototype=Object.create(te.Geometry.prototype),te.TorusGeometry.prototype.constructor=te.TorusGeometry,te.TorusKnotGeometry=function(e,t,n,r,s,i,a){te.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,p:s,q:i,heightScale:a},e=e||100,t=t||40,n=n||64,r=r||8,s=s||2,i=i||3,a=a||1;for(var o=new Array(n),l=new te.Vector3,u=new te.Vector3,c=new te.Vector3,h=0;h<n;++h){o[h]=new Array(r);var d=h/n*2*s*Math.PI,p=M(d,i,s,e,a),f=M(d+.01,i,s,e,a);l.subVectors(f,p),u.addVectors(f,p),c.crossVectors(l,u),u.crossVectors(c,l),c.normalize(),u.normalize();for(var m=0;m<r;++m){var g=m/r*2*Math.PI,y=-t*Math.cos(g),b=t*Math.sin(g),v=new te.Vector3;v.x=p.x+y*u.x+b*c.x,v.y=p.y+y*u.y+b*c.y,v.z=p.z+y*u.z+b*c.z,o[h][m]=this.vertices.push(v)-1}}for(h=0;h<n;++h)for(m=0;m<r;++m){var x=(h+1)%n,w=(m+1)%r,k=o[h][m],S=o[x][m],E=o[x][w],I=o[h][w],T=new te.Vector2(h/n,m/r),C=new te.Vector2((h+1)/n,m/r),N=new te.Vector2((h+1)/n,(m+1)/r),A=new te.Vector2(h/n,(m+1)/r);this.faces.push(new te.Face3(k,S,I)),this.faceVertexUvs[0].push([T,C,A]),this.faces.push(new te.Face3(S,E,I)),this.faceVertexUvs[0].push([C.clone(),N,A.clone()])}function M(e,t,n,r,s){var i=Math.cos(e),a=Math.sin(e),o=t/n*e,l=Math.cos(o),u=r*(2+l)*.5*i,c=r*(2+l)*a*.5,h=s*r*Math.sin(o)*.5;return new te.Vector3(u,c,h)}this.computeFaceNormals(),this.computeVertexNormals()},te.TorusKnotGeometry.prototype=Object.create(te.Geometry.prototype),te.TorusKnotGeometry.prototype.constructor=te.TorusKnotGeometry,te.TubeGeometry=function(e,t,n,r,s,i){te.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,segments:t,radius:n,radialSegments:r,closed:s,taper:i},t=t||64,n=n||1,r=r||8,s=s||!1,i=i||te.TubeGeometry.NoTaper;var a,o,l,u,c,h,d,p,f,m,g,y,b,v,x,w,k,S,E,I,T=[],C=this,N=t+1,A=new te.Vector3,M=new te.TubeGeometry.FrenetFrames(e,t,s),_=M.tangents,R=M.normals,D=M.binormals;function $(e,t,n){return C.vertices.push(new te.Vector3(e,t,n))-1}for(this.tangents=_,this.normals=R,this.binormals=D,f=0;f<N;f++)for(T[f]=[],l=f/(N-1),p=e.getPointAt(l),_[f],a=R[f],o=D[f],c=n*i(l),m=0;m<r;m++)u=m/r*2*Math.PI,h=-c*Math.cos(u),d=c*Math.sin(u),A.copy(p),A.x+=h*a.x+d*o.x,A.y+=h*a.y+d*o.y,A.z+=h*a.z+d*o.z,T[f][m]=$(A.x,A.y,A.z);for(f=0;f<t;f++)for(m=0;m<r;m++)g=s?(f+1)%t:f+1,y=(m+1)%r,b=T[f][m],v=T[g][m],x=T[g][y],w=T[f][y],k=new te.Vector2(f/t,m/r),S=new te.Vector2((f+1)/t,m/r),E=new te.Vector2((f+1)/t,(m+1)/r),I=new te.Vector2(f/t,(m+1)/r),this.faces.push(new te.Face3(b,v,w)),this.faceVertexUvs[0].push([k,S,I]),this.faces.push(new te.Face3(v,x,w)),this.faceVertexUvs[0].push([S.clone(),E,I.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},te.TubeGeometry.prototype=Object.create(te.Geometry.prototype),te.TubeGeometry.prototype.constructor=te.TubeGeometry,te.TubeGeometry.NoTaper=function(e){return 1},te.TubeGeometry.SinusoidalTaper=function(e){return Math.sin(Math.PI*e)},te.TubeGeometry.FrenetFrames=function(e,t,n){var r,s,i,a,o,l,u,c=new te.Vector3,h=[],d=[],p=[],f=new te.Vector3,m=new te.Matrix4,g=t+1;for(this.tangents=h,this.normals=d,this.binormals=p,l=0;l<g;l++)u=l/(g-1),h[l]=e.getTangentAt(u),h[l].normalize();for(d[0]=new te.Vector3,p[0]=new te.Vector3,s=Number.MAX_VALUE,i=Math.abs(h[0].x),a=Math.abs(h[0].y),o=Math.abs(h[0].z),i<=s&&(s=i,c.set(1,0,0)),a<=s&&(s=a,c.set(0,1,0)),o<=s&&c.set(0,0,1),f.crossVectors(h[0],c).normalize(),d[0].crossVectors(h[0],f),p[0].crossVectors(h[0],d[0]),l=1;l<g;l++)d[l]=d[l-1].clone(),p[l]=p[l-1].clone(),f.crossVectors(h[l-1],h[l]),f.length()>Number.EPSILON&&(f.normalize(),r=Math.acos(te.Math.clamp(h[l-1].dot(h[l]),-1,1)),d[l].applyMatrix4(m.makeRotationAxis(f,r))),p[l].crossVectors(h[l],d[l]);if(n)for(r=Math.acos(te.Math.clamp(d[0].dot(d[g-1]),-1,1)),r/=g-1,h[0].dot(f.crossVectors(d[0],d[g-1]))>0&&(r=-r),l=1;l<g;l++)d[l].applyMatrix4(m.makeRotationAxis(h[l],r*l)),p[l].crossVectors(h[l],d[l])},te.PolyhedronGeometry=function(e,t,n,r){te.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},n=n||1,r=r||0;for(var s=this,i=0,a=e.length;i<a;i+=3)x(new te.Vector3(e[i],e[i+1],e[i+2]));var o=this.vertices,l=[],u=(i=0,0);for(a=t.length;i<a;i+=3,u++){var c=o[t[i]],h=o[t[i+1]],d=o[t[i+2]];l[u]=new te.Face3(c.index,h.index,d.index,[c.clone(),h.clone(),d.clone()],void 0,u)}var p=new te.Vector3;for(i=0,a=l.length;i<a;i++)k(l[i],r);for(i=0,a=this.faceVertexUvs[0].length;i<a;i++){var f=this.faceVertexUvs[0][i],m=f[0].x,g=f[1].x,y=f[2].x,b=Math.max(m,g,y),v=Math.min(m,g,y);b>.9&&v<.1&&(m<.2&&(f[0].x+=1),g<.2&&(f[1].x+=1),y<.2&&(f[2].x+=1))}for(i=0,a=this.vertices.length;i<a;i++)this.vertices[i].multiplyScalar(n);function x(e){var t=e.normalize().clone();t.index=s.vertices.push(t)-1;var n=S(e)/2/Math.PI+.5,r=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(e)/Math.PI+.5;return t.uv=new te.Vector2(n,1-r),t}function w(e,t,n,r){var i=new te.Face3(e.index,t.index,n.index,[e.clone(),t.clone(),n.clone()],void 0,r);s.faces.push(i),p.copy(e).add(t).add(n).divideScalar(3);var a=S(p);s.faceVertexUvs[0].push([E(e.uv,e,a),E(t.uv,t,a),E(n.uv,n,a)])}function k(e,t){for(var n=Math.pow(2,t),r=x(s.vertices[e.a]),i=x(s.vertices[e.b]),a=x(s.vertices[e.c]),o=[],l=e.materialIndex,u=0;u<=n;u++){o[u]=[];for(var c=x(r.clone().lerp(a,u/n)),h=x(i.clone().lerp(a,u/n)),d=n-u,p=0;p<=d;p++)o[u][p]=0===p&&u===n?c:x(c.clone().lerp(h,p/d))}for(u=0;u<n;u++)for(p=0;p<2*(n-u)-1;p++){var f=Math.floor(p/2);p%2==0?w(o[u][f+1],o[u+1][f],o[u][f],l):w(o[u][f+1],o[u+1][f+1],o[u+1][f],l)}}function S(e){return Math.atan2(e.z,-e.x)}function E(e,t,n){return n<0&&1===e.x&&(e=new te.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new te.Vector2(n/2/Math.PI+.5,e.y)),e.clone()}this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new te.Sphere(new te.Vector3,n)},te.PolyhedronGeometry.prototype=Object.create(te.Geometry.prototype),te.PolyhedronGeometry.prototype.constructor=te.PolyhedronGeometry,te.DodecahedronGeometry=function(e,t){var n=(1+Math.sqrt(5))/2,r=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r];te.PolyhedronGeometry.call(this,s,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}},te.DodecahedronGeometry.prototype=Object.create(te.PolyhedronGeometry.prototype),te.DodecahedronGeometry.prototype.constructor=te.DodecahedronGeometry,te.IcosahedronGeometry=function(e,t){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1];te.PolyhedronGeometry.call(this,r,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}},te.IcosahedronGeometry.prototype=Object.create(te.PolyhedronGeometry.prototype),te.IcosahedronGeometry.prototype.constructor=te.IcosahedronGeometry;te.OctahedronGeometry=function(e,t){te.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}},te.OctahedronGeometry.prototype=Object.create(te.PolyhedronGeometry.prototype),te.OctahedronGeometry.prototype.constructor=te.OctahedronGeometry,te.TetrahedronGeometry=function(e,t){te.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}},te.TetrahedronGeometry.prototype=Object.create(te.PolyhedronGeometry.prototype),te.TetrahedronGeometry.prototype.constructor=te.TetrahedronGeometry,te.ParametricGeometry=function(e,t,n){te.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n};var r,s,i,a,o,l,u,c,h,d,p,f,m=this.vertices,g=this.faces,y=this.faceVertexUvs[0],b=t+1;for(r=0;r<=n;r++)for(a=r/n,s=0;s<=t;s++)i=e(s/t,a),m.push(i);for(r=0;r<n;r++)for(s=0;s<t;s++)o=r*b+s,l=r*b+s+1,u=(r+1)*b+s+1,c=(r+1)*b+s,h=new te.Vector2(s/t,r/n),d=new te.Vector2((s+1)/t,r/n),p=new te.Vector2((s+1)/t,(r+1)/n),f=new te.Vector2(s/t,(r+1)/n),g.push(new te.Face3(o,l,c)),y.push([h,d,f]),g.push(new te.Face3(l,u,c)),y.push([d.clone(),p,f.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},te.ParametricGeometry.prototype=Object.create(te.Geometry.prototype),te.ParametricGeometry.prototype.constructor=te.ParametricGeometry,te.WireframeGeometry=function(e){te.BufferGeometry.call(this);var t=[0,0],n={};function r(e,t){return e-t}var s=["a","b","c"];if(e instanceof te.Geometry){for(var i=e.vertices,a=e.faces,o=0,l=new Uint32Array(6*a.length),u=0,c=a.length;u<c;u++)for(var h=a[u],d=0;d<3;d++)t[0]=h[s[d]],t[1]=h[s[(d+1)%3]],t.sort(r),void 0===n[k=t.toString()]&&(l[2*o]=t[0],l[2*o+1]=t[1],n[k]=!0,o++);var p=new Float32Array(2*o*3);for(u=0,c=o;u<c;u++)for(d=0;d<2;d++){var f=i[l[2*u+d]];p[0+(S=6*u+3*d)]=f.x,p[S+1]=f.y,p[S+2]=f.z}this.addAttribute("position",new te.BufferAttribute(p,3))}else if(e instanceof te.BufferGeometry)if(null!==e.index){var m=e.index.array,g=(i=e.attributes.position,e.groups);o=0,0===g.length&&e.addGroup(0,m.length),l=new Uint32Array(2*m.length);for(var y=0,b=g.length;y<b;++y)for(var v=g[y],x=v.start,w=(u=x,x+v.count);u<w;u+=3)for(d=0;d<3;d++){var k;t[0]=m[u+d],t[1]=m[u+(d+1)%3],t.sort(r),void 0===n[k=t.toString()]&&(l[2*o]=t[0],l[2*o+1]=t[1],n[k]=!0,o++)}for(p=new Float32Array(2*o*3),u=0,c=o;u<c;u++)for(d=0;d<2;d++){var S=6*u+3*d,E=l[2*u+d];p[S+0]=i.getX(E),p[S+1]=i.getY(E),p[S+2]=i.getZ(E)}this.addAttribute("position",new te.BufferAttribute(p,3))}else{var I=(o=(i=e.attributes.position.array).length/3)/3;for(p=new Float32Array(2*o*3),u=0,c=I;u<c;u++)for(d=0;d<3;d++){var T=9*u+3*d;p[0+(S=18*u+6*d)]=i[T],p[S+1]=i[T+1],p[S+2]=i[T+2],E=9*u+(d+1)%3*3,p[S+3]=i[E],p[S+4]=i[E+1],p[S+5]=i[E+2]}this.addAttribute("position",new te.BufferAttribute(p,3))}},te.WireframeGeometry.prototype=Object.create(te.BufferGeometry.prototype),te.WireframeGeometry.prototype.constructor=te.WireframeGeometry,te.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),n=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),r=new te.BufferGeometry;r.addAttribute("position",new te.BufferAttribute(t,3)),r.addAttribute("color",new te.BufferAttribute(n,3));var s=new te.LineBasicMaterial({vertexColors:te.VertexColors});te.LineSegments.call(this,r,s)},te.AxisHelper.prototype=Object.create(te.LineSegments.prototype),te.AxisHelper.prototype.constructor=te.AxisHelper,te.ArrowHelper=function(){var e=new te.Geometry;e.vertices.push(new te.Vector3(0,0,0),new te.Vector3(0,1,0));var t=new te.CylinderGeometry(0,.5,1,5,1);return t.translate(0,-.5,0),function(n,r,s,i,a,o){te.Object3D.call(this),void 0===i&&(i=16776960),void 0===s&&(s=1),void 0===a&&(a=.2*s),void 0===o&&(o=.2*a),this.position.copy(r),this.line=new te.Line(e,new te.LineBasicMaterial({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new te.Mesh(t,new te.MeshBasicMaterial({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(n),this.setLength(s,a,o)}}(),te.ArrowHelper.prototype=Object.create(te.Object3D.prototype),te.ArrowHelper.prototype.constructor=te.ArrowHelper,te.ArrowHelper.prototype.setDirection=(ee=new te.Vector3,function(e){e.y>.99999?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(ee.set(e.z,0,-e.x).normalize(),J=Math.acos(e.y),this.quaternion.setFromAxisAngle(ee,J))}),te.ArrowHelper.prototype.setLength=function(e,t,n){void 0===t&&(t=.2*e),void 0===n&&(n=.2*t),this.line.scale.set(1,Math.max(0,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()},te.ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},te.BoxHelper=function(e){var t=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new te.BufferGeometry;r.setIndex(new te.BufferAttribute(t,1)),r.addAttribute("position",new te.BufferAttribute(n,3)),te.LineSegments.call(this,r,new te.LineBasicMaterial({color:16776960})),void 0!==e&&this.update(e)},te.BoxHelper.prototype=Object.create(te.LineSegments.prototype),te.BoxHelper.prototype.constructor=te.BoxHelper,te.BoxHelper.prototype.update=function(){var e=new te.Box3;return function(t){if(e.setFromObject(t),!e.isEmpty()){var n=e.min,r=e.max,s=this.geometry.attributes.position,i=s.array;i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=n.x,i[4]=r.y,i[5]=r.z,i[6]=n.x,i[7]=n.y,i[8]=r.z,i[9]=r.x,i[10]=n.y,i[11]=r.z,i[12]=r.x,i[13]=r.y,i[14]=n.z,i[15]=n.x,i[16]=r.y,i[17]=n.z,i[18]=n.x,i[19]=n.y,i[20]=n.z,i[21]=r.x,i[22]=n.y,i[23]=n.z,s.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),te.BoundingBoxHelper=function(e,t){var n=void 0!==t?t:8947848;this.object=e,this.box=new te.Box3,te.Mesh.call(this,new te.BoxGeometry(1,1,1),new te.MeshBasicMaterial({color:n,wireframe:!0}))},te.BoundingBoxHelper.prototype=Object.create(te.Mesh.prototype),te.BoundingBoxHelper.prototype.constructor=te.BoundingBoxHelper,te.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},te.CameraHelper=function(e){var t=new te.Geometry,n=new te.LineBasicMaterial({color:16777215,vertexColors:te.FaceColors}),r={},s=16755200,i=16711680,a=43775,o=3355443;function l(e,t,n){u(e,n),u(t,n)}function u(e,n){t.vertices.push(new te.Vector3),t.colors.push(new te.Color(n)),void 0===r[e]&&(r[e]=[]),r[e].push(t.vertices.length-1)}l("n1","n2",s),l("n2","n4",s),l("n4","n3",s),l("n3","n1",s),l("f1","f2",s),l("f2","f4",s),l("f4","f3",s),l("f3","f1",s),l("n1","f1",s),l("n2","f2",s),l("n3","f3",s),l("n4","f4",s),l("p","n1",i),l("p","n2",i),l("p","n3",i),l("p","n4",i),l("u1","u2",a),l("u2","u3",a),l("u3","u1",a),l("c","t",16777215),l("p","c",o),l("cn1","cn2",o),l("cn3","cn4",o),l("cf1","cf2",o),l("cf3","cf4",o),te.LineSegments.call(this,t,n),this.camera=e,this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=r,this.update()},te.CameraHelper.prototype=Object.create(te.LineSegments.prototype),te.CameraHelper.prototype.constructor=te.CameraHelper,te.CameraHelper.prototype.update=function(){var e,t,n=new te.Vector3,r=new te.Camera;function s(s,i,a,o){n.set(i,a,o).unproject(r);var l=t[s];if(void 0!==l)for(var u=0,c=l.length;u<c;u++)e.vertices[l[u]].copy(n)}return function(){e=this.geometry,t=this.pointMap,r.projectionMatrix.copy(this.camera.projectionMatrix),s("c",0,0,-1),s("t",0,0,1),s("n1",-1,-1,-1),s("n2",1,-1,-1),s("n3",-1,1,-1),s("n4",1,1,-1),s("f1",-1,-1,1),s("f2",1,-1,1),s("f3",-1,1,1),s("f4",1,1,1),s("u1",.7,1.1,-1),s("u2",-.7,1.1,-1),s("u3",0,2,-1),s("cf1",-1,0,1),s("cf2",1,0,1),s("cf3",0,-1,1),s("cf4",0,1,1),s("cn1",-1,0,-1),s("cn2",1,0,-1),s("cn3",0,-1,-1),s("cn4",0,1,-1),e.verticesNeedUpdate=!0}}(),te.DirectionalLightHelper=function(e,t){te.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,t=t||1;var n=new te.Geometry;n.vertices.push(new te.Vector3(-t,t,0),new te.Vector3(t,t,0),new te.Vector3(t,-t,0),new te.Vector3(-t,-t,0),new te.Vector3(-t,t,0));var r=new te.LineBasicMaterial({fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new te.Line(n,r),this.add(this.lightPlane),(n=new te.Geometry).vertices.push(new te.Vector3,new te.Vector3),(r=new te.LineBasicMaterial({fog:!1})).color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new te.Line(n,r),this.add(this.targetLine),this.update()},te.DirectionalLightHelper.prototype=Object.create(te.Object3D.prototype),te.DirectionalLightHelper.prototype.constructor=te.DirectionalLightHelper,te.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},te.DirectionalLightHelper.prototype.update=function(){var e=new te.Vector3,t=new te.Vector3,n=new te.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(t,e),this.lightPlane.lookAt(n),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(n),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),te.EdgesHelper=function(e,t,n){var r=void 0!==t?t:16777215;te.LineSegments.call(this,new te.EdgesGeometry(e.geometry,n),new te.LineBasicMaterial({color:r})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},te.EdgesHelper.prototype=Object.create(te.LineSegments.prototype),te.EdgesHelper.prototype.constructor=te.EdgesHelper,te.FaceNormalsHelper=function(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var s=void 0!==n?n:16776960,i=void 0!==r?r:1,a=0,o=this.object.geometry;o instanceof te.Geometry?a=o.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var l=new te.BufferGeometry,u=new te.Float32Attribute(2*a*3,3);l.addAttribute("position",u),te.LineSegments.call(this,l,new te.LineBasicMaterial({color:s,linewidth:i})),this.matrixAutoUpdate=!1,this.update()},te.FaceNormalsHelper.prototype=Object.create(te.LineSegments.prototype),te.FaceNormalsHelper.prototype.constructor=te.FaceNormalsHelper,te.FaceNormalsHelper.prototype.update=function(){var e=new te.Vector3,t=new te.Vector3,n=new te.Matrix3;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,s=this.geometry.attributes.position,i=this.object.geometry,a=i.vertices,o=i.faces,l=0,u=0,c=o.length;u<c;u++){var h=o[u],d=h.normal;e.copy(a[h.a]).add(a[h.b]).add(a[h.c]).divideScalar(3).applyMatrix4(r),t.copy(d).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),s.setXYZ(l,e.x,e.y,e.z),l+=1,s.setXYZ(l,t.x,t.y,t.z),l+=1}return s.needsUpdate=!0,this}}(),te.GridHelper=function(e,t){var n=new te.Geometry,r=new te.LineBasicMaterial({vertexColors:te.VertexColors});this.color1=new te.Color(4473924),this.color2=new te.Color(8947848);for(var s=-e;s<=e;s+=t){n.vertices.push(new te.Vector3(-e,0,s),new te.Vector3(e,0,s),new te.Vector3(s,0,-e),new te.Vector3(s,0,e));var i=0===s?this.color1:this.color2;n.colors.push(i,i,i,i)}te.LineSegments.call(this,n,r)},te.GridHelper.prototype=Object.create(te.LineSegments.prototype),te.GridHelper.prototype.constructor=te.GridHelper,te.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},te.HemisphereLightHelper=function(e,t){te.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new te.Color,new te.Color];var n=new te.SphereGeometry(t,4,2);n.rotateX(-Math.PI/2);for(var r=0;r<8;r++)n.faces[r].color=this.colors[r<4?0:1];var s=new te.MeshBasicMaterial({vertexColors:te.FaceColors,wireframe:!0});this.lightSphere=new te.Mesh(n,s),this.add(this.lightSphere),this.update()},te.HemisphereLightHelper.prototype=Object.create(te.Object3D.prototype),te.HemisphereLightHelper.prototype.constructor=te.HemisphereLightHelper,te.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},te.HemisphereLightHelper.prototype.update=function(){var e=new te.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),te.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var n=new te.SphereGeometry(t,4,2),r=new te.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),te.Mesh.call(this,n,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},te.PointLightHelper.prototype=Object.create(te.Mesh.prototype),te.PointLightHelper.prototype.constructor=te.PointLightHelper,te.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},te.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},te.SkeletonHelper=function(e){this.bones=this.getBoneList(e);for(var t=new te.Geometry,n=0;n<this.bones.length;n++)this.bones[n].parent instanceof te.Bone&&(t.vertices.push(new te.Vector3),t.vertices.push(new te.Vector3),t.colors.push(new te.Color(0,0,1)),t.colors.push(new te.Color(0,1,0)));t.dynamic=!0;var r=new te.LineBasicMaterial({vertexColors:te.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});te.LineSegments.call(this,t,r),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()},te.SkeletonHelper.prototype=Object.create(te.LineSegments.prototype),te.SkeletonHelper.prototype.constructor=te.SkeletonHelper,te.SkeletonHelper.prototype.getBoneList=function(e){var t=[];e instanceof te.Bone&&t.push(e);for(var n=0;n<e.children.length;n++)t.push.apply(t,this.getBoneList(e.children[n]));return t},te.SkeletonHelper.prototype.update=function(){for(var e=this.geometry,t=(new te.Matrix4).getInverse(this.root.matrixWorld),n=new te.Matrix4,r=0,s=0;s<this.bones.length;s++){var i=this.bones[s];i.parent instanceof te.Bone&&(n.multiplyMatrices(t,i.matrixWorld),e.vertices[r].setFromMatrixPosition(n),n.multiplyMatrices(t,i.parent.matrixWorld),e.vertices[r+1].setFromMatrixPosition(n),r+=2)}e.verticesNeedUpdate=!0,e.computeBoundingSphere()},te.SpotLightHelper=function(e){te.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;var t=new te.CylinderGeometry(0,1,1,8,1,!0);t.translate(0,-.5,0),t.rotateX(-Math.PI/2);var n=new te.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new te.Mesh(t,n),this.add(this.cone),this.update()},te.SpotLightHelper.prototype=Object.create(te.Object3D.prototype),te.SpotLightHelper.prototype.constructor=te.SpotLightHelper,te.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},te.SpotLightHelper.prototype.update=function(){var e=new te.Vector3,t=new te.Vector3;return function(){var n=this.light.distance?this.light.distance:1e4,r=n*Math.tan(this.light.angle);this.cone.scale.set(r,r,n),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),te.VertexNormalsHelper=function(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var s=void 0!==n?n:16711680,i=void 0!==r?r:1,a=0,o=this.object.geometry;o instanceof te.Geometry?a=3*o.faces.length:o instanceof te.BufferGeometry&&(a=o.attributes.normal.count);var l=new te.BufferGeometry,u=new te.Float32Attribute(2*a*3,3);l.addAttribute("position",u),te.LineSegments.call(this,l,new te.LineBasicMaterial({color:s,linewidth:i})),this.matrixAutoUpdate=!1,this.update()},te.VertexNormalsHelper.prototype=Object.create(te.LineSegments.prototype),te.VertexNormalsHelper.prototype.constructor=te.VertexNormalsHelper,te.VertexNormalsHelper.prototype.update=function(){var e=new te.Vector3,t=new te.Vector3,n=new te.Matrix3;return function(){var r=["a","b","c"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var s=this.object.matrixWorld,i=this.geometry.attributes.position,a=this.object.geometry;if(a instanceof te.Geometry)for(var o=a.vertices,l=a.faces,u=0,c=0,h=l.length;c<h;c++)for(var d=l[c],p=0,f=d.vertexNormals.length;p<f;p++){var m=o[d[r[p]]],g=d.vertexNormals[p];e.copy(m).applyMatrix4(s),t.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),i.setXYZ(u,e.x,e.y,e.z),u+=1,i.setXYZ(u,t.x,t.y,t.z),u+=1}else if(a instanceof te.BufferGeometry){var y=a.attributes.position,b=a.attributes.normal;for(u=0,p=0,f=y.count;p<f;p++)e.set(y.getX(p),y.getY(p),y.getZ(p)).applyMatrix4(s),t.set(b.getX(p),b.getY(p),b.getZ(p)),t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),i.setXYZ(u,e.x,e.y,e.z),u+=1,i.setXYZ(u,t.x,t.y,t.z),u+=1}return i.needsUpdate=!0,this}}(),te.WireframeHelper=function(e,t){var n=void 0!==t?t:16777215;te.LineSegments.call(this,new te.WireframeGeometry(e.geometry),new te.LineBasicMaterial({color:n})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},te.WireframeHelper.prototype=Object.create(te.LineSegments.prototype),te.WireframeHelper.prototype.constructor=te.WireframeHelper,te.ImmediateRenderObject=function(e){te.Object3D.call(this),this.material=e,this.render=function(e){}},te.ImmediateRenderObject.prototype=Object.create(te.Object3D.prototype),te.ImmediateRenderObject.prototype.constructor=te.ImmediateRenderObject,te.MorphBlendMesh=function(e,t){te.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var n=this.geometry.morphTargets.length,r="__default",s=n-1,i=n/1;this.createAnimation(r,0,s,i),this.setAnimationWeight(r,1)},te.MorphBlendMesh.prototype=Object.create(te.Mesh.prototype),te.MorphBlendMesh.prototype.constructor=te.MorphBlendMesh,te.MorphBlendMesh.prototype.createAnimation=function(e,t,n,r){var s={start:t,end:n,length:n-t+1,fps:r,duration:(n-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=s,this.animationsList.push(s)},te.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,n=/([a-z]+)_?(\d+)/i,r={},s=this.geometry,i=0,a=s.morphTargets.length;i<a;i++){var o=s.morphTargets[i].name.match(n);o&&o.length>1&&(r[l=o[1]]||(r[l]={start:1/0,end:-1/0}),i<(u=r[l]).start&&(u.start=i),i>u.end&&(u.end=i),t||(t=l))}for(var l in r){var u=r[l];this.createAnimation(l,u.start,u.end,e)}this.firstAnimation=t},te.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},te.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},te.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];n&&(n.fps=t,n.duration=(n.end-n.start)/n.fps)},te.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];n&&(n.duration=t,n.fps=(n.end-n.start)/n.duration)},te.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];n&&(n.weight=t)},te.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];n&&(n.time=t)},te.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,n=this.animationsMap[e];return n&&(t=n.time),t},te.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,n=this.animationsMap[e];return n&&(t=n.duration),t},te.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("THREE.MorphBlendMesh: animation["+e+"] undefined in .playAnimation()")},te.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},te.MorphBlendMesh.prototype.update=function(e){for(var t=0,n=this.animationsList.length;t<n;t++){var r=this.animationsList[t];if(r.active){var s=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||r.time<0)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),r.time<0&&(r.time=0,r.directionBackwards=!1)):(r.time=r.time%r.duration,r.time<0&&(r.time+=r.duration));var i=r.start+te.Math.clamp(Math.floor(r.time/s),0,r.length-1),a=r.weight;i!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*a,this.morphTargetInfluences[i]=0,r.lastFrame=r.currentFrame,r.currentFrame=i);var o=r.time%s/s;r.directionBackwards&&(o=1-o),r.currentFrame!==r.lastFrame?(this.morphTargetInfluences[r.currentFrame]=o*a,this.morphTargetInfluences[r.lastFrame]=(1-o)*a):this.morphTargetInfluences[r.currentFrame]=a}}}},6780:()=>{THREE.VRControls=function(e,t){var n=this,r=[];navigator.getVRDevices&&navigator.getVRDevices().then((function(e){e=function(e){return e.filter((function(e){return-1!==e.deviceName.toLowerCase().indexOf("oculus")})).length>=1?e.filter((function(e){return-1===e.deviceName.toLowerCase().indexOf("cardboard")})):e}(e);for(var n=0;n<e.length;n++)e[n]instanceof PositionSensorVRDevice&&r.push(e[n]);t&&t("HMD not available")})),this.scale=1,this.update=function(){for(var t=0;t<r.length;t++){var s=r[t].getState();null!==s.orientation&&e.quaternion.copy(s.orientation),null!==s.position&&e.position.copy(s.position).multiplyScalar(n.scale)}},this.resetSensor=function(){for(var e=0;e<r.length;e++){var t=r[e];void 0!==t.resetSensor?t.resetSensor():void 0!==t.zeroSensor&&t.zeroSensor()}},this.zeroSensor=function(){console.warn("THREE.VRControls: .zeroSensor() is now .resetSensor()."),this.resetSensor()},this.dispose=function(){r=[]}}},2495:()=>{THREE.VREffect=function(e,t){var n,r,s,i,a;navigator.getVRDevices&&navigator.getVRDevices().then((function(e){for(var r=0;r<e.length;r++)if(e[r]instanceof HMDVRDevice){n=e[r];break}void 0===n&&t&&t("HMD not available")})),this.scale=1,this.setSize=function(t,n){e.setSize(t,n)};var o=!1,l=e.domElement,u=l.mozRequestFullScreen?"mozfullscreenchange":"webkitfullscreenchange";document.addEventListener(u,(function(e){o=document.mozFullScreenElement||document.webkitFullscreenElement}),!1),this.setFullScreen=function(e){void 0!==n&&o!==e&&(l.mozRequestFullScreen?l.mozRequestFullScreen({vrDisplay:n}):l.webkitRequestFullscreen&&l.webkitRequestFullscreen({vrDisplay:n}))};var c=new THREE.PerspectiveCamera;c.layers.enable(1);var h=new THREE.PerspectiveCamera;function d(e,t,n,r){var s=Math.PI/180;return function(e,t,n,r){n=void 0===n?.01:n,r=void 0===r?1e4:r;var s=(t=void 0===t||t)?-1:1,i=new THREE.Matrix4,a=i.elements,o=function(e){var t=2/(e.leftTan+e.rightTan),n=2/(e.upTan+e.downTan);return{scale:[t,n],offset:[(e.leftTan-e.rightTan)*t*.5,(e.upTan-e.downTan)*n*.5]}}(e);return a[0]=o.scale[0],a[1]=0,a[2]=o.offset[0]*s,a[3]=0,a[4]=0,a[5]=o.scale[1],a[6]=-o.offset[1]*s,a[7]=0,a[8]=0,a[9]=0,a[10]=r/(n-r)*-s,a[11]=r*n/(n-r),a[12]=0,a[13]=0,a[14]=s,a[15]=0,i.transpose(),i}({upTan:Math.tan(e.upDegrees*s),downTan:Math.tan(e.downDegrees*s),leftTan:Math.tan(e.leftDegrees*s),rightTan:Math.tan(e.rightDegrees*s)},t,n,r)}h.layers.enable(2),this.render=function(t,o){if(n){var l=n.getEyeParameters("left"),u=n.getEyeParameters("right");r=l.eyeTranslation,i=u.eyeTranslation,s=l.recommendedFieldOfView,a=u.recommendedFieldOfView,Array.isArray(t)&&(console.warn("THREE.VREffect.render() no longer supports arrays. Use object.layers instead."),t=t[0]);var p=e.getSize();return p.width/=2,e.setScissorTest(!0),e.clear(),null===o.parent&&o.updateMatrixWorld(),c.projectionMatrix=d(s,!0,o.near,o.far),h.projectionMatrix=d(a,!0,o.near,o.far),o.matrixWorld.decompose(c.position,c.quaternion,c.scale),o.matrixWorld.decompose(h.position,h.quaternion,h.scale),c.translateX(r.x*this.scale),h.translateX(i.x*this.scale),e.setViewport(0,0,p.width,p.height),e.setScissor(0,0,p.width,p.height),e.render(t,c),e.setViewport(p.width,0,p.width,p.height),e.setScissor(p.width,0,p.width,p.height),e.render(t,h),void e.setScissorTest(!1)}e.render(t,o)}}},3922:()=>{THREE.ColladaLoader=function(){var e,t,n,r,s,i,a,o,l,u,c=null,h=null,d=null,p={},f={},m={},g={},y={},b={},v={},x={},w={},k=THREE.SmoothShading,S={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:"Y",defaultEnvMap:null},E=1,I="Y",T=null;function C(u,p,k){if(c=(new DOMParser).parseFromString(u,"text/xml"),p=p||d,void 0!==k){var C=k.split("/");C.pop(),a=(C.length<1?".":C.join("/"))+"/"}!function(){var e=c.querySelectorAll("asset")[0];if(e&&e.childNodes)for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"unit":var r=n.getAttribute("meter");r&&(E=parseFloat(r));break;case"up_axis":I=n.textContent.charAt(0)}}}(),function(){if(!0!==S.convertUpAxis||I===S.upAxis)T=null;else switch(I){case"X":T="Y"===S.upAxis?"XtoY":"XtoZ";break;case"Y":T="X"===S.upAxis?"YtoX":"YtoZ";break;case"Z":T="X"===S.upAxis?"ZtoX":"ZtoY"}}(),f=N("library_images image",P,"image"),b=N("library_materials material",ie,"material"),v=N("library_effects effect",ce,"effect"),y=N("library_geometries geometry",X,"geometry"),x=N("library_cameras camera",ge,"camera"),w=N("library_lights light",be,"light"),g=N("library_controllers controller",B,"controller"),m=N("library_animations animation",de,"animation"),s=N("library_visual_scenes visual_scene",H,"visual_scene"),i=N("library_kinematics_models kinematics_model",xe,"kinematics_model"),o=[],l=[],e=function(){var e=c.querySelectorAll("scene instance_visual_scene")[0];if(e){var t=e.getAttribute("url").replace(/^#/,"");return s[t.length>0?t:"visual_scene0"]}return null}(),h=new THREE.Group;for(var M=0;M<e.nodes.length;M++)h.add($(e.nodes[M]));h.scale.multiplyScalar(E),n=[],A(h),t=function(){var e=c.querySelectorAll("instance_kinematics_model")[0];if(e){var t=e.getAttribute("url").replace(/^#/,"");return i[t.length>0?t:"kinematics_model0"]}return null}(),function(){if(t&&0===t.joints.length)r=void 0;else{var n={},s=function(r,s){var i=s.getAttribute("id"),a=e.getChildById(i,!0),o=t.joints[r];h.traverse((function(e){e.colladaId==i&&(n[r]={node:e,transforms:a.transforms,joint:o,position:o.zeroPosition})}))};r={joints:t&&t.joints,getJointValue:function(e){var t=n[e];if(t)return t.position;console.log("getJointValue: joint "+e+" doesn't exist")},setJointValue:function(e,t){var r=n[e];if(r){var s=r.joint;if(t>s.limits.max||t<s.limits.min)console.log("setJointValue: joint "+e+" value "+t+" outside of limits (min: "+s.limits.min+", max: "+s.limits.max+")");else if(s.static)console.log("setJointValue: joint "+e+" is static");else{var i=r.node,o=s.axis,l=r.transforms,u=new THREE.Matrix4;for(a=0;a<l.length;a++){var c=l[a];if(c.sid&&-1!==c.sid.indexOf("joint"+e))switch(s.type){case"revolute":u.multiply(h.makeRotationAxis(o,THREE.Math.degToRad(t)));break;case"prismatic":u.multiply(h.makeTranslation(o.x*t,o.y*t,o.z*t));break;default:console.warn("setJointValue: unknown joint type: "+s.type)}else{var h=new THREE.Matrix4;switch(c.type){case"matrix":u.multiply(c.obj);break;case"translate":u.multiply(h.makeTranslation(c.obj.x,c.obj.y,c.obj.z));break;case"rotate":u.multiply(h.makeRotationAxis(c.obj,c.angle))}}}var d=u.elements,p=Array.prototype.slice.call(d),f=[p[0],p[4],p[8],p[12],p[1],p[5],p[9],p[13],p[2],p[6],p[10],p[14],p[3],p[7],p[11],p[15]];i.matrix.set.apply(i.matrix,f),i.matrix.decompose(i.position,i.quaternion,i.scale)}}else console.log("setJointValue: joint "+e+" doesn't exist")}};var i=c.querySelector("scene instance_kinematics_scene");if(i)for(var a=0;a<i.childNodes.length;a++){var o=i.childNodes[a];if(1==o.nodeType&&"bind_joint_axis"===o.nodeName){var l=o.getAttribute("target").split("/").pop(),u=o.querySelector("axis param").textContent,d=parseInt(u.split("joint").pop().split(".")[0]),p=c.querySelector('[sid="'+l+'"]');p&&s(d,p.parentElement)}}}}();var _={scene:h,morphs:o,skins:l,animations:n,kinematics:r,dae:{images:f,materials:b,cameras:x,lights:w,effects:v,geometries:y,controllers:g,animations:m,visualScenes:s,visualScene:e,scene:e,kinematicsModels:i,kinematicsModel:t}};return p&&p(_),_}function N(e,t,n){for(var r=c.querySelectorAll(e),s={},i=0,a=r.length,o=0;o<a;o++){var l=r[o],u=(new t).parse(l);u.id&&0!==u.id.length||(u.id=n+i++),s[u.id]=u}return s}function A(t){var r=e.getChildById(t.colladaId,!0),s=null;if(r&&r.keys){s={fps:60,hierarchy:[{node:r,keys:r.keys,sids:r.sids}],node:t,name:"animation_"+t.name,length:0},n.push(s);for(var i=0,a=r.keys.length;i<a;i++)s.length=Math.max(s.length,r.keys[i].time)}else s={hierarchy:[{keys:[],sids:[]}]};for(i=0,a=t.children.length;i<a;i++)for(var o=0,l=A(t.children[i]).hierarchy.length;o<l;o++)s.hierarchy.push({keys:[],sids:[]});return s}function M(e,t){var n=t instanceof j?g[t.url]:t;if(n&&n.morph){for(var r=n.morph,s=0;s<r.targets.length;s++){var i=r.targets[s],a=y[i];if(a.mesh&&a.mesh.primitives&&a.mesh.primitives.length){var o=a.mesh.primitives[0].geometry;o.vertices.length===e.vertices.length&&e.morphTargets.push({name:"target_1",vertices:o.vertices})}}e.morphTargets.push({name:"target_Z",vertices:e.vertices})}else console.log("could not find morph controller!")}function _(e,t,n,r){if(e.world=e.world||new THREE.Matrix4,e.localworld=e.localworld||new THREE.Matrix4,e.world.copy(e.matrix),e.localworld.copy(e.matrix),e.channels&&e.channels.length){var s=e.channels[0].sampler.output[n];s instanceof THREE.Matrix4&&(e.world.copy(s),e.localworld.copy(s),0===n&&e.matrix.copy(s))}r&&e.world.multiplyMatrices(r,e.world),t.push(e);for(var i=0;i<e.nodes.length;i++)_(e.nodes[i],t,n,e.world)}function R(e,t){for(var n=0;n<e.length;n++){var r=e[n],s=-1;if("JOINT"==r.type){for(var i=0;i<t.joints.length;i++)if(r.sid===t.joints[i]){s=i;break}if(s>=0){var a=t.invBindMatrices[s];for(r.invBindMatrix=a,r.skinningMatrix=new THREE.Matrix4,r.skinningMatrix.multiplyMatrices(r.world,a),r.animatrix=new THREE.Matrix4,r.animatrix.copy(r.localworld),r.weights=[],i=0;i<t.weights.length;i++)for(var o=0;o<t.weights[i].length;o++){var l=t.weights[i][o];l.joint===s&&r.weights.push(l)}}else console.warn("ColladaLoader: Could not find joint '"+r.sid+"'."),r.skinningMatrix=new THREE.Matrix4,r.weights=[]}}}function D(t,n,r){var s=g[n.url];if(r=void 0!==r?r:40,s&&s.skin)if(n.skeleton&&n.skeleton.length){for(var i=function(){var e,t=1e6,n=-t,r=0;for(var s in m){var i=m[s];e=e||i.id;for(var a=0;a<i.sampler.length;a++){var o=i.sampler[a];o.create(),t=Math.min(t,o.startTime),n=Math.max(n,o.endTime),r=Math.max(r,o.input.length)}}return{start:t,end:n,frames:r,ID:e}}(),a=e.getChildById(n.skeleton[0],!0)||e.getChildBySid(n.skeleton[0],!0),o=function(e){var t=[],n=function(e,t,r){var s={};s.name=t.sid,s.parent=e,s.matrix=t.matrix;var i=[new THREE.Vector3,new THREE.Quaternion,new THREE.Vector3];for(var a in s.matrix.decompose(i[0],i[1],i[2]),s.pos=[i[0].x,i[0].y,i[0].z],s.scl=[i[2].x,i[2].y,i[2].z],s.rotq=[i[1].x,i[1].y,i[1].z,i[1].w],r.push(s),t.nodes)n(t.sid,t.nodes[a],r)};return n(-1,e,t),t}(a),l=s.skin.joints,u=[],c=0;c<l.length;c++)for(var h=0;h<o.length;h++)o[h].name===l[c]&&(u[c]=o[h]);for(c=0;c<u.length;c++)for(h=0;h<u.length;h++)u[c].parent===u[h].name&&(u[c].parent=h);for(new THREE.Vector3,c=0;c<t.vertices.length;c++)t.vertices[c].applyMatrix4(s.skin.bindShapeMatrix);var d=[],p=[],f=s.skin.weights;for(c=0;c<f.length;c++){var y=new THREE.Vector4(f[c][0]?f[c][0].joint:0,f[c][1]?f[c][1].joint:0,f[c][2]?f[c][2].joint:0,f[c][3]?f[c][3].joint:0),b=new THREE.Vector4(f[c][0]?f[c][0].weight:0,f[c][1]?f[c][1].weight:0,f[c][2]?f[c][2].weight:0,f[c][3]?f[c][3].weight:0);d.push(y),p.push(b)}t.skinIndices=d,t.skinWeights=p,t.bones=u;var v={name:i.ID,fps:30,length:i.frames/30,hierarchy:[]};for(h=0;h<u.length;h++)v.hierarchy.push({parent:u[h].parent,name:u[h].name,keys:[]});for(console.log("ColladaLoader:",i.ID+" has "+u.length+" bones."),function(e,t,n){var r=[];_(t,r,-1),R(r,n.skin);for(var s=new THREE.Vector3,i=[],a=0;a<e.vertices.length;a++)i.push(new THREE.Vector3);for(a=0;a<r.length;a++)if("JOINT"==r[a].type)for(var o=0;o<r[a].weights.length;o++){var l=r[a].weights[o],u=l.index,c=l.weight,h=e.vertices[u],d=i[u];s.x=h.x,s.y=h.y,s.z=h.z,s.applyMatrix4(r[a].skinningMatrix),d.x+=s.x*c,d.y+=s.y*c,d.z+=s.z*c}for(a=0;a<e.vertices.length;a++)e.vertices[a]=i[a]}(t,a,s),r=0;r<i.frames;r++){var x=[];for(_(a,x,r),R(x,s.skin),c=0;c<x.length;c++)for(h=0;h<v.hierarchy.length;h++)if(v.hierarchy[h].name===x[c].sid){var w={};w.time=r/30,w.matrix=x[c].animatrix,0===r&&(x[c].matrix=w.matrix);var k=[new THREE.Vector3,new THREE.Quaternion,new THREE.Vector3];w.matrix.decompose(k[0],k[1],k[2]),w.pos=[k[0].x,k[0].y,k[0].z],w.scl=[k[2].x,k[2].y,k[2].z],w.rot=k[1],v.hierarchy[h].keys.push(w)}t.animation=v}}else console.log("ColladaLoader: Could not find the skeleton for the skin. ");else console.log("ColladaLoader: Could not find skin controller.")}function $(e,t){var n,r,s,i,a=new THREE.Object3D;for(s=0;s<e.controllers.length;s++){var u=g[e.controllers[s].url];switch(u.type){case"skin":if(y[u.skin.source])(h=new K).url=u.skin.source,h.instance_material=e.controllers[s].instance_material,e.geometries.push(h),n=e.controllers[s];else if(g[u.skin.source]){var c=g[u.skin.source];r=c,c.morph&&y[c.morph.source]&&((h=new K).url=c.morph.source,h.instance_material=e.controllers[s].instance_material,e.geometries.push(h))}break;case"morph":var h;y[u.morph.source]&&((h=new K).url=u.morph.source,h.instance_material=e.controllers[s].instance_material,e.geometries.push(h),r=e.controllers[s]),console.log("ColladaLoader: Morph-controller partially supported.")}}var d={};for(s=0;s<e.geometries.length;s++){var p,f=e.geometries[s],m=f.instance_material,k=y[f.url],E={},I=[],T=0;if(k){if(!k.mesh||!k.mesh.primitives)continue;if(0===a.name.length&&(a.name=k.id),m)for(i=0;i<m.length;i++){var C=m[i],N=b[C.target],A=N.instance_effect.url,_=v[A].shader.material;if(k.doubleSided){if(!(C.symbol in d)){var R=_.clone();R.side=THREE.DoubleSide,d[C.symbol]=R}_=d[C.symbol]}_.opacity=_.opacity?_.opacity:1,E[C.symbol]=T,I.push(_),(p=_).name=null===N.name||""===N.name?N.id:N.name,T++}var L,F=p||new THREE.MeshLambertMaterial({color:14540253,side:k.doubleSided?THREE.DoubleSide:THREE.FrontSide}),O=k.mesh.geometry3js;T>1&&(F=new THREE.MeshFaceMaterial(I)),void 0!==n?(D(O,n),O.morphTargets.length>0?(F.morphTargets=!0,F.skinning=!1):(F.morphTargets=!1,F.skinning=!0),(L=new THREE.SkinnedMesh(O,F,!1)).name="skin_"+l.length,l.push(L)):void 0!==r?(M(O,r),F.morphTargets=!0,(L=new THREE.Mesh(O,F)).name="morph_"+o.length,o.push(L)):L=!0===O.isLineStrip?new THREE.Line(O):new THREE.Mesh(O,F),a.add(L)}}for(s=0;s<e.cameras.length;s++){var z=e.cameras[s],P=x[z.url],B=new THREE.PerspectiveCamera(P.yfov,parseFloat(P.aspect_ratio),parseFloat(P.znear),parseFloat(P.zfar));a.add(B)}for(s=0;s<e.lights.length;s++){var V=null,U=e.lights[s],H=w[U.url];if(H&&H.technique){var W=H.color.getHex(),G=H.intensity,j=H.distance,q=H.falloff_angle;switch(H.technique){case"directional":(V=new THREE.DirectionalLight(W,G,j)).position.set(0,0,1);break;case"point":V=new THREE.PointLight(W,G,j);break;case"spot":(V=new THREE.SpotLight(W,G,j,q,void 0)).position.set(0,0,1);break;case"ambient":V=new THREE.AmbientLight(W)}}V&&a.add(V)}if(a.name=e.name||e.id||"",a.colladaId=e.id||"",a.layer=e.layer||"",a.matrix=e.matrix,a.matrix.decompose(a.position,a.quaternion,a.scale),S.centerGeometry&&a.geometry){var X=a.geometry.center();X.multiply(a.scale),X.applyQuaternion(a.quaternion),a.position.sub(X)}for(s=0;s<e.nodes.length;s++)a.add($(e.nodes[s]));return a}function L(e){for(var t=c.querySelectorAll("library_nodes node"),n=0;n<t.length;n++){var r=t[n].attributes.getNamedItem("id");if(r&&r.value===e)return t[n]}}function F(e,t){for(var n=null,r=0,s=e.length;r<s&&null===n;r++){var i=e[r];if(i.time===t)n=i;else if(i.time>t)break}return n}function O(e,t){for(var n=-1,r=0,s=e.length;r<s&&-1===n;r++)e[r].time>=t&&(n=r);return n}function z(e,t,n,r){var s=function(e,t,n){for(n=n>=0?n:n+e.length;n>=0;n--){var r=e[n];if(r.hasTarget(t))return r}return null}(e,r,n?n-1:0),i=function(e,t,n){for(;n<e.length;n++){var r=e[n];if(r.hasTarget(t))return r}return null}(e,r,n+1);if(s&&i){var a,o=(t.time-s.time)/(i.time-s.time),l=s.getTarget(r),u=i.getTarget(r).data,c=l.data;if("matrix"===l.type)a=c;else if(c.length){a=[];for(var h=0;h<c.length;++h)a[h]=c[h]+(u[h]-c[h])*o}else a=c+(u-c)*o;t.addTarget(r,l.transform,l.member,a)}}function P(){this.id="",this.init_from=""}function B(){this.id="",this.name="",this.type="",this.skin=null,this.morph=null}function V(){this.method=null,this.source=null,this.targets=null,this.weights=null}function U(){this.source="",this.bindShapeMatrix=null,this.invBindMatrices=[],this.joints=[],this.weights=[]}function H(){this.id="",this.name="",this.nodes=[],this.scene=new THREE.Group}function W(){this.id="",this.name="",this.sid="",this.nodes=[],this.controllers=[],this.transforms=[],this.geometries=[],this.channels=[],this.matrix=new THREE.Matrix4}function G(){this.sid="",this.type="",this.data=[],this.obj=null}function j(){this.url="",this.skeleton=[],this.instance_material=[]}function q(){this.symbol="",this.target=""}function K(){this.url="",this.instance_material=[]}function X(){this.id="",this.mesh=null}function Z(e){this.geometry=e.id,this.primitives=[],this.vertices=null,this.geometry3js=null}function Q(){this.material="",this.count=0,this.inputs=[],this.vcount=null,this.p=[],this.geometry=new THREE.Geometry}function Y(){Q.call(this),this.vcount=[]}function J(){Q.call(this),this.vcount=1}function ee(){Q.call(this),this.vcount=3}function te(){this.source="",this.count=0,this.stride=0,this.params=[]}function ne(){this.input={}}function re(){this.semantic="",this.offset=0,this.source="",this.set=0}function se(e){this.id=e,this.type=null}function ie(){this.id="",this.name="",this.instance_effect=null}function ae(){this.color=new THREE.Color,this.color.setRGB(Math.random(),Math.random(),Math.random()),this.color.a=1,this.texture=null,this.texcoord=null,this.texOpts=null}function oe(e,t){this.type=e,this.effect=t,this.material=null}function le(e){this.effect=e,this.init_from=null,this.format=null}function ue(e){this.effect=e,this.source=null,this.wrap_s=null,this.wrap_t=null,this.minfilter=null,this.magfilter=null,this.mipfilter=null}function ce(){this.id="",this.name="",this.shader=null,this.surface={},this.sampler={}}function he(){this.url=""}function de(){this.id="",this.name="",this.source={},this.sampler=[],this.channel=[]}function pe(e){this.animation=e,this.source="",this.target="",this.fullSid=null,this.sid=null,this.dotSyntax=null,this.arrSyntax=null,this.arrIndices=null,this.member=null}function fe(e){this.id="",this.animation=e,this.inputs=[],this.input=null,this.output=null,this.strideOut=null,this.interpolation=null,this.startTime=null,this.endTime=null,this.duration=0}function me(e){this.targets=[],this.time=e}function ge(){this.id="",this.name="",this.technique=""}function ye(){this.url=""}function be(){this.id="",this.name="",this.technique=""}function ve(){this.url=""}function xe(){this.id="",this.name="",this.joints=[],this.links=[]}function we(){this.sid="",this.name="",this.axis=new THREE.Vector3,this.limits={min:0,max:0},this.type="",this.static=!1,this.zeroPosition=0,this.middlePosition=0}function ke(){this.sid="",this.name="",this.transforms=[],this.attachments=[]}function Se(){this.joint="",this.transforms=[],this.links=[]}function Ee(e){var t=e.getAttribute("id");return null!=p[t]||(p[t]=new se(t).parse(e)),p[t]}function Ie(e){for(var t=Ne(e),n=[],r=0,s=t.length;r<s;r++)n.push("true"===t[r]||"1"===t[r]);return n}function Te(e){for(var t=Ne(e),n=[],r=0,s=t.length;r<s;r++)n.push(parseFloat(t[r]));return n}function Ce(e){for(var t=Ne(e),n=[],r=0,s=t.length;r<s;r++)n.push(parseInt(t[r],10));return n}function Ne(e){return e.length>0?function(e){return e.replace(/^\s+/,"").replace(/\s+$/,"")}(e).split(/\s+/):[]}function Ae(e,t,n){return e.hasAttribute(t)?parseInt(e.getAttribute(t),10):n}function Me(e,t){(new THREE.ImageLoader).load(t,(function(t){e.image=t,e.needsUpdate=!0}))}function _e(e,t){e.doubleSided=!1;var n=t.querySelectorAll("extra double_sided")[0];n&&n&&1===parseInt(n.textContent,10)&&(e.doubleSided=!0)}function Re(e,t){if(!0===S.convertUpAxis&&I!==S.upAxis)switch(T){case"XtoY":var n=e[0];e[0]=t*e[1],e[1]=n;break;case"XtoZ":n=e[2],e[2]=e[1],e[1]=e[0],e[0]=n;break;case"YtoX":n=e[0],e[0]=e[1],e[1]=t*n;break;case"YtoZ":n=e[1],e[1]=t*e[2],e[2]=n;break;case"ZtoX":n=e[0],e[0]=e[1],e[1]=e[2],e[2]=n;break;case"ZtoY":n=e[1],e[1]=e[2],e[2]=t*n}}function De(e,t){var n=[e[t],e[t+1],e[t+2]];return Re(n,-1),new THREE.Vector3(n[0],n[1],n[2])}function $e(e){if(S.convertUpAxis){var t=[e[0],e[4],e[8]];Re(t,-1),e[0]=t[0],e[4]=t[1],e[8]=t[2],Re(t=[e[1],e[5],e[9]],-1),e[1]=t[0],e[5]=t[1],e[9]=t[2],Re(t=[e[2],e[6],e[10]],-1),e[2]=t[0],e[6]=t[1],e[10]=t[2],Re(t=[e[0],e[1],e[2]],-1),e[0]=t[0],e[1]=t[1],e[2]=t[2],Re(t=[e[4],e[5],e[6]],-1),e[4]=t[0],e[5]=t[1],e[6]=t[2],Re(t=[e[8],e[9],e[10]],-1),e[8]=t[0],e[9]=t[1],e[10]=t[2],Re(t=[e[3],e[7],e[11]],-1),e[3]=t[0],e[7]=t[1],e[11]=t[2]}return(new THREE.Matrix4).set(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}function Le(e){if(S.convertUpAxis)switch(e){case"X":switch(T){case"XtoY":case"XtoZ":case"YtoX":e="Y";break;case"ZtoX":e="Z"}break;case"Y":switch(T){case"XtoY":case"YtoX":case"ZtoX":e="X";break;case"XtoZ":case"YtoZ":case"ZtoY":e="Z"}break;case"Z":switch(T){case"XtoZ":e="X";break;case"YtoZ":case"ZtoX":case"ZtoY":e="Y"}}return e}return P.prototype.parse=function(e){this.id=e.getAttribute("id");for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];"init_from"===n.nodeName&&(this.init_from=n.textContent)}return this},B.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.type="none";for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"skin":this.skin=(new U).parse(n),this.type=n.nodeName;break;case"morph":this.morph=(new V).parse(n),this.type=n.nodeName}}return this},V.prototype.parse=function(e){var t,n={},r=[];for(this.method=e.getAttribute("method"),this.source=e.getAttribute("source").replace(/^#/,""),t=0;t<e.childNodes.length;t++){var s=e.childNodes[t];if(1==s.nodeType)switch(s.nodeName){case"source":n[(a=(new se).parse(s)).id]=a;break;case"targets":r=this.parseInputs(s);break;default:console.log(s.nodeName)}}for(t=0;t<r.length;t++){var i=r[t],a=n[i.source];switch(i.semantic){case"MORPH_TARGET":this.targets=a.read();break;case"MORPH_WEIGHT":this.weights=a.read()}}return this},V.prototype.parseInputs=function(e){for(var t=[],n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];1==r.nodeType&&"input"===r.nodeName&&t.push((new re).parse(r))}return t},U.prototype.parse=function(e){var t,n,r={};this.source=e.getAttribute("source").replace(/^#/,""),this.invBindMatrices=[],this.joints=[],this.weights=[];for(var s=0;s<e.childNodes.length;s++){var i=e.childNodes[s];if(1==i.nodeType)switch(i.nodeName){case"bind_shape_matrix":var a=Te(i.textContent);this.bindShapeMatrix=$e(a);break;case"source":var o=(new se).parse(i);r[o.id]=o;break;case"joints":t=i;break;case"vertex_weights":n=i;break;default:console.log(i.nodeName)}}return this.parseJoints(t,r),this.parseWeights(n,r),this},U.prototype.parseJoints=function(e,t){for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1==r.nodeType&&"input"===r.nodeName){var s=(new re).parse(r),i=t[s.source];"JOINT"===s.semantic?this.joints=i.read():"INV_BIND_MATRIX"===s.semantic&&(this.invBindMatrices=i.read())}}},U.prototype.parseWeights=function(e,t){for(var n,r,s=[],i=0;i<e.childNodes.length;i++){var a=e.childNodes[i];if(1==a.nodeType)switch(a.nodeName){case"input":s.push((new re).parse(a));break;case"v":n=Ce(a.textContent);break;case"vcount":r=Ce(a.textContent)}}var o=0;for(i=0;i<r.length;i++){for(var l=r[i],u=[],c=0;c<l;c++){for(var h={},d=0;d<s.length;d++){var p=s[d],f=n[o+p.offset];switch(p.semantic){case"JOINT":h.joint=f;break;case"WEIGHT":h.weight=t[p.source].data[f]}}u.push(h),o+=s.length}for(c=0;c<u.length;c++)u[c].index=i;this.weights.push(u)}},H.prototype.getChildById=function(e,t){for(var n=0;n<this.nodes.length;n++){var r=this.nodes[n].getChildById(e,t);if(r)return r}return null},H.prototype.getChildBySid=function(e,t){for(var n=0;n<this.nodes.length;n++){var r=this.nodes[n].getChildBySid(e,t);if(r)return r}return null},H.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.nodes=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];1==n.nodeType&&"node"===n.nodeName&&this.nodes.push((new W).parse(n))}return this},W.prototype.getChannelForTransform=function(e){for(var t=0;t<this.channels.length;t++){var n,r=this.channels[t],s=r.target.split("/"),i=(s.shift(),s.shift()),a=i.indexOf(".")>=0,o=i.indexOf("(")>=0;if(a)s=i.split("."),i=s.shift(),s.shift();else if(o){n=i.split("("),i=n.shift();for(var l=0;l<n.length;l++)n[l]=parseInt(n[l].replace(/\)/,""))}if(i===e)return r.info={sid:i,dotSyntax:a,arrSyntax:o,arrIndices:n},r}return null},W.prototype.getChildById=function(e,t){if(this.id===e)return this;if(t)for(var n=0;n<this.nodes.length;n++){var r=this.nodes[n].getChildById(e,t);if(r)return r}return null},W.prototype.getChildBySid=function(e,t){if(this.sid===e)return this;if(t)for(var n=0;n<this.nodes.length;n++){var r=this.nodes[n].getChildBySid(e,t);if(r)return r}return null},W.prototype.getTransformBySid=function(e){for(var t=0;t<this.transforms.length;t++)if(this.transforms[t].sid===e)return this.transforms[t];return null},W.prototype.parse=function(e){this.id=e.getAttribute("id"),this.sid=e.getAttribute("sid"),this.name=e.getAttribute("name"),this.type=e.getAttribute("type"),this.layer=e.getAttribute("layer"),this.type="JOINT"===this.type?this.type:"NODE",this.nodes=[],this.transforms=[],this.geometries=[],this.cameras=[],this.lights=[],this.controllers=[],this.matrix=new THREE.Matrix4;for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"node":this.nodes.push((new W).parse(n));break;case"instance_camera":this.cameras.push((new ye).parse(n));break;case"instance_controller":this.controllers.push((new j).parse(n));break;case"instance_geometry":this.geometries.push((new K).parse(n));break;case"instance_light":this.lights.push((new ve).parse(n));break;case"instance_node":var r=L(n.getAttribute("url").replace(/^#/,""));r&&this.nodes.push((new W).parse(r));break;case"rotate":case"translate":case"scale":case"matrix":case"lookat":case"skew":this.transforms.push((new G).parse(n));break;case"extra":break;default:console.log(n.nodeName)}}return this.channels=function(e){var t=[],n=1e6,r=-1e6;for(var s in m)for(var i=m[s],a=0;a<i.channel.length;a++){var o=i.channel[a],l=i.sampler[a];(s=o.target.split("/")[0])==e.id&&(l.create(),o.sampler=l,n=Math.min(n,l.startTime),r=Math.max(r,l.endTime),t.push(o))}return t.length&&(e.startTime=n,e.endTime=r),t}(this),function(e){if(e.channels&&e.channels.length){for(var t=[],n=[],r=0,s=e.channels.length;r<s;r++){var i,a=e.channels[r],o=a.fullSid,l=a.sampler,u=l.input,c=e.getTransformBySid(a.sid);if(a.arrIndices){i=[];for(var h=0,d=a.arrIndices.length;h<d;h++)i[h]=((b=a.arrIndices[h])>-1&&b<3&&(b={X:0,Y:1,Z:2}[b=Le(["X","Y","Z"][b])]),b)}else i=Le(a.member);if(c)for(-1===n.indexOf(o)&&n.push(o),h=0,d=u.length;h<d;h++){var p=u[h],f=l.getData(c.type,h,i);if(!(y=F(t,p))){y=new me(p);var m=O(t,p);t.splice(-1===m?t.length:m,0,y)}y.addTarget(o,c,i,f)}else console.log('Could not find transform "'+a.sid+'" in node '+e.id)}for(r=0;r<n.length;r++){var g=n[r];for(h=0;h<t.length;h++){var y;(y=t[h]).hasTarget(g)||z(t,y,h,g)}}e.keys=t,e.sids=n}var b}(this),this.updateMatrix(),this},W.prototype.updateMatrix=function(){this.matrix.identity();for(var e=0;e<this.transforms.length;e++)this.transforms[e].apply(this.matrix)},G.prototype.parse=function(e){return this.sid=e.getAttribute("sid"),this.type=e.nodeName,this.data=Te(e.textContent),this.convert(),this},G.prototype.convert=function(){switch(this.type){case"matrix":this.obj=$e(this.data);break;case"rotate":this.angle=THREE.Math.degToRad(this.data[3]);case"translate":Re(this.data,-1),this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case"scale":Re(this.data,1),this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}},G.prototype.apply=(u=new THREE.Matrix4,function(e){switch(this.type){case"matrix":e.multiply(this.obj);break;case"translate":e.multiply(u.makeTranslation(this.obj.x,this.obj.y,this.obj.z));break;case"rotate":e.multiply(u.makeRotationAxis(this.obj,this.angle));break;case"scale":e.scale(this.obj)}}),G.prototype.update=function(e,t){var n=["X","Y","Z","ANGLE"];switch(this.type){case"matrix":if(t)if(1===t.length)switch(t[0]){case 0:this.obj.n11=e[0],this.obj.n21=e[1],this.obj.n31=e[2],this.obj.n41=e[3];break;case 1:this.obj.n12=e[0],this.obj.n22=e[1],this.obj.n32=e[2],this.obj.n42=e[3];break;case 2:this.obj.n13=e[0],this.obj.n23=e[1],this.obj.n33=e[2],this.obj.n43=e[3];break;case 3:this.obj.n14=e[0],this.obj.n24=e[1],this.obj.n34=e[2],this.obj.n44=e[3]}else if(2===t.length){var r="n"+(t[0]+1)+(t[1]+1);this.obj[r]=e}else console.log("Incorrect addressing of matrix in transform.");else this.obj.copy(e);break;case"translate":case"scale":switch("[object Array]"===Object.prototype.toString.call(t)&&(t=n[t[0]]),t){case"X":this.obj.x=e;break;case"Y":this.obj.y=e;break;case"Z":this.obj.z=e;break;default:this.obj.x=e[0],this.obj.y=e[1],this.obj.z=e[2]}break;case"rotate":switch("[object Array]"===Object.prototype.toString.call(t)&&(t=n[t[0]]),t){case"X":this.obj.x=e;break;case"Y":this.obj.y=e;break;case"Z":this.obj.z=e;break;case"ANGLE":this.angle=THREE.Math.degToRad(e);break;default:this.obj.x=e[0],this.obj.y=e[1],this.obj.z=e[2],this.angle=THREE.Math.degToRad(e[3])}}},j.prototype.parse=function(e){this.url=e.getAttribute("url").replace(/^#/,""),this.skeleton=[],this.instance_material=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1===n.nodeType)switch(n.nodeName){case"skeleton":this.skeleton.push(n.textContent.replace(/^#/,""));break;case"bind_material":for(var r=n.querySelectorAll("instance_material"),s=0;s<r.length;s++){var i=r[s];this.instance_material.push((new q).parse(i))}}}return this},q.prototype.parse=function(e){return this.symbol=e.getAttribute("symbol"),this.target=e.getAttribute("target").replace(/^#/,""),this},K.prototype.parse=function(e){this.url=e.getAttribute("url").replace(/^#/,""),this.instance_material=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType&&"bind_material"===n.nodeName){for(var r=n.querySelectorAll("instance_material"),s=0;s<r.length;s++){var i=r[s];this.instance_material.push((new q).parse(i))}break}}return this},X.prototype.parse=function(e){this.id=e.getAttribute("id"),_e(this,e);for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];"mesh"===n.nodeName&&(this.mesh=new Z(this).parse(n))}return this},Z.prototype.parse=function(e){this.primitives=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"source":Ee(n);break;case"vertices":this.vertices=(new ne).parse(n);break;case"linestrips":this.primitives.push((new J).parse(n));break;case"triangles":this.primitives.push((new ee).parse(n));break;case"polygons":this.primitives.push((new Q).parse(n));break;case"polylist":this.primitives.push((new Y).parse(n))}}if(this.geometry3js=new THREE.Geometry,null===this.vertices)return this;var r=p[this.vertices.input.POSITION.source].data;for(t=0;t<r.length;t+=3)this.geometry3js.vertices.push(De(r,t).clone());for(t=0;t<this.primitives.length;t++){var s=this.primitives[t];s.setVertices(this.vertices),this.handlePrimitive(s,this.geometry3js)}return this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals),this},Z.prototype.handlePrimitive=function(e,t){if(e instanceof J)t.isLineStrip=!0;else{var n,r,s,i,a,o,l,u=e.p,c=e.inputs,h=0,d=3,f=0,m=[];for(n=0;n<c.length;n++){var g=(s=c[n]).offset+1;f=f<g?g:f,"TEXCOORD"===s.semantic&&m.push(s.set)}for(var y=0;y<u.length;++y)for(var b=u[y],v=0;v<b.length;){var x=[],w=[],k=null,E=[];for(d=e.vcount?e.vcount.length?e.vcount[h++]:e.vcount:b.length/f,n=0;n<d;n++)for(r=0;r<c.length;r++)switch(s=c[r],o=p[s.source],a=(i=b[v+n*f+s.offset])*(l=o.accessor.params.length),s.semantic){case"VERTEX":x.push(i);break;case"NORMAL":w.push(De(o.data,a));break;case"TEXCOORD":void 0===(k=k||{})[s.set]&&(k[s.set]=[]),k[s.set].push(new THREE.Vector2(o.data[a],o.data[a+1]));break;case"COLOR":E.push((new THREE.Color).setRGB(o.data[a],o.data[a+1],o.data[a+2]))}if(0===w.length)if(s=this.vertices.input.NORMAL){l=(o=p[s.source]).accessor.params.length;for(var I=0,T=x.length;I<T;I++)w.push(De(o.data,x[I]*l))}else t.calcNormals=!0;if(!k&&(k={},s=this.vertices.input.TEXCOORD))for(m.push(s.set),l=(o=p[s.source]).accessor.params.length,I=0,T=x.length;I<T;I++)a=x[I]*l,void 0===k[s.set]&&(k[s.set]=[]),k[s.set].push(new THREE.Vector2(o.data[a],1-o.data[a+1]));if(0===E.length&&(s=this.vertices.input.COLOR))for(l=(o=p[s.source]).accessor.params.length,I=0,T=x.length;I<T;I++)a=x[I]*l,E.push((new THREE.Color).setRGB(o.data[a],o.data[a+1],o.data[a+2]));var C,N,A=null,M=[];if(3===d)M.push(new THREE.Face3(x[0],x[1],x[2],w,E.length?E:new THREE.Color));else if(4===d)M.push(new THREE.Face3(x[0],x[1],x[3],[w[0].clone(),w[1].clone(),w[3].clone()],E.length?[E[0],E[1],E[3]]:new THREE.Color)),M.push(new THREE.Face3(x[1],x[2],x[3],[w[1].clone(),w[2].clone(),w[3].clone()],E.length?[E[1],E[2],E[3]]:new THREE.Color));else if(d>4&&S.subdivideFaces){var _=E.length?E:new THREE.Color;for(r=1;r<d-1;)M.push(new THREE.Face3(x[0],x[r],x[r+1],[w[0].clone(),w[r++].clone(),w[r].clone()],_))}if(M.length)for(I=0,T=M.length;I<T;I++)for((A=M[I]).daeMaterial=e.material,t.faces.push(A),r=0;r<m.length;r++)C=k[m[r]],N=d>4?[C[0],C[I+1],C[I+2]]:4===d?0===I?[C[0],C[1],C[3]]:[C[1].clone(),C[2],C[3].clone()]:[C[0],C[1],C[2]],void 0===t.faceVertexUvs[r]&&(t.faceVertexUvs[r]=[]),t.faceVertexUvs[r].push(N);else console.log("dropped face with vcount "+d+" for geometry with id: "+t.id);v+=f*d}}},Q.prototype.setVertices=function(e){for(var t=0;t<this.inputs.length;t++)this.inputs[t].source===e.id&&(this.inputs[t].source=e.input.POSITION.source)},Q.prototype.parse=function(e){this.material=e.getAttribute("material"),this.count=Ae(e,"count",0);for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"input":this.inputs.push((new re).parse(e.childNodes[t]));break;case"vcount":this.vcount=Ce(n.textContent);break;case"p":this.p.push(Ce(n.textContent));break;case"ph":console.warn("polygon holes not yet supported!")}}return this},Y.prototype=Object.create(Q.prototype),Y.prototype.constructor=Y,J.prototype=Object.create(Q.prototype),J.prototype.constructor=J,ee.prototype=Object.create(Q.prototype),ee.prototype.constructor=ee,te.prototype.parse=function(e){this.params=[],this.source=e.getAttribute("source"),this.count=Ae(e,"count",0),this.stride=Ae(e,"stride",0);for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if("param"===n.nodeName){var r={};r.name=n.getAttribute("name"),r.type=n.getAttribute("type"),this.params.push(r)}}return this},ne.prototype.parse=function(e){this.id=e.getAttribute("id");for(var t=0;t<e.childNodes.length;t++)if("input"===e.childNodes[t].nodeName){var n=(new re).parse(e.childNodes[t]);this.input[n.semantic]=n}return this},re.prototype.parse=function(e){return this.semantic=e.getAttribute("semantic"),this.source=e.getAttribute("source").replace(/^#/,""),this.set=Ae(e,"set",-1),this.offset=Ae(e,"offset",0),"TEXCOORD"===this.semantic&&this.set<0&&(this.set=0),this},se.prototype.parse=function(e){this.id=e.getAttribute("id");for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"bool_array":this.data=Ie(n.textContent),this.type=n.nodeName;break;case"float_array":this.data=Te(n.textContent),this.type=n.nodeName;break;case"int_array":this.data=Ce(n.textContent),this.type=n.nodeName;break;case"IDREF_array":case"Name_array":this.data=Ne(n.textContent),this.type=n.nodeName;break;case"technique_common":for(var r=0;r<n.childNodes.length;r++)if("accessor"===n.childNodes[r].nodeName){this.accessor=(new te).parse(n.childNodes[r]);break}}}return this},se.prototype.read=function(){var e=[],t=this.accessor.params[0];switch(t.type){case"IDREF":case"Name":case"name":case"float":return this.data;case"float4x4":for(var n=0;n<this.data.length;n+=16){var r=$e(this.data.slice(n,n+16));e.push(r)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+t.type+".")}return e},ie.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name");for(var t=0;t<e.childNodes.length;t++)if("instance_effect"===e.childNodes[t].nodeName){this.instance_effect=(new he).parse(e.childNodes[t]);break}return this},ae.prototype.isColor=function(){return null===this.texture},ae.prototype.isTexture=function(){return null!=this.texture},ae.prototype.parse=function(e){"transparent"===e.nodeName&&(this.opaque=e.getAttribute("opaque"));for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"color":var r=Te(n.textContent);this.color=new THREE.Color,this.color.setRGB(r[0],r[1],r[2]),this.color.a=r[3];break;case"texture":this.texture=n.getAttribute("texture"),this.texcoord=n.getAttribute("texcoord"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(n)}}return this},ae.prototype.parseTexture=function(e){if(!e.childNodes)return this;e.childNodes[1]&&"extra"===e.childNodes[1].nodeName&&(e=e.childNodes[1]).childNodes[1]&&"technique"===e.childNodes[1].nodeName&&(e=e.childNodes[1]);for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"offsetU":case"offsetV":case"repeatU":case"repeatV":this.texOpts[n.nodeName]=parseFloat(n.textContent);break;case"wrapU":case"wrapV":"TRUE"===n.textContent.toUpperCase()?this.texOpts[n.nodeName]=1:this.texOpts[n.nodeName]=parseInt(n.textContent);break;default:this.texOpts[n.nodeName]=n.textContent}}return this},oe.prototype.parse=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"emission":case"diffuse":case"specular":case"transparent":this[n.nodeName]=(new ae).parse(n);break;case"bump":var r=n.getAttribute("bumptype");r?"heightfield"===r.toLowerCase()?this.bump=(new ae).parse(n):"normalmap"===r.toLowerCase()?this.normal=(new ae).parse(n):(console.error("Shader.prototype.parse: Invalid value for attribute 'bumptype' ("+r+") - valid bumptypes are 'HEIGHTFIELD' and 'NORMALMAP' - defaulting to 'HEIGHTFIELD'"),this.bump=(new ae).parse(n)):(console.warn("Shader.prototype.parse: Attribute 'bumptype' missing from bump node - defaulting to 'HEIGHTFIELD'"),this.bump=(new ae).parse(n));break;case"shininess":case"reflectivity":case"index_of_refraction":case"transparency":var s=n.querySelectorAll("float");s.length>0&&(this[n.nodeName]=parseFloat(s[0].textContent))}}return this.create(),this},oe.prototype.create=function(){var e={},t=!1;if(void 0!==this.transparency&&void 0!==this.transparent){this.transparent;var n=(this.transparent.color.r+this.transparent.color.g+this.transparent.color.b)/3*this.transparency;n>0&&(t=!0,e.transparent=!0,e.opacity=1-n)}var r={diffuse:"map",ambient:"lightMap",specular:"specularMap",emission:"emissionMap",bump:"bumpMap",normal:"normalMap"};for(var s in this)switch(s){case"ambient":case"emission":case"diffuse":case"specular":case"bump":case"normal":var i=this[s];if(i instanceof ae)if(i.isTexture()){var o=i.texture,l=this.effect.sampler[o];if(void 0!==l&&void 0!==l.source){var u=this.effect.surface[l.source];if(void 0!==u){var c=f[u.init_from];if(c){var h,d=a+c.init_from,p=THREE.Loader.Handlers.get(d);null!==p?h=p.load(d):Me(h=new THREE.Texture,d),h.wrapS=i.texOpts.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,h.wrapT=i.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,h.offset.x=i.texOpts.offsetU,h.offset.y=i.texOpts.offsetV,h.repeat.x=i.texOpts.repeatU,h.repeat.y=i.texOpts.repeatV,e[r[s]]=h,"emission"===s&&(e.emissive=16777215)}}}}else"diffuse"!==s&&t||("emission"===s?e.emissive=i.color.getHex():e[s]=i.color.getHex());break;case"shininess":e[s]=this[s];break;case"reflectivity":e[s]=this[s],e[s]>0&&(e.envMap=S.defaultEnvMap),e.combine=THREE.MixOperation;break;case"index_of_refraction":e.refractionRatio=this[s],1!==this[s]&&(e.envMap=S.defaultEnvMap)}switch(e.shading=k,e.side=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide,void 0!==e.diffuse&&(e.color=e.diffuse,delete e.diffuse),this.type){case"constant":null!=e.emissive&&(e.color=e.emissive),this.material=new THREE.MeshBasicMaterial(e);break;case"phong":case"blinn":this.material=new THREE.MeshPhongMaterial(e);break;default:this.material=new THREE.MeshLambertMaterial(e)}return this.material},le.prototype.parse=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"init_from":this.init_from=n.textContent;break;case"format":this.format=n.textContent;break;default:console.log("unhandled Surface prop: "+n.nodeName)}}return this},ue.prototype.parse=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"source":this.source=n.textContent;break;case"minfilter":this.minfilter=n.textContent;break;case"magfilter":this.magfilter=n.textContent;break;case"mipfilter":this.mipfilter=n.textContent;break;case"wrap_s":this.wrap_s=n.textContent;break;case"wrap_t":this.wrap_t=n.textContent;break;default:console.log("unhandled Sampler2D prop: "+n.nodeName)}}return this},ce.prototype.create=function(){if(null===this.shader)return null},ce.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),_e(this,e),this.shader=null;for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];1==n.nodeType&&"profile_COMMON"===n.nodeName&&this.parseTechnique(this.parseProfileCOMMON(n))}return this},ce.prototype.parseNewparam=function(e){for(var t=e.getAttribute("sid"),n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1==r.nodeType)switch(r.nodeName){case"surface":this.surface[t]=new le(this).parse(r);break;case"sampler2D":this.sampler[t]=new ue(this).parse(r);break;case"extra":break;default:console.log(r.nodeName)}}},ce.prototype.parseProfileCOMMON=function(e){for(var t,n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1==r.nodeType)switch(r.nodeName){case"profile_COMMON":this.parseProfileCOMMON(r);break;case"technique":t=r;break;case"newparam":this.parseNewparam(r);break;case"image":var s=(new P).parse(r);f[s.id]=s;break;case"extra":break;default:console.log(r.nodeName)}}return t},ce.prototype.parseTechnique=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"constant":case"lambert":case"blinn":case"phong":this.shader=new oe(n.nodeName,this).parse(n);break;case"extra":this.parseExtra(n)}}},ce.prototype.parseExtra=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];1==n.nodeType&&"technique"===n.nodeName&&this.parseExtraTechnique(n)}},ce.prototype.parseExtraTechnique=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];1==n.nodeType&&"bump"===n.nodeName&&this.shader.parse(e)}},he.prototype.parse=function(e){return this.url=e.getAttribute("url").replace(/^#/,""),this},de.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.source={};for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"animation":var r=(new de).parse(n);for(var s in r.source)this.source[s]=r.source[s];for(var i=0;i<r.channel.length;i++)this.channel.push(r.channel[i]),this.sampler.push(r.sampler[i]);break;case"source":s=(new se).parse(n),this.source[s.id]=s;break;case"sampler":this.sampler.push(new fe(this).parse(n));break;case"channel":this.channel.push(new pe(this).parse(n))}}return this},pe.prototype.parse=function(e){this.source=e.getAttribute("source").replace(/^#/,""),this.target=e.getAttribute("target");var t=this.target.split("/"),n=(t.shift(),t.shift()),r=n.indexOf(".")>=0,s=n.indexOf("(")>=0;if(r)t=n.split("."),this.sid=t.shift(),this.member=t.shift();else if(s){var i=n.split("(");this.sid=i.shift();for(var a=0;a<i.length;a++)i[a]=parseInt(i[a].replace(/\)/,""));this.arrIndices=i}else this.sid=n;return this.fullSid=n,this.dotSyntax=r,this.arrSyntax=s,this},fe.prototype.parse=function(e){this.id=e.getAttribute("id"),this.inputs=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];1==n.nodeType&&"input"===n.nodeName&&this.inputs.push((new re).parse(n))}return this},fe.prototype.create=function(){for(var e=0;e<this.inputs.length;e++){var t=this.inputs[e],n=this.animation.source[t.source];switch(t.semantic){case"INPUT":this.input=n.read();break;case"OUTPUT":this.output=n.read(),this.strideOut=n.accessor.stride;break;case"INTERPOLATION":this.interpolation=n.read();break;case"IN_TANGENT":case"OUT_TANGENT":break;default:console.log(t.semantic)}}if(this.startTime=0,this.endTime=0,this.duration=0,this.input.length){for(this.startTime=1e8,this.endTime=-1e8,e=0;e<this.input.length;e++)this.startTime=Math.min(this.startTime,this.input[e]),this.endTime=Math.max(this.endTime,this.input[e]);this.duration=this.endTime-this.startTime}},fe.prototype.getData=function(e,t,n){var r;if("matrix"===e&&16===this.strideOut)r=this.output[t];else if(this.strideOut>1){r=[],t*=this.strideOut;for(var s=0;s<this.strideOut;++s)r[s]=this.output[t+s];if(3===this.strideOut)switch(e){case"rotate":case"translate":Re(r,-1);break;case"scale":Re(r,1)}else 4===this.strideOut&&"matrix"===e&&Re(r,-1)}else r=this.output[t],n&&"translate"===e&&(r=function(e,t){if(!0!==S.convertUpAxis||I===S.upAxis)return t;switch(e){case"X":t="XtoY"===T?-1*t:t;break;case"Y":t="YtoZ"===T||"YtoX"===T?-1*t:t;break;case"Z":t="ZtoY"===T?-1*t:t}return t}(n,r));return r},me.prototype.addTarget=function(e,t,n,r){this.targets.push({sid:e,member:n,transform:t,data:r})},me.prototype.apply=function(e){for(var t=0;t<this.targets.length;++t){var n=this.targets[t];e&&n.sid!==e||n.transform.update(n.data,n.member)}},me.prototype.getTarget=function(e){for(var t=0;t<this.targets.length;++t)if(this.targets[t].sid===e)return this.targets[t];return null},me.prototype.hasTarget=function(e){for(var t=0;t<this.targets.length;++t)if(this.targets[t].sid===e)return!0;return!1},me.prototype.interpolate=function(e,t){for(var n=0,r=this.targets.length;n<r;n++){var s,i=this.targets[n],a=e.getTarget(i.sid);if("matrix"!==i.transform.type&&a){var o=(t-this.time)/(e.time-this.time),l=a.data,u=i.data;if(o<0&&(o=0),o>1&&(o=1),u.length){s=[];for(var c=0;c<u.length;++c)s[c]=u[c]+(l[c]-u[c])*o}else s=u+(l-u)*o}else s=i.data;i.transform.update(s,i.member)}},ge.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name");for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];1==n.nodeType&&"optics"===n.nodeName&&this.parseOptics(n)}return this},ge.prototype.parseOptics=function(e){for(var t=0;t<e.childNodes.length;t++)if("technique_common"===e.childNodes[t].nodeName)for(var n=e.childNodes[t],r=0;r<n.childNodes.length;r++)if(this.technique=n.childNodes[r].nodeName,"perspective"===this.technique)for(var s=n.childNodes[r],i=0;i<s.childNodes.length;i++)switch((o=s.childNodes[i]).nodeName){case"yfov":this.yfov=o.textContent;break;case"xfov":this.xfov=o.textContent;break;case"znear":this.znear=o.textContent;break;case"zfar":this.zfar=o.textContent;break;case"aspect_ratio":this.aspect_ratio=o.textContent}else if("orthographic"===this.technique){var a=n.childNodes[r];for(i=0;i<a.childNodes.length;i++){var o;switch((o=a.childNodes[i]).nodeName){case"xmag":this.xmag=o.textContent;break;case"ymag":this.ymag=o.textContent;break;case"znear":this.znear=o.textContent;break;case"zfar":this.zfar=o.textContent;break;case"aspect_ratio":this.aspect_ratio=o.textContent}}}return this},ye.prototype.parse=function(e){return this.url=e.getAttribute("url").replace(/^#/,""),this},be.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name");for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"technique_common":this.parseCommon(n);break;case"technique":this.parseTechnique(n)}}return this},be.prototype.parseCommon=function(e){for(var t=0;t<e.childNodes.length;t++)switch(e.childNodes[t].nodeName){case"directional":case"point":case"spot":case"ambient":this.technique=e.childNodes[t].nodeName;for(var n=e.childNodes[t],r=0;r<n.childNodes.length;r++){var s=n.childNodes[r];switch(s.nodeName){case"color":var i=Te(s.textContent);this.color=new THREE.Color(0),this.color.setRGB(i[0],i[1],i[2]),this.color.a=i[3];break;case"falloff_angle":this.falloff_angle=parseFloat(s.textContent);break;case"quadratic_attenuation":var a=parseFloat(s.textContent);this.distance=a?Math.sqrt(1/a):0}}}return this},be.prototype.parseTechnique=function(e){this.profile=e.getAttribute("profile");for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];"intensity"===n.nodeName&&(this.intensity=parseFloat(n.textContent))}return this},ve.prototype.parse=function(e){return this.url=e.getAttribute("url").replace(/^#/,""),this},xe.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.joints=[],this.links=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];1==n.nodeType&&"technique_common"===n.nodeName&&this.parseCommon(n)}return this},xe.prototype.parseCommon=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(e.childNodes[t].nodeName){case"joint":this.joints.push((new we).parse(n));break;case"link":this.links.push((new ke).parse(n))}}return this},we.prototype.parse=function(e){this.sid=e.getAttribute("sid"),this.name=e.getAttribute("name"),this.axis=new THREE.Vector3,this.limits={min:0,max:0},this.type="",this.static=!1,this.zeroPosition=0,this.middlePosition=0;var t=Te(e.querySelector("axis").textContent);this.axis=De(t,0);var n=e.querySelector("limits min")?parseFloat(e.querySelector("limits min").textContent):-360,r=e.querySelector("limits max")?parseFloat(e.querySelector("limits max").textContent):360;this.limits={min:n,max:r};for(var s=["prismatic","revolute"],i=0;i<s.length;i++){var a=s[i];e.querySelector(a)&&(this.type=a)}return this.limits.min>=this.limits.max&&(this.static=!0),this.middlePosition=(this.limits.min+this.limits.max)/2,this},ke.prototype.parse=function(e){this.sid=e.getAttribute("sid"),this.name=e.getAttribute("name"),this.transforms=[],this.attachments=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"attachment_full":this.attachments.push((new Se).parse(n));break;case"rotate":case"translate":case"matrix":this.transforms.push((new G).parse(n))}}return this},Se.prototype.parse=function(e){this.joint=e.getAttribute("joint").split("/").pop(),this.links=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"link":this.links.push((new ke).parse(n));break;case"rotate":case"translate":case"matrix":this.transforms.push((new G).parse(n))}}return this},{load:function(e,t,n,r){var s=0;if(document.implementation&&document.implementation.createDocument){var i=new XMLHttpRequest;i.onreadystatechange=function(){4===i.readyState?0!==i.status&&200!==i.status||(i.response?(d=t,C(i.response,void 0,e)):r?r():console.error("ColladaLoader: Empty or non-existing file ("+e+")")):3===i.readyState&&n&&(0===s&&(s=i.getResponseHeader("Content-Length")),n({total:s,loaded:i.responseText.length}))},i.open("GET",e,!0),i.send(null)}else alert("Don't know how to parse XML!")},parse:C,setPreferredShading:function(e){k=e},applySkin:D,geometries:y,options:S}}},9544:()=>{THREE.OBJLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.materials=null},THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(e,t,n,r){var s=this,i=new THREE.XHRLoader(s.manager);i.setPath(this.path),i.load(e,(function(e){t(s.parse(e))}),n,r)},setPath:function(e){this.path=e},setMaterials:function(e){this.materials=e},parse:function(e){console.time("OBJLoader");var t,n=[],r=!1,s=[],i=[],a=[];function o(e){t={name:e,geometry:{vertices:[],normals:[],uvs:[]},material:{name:"",smooth:!0}},n.push(t)}function l(e){var t=parseInt(e);return 3*(t>=0?t-1:t+s.length/3)}function u(e){var t=parseInt(e);return 3*(t>=0?t-1:t+i.length/3)}function c(e){var t=parseInt(e);return 2*(t>=0?t-1:t+a.length/2)}function h(e,n,r){t.geometry.vertices.push(s[e],s[e+1],s[e+2],s[n],s[n+1],s[n+2],s[r],s[r+1],s[r+2])}function d(e,n,r){t.geometry.normals.push(i[e],i[e+1],i[e+2],i[n],i[n+1],i[n+2],i[r],i[r+1],i[r+2])}function p(e,n,r){t.geometry.uvs.push(a[e],a[e+1],a[n],a[n+1],a[r],a[r+1])}function f(e,t,n,r,s,i,a,o,f,m,g,y){var b,v=l(e),x=l(t),w=l(n);void 0===r?h(v,x,w):(h(v,x,b=l(r)),h(x,w,b)),void 0!==s&&(v=c(s),x=c(i),w=c(a),void 0===r?p(v,x,w):(p(v,x,b=c(o)),p(x,w,b))),void 0!==f&&(v=u(f),x=u(m),w=u(g),void 0===r?d(v,x,w):(d(v,x,b=u(y)),d(x,w,b)))}o("");for(var m=/^v\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,g=/^vn\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,y=/^vt\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,b=/^f\s+(-?\d+)\s+(-?\d+)\s+(-?\d+)(?:\s+(-?\d+))?/,v=/^f\s+((-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+))(?:\s+((-?\d+)\/(-?\d+)))?/,x=/^f\s+((-?\d+)\/(-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+)\/(-?\d+))(?:\s+((-?\d+)\/(-?\d+)\/(-?\d+)))?/,w=/^f\s+((-?\d+)\/\/(-?\d+))\s+((-?\d+)\/\/(-?\d+))\s+((-?\d+)\/\/(-?\d+))(?:\s+((-?\d+)\/\/(-?\d+)))?/,k=/^[og]\s+(.+)/,S=/^s\s+([01]|on|off)/,E=e.split("\n"),I=0;I<E.length;I++){var T,C=E[I];if(0!==(C=C.trim()).length&&"#"!==C.charAt(0))if(null!==(T=m.exec(C)))s.push(parseFloat(T[1]),parseFloat(T[2]),parseFloat(T[3]));else if(null!==(T=g.exec(C)))i.push(parseFloat(T[1]),parseFloat(T[2]),parseFloat(T[3]));else if(null!==(T=y.exec(C)))a.push(parseFloat(T[1]),parseFloat(T[2]));else if(null!==(T=b.exec(C)))f(T[1],T[2],T[3],T[4]);else if(null!==(T=v.exec(C)))f(T[2],T[5],T[8],T[11],T[3],T[6],T[9],T[12]);else if(null!==(T=x.exec(C)))f(T[2],T[6],T[10],T[14],T[3],T[7],T[11],T[15],T[4],T[8],T[12],T[16]);else if(null!==(T=w.exec(C)))f(T[2],T[5],T[8],T[11],void 0,void 0,void 0,void 0,T[3],T[6],T[9],T[12]);else if(null!==(T=k.exec(C))){var N=T[1].trim();!1===r?(r=!0,t.name=N):o(N)}else/^usemtl /.test(C)?t.material.name=C.substring(7).trim():/^mtllib /.test(C)||null!==(T=S.exec(C))&&(t.material.smooth="1"===T[1]||"on"===T[1])}for(var A=new THREE.Group,M=(I=0,n.length);I<M;I++){var _,R=(t=n[I]).geometry,D=new THREE.BufferGeometry;D.addAttribute("position",new THREE.BufferAttribute(new Float32Array(R.vertices),3)),R.normals.length>0?D.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(R.normals),3)):D.computeVertexNormals(),R.uvs.length>0&&D.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(R.uvs),2)),null!==this.materials&&(_=this.materials.create(t.material.name)),_||((_=new THREE.MeshPhongMaterial).name=t.material.name),_.shading=t.material.smooth?THREE.SmoothShading:THREE.FlatShading;var $=new THREE.Mesh(D,_);$.name=t.name,A.add($)}return console.timeEnd("OBJLoader"),A}}},6594:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Pathfinding:()=>m});var r=function(){};r.computeCentroids=function(e){var t,n,r;for(t=0,n=e.faces.length;t<n;t++)(r=e.faces[t]).centroid=new THREE.Vector3(0,0,0),r.centroid.add(e.vertices[r.a]),r.centroid.add(e.vertices[r.b]),r.centroid.add(e.vertices[r.c]),r.centroid.divideScalar(3)},r.roundNumber=function(e,t){return Number(e.toFixed(t))},r.sample=function(e){return e[Math.floor(Math.random()*e.length)]},r.mergeVertexIds=function(e,t){var n=[];if(e.forEach((function(e){t.indexOf(e)>=0&&n.push(e)})),n.length<2)return[];n.includes(e[0])&&n.includes(e[e.length-1])&&e.push(e.shift()),n.includes(t[0])&&n.includes(t[t.length-1])&&t.push(t.shift()),n=[],e.forEach((function(e){t.includes(e)&&n.push(e)}));for(var r=n[1],s=n[0],i=e.slice();i[0]!==r;)i.push(i.shift());for(var a=0,o=t.slice();o[0]!==s;)if(o.push(o.shift()),a++>10)throw new Error("Unexpected state");return o.shift(),o.pop(),i.concat(o)},r.setPolygonCentroid=function(e,t){var n=new THREE.Vector3,r=t.vertices;e.vertexIds.forEach((function(e){n.add(r[e])})),n.divideScalar(e.vertexIds.length),e.centroid.copy(n)},r.cleanPolygon=function(e,t){for(var n=[],r=t.vertices,s=0;s<e.vertexIds.length;s++){var i,a,o,l=r[e.vertexIds[s]];0===s?(i=e.vertexIds[1],a=e.vertexIds[e.vertexIds.length-1]):s===e.vertexIds.length-1?(i=e.vertexIds[0],a=e.vertexIds[e.vertexIds.length-2]):(i=e.vertexIds[s+1],a=e.vertexIds[s-1]),o=r[a];var u=r[i].clone().sub(l),c=o.clone().sub(l),h=u.angleTo(c);if(h>Math.PI-.01&&h<Math.PI+.01){var d=[];e.neighbours.forEach((function(t){t.vertexIds.includes(e.vertexIds[s])||d.push(t)})),e.neighbours=d}else n.push(e.vertexIds[s])}e.vertexIds=n,this.setPolygonCentroid(e,t)},r.isConvex=function(e,t){var n=t.vertices;if(e.vertexIds.length<3)return!1;for(var r=!0,s=[],i=0;i<e.vertexIds.length;i++){var a,o,l=n[e.vertexIds[i]];0===i?(a=n[e.vertexIds[1]],o=n[e.vertexIds[e.vertexIds.length-1]]):i===e.vertexIds.length-1?(a=n[e.vertexIds[0]],o=n[e.vertexIds[e.vertexIds.length-2]]):(a=n[e.vertexIds[i+1]],o=n[e.vertexIds[i-1]]);var u=a.clone().sub(l),c=o.clone().sub(l),h=u.angleTo(c);if(h===Math.PI||0===h)return!1;var d=u.cross(c).y;s.push(d)}return s.forEach((function(e){0===e&&(r=!1)})),s.forEach(s[0]>0?function(e){e<0&&(r=!1)}:function(e){e>0&&(r=!1)}),r},r.distanceToSquared=function(e,t){var n=e.x-t.x,r=e.y-t.y,s=e.z-t.z;return n*n+r*r+s*s},r.isPointInPoly=function(e,t){for(var n=!1,r=-1,s=e.length,i=s-1;++r<s;i=r)(e[r].z<=t.z&&t.z<e[i].z||e[i].z<=t.z&&t.z<e[r].z)&&t.x<(e[i].x-e[r].x)*(t.z-e[r].z)/(e[i].z-e[r].z)+e[r].x&&(n=!n);return n},r.isVectorInPolygon=function(e,t,n){var r=1e5,s=-1e5,i=[];return t.vertexIds.forEach((function(e){r=Math.min(n[e].y,r),s=Math.max(n[e].y,s),i.push(n[e])})),!!(e.y<s+.5&&e.y>r-.5&&this.isPointInPoly(i,e))},r.triarea2=function(e,t,n){return(n.x-e.x)*(t.z-e.z)-(t.x-e.x)*(n.z-e.z)},r.vequal=function(e,t){return this.distanceToSquared(e,t)<1e-5};var s=function(e){this.content=[],this.scoreFunction=e};s.prototype.push=function(e){this.content.push(e),this.sinkDown(this.content.length-1)},s.prototype.pop=function(){var e=this.content[0],t=this.content.pop();return this.content.length>0&&(this.content[0]=t,this.bubbleUp(0)),e},s.prototype.remove=function(e){var t=this.content.indexOf(e),n=this.content.pop();t!==this.content.length-1&&(this.content[t]=n,this.scoreFunction(n)<this.scoreFunction(e)?this.sinkDown(t):this.bubbleUp(t))},s.prototype.size=function(){return this.content.length},s.prototype.rescoreElement=function(e){this.sinkDown(this.content.indexOf(e))},s.prototype.sinkDown=function(e){for(var t=this.content[e];e>0;){var n=(e+1>>1)-1,r=this.content[n];if(!(this.scoreFunction(t)<this.scoreFunction(r)))break;this.content[n]=t,this.content[e]=r,e=n}},s.prototype.bubbleUp=function(e){for(var t=this.content.length,n=this.content[e],r=this.scoreFunction(n);;){var s=e+1<<1,i=s-1,a=null,o=void 0;if(i<t&&(o=this.scoreFunction(this.content[i]))<r&&(a=i),s<t&&this.scoreFunction(this.content[s])<(null===a?r:o)&&(a=s),null===a)break;this.content[e]=this.content[a],this.content[a]=n,e=a}};var i=function(){};i.init=function(e){for(var t=0;t<e.length;t++){var n=e[t];n.f=0,n.g=0,n.h=0,n.cost=1,n.visited=!1,n.closed=!1,n.parent=null}},i.cleanUp=function(e){for(var t=0;t<e.length;t++){var n=e[t];delete n.f,delete n.g,delete n.h,delete n.cost,delete n.visited,delete n.closed,delete n.parent}},i.heap=function(){return new s((function(e){return e.f}))},i.search=function(e,t,n){this.init(e);var r=this.heap();for(r.push(t);r.size()>0;){var s=r.pop();if(s===n){for(var i=s,a=[];i.parent;)a.push(i),i=i.parent;return this.cleanUp(a),a.reverse()}s.closed=!0;for(var o=this.neighbours(e,s),l=0,u=o.length;l<u;l++){var c=o[l];if(!c.closed){var h=s.g+c.cost,d=c.visited;if(!d||h<c.g){if(c.visited=!0,c.parent=s,!c.centroid||!n.centroid)throw new Error("Unexpected state");c.h=c.h||this.heuristic(c.centroid,n.centroid),c.g=h,c.f=c.g+c.h,d?r.rescoreElement(c):r.push(c)}}}}return[]},i.heuristic=function(e,t){return r.distanceToSquared(e,t)},i.neighbours=function(e,t){for(var n=[],r=0;r<t.neighbours.length;r++)n.push(e[t.neighbours[r]]);return n};var a=1,o=function(){};o.buildZone=function(e){var t=this,n=this._buildNavigationMesh(e),s={};n.vertices.forEach((function(e){e.x=r.roundNumber(e.x,2),e.y=r.roundNumber(e.y,2),e.z=r.roundNumber(e.z,2)})),s.vertices=n.vertices;var i=this._buildPolygonGroups(n);s.groups=[];var a=function(e,t){for(var n=0;n<e.length;n++)if(t===e[n])return n};return i.forEach((function(e){var n=[];e.forEach((function(s){var i=s.neighbours.map((function(t){return a(e,t)})),o=s.neighbours.map((function(e){return t._getSharedVerticesInOrder(s,e)}));s.centroid.x=r.roundNumber(s.centroid.x,2),s.centroid.y=r.roundNumber(s.centroid.y,2),s.centroid.z=r.roundNumber(s.centroid.z,2),n.push({id:a(e,s),neighbours:i,vertexIds:s.vertexIds,centroid:s.centroid,portals:o})})),s.groups.push(n)})),s},o._buildNavigationMesh=function(e){return r.computeCentroids(e),e.mergeVertices(),this._buildPolygonsFromGeometry(e)},o._buildPolygonGroups=function(e){var t=[],n=0,r=function(e){e.neighbours.forEach((function(t){void 0===t.group&&(t.group=e.group,r(t))}))};return e.polygons.forEach((function(e){void 0===e.group&&(e.group=n++,r(e)),t[e.group]||(t[e.group]=[]),t[e.group].push(e)})),t},o._buildPolygonNeighbours=function(e,t,n){var r=new Set,s=n.get(e.vertexIds[0]),i=n.get(e.vertexIds[1]),a=n.get(e.vertexIds[2]);s.forEach((function(e){(i.has(e)||a.has(e))&&r.add(t.polygons[e])})),i.forEach((function(e){a.has(e)&&r.add(t.polygons[e])})),e.neighbours=Array.from(r)},o._buildPolygonsFromGeometry=function(e){for(var t=this,n=[],r=e.vertices,s=e.faceVertexUvs,i=new Map,o=0;o<r.length;o++)i.set(o,new Set);e.faces.forEach((function(e){n.push({id:a++,vertexIds:[e.a,e.b,e.c],centroid:e.centroid,normal:e.normal,neighbours:[]}),i.get(e.a).add(n.length-1),i.get(e.b).add(n.length-1),i.get(e.c).add(n.length-1)}));var l={polygons:n,vertices:r,faceVertexUvs:s};return n.forEach((function(e){t._buildPolygonNeighbours(e,l,i)})),l},o._getSharedVerticesInOrder=function(e,t){var n=e.vertexIds,r=t.vertexIds,s=new Set;if(n.forEach((function(e){r.includes(e)&&s.add(e)})),s.size<2)return[];s.has(n[0])&&s.has(n[n.length-1])&&n.push(n.shift()),s.has(r[0])&&s.has(r[r.length-1])&&r.push(r.shift());var i=[];return n.forEach((function(e){r.includes(e)&&i.push(e)})),i};var l=function(){this.portals=[]};l.prototype.push=function(e,t){void 0===t&&(t=e),this.portals.push({left:e,right:t})},l.prototype.stringPull=function(){var e,t,n,s=this.portals,i=[],a=0,o=0,l=0;t=s[0].left,n=s[0].right,i.push(e=s[0].left);for(var u=1;u<s.length;u++){var c=s[u].left,h=s[u].right;if(r.triarea2(e,n,h)<=0){if(!(r.vequal(e,n)||r.triarea2(e,t,h)>0)){i.push(t),t=e=t,n=e,o=a=o,l=a,u=a;continue}n=h,l=u}if(r.triarea2(e,t,c)>=0){if(!(r.vequal(e,t)||r.triarea2(e,n,c)<0)){i.push(n),t=e=n,n=e,o=a=l,l=a,u=a;continue}t=c,o=u}}return 0!==i.length&&r.vequal(i[i.length-1],s[s.length-1].left)||i.push(s[s.length-1].left),this.path=i,i};var u,c,h,d,p,f,m=function(){this.zones={}};m.createZone=function(e){return o.buildZone(e)},m.prototype.setZoneData=function(e,t){this.zones[e]=t},m.prototype.getGroup=function(e,t){if(!this.zones[e])return null;var n=null,s=Math.pow(50,2);return this.zones[e].groups.forEach((function(e,i){e.forEach((function(e){var a=r.distanceToSquared(e.centroid,t);a<s&&(n=i,s=a)}))})),n},m.prototype.getRandomNode=function(e,t,n,s){if(!this.zones[e])return new THREE.Vector3;n=n||null,s=s||0;var i=[];return this.zones[e].groups[t].forEach((function(e){n&&s?r.distanceToSquared(n,e.centroid)<s*s&&i.push(e.centroid):i.push(e.centroid)})),r.sample(i)||new THREE.Vector3},m.prototype.getClosestNode=function(e,t,n,s){void 0===s&&(s=!1);var i=this.zones[t].vertices,a=null,o=1/0;return this.zones[t].groups[n].forEach((function(t){var n=r.distanceToSquared(t.centroid,e);n<o&&(!s||r.isVectorInPolygon(e,t,i))&&(a=t,o=n)})),a},m.prototype.findPath=function(e,t,n,r){var s=this.zones[n].groups[r],a=this.zones[n].vertices,o=this.getClosestNode(e,n,r),u=this.getClosestNode(t,n,r,!0);if(!o||!u)return null;var c=i.search(s,o,u),h=function(e,t){for(var n=0;n<e.neighbours.length;n++)if(e.neighbours[n]===t.id)return e.portals[n]},d=new l;d.push(e);for(var p=0;p<c.length;p++){var f=c[p+1];if(f){var m=h(c[p],f);d.push(a[m[0]],a[m[1]])}}d.push(t),d.stringPull();var g=d.path.map((function(e){return new THREE.Vector3(e.x,e.y,e.z)}));return g.shift(),g},m.prototype.clampStep=(h=new THREE.Vector3,d=new THREE.Plane,p=new THREE.Triangle,f=new THREE.Vector3,function(e,t,n,r,s,i){var a=this.zones[r].vertices,o=this.zones[r].groups[s],l=[n],m={};m[n.id]=0,u=void 0,f.set(0,0,0),c=1/0,d.setFromCoplanarPoints(a[n.vertexIds[0]],a[n.vertexIds[1]],a[n.vertexIds[2]]),d.projectPoint(t,h),t.copy(h);for(var g=l.pop();g;g=l.pop()){p.set(a[g.vertexIds[0]],a[g.vertexIds[1]],a[g.vertexIds[2]]),p.closestPointToPoint(t,h),h.distanceToSquared(t)<c&&(u=g,f.copy(h),c=h.distanceToSquared(t));var y=m[g];if(!(y>2))for(var b=0;b<g.neighbours.length;b++){var v=o[g.neighbours[b]];v.id in m||(l.push(v),m[v.id]=y+1)}}return i.copy(f),u})},6550:e=>{"use strict";var t;e.exports=(t=window&&window.performance)&&t.now?t.now.bind(t):function(){return(new Date).getTime()}},9985:function(e,t){var n;!function(e){if("performance"in e==0&&(e.performance={}),Date.now=Date.now||function(){return(new Date).getTime()},"now"in e.performance==0){var t=e.performance.timing&&e.performance.timing.navigationStart?performance.timing.navigationStart:Date.now();e.performance.now=function(){return Date.now()-t}}}(this);var r,s,i=i||(r=[],{REVISION:"14",getAll:function(){return r},removeAll:function(){r=[]},add:function(e){r.push(e)},remove:function(e){var t=r.indexOf(e);-1!==t&&r.splice(t,1)},update:function(e){if(0===r.length)return!1;var t=0;for(e=void 0!==e?e:window.performance.now();t<r.length;)r[t].update(e)?t++:r.splice(t,1);return!0}});i.Tween=function(e){var t=e,n={},r={},s={},a=1e3,o=0,l=!1,u=!1,c=!1,h=0,d=null,p=i.Easing.Linear.None,f=i.Interpolation.Linear,m=[],g=null,y=!1,b=null,v=null,x=null;for(var w in e)n[w]=parseFloat(e[w],10);this.to=function(e,t){return void 0!==t&&(a=t),r=e,this},this.start=function(e){for(var a in i.add(this),u=!0,y=!1,d=void 0!==e?e:window.performance.now(),d+=h,r){if(r[a]instanceof Array){if(0===r[a].length)continue;r[a]=[t[a]].concat(r[a])}n[a]=t[a],n[a]instanceof Array==0&&(n[a]*=1),s[a]=n[a]||0}return this},this.stop=function(){return u?(i.remove(this),u=!1,null!==x&&x.call(t),this.stopChainedTweens(),this):this},this.stopChainedTweens=function(){for(var e=0,t=m.length;e<t;e++)m[e].stop()},this.delay=function(e){return h=e,this},this.repeat=function(e){return o=e,this},this.yoyo=function(e){return l=e,this},this.easing=function(e){return p=e,this},this.interpolation=function(e){return f=e,this},this.chain=function(){return m=arguments,this},this.onStart=function(e){return g=e,this},this.onUpdate=function(e){return b=e,this},this.onComplete=function(e){return v=e,this},this.onStop=function(e){return x=e,this},this.update=function(e){var i;if(e<d)return!0;!1===y&&(null!==g&&g.call(t),y=!0);var u=(e-d)/a,x=p(u=u>1?1:u);for(i in r){var w=n[i]||0,k=r[i];k instanceof Array?t[i]=f(k,x):("string"==typeof k&&(k=w+parseFloat(k,10)),"number"==typeof k&&(t[i]=w+(k-w)*x))}if(null!==b&&b.call(t,x),1==u){if(o>0){for(i in isFinite(o)&&o--,s){if("string"==typeof r[i]&&(s[i]=s[i]+parseFloat(r[i],10)),l){var S=s[i];s[i]=r[i],r[i]=S}n[i]=s[i]}return l&&(c=!c),d=e+h,!0}null!==v&&v.call(t);for(var E=0,I=m.length;E<I;E++)m[E].start(e);return!1}return!0}},i.Easing={Linear:{None:function(e){return e}},Quadratic:{In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}},Cubic:{In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}},Quartic:{In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}},Quintic:{In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}},Sinusoidal:{In:function(e){return 1-Math.cos(e*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return.5*(1-Math.cos(Math.PI*e))}},Exponential:{In:function(e){return 0===e?0:Math.pow(1024,e-1)},Out:function(e){return 1===e?1:1-Math.pow(2,-10*e)},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))}},Circular:{In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}},Elastic:{In:function(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),-n*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4))},Out:function(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),n*Math.pow(2,-10*e)*Math.sin((e-t)*(2*Math.PI)/.4)+1)},InOut:function(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),(e*=2)<1?n*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4)*-.5:n*Math.pow(2,-10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4)*.5+1)}},Back:{In:function(e){var t=1.70158;return e*e*((t+1)*e-t)},Out:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},InOut:function(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)}},Bounce:{In:function(e){return 1-i.Easing.Bounce.Out(1-e)},Out:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(e){return e<.5?.5*i.Easing.Bounce.In(2*e):.5*i.Easing.Bounce.Out(2*e-1)+.5}}},i.Interpolation={Linear:function(e,t){var n=e.length-1,r=n*t,s=Math.floor(r),a=i.Interpolation.Utils.Linear;return t<0?a(e[0],e[1],r):t>1?a(e[n],e[n-1],n-r):a(e[s],e[s+1>n?n:s+1],r-s)},Bezier:function(e,t){var n,r=0,s=e.length-1,a=Math.pow,o=i.Interpolation.Utils.Bernstein;for(n=0;n<=s;n++)r+=a(1-t,s-n)*a(t,n)*e[n]*o(s,n);return r},CatmullRom:function(e,t){var n=e.length-1,r=n*t,s=Math.floor(r),a=i.Interpolation.Utils.CatmullRom;return e[0]===e[n]?(t<0&&(s=Math.floor(r=n*(1+t))),a(e[(s-1+n)%n],e[s],e[(s+1)%n],e[(s+2)%n],r-s)):t<0?e[0]-(a(e[0],e[0],e[1],e[1],-r)-e[0]):t>1?e[n]-(a(e[n],e[n],e[n-1],e[n-1],r-n)-e[n]):a(e[s?s-1:0],e[s],e[n<s+1?n:s+1],e[n<s+2?n:s+2],r-s)},Utils:{Linear:function(e,t,n){return(t-e)*n+e},Bernstein:function(e,t){var n=i.Interpolation.Utils.Factorial;return n(e)/n(t)/n(e-t)},Factorial:(s=[1],function(e){var t,n=1;if(s[e])return s[e];for(t=e;t>1;t--)n*=t;return s[e]=n}),CatmullRom:function(e,t,n,r,s){var i=.5*(n-e),a=.5*(r-t),o=s*s;return(2*t-2*n+i+a)*(s*o)+(-3*t+3*n-2*i-a)*o+i*s+t}}},void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n)},4260:()=>{!function e(t,n,r){function s(a,o){if(!n[a]){if(!t[a]){if(i)return i(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var u=n[a]={exports:{}};t[a][0].call(u.exports,(function(e){return s(t[a][1][e]||e)}),u,u.exports,e,t,n,r)}return n[a].exports}for(var i=void 0,a=0;a<r.length;a++)s(r[a]);return s}({1:[function(e,t,n){function r(){this.hardwareUnitId="webvr-polyfill hardwareUnitId",this.deviceId="webvr-polyfill deviceId",this.deviceName="webvr-polyfill deviceName"}function s(){}function i(){}s.prototype=new r,i.prototype=new r,t.exports.VRDevice=r,t.exports.HMDVRDevice=s,t.exports.PositionSensorVRDevice=i},{}],2:[function(e,t,n){var r=e("./base.js").HMDVRDevice,s=.06,i=40,a=40,o=40;function l(){this.fov={upDegrees:o,downDegrees:a,leftDegrees:i,rightDegrees:i},this.eyeTranslationLeft={x:-.5*s,y:0,z:0},this.eyeTranslationRight={x:.5*s,y:0,z:0}}l.prototype=new r,l.prototype.getEyeParameters=function(e){var t;if("left"==e)t=this.eyeTranslationLeft;else{if("right"!=e)return console.error("Invalid eye provided: %s",e),null;t=this.eyeTranslationRight}return{recommendedFieldOfView:this.fov,eyeTranslation:t}},t.exports=l},{"./base.js":1}],3:[function(e,t,n){var r=e("./sensor-sample.js"),s=e("./three-math.js"),i=e("./util.js");function a(e){this.kFilter=e,this.currentAccelMeasurement=new r,this.currentGyroMeasurement=new r,this.previousGyroMeasurement=new r,this.filterQ=new s.Quaternion,this.previousFilterQ=new s.Quaternion,this.accelQ=new s.Quaternion,this.isOrientationInitialized=!1,this.estimatedGravity=new s.Vector3,this.measuredGravity=new s.Vector3,this.gyroIntegralQ=new s.Quaternion}a.prototype.addAccelMeasurement=function(e,t){this.currentAccelMeasurement.set(e,t)},a.prototype.addGyroMeasurement=function(e,t){this.currentGyroMeasurement.set(e,t);var n=t-this.previousGyroMeasurement.timestampS;i.isTimestampDeltaValid(n)&&this.run_(),this.previousGyroMeasurement.copy(this.currentGyroMeasurement)},a.prototype.run_=function(){if(!this.isOrientationInitialized)return this.accelQ=this.accelToQuaternion_(this.currentAccelMeasurement.sample),this.previousFilterQ.copy(this.accelQ),void(this.isOrientationInitialized=!0);var e=this.currentGyroMeasurement.timestampS-this.previousGyroMeasurement.timestampS,t=this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample,e);this.gyroIntegralQ.multiply(t),this.filterQ.copy(this.previousFilterQ),this.filterQ.multiply(t);var n=new s.Quaternion;n.copy(this.filterQ),n.inverse(),this.estimatedGravity.set(0,0,-1),this.estimatedGravity.applyQuaternion(n),this.estimatedGravity.normalize(),this.measuredGravity.copy(this.currentAccelMeasurement.sample),this.measuredGravity.normalize();var r=new s.Quaternion;r.setFromUnitVectors(this.estimatedGravity,this.measuredGravity),r.inverse();var i=new s.Quaternion;i.copy(this.filterQ),i.multiply(r),this.filterQ.slerp(i,1-this.kFilter),this.previousFilterQ.copy(this.filterQ)},a.prototype.getOrientation=function(){return this.filterQ},a.prototype.accelToQuaternion_=function(e){var t=new s.Vector3;t.copy(e),t.normalize();var n=new s.Quaternion;return n.setFromUnitVectors(new s.Vector3(0,0,-1),t),n.inverse(),n},a.prototype.gyroToQuaternionDelta_=function(e,t){var n=new s.Quaternion,r=new s.Vector3;return r.copy(e),r.normalize(),n.setFromAxisAngle(r,e.length()*t),n},t.exports=a},{"./sensor-sample.js":8,"./three-math.js":9,"./util.js":11}],4:[function(e,t,n){var r=e("./base.js").PositionSensorVRDevice,s=e("./complementary-filter.js"),i=e("./pose-predictor.js"),a=e("./touch-panner.js"),o=e("./three-math.js"),l=e("./util.js");function u(){this.deviceId="webvr-polyfill:fused",this.deviceName="VR Position Device (webvr-polyfill:fused)",this.accelerometer=new o.Vector3,this.gyroscope=new o.Vector3,window.addEventListener("devicemotion",this.onDeviceMotionChange_.bind(this)),window.addEventListener("orientationchange",this.onScreenOrientationChange_.bind(this)),this.filter=new s(WebVRConfig.K_FILTER||.98),this.posePredictor=new i(WebVRConfig.PREDICTION_TIME_S||.04),this.touchPanner=new a,this.filterToWorldQ=new o.Quaternion,l.isIOS()?this.filterToWorldQ.setFromAxisAngle(new o.Vector3(1,0,0),Math.PI/2):this.filterToWorldQ.setFromAxisAngle(new o.Vector3(1,0,0),-Math.PI/2),this.worldToScreenQ=new o.Quaternion,this.setScreenTransform_(),this.resetQ=new o.Quaternion,this.isFirefoxAndroid=l.isFirefoxAndroid(),this.isIOS=l.isIOS()}u.prototype=new r,u.prototype.getState=function(){return{hasOrientation:!0,orientation:this.getOrientation(),hasPosition:!1,position:null}},u.prototype.getOrientation=function(){var e=this.filter.getOrientation();this.predictedQ=this.posePredictor.getPrediction(e,this.gyroscope,this.previousTimestampS);var t=new o.Quaternion;return t.copy(this.filterToWorldQ),t.multiply(this.resetQ),WebVRConfig.TOUCH_PANNER_DISABLED||t.multiply(this.touchPanner.getOrientation()),t.multiply(this.predictedQ),t.multiply(this.worldToScreenQ),WebVRConfig.YAW_ONLY&&(t.x=0,t.z=0,t.normalize()),t},u.prototype.resetSensor=function(){var e=new o.Euler;e.setFromQuaternion(this.filter.getOrientation());var t=e.y;console.log("resetSensor with yaw: %f",t),this.resetQ.setFromAxisAngle(new o.Vector3(0,0,1),-t),WebVRConfig.TOUCH_PANNER_DISABLED||this.touchPanner.resetSensor()},u.prototype.onDeviceMotionChange_=function(e){var t=e.accelerationIncludingGravity,n=e.rotationRate,r=e.timeStamp/1e3;this.isFirefoxAndroid&&(r/=1e3);var s=r-this.previousTimestampS;if(s<=l.MIN_TIMESTEP||s>l.MAX_TIMESTEP)return console.warn("Invalid timestamps detected. Time step between successive gyroscope sensor samples is very small or not monotonic"),void(this.previousTimestampS=r);this.accelerometer.set(-t.x,-t.y,-t.z),this.gyroscope.set(n.alpha,n.beta,n.gamma),(this.isIOS||this.isFirefoxAndroid)&&this.gyroscope.multiplyScalar(Math.PI/180),this.filter.addAccelMeasurement(this.accelerometer,r),this.filter.addGyroMeasurement(this.gyroscope,r),this.previousTimestampS=r},u.prototype.onScreenOrientationChange_=function(e){this.setScreenTransform_()},u.prototype.setScreenTransform_=function(){switch(this.worldToScreenQ.set(0,0,0,1),window.orientation){case 0:break;case 90:this.worldToScreenQ.setFromAxisAngle(new o.Vector3(0,0,1),-Math.PI/2);break;case-90:this.worldToScreenQ.setFromAxisAngle(new o.Vector3(0,0,1),Math.PI/2)}},t.exports=u},{"./base.js":1,"./complementary-filter.js":3,"./pose-predictor.js":7,"./three-math.js":9,"./touch-panner.js":10,"./util.js":11}],5:[function(e,t,n){var r=e("./webvr-polyfill.js");window.WebVRConfig=window.WebVRConfig||{},new r},{"./webvr-polyfill.js":12}],6:[function(e,t,n){var r=e("./base.js").PositionSensorVRDevice,s=e("./three-math.js"),i=e("./util.js"),a=.15;function o(){this.deviceId="webvr-polyfill:mouse-keyboard",this.deviceName="VR Position Device (webvr-polyfill:mouse-keyboard)",window.addEventListener("keydown",this.onKeyDown_.bind(this)),window.addEventListener("mousemove",this.onMouseMove_.bind(this)),window.addEventListener("mousedown",this.onMouseDown_.bind(this)),window.addEventListener("mouseup",this.onMouseUp_.bind(this)),this.phi=0,this.theta=0,this.targetAngle=null,this.euler=new s.Euler,this.orientation=new s.Quaternion,this.rotateStart=new s.Vector2,this.rotateEnd=new s.Vector2,this.rotateDelta=new s.Vector2}o.prototype=new r,o.prototype.getState=function(){return this.euler.set(this.phi,this.theta,0,"YXZ"),this.orientation.setFromEuler(this.euler),{hasOrientation:!0,orientation:this.orientation,hasPosition:!1,position:null}},o.prototype.onKeyDown_=function(e){38==e.keyCode?this.animatePhi_(this.phi+a):39==e.keyCode?this.animateTheta_(this.theta-a):40==e.keyCode?this.animatePhi_(this.phi-a):37==e.keyCode&&this.animateTheta_(this.theta+a)},o.prototype.animateTheta_=function(e){this.animateKeyTransitions_("theta",e)},o.prototype.animatePhi_=function(e){e=i.clamp(e,-Math.PI/2,Math.PI/2),this.animateKeyTransitions_("phi",e)},o.prototype.animateKeyTransitions_=function(e,t){this.angleAnimation&&clearInterval(this.angleAnimation);var n=this[e],r=new Date;this.angleAnimation=setInterval(function(){var s=new Date-r;if(s>=80)return this[e]=t,void clearInterval(this.angleAnimation);var i=s/80;this[e]=n+(t-n)*i}.bind(this),1e3/60)},o.prototype.onMouseDown_=function(e){this.rotateStart.set(e.clientX,e.clientY),this.isDragging=!0},o.prototype.onMouseMove_=function(e){if(this.isDragging||this.isPointerLocked_()){if(this.isPointerLocked_()){var t=e.movementX||e.mozMovementX||0,n=e.movementY||e.mozMovementY||0;this.rotateEnd.set(this.rotateStart.x-t,this.rotateStart.y-n)}else this.rotateEnd.set(e.clientX,e.clientY);this.rotateDelta.subVectors(this.rotateEnd,this.rotateStart),this.rotateStart.copy(this.rotateEnd);var r=document.body;this.phi+=2*Math.PI*this.rotateDelta.y/r.clientHeight*.3,this.theta+=2*Math.PI*this.rotateDelta.x/r.clientWidth*.5,this.phi=i.clamp(this.phi,-Math.PI/2,Math.PI/2)}},o.prototype.onMouseUp_=function(e){this.isDragging=!1},o.prototype.isPointerLocked_=function(){return void 0!==(document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement)},o.prototype.resetSensor=function(){console.error("Not implemented yet.")},t.exports=o},{"./base.js":1,"./three-math.js":9,"./util.js":11}],7:[function(e,t,n){var r=e("./three-math.js");function s(e){this.predictionTimeS=e,this.previousQ=new r.Quaternion,this.previousTimestampS=null,this.deltaQ=new r.Quaternion,this.outQ=new r.Quaternion}s.prototype.getPrediction=function(e,t,n){if(!this.previousTimestampS)return this.previousQ.copy(e),this.previousTimestampS=n,e;var s=new r.Vector3;s.copy(t),s.normalize();var i=t.length();if(i<r.Math.degToRad(20))return this.outQ.copy(e),this.previousQ.copy(e),this.outQ;this.previousTimestampS;var a=i*this.predictionTimeS;return this.deltaQ.setFromAxisAngle(s,a),this.outQ.copy(this.previousQ),this.outQ.multiply(this.deltaQ),this.previousQ.copy(e),this.outQ},t.exports=s},{"./three-math.js":9}],8:[function(e,t,n){function r(e,t){this.set(e,t)}r.prototype.set=function(e,t){this.sample=e,this.timestampS=t},r.prototype.copy=function(e){this.set(e.sample,e.timestampS)},t.exports=r},{}],9:[function(e,t,n){var r,s,i,a,o,l,u,c,h,d=window.THREE||{};d.Quaternion&&d.Vector3&&d.Vector2&&d.Euler&&d.Math||(console.log("No THREE.js found."),d.Quaternion=function(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==r?r:1},d.Quaternion.prototype={constructor:d.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this.onChangeCallback(),this},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(e instanceof d.Euler==0)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var n=Math.cos(e._x/2),r=Math.cos(e._y/2),s=Math.cos(e._z/2),i=Math.sin(e._x/2),a=Math.sin(e._y/2),o=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=i*r*s+n*a*o,this._y=n*a*s-i*r*o,this._z=n*r*o+i*a*s,this._w=n*r*s-i*a*o):"YXZ"===e.order?(this._x=i*r*s+n*a*o,this._y=n*a*s-i*r*o,this._z=n*r*o-i*a*s,this._w=n*r*s+i*a*o):"ZXY"===e.order?(this._x=i*r*s-n*a*o,this._y=n*a*s+i*r*o,this._z=n*r*o+i*a*s,this._w=n*r*s-i*a*o):"ZYX"===e.order?(this._x=i*r*s-n*a*o,this._y=n*a*s+i*r*o,this._z=n*r*o-i*a*s,this._w=n*r*s+i*a*o):"YZX"===e.order?(this._x=i*r*s+n*a*o,this._y=n*a*s+i*r*o,this._z=n*r*o-i*a*s,this._w=n*r*s-i*a*o):"XZY"===e.order&&(this._x=i*r*s-n*a*o,this._y=n*a*s-i*r*o,this._z=n*r*o+i*a*s,this._w=n*r*s+i*a*o),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,n=e.elements,r=n[0],s=n[4],i=n[8],a=n[1],o=n[5],l=n[9],u=n[2],c=n[6],h=n[10],d=r+o+h;return d>0?(t=.5/Math.sqrt(d+1),this._w=.25/t,this._x=(c-l)*t,this._y=(i-u)*t,this._z=(a-s)*t):r>o&&r>h?(t=2*Math.sqrt(1+r-o-h),this._w=(c-l)/t,this._x=.25*t,this._y=(s+a)/t,this._z=(i+u)/t):o>h?(t=2*Math.sqrt(1+o-r-h),this._w=(i-u)/t,this._x=(s+a)/t,this._y=.25*t,this._z=(l+c)/t):(t=2*Math.sqrt(1+h-r-o),this._w=(a-s)/t,this._x=(i+u)/t,this._y=(l+c)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(e,t){return void 0===c&&(c=new d.Vector3),(h=e.dot(t)+1)<1e-6?(h=0,Math.abs(e.x)>Math.abs(e.z)?c.set(-e.y,e.x,0):c.set(0,-e.z,e.y)):c.crossVectors(e,t),this._x=c.x,this._y=c.y,this._z=c.z,this._w=h,this.normalize(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,s=e._z,i=e._w,a=t._x,o=t._y,l=t._z,u=t._w;return this._x=n*u+i*a+r*l-s*o,this._y=r*u+i*o+s*a-n*l,this._z=s*u+i*l+n*o-r*a,this._w=i*u-n*a-r*o-s*l,this.onChangeCallback(),this},multiplyVector3:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,s=this._z,i=this._w,a=i*e._w+n*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=i,this._x=n,this._y=r,this._z=s,this;var o=Math.acos(a),l=Math.sqrt(1-a*a);if(Math.abs(l)<.001)return this._w=.5*(i+this._w),this._x=.5*(n+this._x),this._y=.5*(r+this._y),this._z=.5*(s+this._z),this;var u=Math.sin((1-t)*o)/l,c=Math.sin(t*o)/l;return this._w=i*u+this._w*c,this._x=n*u+this._x*c,this._y=r*u+this._y*c,this._z=s*u+this._z*c,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new d.Quaternion(this._x,this._y,this._z,this._w)}},d.Quaternion.slerp=function(e,t,n,r){return n.copy(e).slerp(t,r)},d.Vector2=function(e,t){this.x=e||0,this.y=t||0},d.Vector2.prototype={constructor:d.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t}else this.x=0,this.y=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},clampScalar:function(e,t){return void 0===l&&(l=new d.Vector2,u=new d.Vector2),l.set(e,e),u.set(t,t),this.clamp(l,u)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,n){return void 0===n&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this},clone:function(){return new d.Vector2(this.x,this.y)}},d.Vector3=function(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0},d.Vector3.prototype={constructor:d.Vector3,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(e){return e instanceof d.Euler==0&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===o&&(o=new d.Quaternion),this.applyQuaternion(o.setFromEuler(e)),this},applyAxisAngle:function(){var e;return function(t,n){return void 0===e&&(e=new d.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,n)),this}}(),applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r+s[12],this.y=s[1]*t+s[5]*n+s[9]*r+s[13],this.z=s[2]*t+s[6]*n+s[10]*r+s[14],this},applyProjection:function(e){var t=this.x,n=this.y,r=this.z,s=e.elements,i=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*i,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*i,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*i,this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,s=e.x,i=e.y,a=e.z,o=e.w,l=o*t+i*r-a*n,u=o*n+a*t-s*r,c=o*r+s*n-i*t,h=-s*t-i*n-a*r;return this.x=l*o+h*-s+u*-a-c*-i,this.y=u*o+h*-i+c*-s-l*-a,this.z=c*o+h*-a+l*-i-u*-s,this},project:function(e){return void 0===a&&(a=new d.Matrix4),a.multiplyMatrices(e.projectionMatrix,a.getInverse(e.matrixWorld)),this.applyProjection(a)},unproject:function(){var e;return function(t){return void 0===e&&(e=new d.Matrix4),e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},clampScalar:function(){var e,t;return function(n,r){return void 0===e&&(e=new d.Vector3,t=new d.Vector3),e.set(n,n,n),t.set(r,r,r),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var n=this.x,r=this.y,s=this.z;return this.x=r*e.z-s*e.y,this.y=s*e.x-n*e.z,this.z=n*e.y-r*e.x,this},crossVectors:function(e,t){var n=e.x,r=e.y,s=e.z,i=t.x,a=t.y,o=t.z;return this.x=r*o-s*a,this.y=s*i-n*o,this.z=n*a-r*i,this},projectOnVector:function(){var e,t;return function(n){return void 0===e&&(e=new d.Vector3),e.copy(n).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new d.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new d.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(d.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r},setEulerFromRotationMatrix:function(e,t){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(e,t){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),n=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),r=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=n,this.z=r,this},setFromMatrixColumn:function(e,t){var n=4*e,r=t.elements;return this.x=r[n],this.y=r[n+1],this.z=r[n+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,n){return void 0===n&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this},clone:function(){return new d.Vector3(this.x,this.y,this.z)}},d.Euler=function(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._order=r||d.Euler.DefaultOrder},d.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],d.Euler.DefaultOrder="XYZ",d.Euler.prototype={constructor:d.Euler,_x:0,_y:0,_z:0,_order:d.Euler.DefaultOrder,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this.onChangeCallback(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var r=d.Math.clamp,s=e.elements,i=s[0],a=s[4],o=s[8],l=s[1],u=s[5],c=s[9],h=s[2],p=s[6],f=s[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(p,u),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(c,-1,1)),Math.abs(c)<.99999?(this._y=Math.atan2(o,f),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-h,i),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(p,-1,1)),Math.abs(p)<.99999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(l,i))):"ZYX"===t?(this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(p,f),this._z=Math.atan2(l,i)):(this._x=0,this._z=Math.atan2(-a,u))):"YZX"===t?(this._z=Math.asin(r(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-h,i)):(this._x=0,this._y=Math.atan2(o,f))):"XZY"===t?(this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(p,u),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-c,f),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==n&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(t,n,r){return void 0===e&&(e=new d.Matrix4),e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,n,r),this}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:(i=new d.Quaternion,function(e){i.setFromEuler(this),this.setFromQuaternion(i,e)}),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new d.Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new d.Euler(this._x,this._y,this._z,this._order)}},d.Math={generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),n=new Array(36),r=0;return function(){for(var s=0;s<36;s++)8==s||13==s||18==s||23==s?n[s]="-":14==s?n[s]="4":(r<=2&&(r=33554432+16777216*Math.random()|0),e=15&r,r>>=4,n[s]=t[19==s?3&e|8:e]);return n.join("")}}(),clamp:function(e,t,n){return e<t?t:e>n?n:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,n,r,s){return r+(e-t)*(s-r)/(n-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return Math.floor(this.randFloat(e,t))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:(s=Math.PI/180,function(e){return e*s}),radToDeg:(r=180/Math.PI,function(e){return e*r}),isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}}),t.exports=d},{}],10:[function(e,t,n){var r=e("./three-math.js"),s=e("./util.js");function i(){window.addEventListener("touchstart",this.onTouchStart_.bind(this)),window.addEventListener("touchmove",this.onTouchMove_.bind(this)),window.addEventListener("touchend",this.onTouchEnd_.bind(this)),this.isTouching=!1,this.rotateStart=new r.Vector2,this.rotateEnd=new r.Vector2,this.rotateDelta=new r.Vector2,this.theta=0,this.orientation=new r.Quaternion}i.prototype.getOrientation=function(){return this.orientation.setFromEuler(new r.Euler(0,0,this.theta)),this.orientation},i.prototype.resetSensor=function(){this.theta=0},i.prototype.onTouchStart_=function(e){1==e.touches.length&&(this.rotateStart.set(e.touches[0].pageX,e.touches[0].pageY),this.isTouching=!0)},i.prototype.onTouchMove_=function(e){if(this.isTouching){this.rotateEnd.set(e.touches[0].pageX,e.touches[0].pageY),this.rotateDelta.subVectors(this.rotateEnd,this.rotateStart),this.rotateStart.copy(this.rotateEnd),s.isIOS()&&(this.rotateDelta.x*=-1);var t=document.body;this.theta+=2*Math.PI*this.rotateDelta.x/t.clientWidth*.5}},i.prototype.onTouchEnd_=function(e){this.isTouching=!1},t.exports=i},{"./three-math.js":9,"./util.js":11}],11:[function(e,t,n){var r=window.Util||{};r.MIN_TIMESTEP=.001,r.MAX_TIMESTEP=1,r.clamp=function(e,t,n){return Math.min(Math.max(t,e),n)},r.isIOS=function(){return/iPad|iPhone|iPod/.test(navigator.platform)},r.isFirefoxAndroid=function(){return-1!==navigator.userAgent.indexOf("Firefox")&&-1!==navigator.userAgent.indexOf("Android")},r.isTimestampDeltaValid=function(e){return!(isNaN(e)||e<=r.MIN_TIMESTEP||e>r.MAX_TIMESTEP)},t.exports=r},{}],12:[function(e,t,n){var r=e("./cardboard-hmd-vr-device.js"),s=e("./fusion-position-sensor-vr-device.js"),i=e("./mouse-keyboard-position-sensor-vr-device.js"),a=e("./base.js").HMDVRDevice,o=e("./base.js").PositionSensorVRDevice;function l(){this.devices=[],this.isWebVRAvailable()||this.enablePolyfill()}l.prototype.isWebVRAvailable=function(){return"getVRDevices"in navigator||"mozGetVRDevices"in navigator},l.prototype.enablePolyfill=function(){this.isCardboardCompatible()&&this.devices.push(new r),this.isMobile()?this.devices.push(new s):WebVRConfig.MOUSE_KEYBOARD_CONTROLS_DISABLED||this.devices.push(new i),navigator.getVRDevices=this.getVRDevices.bind(this),window.HMDVRDevice=a,window.PositionSensorVRDevice=o},l.prototype.getVRDevices=function(){var e=this.devices;return new Promise((function(t,n){try{t(e)}catch(e){n(e)}}))},l.prototype.isMobile=function(){return/Android/i.test(navigator.userAgent)||/iPhone|iPad|iPod/i.test(navigator.userAgent)},l.prototype.isCardboardCompatible=function(){return this.isMobile()||WebVRConfig.FORCE_ENABLE_VR},t.exports=l},{"./base.js":1,"./cardboard-hmd-vr-device.js":2,"./fusion-position-sensor-vr-device.js":4,"./mouse-keyboard-position-sensor-vr-device.js":6}]},{},[5])},780:(e,t,n)=>{e.exports=function(){return n(9855)('/*! For license information please see compiler.worker.prod.js.LICENSE.txt */\n(()=>{var e={563:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>He,Acos:()=>je,Acosh:()=>qe,AdadeltaOptimizer:()=>Po,AdagradOptimizer:()=>Wo,AdamOptimizer:()=>Go,AdamaxOptimizer:()=>Yo,Add:()=>Ke,AddN:()=>Xe,All:()=>Ye,Any:()=>Je,ArgMax:()=>Ze,ArgMin:()=>Qe,Asin:()=>et,Asinh:()=>tt,Atan:()=>nt,Atan2:()=>rt,Atanh:()=>st,AvgPool:()=>at,AvgPool3D:()=>ot,AvgPool3DGrad:()=>lt,AvgPoolGrad:()=>it,BatchMatMul:()=>ut,BatchToSpaceND:()=>ct,Bincount:()=>ht,BroadcastTo:()=>pt,Callback:()=>$v,CallbackList:()=>Ty,Cast:()=>dt,Ceil:()=>ft,ClipByValue:()=>mt,Complex:()=>gt,ComplexAbs:()=>yt,Concat:()=>bt,Conv2D:()=>xt,Conv2DBackpropFilter:()=>wt,Conv2DBackpropInput:()=>kt,Conv3D:()=>vt,Conv3DBackpropFilterV2:()=>It,Conv3DBackpropInputV2:()=>Nt,Cos:()=>St,Cosh:()=>Ct,CropAndResize:()=>Tt,Cumsum:()=>$t,CustomCallback:()=>Ry,DataStorage:()=>U,DenseBincount:()=>Et,DepthToSpace:()=>At,DepthwiseConv2dNative:()=>Rt,DepthwiseConv2dNativeBackpropFilter:()=>Dt,DepthwiseConv2dNativeBackpropInput:()=>Ft,Diag:()=>_t,Dilation2D:()=>Ot,Dilation2DBackpropFilter:()=>Lt,Dilation2DBackpropInput:()=>Mt,ENV:()=>Ve,EarlyStopping:()=>Av,Elu:()=>Pt,EluGrad:()=>Bt,Environment:()=>Pe,Equal:()=>Vt,Erf:()=>Wt,Exp:()=>Ut,ExpandDims:()=>Gt,Expm1:()=>Ht,FFT:()=>jt,Fill:()=>qt,FlipLeftRight:()=>Kt,Floor:()=>Xt,FloorDiv:()=>Yt,FromPixels:()=>Ms,FusedBatchNorm:()=>Jt,FusedConv2D:()=>Ps,FusedDepthwiseConv2D:()=>Bs,GatherNd:()=>Qt,GatherV2:()=>Zt,GraphModel:()=>iN,Greater:()=>en,GreaterEqual:()=>tn,History:()=>Ay,IFFT:()=>sn,Identity:()=>nn,Imag:()=>rn,InputSpec:()=>my,IsFinite:()=>an,IsInf:()=>on,IsNan:()=>ln,KernelBackend:()=>G,LRN:()=>xn,LRNGrad:()=>wn,LayerVariable:()=>py,LayersModel:()=>zb,LeakyRelu:()=>un,Less:()=>cn,LessEqual:()=>hn,LinSpace:()=>pn,Log:()=>dn,Log1p:()=>fn,LogSoftmax:()=>bn,LogicalAnd:()=>mn,LogicalNot:()=>gn,LogicalOr:()=>yn,Max:()=>kn,MaxPool:()=>In,MaxPool3D:()=>Sn,MaxPool3DGrad:()=>Cn,MaxPoolGrad:()=>Nn,MaxPoolWithArgmax:()=>$n,Maximum:()=>vn,Mean:()=>Tn,Min:()=>En,Minimum:()=>An,MirrorPad:()=>Rn,Mod:()=>Dn,MomentumOptimizer:()=>Zo,Multinomial:()=>Fn,Multiply:()=>_n,Neg:()=>On,NonMaxSuppressionV3:()=>Ln,NonMaxSuppressionV4:()=>zn,NonMaxSuppressionV5:()=>Pn,NotEqual:()=>Mn,OP_SCOPE_SUFFIX:()=>qr,OneHot:()=>Wn,OnesLike:()=>Bn,Optimizer:()=>zo,Pack:()=>Vn,PadV2:()=>Un,Pool:()=>Gn,Pow:()=>Hn,Prelu:()=>jn,Prod:()=>qn,RMSPropOptimizer:()=>Qo,RNN:()=>Vx,Range:()=>Kn,Rank:()=>kr,Real:()=>Xn,RealDiv:()=>zt,Reciprocal:()=>Yn,Reduction:()=>Dp,Relu:()=>Jn,Relu6:()=>ss,Reshape:()=>Zn,ResizeBilinear:()=>ts,ResizeBilinearGrad:()=>ns,ResizeNearestNeighbor:()=>Qn,ResizeNearestNeighborGrad:()=>es,Reverse:()=>rs,RotateWithOffset:()=>Ls,Round:()=>as,Rsqrt:()=>is,SGDOptimizer:()=>Jo,ScatterNd:()=>os,Select:()=>ls,Selu:()=>us,Sequential:()=>Wb,Sigmoid:()=>fs,Sign:()=>ds,Sin:()=>hs,Sinh:()=>ps,Slice:()=>cs,Softmax:()=>ws,Softplus:()=>ms,SpaceToBatchND:()=>bs,SparseToDense:()=>Ns,SplitV:()=>xs,Sqrt:()=>gs,Square:()=>vs,SquaredDifference:()=>ks,Step:()=>Os,StridedSlice:()=>Ss,Sub:()=>Is,Sum:()=>ys,SymbolicTensor:()=>gy,Tan:()=>Cs,Tanh:()=>$s,Tensor:()=>xr,TensorBuffer:()=>mr,Tile:()=>Ts,TopK:()=>Es,Transpose:()=>As,Unique:()=>Rs,Unpack:()=>Ds,UnsortedSegmentSum:()=>Fs,Variable:()=>wr,ZerosLike:()=>_s,_FusedMatMul:()=>zs,abs:()=>Ho,acos:()=>el,acosh:()=>tl,add:()=>Io,addN:()=>nl,addStrict:()=>Rh,all:()=>sl,any:()=>rl,argMax:()=>al,argMin:()=>il,asin:()=>ol,asinh:()=>ll,atan:()=>ul,atan2:()=>cl,atanh:()=>hl,avgPool:()=>Cl,avgPool3d:()=>$l,backend:()=>ko,backend_util:()=>g,basicLSTMCell:()=>Dl,batchNorm:()=>_l,batchNorm2d:()=>Ol,batchNorm3d:()=>Ml,batchNorm4d:()=>Ll,batchToSpaceND:()=>Fl,bincount:()=>zl,booleanMaskAsync:()=>Nh,broadcastTo:()=>Pl,browser:()=>l,buffer:()=>Ga,callbacks:()=>Rv,cast:()=>Ha,ceil:()=>Bl,clipByValue:()=>Wl,clone:()=>ja,complex:()=>Xr,concat:()=>Tl,concat1d:()=>Vl,concat2d:()=>Ul,concat3d:()=>Gl,concat4d:()=>Hl,constraints:()=>b,conv1d:()=>ql,conv2d:()=>jl,conv2dTranspose:()=>Xl,conv3d:()=>Yl,conv3dTranspose:()=>Zl,copyRegisteredKernels:()=>Ys,cos:()=>Ql,cosh:()=>eu,cosineWindow:()=>Kh,cumsum:()=>tu,customGrad:()=>Oo,data:()=>W,denseBincount:()=>nu,deprecationWarn:()=>ro,depthToSpace:()=>su,depthwiseConv2d:()=>ru,deregisterOp:()=>Lv,device_util:()=>a,diag:()=>au,dilation2d:()=>iu,disableDeprecationWarnings:()=>so,dispose:()=>co,disposeVariables:()=>ao,div:()=>So,divNoNan:()=>uu,divStrict:()=>Dh,dot:()=>cu,dropout:()=>jh,elu:()=>hu,enableDebugMode:()=>no,enableProdMode:()=>to,enclosingPowerOfTwo:()=>qh,engine:()=>io,env:()=>Be,equal:()=>ou,equalStrict:()=>Sh,erf:()=>pu,exp:()=>du,expandDims:()=>fu,expm1:()=>mu,eye:()=>yu,fft:()=>eh,fill:()=>Bo,findBackend:()=>bo,findBackendFactory:()=>xo,floor:()=>bu,floorDiv:()=>No,fused:()=>f,gather:()=>xu,gatherND:()=>Hh,gather_util:()=>u,getBackend:()=>go,getGradient:()=>Gs,getKernel:()=>Us,getKernelsForBackend:()=>Hs,grad:()=>Ao,grads:()=>Ro,greater:()=>wu,greaterEqual:()=>ku,greaterEqualStrict:()=>Ch,greaterStrict:()=>$h,ifft:()=>th,imag:()=>vu,image:()=>Gp,inTopKAsync:()=>Xh,initializers:()=>x,input:()=>Hb,io:()=>i,irfft:()=>nh,isFinite:()=>Iu,isInf:()=>Nu,isNaN:()=>Su,keep:()=>ho,kernel_impls:()=>y,layers:()=>w,leakyRelu:()=>Cu,less:()=>$u,lessEqual:()=>Tu,lessEqualStrict:()=>Th,lessStrict:()=>Eh,linalg:()=>Hp,linspace:()=>Eu,loadGraphModel:()=>oN,loadLayersModel:()=>Gb,localResponseNormalization:()=>Au,log:()=>Ru,log1p:()=>Du,logSigmoid:()=>Ou,logSoftmax:()=>zu,logSumExp:()=>qu,logicalAnd:()=>Ku,logicalNot:()=>Xu,logicalOr:()=>Yu,logicalXor:()=>Ju,losses:()=>jp,matMul:()=>hi,math:()=>o,max:()=>Mu,maxPool:()=>Zu,maxPool3d:()=>Qu,maxPoolWithArgmax:()=>ec,maximum:()=>Xo,maximumStrict:()=>Fh,mean:()=>tc,memory:()=>oo,metrics:()=>k,min:()=>nc,minimum:()=>sc,minimumStrict:()=>_h,mirrorPad:()=>rc,mod:()=>ac,modStrict:()=>Oh,model:()=>Vb,models:()=>v,moments:()=>ic,movingAverage:()=>Vh,mul:()=>Co,mulStrict:()=>Mh,multiRNNCell:()=>oc,multinomial:()=>lc,neg:()=>Fu,nextFrame:()=>Yp,norm:()=>Wh,notEqual:()=>uc,notEqualStrict:()=>Ah,oneHot:()=>pi,ones:()=>hc,onesLike:()=>pc,op:()=>Kr,outerProduct:()=>dc,pad:()=>fc,pad1d:()=>mc,pad2d:()=>gc,pad3d:()=>yc,pad4d:()=>bc,pool:()=>wc,pow:()=>Vo,powStrict:()=>Lh,prelu:()=>kc,print:()=>qa,prod:()=>vc,profile:()=>lo,rand:()=>Ic,randomGamma:()=>Tc,randomNormal:()=>Ec,randomUniform:()=>Ac,range:()=>Rc,ready:()=>mo,real:()=>Dc,reciprocal:()=>Fc,registerBackend:()=>wo,registerCallbackConstructor:()=>jb,registerGradient:()=>qs,registerKernel:()=>js,registerOp:()=>Ov,regularizers:()=>I,relu:()=>_c,relu6:()=>Oc,removeBackend:()=>yo,reshape:()=>Sl,reverse:()=>Mc,reverse1d:()=>Lc,reverse2d:()=>zc,reverse3d:()=>Pc,reverse4d:()=>Bc,rfft:()=>rh,round:()=>Wc,rsqrt:()=>Vc,scalar:()=>Lo,scatterND:()=>Uh,scatter_util:()=>c,selu:()=>Uc,separableConv2d:()=>Gc,sequential:()=>Ub,serialization:()=>p,setBackend:()=>fo,setPlatform:()=>vo,setdiff1dAsync:()=>Hc,sigmoid:()=>El,sign:()=>jc,signal:()=>Up,sin:()=>qc,sinh:()=>Kc,slice:()=>Al,slice1d:()=>Xc,slice2d:()=>Yc,slice3d:()=>Jc,slice4d:()=>Zc,slice_util:()=>h,softmax:()=>Qc,softplus:()=>_u,spaceToBatchND:()=>xc,sparseToDense:()=>Gh,spectral:()=>Vp,split:()=>sh,sqrt:()=>$o,square:()=>To,squaredDifference:()=>ah,squaredDifferenceStrict:()=>zh,squeeze:()=>ih,stack:()=>oh,step:()=>lh,stridedSlice:()=>uh,sub:()=>Uo,subStrict:()=>Ph,sum:()=>Lu,sumOutType:()=>Tr,tan:()=>ch,tanh:()=>Rl,tensor:()=>Jr,tensor1d:()=>hh,tensor2d:()=>ph,tensor3d:()=>mi,tensor4d:()=>dh,tensor5d:()=>fh,tensor6d:()=>mh,tensor_util:()=>r,test_util:()=>d,tidy:()=>uo,tile:()=>gu,time:()=>po,topk:()=>gh,train:()=>Kp,transpose:()=>di,truncatedNormal:()=>yh,unique:()=>bh,unregisterGradient:()=>Xs,unregisterKernel:()=>Ks,unsortedSegmentSum:()=>xh,unstack:()=>wh,upcastType:()=>$r,util:()=>s,valueAndGrad:()=>Do,valueAndGrads:()=>Fo,variable:()=>kh,variableGrads:()=>_o,version:()=>vP,version_converter:()=>lN,version_core:()=>eo,version_layers:()=>pb,where:()=>lu,whereAsync:()=>Ih,zeros:()=>cc,zerosLike:()=>Eo});var s={};n.r(s),n.d(s,{arraysEqual:()=>re,assert:()=>Z,assertNonNegativeIntegerDimensions:()=>_e,assertNonNull:()=>ee,assertShapesMatch:()=>Q,bytesFromStringArray:()=>ke,bytesPerElement:()=>we,checkConversionForErrors:()=>ge,clamp:()=>q,computeStrides:()=>Te,createScalarValue:()=>ur,createShuffledIndices:()=>le,decodeString:()=>fr,distSquared:()=>J,encodeString:()=>dr,fetch:()=>pr,flatten:()=>te,getArrayFromDType:()=>me,getTypedArrayFromDType:()=>fe,hasEncodingLoss:()=>be,indexToLoc:()=>Me,inferDtype:()=>Se,inferFromImplicitShape:()=>he,isBoolean:()=>Ie,isFunction:()=>Ce,isInt:()=>ae,isNumber:()=>Ne,isPromise:()=>Le,isScalarShape:()=>se,isString:()=>ve,isTypedArray:()=>xe,isValidDtype:()=>ye,locToIndex:()=>Oe,makeOnesTypedArray:()=>Re,makeZerosNestedTypedArray:()=>Fe,makeZerosTypedArray:()=>De,nearestDivisor:()=>$e,nearestLargerEven:()=>K,now:()=>hr,parseAxisParam:()=>pe,randUniform:()=>Y,repeatedTry:()=>ce,rightPad:()=>ue,shuffle:()=>j,sizeFromShape:()=>ne,sizeToSquarishShape:()=>oe,squeezeShape:()=>de,sum:()=>X,tanh:()=>ie,toNestedArray:()=>Ae,toTypedArray:()=>cr});var r={};n.r(r),n.d(r,{assertTypesMatch:()=>Ar,getTensorsInContainer:()=>Dr,isTensorInList:()=>Rr,makeTypesMatch:()=>Er});var a={};n.r(a),n.d(a,{isBrowser:()=>Br,isMobile:()=>Pr});var i={};n.r(i),n.d(i,{browserFiles:()=>Ja,browserHTTPRequest:()=>ii,concatenateArrayBuffers:()=>aa,copyModel:()=>Ba,decodeWeights:()=>ta,encodeWeights:()=>ea,fromMemory:()=>ui,getLoadHandlers:()=>da,getModelArtifactsInfoForJSON:()=>oa,getSaveHandlers:()=>pa,http:()=>ai,isHTTPScheme:()=>si,listModels:()=>za,loadWeights:()=>ei,moveModel:()=>Wa,registerLoadRouter:()=>ha,registerSaveRouter:()=>ca,removeModel:()=>Pa,weightsLoaderFactory:()=>ti,withSaveHandler:()=>ci});var o={};n.r(o),n.d(o,{confusionMatrix:()=>fi});var l={};n.r(l),n.d(l,{fromPixels:()=>bi,toPixels:()=>yi});var u={};n.r(u),n.d(u,{prepareAndValidate:()=>xi});var c={};n.r(c),n.d(c,{calculateShapes:()=>vi,validateInput:()=>ki,validateUpdateShape:()=>wi});var h={};n.r(h),n.d(h,{assertParamsValid:()=>Ii,computeFlatOffset:()=>Mi,computeOutShape:()=>Si,getNormalizedAxes:()=>Ei,isSliceContinous:()=>Oi,maskToAxes:()=>Ni,parseSliceParams:()=>Li,sliceInfo:()=>zi,startForAxis:()=>Fi,startIndicesWithElidedDims:()=>Ai,stopForAxis:()=>_i,stopIndicesWithElidedDims:()=>Ri,stridesForAxis:()=>Di,stridesWithElidedDims:()=>Ci});var p={};n.r(p),n.d(p,{Serializable:()=>Pi,SerializationMap:()=>Bi,registerClass:()=>Wi});var d={};n.r(d),n.d(d,{TEST_EPSILON_FLOAT16:()=>Ui,encodeStrings:()=>Qi,expectArrayBuffersEqual:()=>Zi,expectArraysClose:()=>Gi,expectArraysEqual:()=>Ki,expectNumbersClose:()=>Xi,expectPromiseToFail:()=>qi,expectValuesInRange:()=>Ji,testEpsilon:()=>Hi});var f={};n.r(f),n.d(f,{conv2d:()=>tp,depthwiseConv2d:()=>rp,matMul:()=>ap});var m={};n.r(m),n.d(m,{collectGatherOpShapeInfo:()=>Td,computeOutShape:()=>$d,segOpComputeOptimalWindowSize:()=>Cd});var g={};n.r(g),n.d(g,{ERF_A1:()=>cd,ERF_A2:()=>hd,ERF_A3:()=>pd,ERF_A4:()=>dd,ERF_A5:()=>fd,ERF_P:()=>ud,PARALLELIZE_THRESHOLD:()=>Qp,SELU_SCALE:()=>ld,SELU_SCALEALPHA:()=>od,applyActivation:()=>Qh,assertAndGetBroadcastShape:()=>Ko,assertAxesAreInnerMostDims:()=>Uu,assertParamsConsistent:()=>Jp,assignToTypedArray:()=>vd,axesAreInnerMostDims:()=>Pu,calculateShapes:()=>vi,castTensor:()=>Ed,combineLocations:()=>Bu,complexWithEvenIndex:()=>xd,complexWithOddIndex:()=>wd,computeConv2DInfo:()=>ml,computeConv3DInfo:()=>gl,computeDefaultPad:()=>yl,computeDilation2DInfo:()=>pl,computeOptimalWindowSize:()=>ed,computeOutAndReduceShapes:()=>Wu,computeOutShape:()=>Zp,computePool2DInfo:()=>dl,computePool3DInfo:()=>fl,convertConv2DDataFormat:()=>Nl,eitherStridesOrDilationsAreOne:()=>Il,expandShapeToKeepDim:()=>Vu,exponent:()=>Nd,exponents:()=>Id,fromStringArrayToUint8:()=>Dd,fromUint8ToStringArray:()=>Rd,getAxesPermutation:()=>Gu,getBroadcastDims:()=>jo,getComplexWithIndex:()=>kd,getFusedBiasGradient:()=>Zh,getFusedDyActivation:()=>Jh,getImageCenter:()=>td,getInnerMostAxes:()=>ju,getPermuted:()=>sd,getReductionAxes:()=>qo,getReshaped:()=>nd,getReshapedPermuted:()=>rd,getSliceBeginCoords:()=>ad,getSliceSize:()=>id,getUndoAxesPermutation:()=>Hu,log:()=>gd,mergeRealAndImagArrays:()=>yd,prepareAndValidate:()=>xi,prepareSplitSize:()=>Sd,reshapeTensor:()=>Ad,segment_util:()=>m,shouldFuse:()=>ep,slice_util:()=>h,splitRealAndImagArrays:()=>bd,tupleValuesAreOne:()=>vl,upcastType:()=>$r,validateInput:()=>ki,validateUpdateShape:()=>wi,warn:()=>md});var y={};n.r(y),n.d(y,{nonMaxSuppressionV3Impl:()=>yp,nonMaxSuppressionV4Impl:()=>bp,nonMaxSuppressionV5Impl:()=>xp,whereImpl:()=>vh});var b={};n.r(b),n.d(b,{maxNorm:()=>Dm,minMaxNorm:()=>Om,nonNeg:()=>_m,unitNorm:()=>Fm});var x={};n.r(x),n.d(x,{constant:()=>Ug,glorotNormal:()=>Yg,glorotUniform:()=>Xg,heNormal:()=>Jg,heUniform:()=>Zg,identity:()=>qg,leCunNormal:()=>Qg,leCunUniform:()=>ey,ones:()=>Vg,orthogonal:()=>ty,randomNormal:()=>Hg,randomUniform:()=>Gg,truncatedNormal:()=>jg,varianceScaling:()=>Kg,zeros:()=>Wg});var w={};n.r(w),n.d(w,{Layer:()=>wy,RNN:()=>Vx,RNNCell:()=>Ux,activation:()=>lk,add:()=>yk,alphaDropout:()=>ov,average:()=>bk,averagePooling1d:()=>$k,averagePooling2d:()=>Ak,averagePooling3d:()=>Fk,avgPool1d:()=>Tk,avgPool2d:()=>Rk,avgPool3d:()=>_k,avgPooling1d:()=>Ek,avgPooling2d:()=>Dk,avgPooling3d:()=>Ok,batchNormalization:()=>Nk,bidirectional:()=>Qk,concatenate:()=>xk,conv1d:()=>ek,conv2d:()=>tk,conv2dTranspose:()=>nk,conv3d:()=>sk,convLstm2d:()=>Xk,convLstm2dCell:()=>Yk,cropping2D:()=>ak,dense:()=>uk,depthwiseConv2d:()=>ok,dot:()=>Ik,dropout:()=>ck,elu:()=>Kw,embedding:()=>gk,flatten:()=>pk,gaussianDropout:()=>iv,gaussianNoise:()=>av,globalAveragePooling1d:()=>Mk,globalAveragePooling2d:()=>Lk,globalMaxPool1d:()=>tv,globalMaxPool2d:()=>nv,globalMaxPooling1d:()=>zk,globalMaxPooling2d:()=>Pk,gru:()=>Uk,gruCell:()=>Gk,input:()=>Hb,inputLayer:()=>qw,layerNormalization:()=>Sk,leakyReLU:()=>Yw,lstm:()=>Hk,lstmCell:()=>jk,masking:()=>lv,maxPool1d:()=>sv,maxPool2d:()=>rv,maxPooling1d:()=>Bk,maxPooling2d:()=>Wk,maxPooling3d:()=>Vk,maximum:()=>wk,minimum:()=>kk,multiply:()=>vk,permute:()=>mk,prelu:()=>Jw,reLU:()=>Xw,repeatVector:()=>dk,reshape:()=>fk,rnn:()=>Jk,separableConv2d:()=>rk,simpleRNN:()=>qk,simpleRNNCell:()=>Kk,softmax:()=>Zw,spatialDropout1d:()=>hk,stackedRNNCells:()=>Zk,thresholdedReLU:()=>Qw,timeDistributed:()=>ev,upSampling2d:()=>ik,zeroPadding2d:()=>Ck});var k={};n.r(k),n.d(k,{MAPE:()=>xv,MSE:()=>vv,binaryAccuracy:()=>uv,binaryCrossentropy:()=>cv,categoricalAccuracy:()=>pv,categoricalCrossentropy:()=>dv,cosineProximity:()=>gv,mape:()=>wv,meanAbsoluteError:()=>yv,meanAbsolutePercentageError:()=>bv,meanSquaredError:()=>kv,mse:()=>Iv,precision:()=>fv,recall:()=>mv,sparseCategoricalAccuracy:()=>hv});var v={};n.r(v),n.d(v,{modelFromJSON:()=>Bb});var I={};n.r(I),n.d(I,{l1:()=>Sv,l1l2:()=>Nv,l2:()=>Cv});var N={};n.r(N),n.d(N,{json:()=>Hv});var S={};n.r(S),n.d(S,{json:()=>jv});var C={};n.r(C),n.d(C,{json:()=>qv});var $={};n.r($),n.d($,{json:()=>Kv});var T={};n.r(T),n.d(T,{json:()=>Xv});var E={};n.r(E),n.d(E,{json:()=>Yv});var A={};n.r(A),n.d(A,{json:()=>Jv});var R={};n.r(R),n.d(R,{json:()=>Zv});var D={};n.r(D),n.d(D,{json:()=>Qv});var F={};n.r(F),n.d(F,{json:()=>eI});var _={};n.r(_),n.d(_,{json:()=>tI});var O={};n.r(O),n.d(O,{json:()=>nI});var M={};n.r(M),n.d(M,{json:()=>sI});var L={};n.r(L),n.d(L,{json:()=>rI});var z={};n.r(z),n.d(z,{json:()=>aI});var P={};n.r(P),n.d(P,{json:()=>iI});var B={};n.r(B),n.d(B,{json:()=>oI});var W={};n.r(W),n.d(W,{CSVDataset:()=>YN,Dataset:()=>zN,FileDataSource:()=>lS,TextLineDataset:()=>UN,URLDataSource:()=>uS,array:()=>BN,csv:()=>cS,func:()=>hS,generator:()=>pS,microphone:()=>fS,version_data:()=>mS,webcam:()=>dS,zip:()=>WN});var V={};n.r(V),n.d(V,{addImpl:()=>HS,bincountImpl:()=>LC,bincountReduceImpl:()=>zC,ceilImpl:()=>WC,concatImpl:()=>qC,expImpl:()=>F$,expm1Impl:()=>z$,floorImpl:()=>aT,gatherV2Impl:()=>fT,greaterImpl:()=>gT,lessImpl:()=>ET,linSpaceImpl:()=>OT,logImpl:()=>LT,maxImpl:()=>ZT,maximumImpl:()=>tE,minimumImpl:()=>dE,multiplyImpl:()=>W$,negImpl:()=>IE,notEqualImpl:()=>RE,prodImpl:()=>GE,rangeImpl:()=>jE,rsqrtImpl:()=>rA,simpleAbsImpl:()=>eC,sliceImpl:()=>FC,squaredDifferenceImpl:()=>RA,stridedSliceImpl:()=>MA,subImpl:()=>K$,tileImpl:()=>WA,topKImpl:()=>UA,transposeImpl:()=>oC,uniqueImpl:()=>HA});class U{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class G{decComplexRef(e){}time(e){return H("time")}read(e){return H("read")}readSync(e){return H("readSync")}numDataIds(){return H("numDataIds")}disposeData(e){return H("disposeData")}write(e,t,n){return H("write")}move(e,t,n,s){return H("move")}memory(){return H("memory")}floatPrecision(){return H("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,s){return H("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:s,bias:r,activation:a,preluActivationWeights:i}){return H("fusedBatchMatMul")}slice(e,t,n){return H("slice")}stridedSlice(e,t,n,s){return H("stridedSlice")}unstack(e,t){return H("unstack")}reverse(e,t){return H("reverse")}concat(e,t){return H("concat")}neg(e){return H("neg")}add(e,t){return H("add")}addN(e){return H("addN")}subtract(e,t){return H("subtract")}multiply(e,t){return H("multiply")}realDivide(e,t){return H("realDivide")}floorDiv(e,t){return H("floorDiv")}sum(e,t){return H("sum")}prod(e,t){return H("prod")}unsortedSegmentSum(e,t,n){return H("unsortedSegmentSum")}argMin(e,t){return H("argMin")}argMax(e,t){return H("argMax")}equal(e,t){return H("equal")}notEqual(e,t){return H("notEqual")}less(e,t){return H("less")}lessEqual(e,t){return H("lessEqual")}greater(e,t){return H("greater")}greaterEqual(e,t){return H("greaterEqual")}logicalNot(e){return H("logicalNot")}logicalAnd(e,t){return H("logicalAnd")}logicalOr(e,t){return H("logicalOr")}where(e){return H("where")}select(e,t,n){return H("select")}topk(e,t,n){return H("topk")}min(e,t){return H("min")}minimum(e,t){return H("minimum")}mod(e,t){return H("mod")}max(e,t){return H("max")}maximum(e,t){return H("maximum")}all(e,t){return H("all")}any(e,t){return H("any")}squaredDifference(e,t){return H("squaredDifference")}ceil(e){return H("ceil")}floor(e){return H("floor")}round(e){return H("round")}sign(e){return H("sign")}isNaN(e){return H("isNaN")}isInf(e){return H("isInf")}isFinite(e){return H("isFinite")}pow(e,t){return H("pow")}exp(e){return H("exp")}expm1(e){return H("expm1")}softmax(e,t){return H("softmax")}log(e){return H("log")}log1p(e){return H("log1p")}sqrt(e){return H("sqrt")}rsqrt(e){return H("rsqrt")}square(e){return H("square")}reciprocal(e){return H("reciprocal")}relu(e){return H("relu")}relu6(e){return H("relu6")}prelu(e,t){return H("prelu")}elu(e){return H("elu")}eluDer(e,t){return H("eluDer")}selu(e){return H("selu")}int(e){return H("int")}clip(e,t,n){return H("clip")}abs(e){return H("abs")}complexAbs(e){return H("complexAbs")}sigmoid(e){return H("sigmoid")}softplus(e){return H("softplus")}sin(e){return H("sin")}cos(e){return H("cos")}tan(e){return H("tan")}asin(e){return H("asin")}acos(e){return H("acos")}atan(e){return H("atan")}atan2(e,t){return H("atan2")}sinh(e){return H("sinh")}cosh(e){return H("cosh")}tanh(e){return H("tanh")}asinh(e){return H("asinh")}acosh(e){return H("acosh")}atanh(e){return H("atanh")}erf(e){return H("erf")}step(e,t){return H("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:s,activation:r,preluActivationWeights:a}){return H("fusedConv2d")}conv2d(e,t,n){return H("conv2d")}conv2dDerInput(e,t,n){return H("conv2dDerInput")}conv2dDerFilter(e,t,n){return H("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:s,activation:r,preluActivationWeights:a}){return H("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return H("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return H("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return H("depthwiseConv2DDerFilter")}conv3d(e,t,n){return H("conv3d")}conv3dDerInput(e,t,n){return H("conv3dDerInput")}conv3dDerFilter(e,t,n){return H("conv3dDerFilter")}maxPool(e,t){return H("maxPool")}maxPoolBackprop(e,t,n,s){return H("maxPoolBackprop")}avgPool(e,t){return H("avgPool")}avgPoolBackprop(e,t,n){return H("avgPoolBackprop")}avgPool3d(e,t){return H("avgPool3d")}avgPool3dBackprop(e,t,n){return H("avgPool3dBackprop")}maxPool3d(e,t){return H("maxPool3d")}maxPool3dBackprop(e,t,n,s){return H("maxPool3dBackprop")}reshape(e,t){return H("reshape")}cast(e,t){return H("cast")}tile(e,t){return H("tile")}pad(e,t,n){return H("pad")}transpose(e,t){return H("transpose")}gather(e,t,n,s=0){return H("gather")}gatherND(e,t){return H("gatherND")}scatterND(e,t,n){return H("scatterND")}batchToSpaceND(e,t,n){return H("batchToSpaceND")}spaceToBatchND(e,t,n){return H("spaceToBatchND")}resizeBilinear(e,t,n,s,r){return H("resizeBilinear")}resizeBilinearBackprop(e,t,n){return H("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,s,r){return H("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return H("resizeNearestNeighborBackprop")}batchNorm(e,t,n,s,r,a){return H("batchNorm")}localResponseNormalization4D(e,t,n,s,r){return H("localResponseNormalization4D")}LRNGrad(e,t,n,s,r,a,i){return H("LRNGrad")}multinomial(e,t,n,s){return H("multinomial")}oneHot(e,t,n,s){return H("oneHot")}cumsum(e,t,n,s){return H("cumsum")}nonMaxSuppression(e,t,n,s,r){return H("nonMaxSuppression")}fft(e){return H("fft")}ifft(e){return H("ifft")}complex(e,t){return H("complex")}real(e){return H("real")}imag(e){return H("imag")}cropAndResize(e,t,n,s,r,a){return H("cropAndResize")}depthToSpace(e,t,n){return H("depthToSpace")}split(e,t,n){return H("split")}sparseToDense(e,t,n,s){return H("sparseToDense")}diag(e){return H("diag")}fill(e,t,n){return H("fill")}onesLike(e){return H("onesLike")}zerosLike(e){return H("zerosLike")}linspace(e,t,n){return H("linspace")}dispose(){return H("dispose")}}function H(e){throw new Error(`\'${e}\' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function j(e){let t=e.length,n=0,s=0;for(;t>0;)s=Math.random()*t|0,t--,n=e[t],e[t]=e[s],e[s]=n}function q(e,t,n){return Math.max(e,Math.min(t,n))}function K(e){return e%2==0?e:e+1}function X(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Y(e,t){const n=Math.random();return t*n+(1-n)*e}function J(e,t){let n=0;for(let s=0;s<e.length;s++){const r=Number(e[s])-Number(t[s]);n+=r*r}return n}function Z(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Q(e,t,n=""){Z(re(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ee(e){Z(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function te(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||xe(e)&&!n)for(let s=0;s<e.length;++s)te(e[s],t,n);else t.push(e);return t}function ne(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function se(e){return 0===e.length}function re(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ae(e){return e%1==0}function ie(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function oe(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function le(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return j(t),t}function ue(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ce(e,t=(e=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(e())return void s();a++;const o=t(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function he(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can\'t be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function pe(e,t){const n=t.length;return Z((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Z(e.every((e=>ae(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function de(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:pe(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can\'t squeeze axis ${t} since its dim \'${e[t]}\' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function fe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function me(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ge(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function ye(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function be(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function xe(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function we(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ke(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function ve(e){return"string"==typeof e||e instanceof String}function Ie(e){return"boolean"==typeof e}function Ne(e){return"number"==typeof e}function Se(e){return Array.isArray(e)?Se(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Ne(e)?"float32":ve(e)?"string":Ie(e)?"bool":"float32"}function Ce(e){return!!(e&&e.constructor&&e.call&&e.apply)}function $e(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Te(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function Ee(e,t,n){const s=new Array;if(1===t.length){const r=t[0];for(let t=0;t<r;t++)s[t]=n[e+t]}else{const r=t[0],a=t.slice(1),i=a.reduce(((e,t)=>e*t));for(let t=0;t<r;t++)s[t]=Ee(e+t*i,a,n)}return s}function Ae(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return Ee(0,e,t)}function Re(e,t){const n=De(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function De(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Fe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ae(e,new Float32Array(n));if("int32"===t)return Ae(e,new Int32Array(n));if("bool"===t)return Ae(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function _e(e){e.forEach((t=>{Z(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Oe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function Me(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function Le(e){return e&&e.then&&"function"==typeof e.then}const ze="tfjsflags";class Pe{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Le(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag \'${e}\': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);ze in e&&e[ze].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Be(){return Ve}let We,Ve=null;function Ue(){if(null==We){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}We=e}return We}function Ge(e,t){const n=function(){const e=Ue();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const He="Abs",je="Acos",qe="Acosh",Ke="Add",Xe="AddN",Ye="All",Je="Any",Ze="ArgMax",Qe="ArgMin",et="Asin",tt="Asinh",nt="Atan",st="Atanh",rt="Atan2",at="AvgPool",it="AvgPoolGrad",ot="AvgPool3D",lt="AvgPool3DGrad",ut="BatchMatMul",ct="BatchToSpaceND",ht="Bincount",pt="BroadcastTo",dt="Cast",ft="Ceil",mt="ClipByValue",gt="Complex",yt="ComplexAbs",bt="Concat",xt="Conv2D",wt="Conv2DBackpropFilter",kt="Conv2DBackpropInput",vt="Conv3D",It="Conv3DBackpropFilterV2",Nt="Conv3DBackpropInputV2",St="Cos",Ct="Cosh",$t="Cumsum",Tt="CropAndResize",Et="DenseBincount",At="DepthToSpace",Rt="DepthwiseConv2dNative",Dt="DepthwiseConv2dNativeBackpropFilter",Ft="DepthwiseConv2dNativeBackpropInput",_t="Diag",Ot="Dilation2D",Mt="Dilation2DBackpropInput",Lt="Dilation2DBackpropFilter",zt="RealDiv",Pt="Elu",Bt="EluGrad",Wt="Erf",Vt="Equal",Ut="Exp",Gt="ExpandDims",Ht="Expm1",jt="FFT",qt="Fill",Kt="FlipLeftRight",Xt="Floor",Yt="FloorDiv",Jt="FusedBatchNorm",Zt="GatherV2",Qt="GatherNd",en="Greater",tn="GreaterEqual",nn="Identity",sn="IFFT",rn="Imag",an="IsFinite",on="IsInf",ln="IsNan",un="LeakyRelu",cn="Less",hn="LessEqual",pn="LinSpace",dn="Log",fn="Log1p",mn="LogicalAnd",gn="LogicalNot",yn="LogicalOr",bn="LogSoftmax",xn="LRN",wn="LRNGrad",kn="Max",vn="Maximum",In="MaxPool",Nn="MaxPoolGrad",Sn="MaxPool3D",Cn="MaxPool3DGrad",$n="MaxPoolWithArgmax",Tn="Mean",En="Min",An="Minimum",Rn="MirrorPad",Dn="Mod",Fn="Multinomial",_n="Multiply",On="Neg",Mn="NotEqual",Ln="NonMaxSuppressionV3",zn="NonMaxSuppressionV4",Pn="NonMaxSuppressionV5",Bn="OnesLike",Wn="OneHot",Vn="Pack",Un="PadV2",Gn="Pool",Hn="Pow",jn="Prelu",qn="Prod",Kn="Range",Xn="Real",Yn="Reciprocal",Jn="Relu",Zn="Reshape",Qn="ResizeNearestNeighbor",es="ResizeNearestNeighborGrad",ts="ResizeBilinear",ns="ResizeBilinearGrad",ss="Relu6",rs="Reverse",as="Round",is="Rsqrt",os="ScatterNd",ls="Select",us="Selu",cs="Slice",hs="Sin",ps="Sinh",ds="Sign",fs="Sigmoid",ms="Softplus",gs="Sqrt",ys="Sum",bs="SpaceToBatchND",xs="SplitV",ws="Softmax",ks="SquaredDifference",vs="Square",Is="Sub",Ns="SparseToDense",Ss="StridedSlice",Cs="Tan",$s="Tanh",Ts="Tile",Es="TopK",As="Transpose",Rs="Unique",Ds="Unpack",Fs="UnsortedSegmentSum",_s="ZerosLike",Os="Step",Ms="FromPixels",Ls="RotateWithOffset",zs="_FusedMatMul",Ps="FusedConv2D",Bs="FusedDepthwiseConv2D",Ws=Ge("kernelRegistry",(()=>new Map)),Vs=Ge("gradRegistry",(()=>new Map));function Us(e,t){const n=Js(e,t);return Ws.get(n)}function Gs(e){return Vs.get(e)}function Hs(e){const t=Ws.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function js(e){const{kernelName:t,backendName:n}=e,s=Js(t,n);Ws.has(s)&&console.warn(`The kernel \'${t}\' for backend \'${n}\' is already registered`),Ws.set(s,e)}function qs(e){const{kernelName:t}=e;Vs.has(t)&&Be().getBool("DEBUG")&&console.warn(`Overriding the gradient for \'${t}\'`),Vs.set(t,e)}function Ks(e,t){const n=Js(e,t);if(!Ws.has(n))throw new Error(`The kernel \'${e}\' for backend \'${t}\' is not registered`);Ws.delete(n)}function Xs(e){if(!Vs.has(e))throw new Error(`The gradient \'${e}\' for backend is not registered`);Vs.delete(e)}function Ys(e,t){Hs(e).forEach((e=>{js(Object.assign({},e,{backendName:t}))}))}function Js(e,t){return`${t}_${e}`}class Zs{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new er)}profileKernel(e,t,n){let s;const r=this.backendTimer.time((()=>{s=n()}));if(Be().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{Qs(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:r.then((e=>e.kernelMs)),extraInfo:r.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Qs(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of \'${n}\'`),!0}return!1}class er{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?ue(`${s}ms`,9):s.error,o=ue(e,25),l=t.rank,u=t.size,c=ue(t.shape.toString(),14);let h="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;h+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\\t%c${i}\\t%c${l}D ${c}\\t%c${u}\\t%c${h}\\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const tr=20,nr=3,sr=7;function rr(e,t,n,s){const r=Te(t),a=function(e,t,n,s){const r=ne(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?lr(e):e;if(o>1)for(let e=0;e<r/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],ar(l[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=or(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\\n")),l.join("\\n")}function ar(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(sr))} + ${parseFloat(e[1].toFixed(sr))}j`:ve(e)?`\'${e}\'`:"bool"===n?ir(e):parseFloat(e.toFixed(sr)).toString(),ue(s,t)}function ir(e){return 0===e?"false":"true"}function or(e,t,n,s,r,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[ar(lr(e)[0],0,n)]:"bool"===n?[ir(e[0])]:[e[0].toString()];if(1===l){if(o>tr){const t=nr*i;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-nr)*i,o*i));return"complex64"===n&&(s=lr(s),a=lr(a)),["["+s.map(((e,t)=>ar(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>ar(e,r[o-nr+t],n))).join(", ")+"]"]}return["["+("complex64"===n?lr(e):Array.from(e)).map(((e,t)=>ar(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*i,p=[];if(o>tr){for(let t=0;t<nr;t++){const s=t*h,a=s+h;p.push(...or(e.slice(s,a),u,n,c,r,!1))}p.push("...");for(let t=o-nr;t<o;t++){const s=t*h,a=s+h;p.push(...or(e.slice(s,a),u,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const s=t*h,a=s+h;p.push(...or(e.slice(s,a),u,n,c,r,t===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\\n";for(let e=2;e<l;e++)f+="\\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function lr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function ur(e,t){return"string"===t?dr(e):cr([e],t)}function cr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=te(e)),Be().getBool("DEBUG")&&ge(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function hr(){return Be().platform.now()}function pr(e,t){return Be().platform.fetch(e,t)}function dr(e,t="utf-8"){return t=t||"utf-8",Be().platform.encode(e,t)}function fr(e,t="utf-8"){return t=t||"utf-8",Be().platform.decode(e,t)}class mr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ne(e),null!=n){const e=n.length;Z(e===this.size,(()=>`Length of values \'${e}\' does not match the size inferred by the shape \'${this.size}\'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||me(t,this.size),this.strides=Te(e)}set(e,...t){0===t.length&&(t=[0]),Z(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return gr().makeTensor(this.values,this.shape,this.dtype)}}let gr=null,yr=null,br=null;class xr{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ne(e),this.strides=Te(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return yr.buffer(this.shape,this.dtype,e)}bufferSync(){return yr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ae(this.shape,e)}arraySync(){return Ae(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=gr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>fr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=gr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>fr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await gr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(gr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return yr.print(this,e)}clone(){return this.throwIfDisposed(),yr.clone(this)}toString(e=!1){return rr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),yr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),gr().makeVariable(this,e,t,n)}}Object.defineProperty(xr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class wr extends xr{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!re(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);gr().disposeTensor(this),this.dataId=e.dataId,gr().incRef(this,null)}dispose(){gr().disposeVariable(this),this.isDisposedInternal=!0}}var kr,vr,Ir,Nr,Sr;Object.defineProperty(wr,Symbol.hasInstance,{value:e=>e instanceof xr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(kr||(kr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(vr||(vr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ir||(Ir={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Nr||(Nr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Sr||(Sr={}));const Cr={float32:Nr,int32:vr,bool:Ir,complex64:Sr};function $r(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Cr[e][t]}function Tr(e){return $r(e,"int32")}function Er(e,t){if(e.dtype===t.dtype)return[e,t];const n=$r(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ar(e,t){Z(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Rr(e,t){return t.some((t=>t.id===e.id))}function Dr(e){const t=[];return Fr(e,t,new Set),t}function Fr(e,t,n){if(null==e)return;if(e instanceof xr)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=e;for(const e in r){const s=r[e];n.has(s)||(n.add(s),Fr(s,t,n))}}class _r{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Or{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new _r}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend \'${this.backendName}\' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend \'${e}\' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name \'${e}\' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Zs(this.backendInstance),!0}setupRegisteredKernels(){Hs(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Hs(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof G||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t);s.disposeData(t),n.backend=e,e.move(t,r,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Or.nextTensorId++}nextVariableId(){return Or.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},s={dtype:t};return Lr.runKernelFunc((n=>n.cast(e,t)),n,null,dt,s)}})),[],{}),t}runKernel(e,t,n,s,r){return this.runKernelFunc(null,t,null,e,n,s,r)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend \'${this.backendName}\' has an internal memory leak (${i} data ids) after running \'${e}\'`)}runKernelFunc(e,t,n,s,r,a,i){let o,l=[];const u=this.isTapeOn();null==s&&(s=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const d=Us(s,this.backendName);let f,m;if(null!=d)p=()=>{const e=this.backend.numDataIds();f=d.kernelFunc({inputs:t,attrs:r,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(s,e,n);const o=n.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:s}=e;return this.makeTensorFromDataId(t,n,s)}));if(u){let e=this.getTensorsForGradient(s,t,o);if(null==e){null==i&&(i=[]);const t=o.filter(((e,t)=>i[t]));e=(a||[]).slice().concat(t)}l=this.saveTensorsForBackwardMode(e)}return o};else{if(null==e)throw new Error(`Error running ${s}: Neither modular kernel nor forward func passed`);const t=e=>{u&&(l=e.map((e=>this.keep(this.clone(e)))))};p=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>e(this.backend,t)));const r=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(s,n,r),r}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(s,t,(()=>p())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=p()})),u&&this.addTapeNode(s,t,o,n,l,r),this.state.profiling&&this.state.activeProfile.kernels.push({name:s,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:o.map((e=>e.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const s=Gs(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(Z(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return null}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&ve(e[0])&&(r=e.map((e=>dr(e))));const a=s.write(r,t,n),i=new xr(t,n,a,this.nextTensorId());if(this.incRef(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=ke(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){const r=new xr(t,n=n||"float32",e,this.nextTensorId());return this.incRef(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new wr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*we(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof wr||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=Gs(e);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=De(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Dr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(Z(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have \'float32\' dtype, but has \'${n.dtype}\'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Z(r instanceof xr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=Re(ne(e),"float32");return Lr.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have \'float32\' dtype, but has \'${r.dtype}\'`);const i=a.inputs[t];if(!re(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input \'${t}\' has shape \'${r.shape}\', which does not match the shape of the input \'${i.shape}\'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),zr);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return Z(Ce(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;Z(t.every((e=>e instanceof xr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc(((s,r)=>(n=e(...t,r),Z(n.value instanceof xr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Z(Ce(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),s,((e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];Z(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Z(a.every((e=>e instanceof xr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=hr(),n=await this.backend.time(e);return n.wallMs=hr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new _r;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Mr(){const e=Ue();if(null==e._tfengine){const t=new Pe(e);e._tfengine=new Or(t)}var t;return t=e._tfengine.ENV,Ve=t,gr=()=>e._tfengine,e._tfengine}Or.nextTensorId=0,Or.nextVariableId=0;const Lr=Mr();function zr(e,t){const n={a:e,b:t};return Lr.runKernel(Ke,n)}function Pr(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(e.substr(0,4))}return!1}function Br(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Wr=Be();function Vr(e,t){let n=e;if(xe(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||xe(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&Be().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ur(e,s,[]),s}function Ur(e,t,n){if(n=n||[],!Array.isArray(e)&&!xe(e))return void Z(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Z(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Z(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)Ur(e[t],s,n.concat(t))}function Gr(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument \'${n}\' passed to \'${s}\' must be ${e} tensor, but got ${t} tensor`)}}function Hr(e,t,n,s="numeric"){if(e instanceof xr)return Gr(s,e.dtype,t,n),e;let r=Se(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Gr(s,r,t,n),null==e||!xe(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument \'${t}\' passed to \'${n}\' must be a Tensor or TensorLike, but got \'${s}\'`)}const a=Vr(e,r);xe(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?cr(e,r):te(e,[],!0);return Lr.makeTensor(i,a,r)}function jr(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \\`Tensor[]\\` or \\`TensorLike[]\\``);return e.map(((e,r)=>Hr(e,`${t}[${r}]`,n,s)))}Wr.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Wr.registerFlag("IS_BROWSER",(()=>Br())),Wr.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Wr.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Wr.registerFlag("PROD",(()=>!1)),Wr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Wr.getBool("DEBUG"))),Wr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Wr.registerFlag("IS_TEST",(()=>!1)),Wr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));const qr="__op";function Kr(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=qr;const r=(...e)=>{Lr.startScope(n);try{const t=s(...e);return Le(t)&&console.error("Cannot return a Promise inside of tidy."),Lr.endScope(t),t}catch(e){throw Lr.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const Xr=Kr({complex_:function(e,t){const n=Hr(e,"real","complex"),s=Hr(t,"imag","complex");Q(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return Lr.runKernel(gt,r)}});function Yr(e,t,n,s){if(null==s&&(s=Se(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!xe(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){_e(t);const e=ne(t),s=ne(n);Z(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],r=e!==n.length-1||s!==ne(t.slice(e));Z(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return xe(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?cr(e,s):te(e,[],!0),Lr.makeTensor(e,t,s)}function Jr(e,t,n){return Yr(e,t,Vr(e,n),n)}const Zr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Qr=4;async function ea(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight \'${i}\': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Qr*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=Qr,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:na(await Promise.all(s)),specs:n}}function ta(e,t){const n={};let s,r=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=ne(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn\'t have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: \'uint8\', \'uint16\', and \'float16\'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Zr[n.dtype],c=e.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=la()),u=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight \'${t}\': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}r+=l*o}else if("string"===i){const t=ne(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+Qr))[0];r+=Qr;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const s=Zr[i],a=e.slice(r,r+l*s);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight \'${t}\': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],s[t]=u[2*t+1];const r=Jr(e,o,"float32"),i=Jr(s,o,"float32");n[t]=Xr(r,i),r.dispose(),i.dispose()}}r+=l*s}"complex64"!==i&&(n[t]=Jr(u,o,i))}return n}function na(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const sa="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ra(e){return sa?Buffer.byteLength(e):new Blob([e]).size}function aa(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function ia(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function oa(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ra(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ra(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function la(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}class ua{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ua.instance&&(ua.instance=new ua),ua.instance}static registerSaveRouter(e){ua.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ua.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ua.getHandlers(e,"save")}static getLoadHandlers(e,t){return ua.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?ua.getInstance().loadRouters:ua.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const ca=e=>ua.registerSaveRouter(e),ha=e=>ua.registerLoadRouter(e),pa=e=>ua.getSaveHandlers(e),da=(e,t)=>ua.getLoadHandlers(e,t),fa="tensorflowjs",ma="models_store",ga="model_info_store";function ya(){if(!Be().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ba(e){const t=e.result;t.createObjectStore(ma,{keyPath:"modelPath"}),t.createObjectStore(ga,{keyPath:"modelPath"})}class xa{constructor(e){if(this.indexedDB=ya(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(fa,1);s.onupgradeneeded=()=>ba(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(ma,"readonly"),s=t.objectStore(ma).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path \'${this.modelPath}\' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=oa(t),a=r.transaction(ga,"readwrite");let i=a.objectStore(ga);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(ma,"readwrite");const o=l.objectStore(ma).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(ga);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}xa.URL_SCHEME="indexeddb://";const wa=e=>{return Be().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(xa.URL_SCHEME)?(t=e.slice(xa.URL_SCHEME.length),new xa(t)):null;var t};ua.registerSaveRouter(wa),ua.registerLoadRouter(wa);class ka{constructor(){this.indexedDB=ya()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(fa,1);n.onupgradeneeded=()=>ba(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(ga,"readonly"),a=r.objectStore(ga).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(xa.URL_SCHEME)?t.slice(xa.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(fa,1);s.onupgradeneeded=()=>ba(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(ga,"readwrite"),i=a.objectStore(ga),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path \'${e}\' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction(ma,"readwrite");const s=l.objectStore(ma).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const va="/",Ia="tensorflowjs_models",Na="info",Sa="model_topology",Ca="weight_specs",$a="weight_data",Ta="model_metadata";function Ea(e){return{info:[Ia,e,Na].join(va),topology:[Ia,e,Sa].join(va),weightSpecs:[Ia,e,Ca].join(va),weightData:[Ia,e,$a].join(va),modelMetadata:[Ia,e,Ta].join(va)}}function Aa(e){const t=e.split(va);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(va)}class Ra{constructor(e){if(!Be().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ea(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=oa(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(sa)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model \'${this.modelPath}\' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name \'${this.modelPath}\'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model \'${this.modelPath}\' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model \'${this.modelPath}\' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model \'${this.modelPath}\' are missing.`);return t.weightData=function(e){if(sa){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Ra.URL_SCHEME="localstorage://";const Da=e=>{return Be().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ra.URL_SCHEME)?(t=e.slice(Ra.URL_SCHEME.length),new Ra(t)):null;var t};ua.registerSaveRouter(Da),ua.registerLoadRouter(Da);class Fa{constructor(){Z(Be().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Z("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Ia+va,n=va+Na;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[Aa(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=Ea(e=(t=e).startsWith(Ra.URL_SCHEME)?t.slice(Ra.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path \'${e}\'`);const s=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),s}}const _a="://";class Oa{constructor(){this.managers={}}static getInstance(){return null==Oa.instance&&(Oa.instance=new Oa),Oa.instance}static registerManager(e,t){Z(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(_a)&&(e=e.slice(0,e.indexOf(_a))),Z(e.length>0,(()=>"scheme must not be an empty string."));const n=Oa.getInstance();Z(null==n.managers[e],(()=>`A model store manager is already registered for scheme \'${e}\'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme \'${e}\'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Ma(e){if(-1===e.indexOf(_a))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Oa.getSchemes().join(",")}`);return{scheme:e.split(_a)[0],path:e.split(_a)[1]}}async function La(e,t,n=!1){Z(e!==t,(()=>`Old path and new path are the same: \'${e}\'`));const s=ua.getLoadHandlers(e);Z(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Z(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const r=s[0],a=ua.getSaveHandlers(t);Z(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Z(a.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const i=a[0],o=Ma(e).scheme,l=Ma(e).path,u=o===Ma(e).scheme,c=await r.load();n&&u&&await Oa.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await Oa.getManager(o).removeModel(l),h.modelArtifactsInfo}async function za(){const e=Oa.getSchemes(),t={};for(const n of e){const e=await Oa.getManager(n).listModels();for(const s in e)t[n+_a+s]=e[s]}return t}async function Pa(e){const t=Ma(e);return Oa.getManager(t.scheme).removeModel(t.path)}async function Ba(e,t){return La(e,t,!1)}async function Wa(e,t){return La(e,t,!0)}class Va{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser\'s encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Be().get("IS_BROWSER")){Be().setPlatform("browser",new Va);try{Oa.registerManager(Ra.URL_SCHEME,new Fa)}catch(e){}try{Oa.registerManager(xa.URL_SCHEME,new ka)}catch(e){}}let Ua;function Ga(e,t="float32",n){return t=t||"float32",_e(e),new mr(e,t,n)}Be().get("IS_NODE")&&Be().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Be().global.fetch?Be().global.fetch(e,t):(null==Ua&&(Ua=n(352)),Ua(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ha=Kr({cast_:function(e,t){const n=Hr(e,"x","cast");if(!ye(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return Lr.runKernel(dt,s,r)}}),ja=Kr({clone_:function(e){const t={x:Hr(e,"x","clone","string_or_numeric")};return Lr.runKernel(nn,t)}});function qa(e,t=!1){console.log(e.toString(t))}function Ka(e){return new Promise((e=>setTimeout(e))).then(e)}Mr(),yr={buffer:Ga,cast:Ha,clone:ja,print:qa};class Xa{constructor(e){if(!Be().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Xa.URL_SCHEME)&&(e=e.slice(Xa.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=r,await Ka((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ka((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:oa(e)}}}}Xa.URL_SCHEME="downloads://";class Ya{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,s)=>{const r=new FileReader;r.onload=r=>{const a=JSON.parse(r.target.result),i=a.modelTopology;if(null==i)return void s(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:i});const o=a.weightsManifest;if(null==o)return void s(new Error(`weightManifest field is missing from file ${e.name}`));let l;try{l=this.checkManifestAndWeightFiles(o,t)}catch(e){return void s(e)}const u=[],c=[],h=[];o.forEach((e=>{e.paths.forEach((e=>{c.push(e),h.push(null)})),u.push(...e.weights)})),o.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const s=t.target.result,r=c.indexOf(e);if(h[r]=s,-1===h.indexOf(null)){const e={modelTopology:i,weightSpecs:u,weightData:aa(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy};null!=a.signature&&(e.signature=a.signature),null!=a.userDefinedMetadata&&(e.userDefinedMetadata=a.userDefinedMetadata),null!=a.modelInitializer&&(e.modelInitializer=a.modelInitializer),n(e)}},t.onerror=t=>s(`Failed to weights data from file of path \'${e}\'.`),t.readAsArrayBuffer(l[e])}))}))},r.onerror=t=>s(`Failed to read model topology and weights manifest JSON from file \'${e.name}\'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],s=t.map((e=>ia(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=ia(e);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: \'${a}\'`);if(n.push(a),-1===s.indexOf(a))throw new Error(`Weight file with basename \'${a}\' is not provided.`);r[e]=t[s.indexOf(a)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return r}}function Ja(e){return new Ya(e)}function Za(e,t,n,s){!function(e){Z(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Z(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Z(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Z(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function Qa(e,t){null==t&&(t={});const n=null==t.fetchFunc?Be().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await Za(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Za(r,t.onProgress,.5,1)}async function ei(e,t="",n,s){return ti((e=>Qa(e,{requestInit:s})))(e,t,n)}function ti(e){return async(t,n="",s)=>{const r=t.map((()=>!1)),a={},i=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Zr[l]*ne(e.shape),c=()=>{r[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=s.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \\nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let p=0;return l.forEach((e=>{const n=t[e].paths.length;let s=0;for(let e=0;e<n;e++)s+=c[p+e].byteLength;const r=new ArrayBuffer(s),i=new Uint8Array(r);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=ta(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}ua.registerSaveRouter((e=>Be().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Xa.URL_SCHEME)?function(e="model"){return new Xa(e)}(e.slice(Xa.URL_SCHEME.length)):null));class ni{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Z("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Be().platform.fetch,Z(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Z(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:oa(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the \'pb2json\'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest,r=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=s){const e=await this.loadWeights(s);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:r,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const p=t.modelInitializer;return p&&(h.modelInitializer=p),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,aa(await Qa(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function si(e){return null!=e.match(ni.URL_SCHEME_REGEX)}ni.URL_SCHEME_REGEX=/^https?:\\/\\//;const ri=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>si(e))):si(e),n)return ai(e,t)}return null};function ai(e,t){return new ni(e,t)}function ii(e,t){return ai(e,t)}ua.registerSaveRouter(ri),ua.registerLoadRouter(ri);class oi{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class li{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function ui(e,t,n,s){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new oi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new oi({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new oi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function ci(e){return new li(e)}const hi=Kr({matMul_:function(e,t,n=!1,s=!1){let r=Hr(e,"a","matMul"),a=Hr(t,"b","matMul");[r,a]=Er(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return Lr.runKernel(ut,i,o)}}),pi=Kr({oneHot_:function(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:Hr(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:s};return Lr.runKernel(Wn,r,a)}}),di=Kr({transpose_:function(e,t){const n=Hr(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),Z(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{Z(e>=0&&e<n.rank,(()=>"All entries in \'perm\' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:t};return Lr.runKernel(As,s,r)}}),fi=Kr({confusionMatrix_:function(e,t,n){const s=Hr(e,"labels","confusionMatrix"),r=Hr(t,"predictions","confusionMatrix");Z(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Z(1===s.rank,(()=>`Expected the rank of labels to be 1, but got ${s.rank}`)),Z(1===r.rank,(()=>`Expected the rank of predictions to be 1, but got ${r.rank}`)),Z(s.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),Z(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=pi(Ha(s,"int32"),n),i=pi(Ha(r,"int32"),n),o=di(a),l=hi(o,i);return Ha(l,"int32")}});function mi(e,t,n){if(ee(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Vr(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Yr(e,t,s,n)}let gi;async function yi(e,t){let n=Hr(e,"img","toPixels");if(!(e instanceof xr)){const e=n;n=Ha(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[s,r]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*s*4);for(let e=0;e<s*r;++e){const t=[0,0,0,255];for(let s=0;s<a;s++){const r=i[e*a+s];if("float32"===n.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===a?(t[0]=r*o,t[1]=r*o,t[2]=r*o):t[s]=r*o}const s=4*e;l[s+0]=Math.round(t[0]),l[s+1]=Math.round(t[1]),l[s+2]=Math.round(t[2]),l[s+3]=Math.round(t[3])}if(null!=t){t.width=r,t.height=s;const e=t.getContext("2d"),n=new ImageData(l,r,s);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const bi=Kr({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(r){const t=2;if(r&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Us(Ms,Lr.backendName)){const n={pixels:e},s={numChannels:t};return Lr.runKernel(Ms,n,s)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i?c=e.getContext("2d").getImageData(0,0,l,u).data:s||n?c=e.data:(a||r||o)&&(null==gi&&(gi=document.createElement("canvas").getContext("2d")),gi.canvas.width=l,gi.canvas.height=u,gi.drawImage(e,0,0,l,u),c=gi.getImageData(0,0,l,u).data),4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return mi(h,[u,l,t],"int32")}});function xi(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===ne(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Te(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function wi(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function ki(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of \'indices\' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}wi(n,t,e)}function vi(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let e=r;e<a;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:ne(t.shape)/o,sliceSize:i,strides:[...Te(n.slice(0,r)),1],outputSize:ne(n)}}function Ii(e,t,n){const s=e.shape.length;Z(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),Z(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)Z(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function Ni(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Si(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Ci(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function $i(e,t,n){return n<=e?n:n-(t-1)}function Ti(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function Ei(e,t,n,s,r,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Ai(i,l,u,s,e),h=Ri(o,l,u,r,e),p=Ci(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Fi(i,s,a,e,t,l),h[t]=_i(o,r,a,e,t,l),p[t]=Di(a,t,l);return{begin:c,end:h,strides:p}}function Ai(e,t,n,s,r){const a=[...r],i=Ti(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=$i(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function Ri(e,t,n,s,r){const a=[...r],i=Ti(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=$i(t,n,r);let o=s[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let e=0;e<a.length;e++){const t=r[e];a[e]<0&&(a[e]+=t),a[e]=q(0,a[e],r[e])}return a}function Di(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function Fi(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=q(0,i,l-1),i}function _i(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?q(0,i,l):q(-1,i,l-1),i}function Oi(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Mi(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Li(e,t,n){let s;const r=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{Z(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Z(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function zi(e,t,n,s,r,a,i,o,l){let u=t.slice(),c=n.slice(),h=s;null==s&&(h=new Array(u.length));const p=Ni(i);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=e.length-u.length,f=Ni(o),m=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:y,strides:b}=Ei(m,p,d,u,c,h,r,a,i);u=g,c=y,h=b;const x=Ni(l);x.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const w=Si(u,c,h),k=w.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:w,newShape:m,outShape:k}}class Pi{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Bi{constructor(){this.classNameMap={}}static getMap(){return null==Bi.instance&&(Bi.instance=new Bi),Bi.instance}static register(e){Bi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Wi(e){Z(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Z("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Z(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Bi.register(e)}const Vi=.001,Ui=.1;function Gi(e,t,n){return null==n&&(n=Hi()),ji(e,t,((e,t)=>Yi(e,t,n)))}function Hi(){return 32===Lr.backend.floatPrecision()?Vi:Ui}function ji(e,t,n){let s=!0;if((xe(e)||xe(t))&&(s=!1),xe(e)&&xe(t)&&(s=!0),s){const n=e.constructor.name,s=t.constructor.name;if(n!==s)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${s}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Vr(e),s=Vr(t);if(!re(n,s))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${s}]`)}const r=xe(e)?e:te(e),a=xe(t)?t:te(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.\\nActual:   ${r}.\\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=r[e],s=a[e];if(!n(t,s))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${s}.\\nActual:   ${r}.\\nExpected: ${a}.`)}}function qi(e,t){e().then((()=>t.fail()),(()=>t()))}function Ki(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ve(e)||ve(e[0])||ve(t)||ve(t[0])?ji(e,n,((e,t)=>e==t)):ji(e,t,((e,t)=>Yi(e,t,0)))}function Xi(e,t,n){if(null==n&&(n=Hi()),!Yi(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Yi(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Ji(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function Zi(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Qi(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Qi(n):e[t]=dr(n)}return e}const eo="2.8.6";function to(){Be().set("PROD",!0)}function no(){Be().set("DEBUG",!0)}function so(){Be().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ro(e){Be().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ao(){Lr.disposeVariables()}function io(){return Lr}function oo(){return Lr.memory()}function lo(e){return Lr.profile(e)}function uo(e,t){return Lr.tidy(e,t)}function co(e){Dr(e).forEach((e=>e.dispose()))}function ho(e){return Lr.keep(e)}function po(e){return Lr.time(e)}function fo(e){return Lr.setBackend(e)}function mo(){return Lr.ready()}function go(){return Lr.backendName}function yo(e){Lr.removeBackend(e)}function bo(e){return Lr.findBackend(e)}function xo(e){return Lr.findBackendFactory(e)}function wo(e,t,n=1){return Lr.registerBackend(e,t,n)}function ko(){return Lr.backend}function vo(e,t){Be().setPlatform(e,t)}br=ro;const Io=Kr({add_:function(e,t){let n=Hr(e,"a","add"),s=Hr(t,"b","add");[n,s]=Er(n,s);const r={a:n,b:s};return Lr.runKernel(Ke,r)}}),No=Kr({floorDiv_:function(e,t){let n=Hr(e,"a","floorDiv"),s=Hr(t,"b","floorDiv");[n,s]=Er(n,s);const r={a:n,b:s};return Lr.runKernel(Yt,r)}}),So=Kr({div_:function(e,t){let n=Hr(e,"a","div"),s=Hr(t,"b","div");if([n,s]=Er(n,s),"int32"===n.dtype&&"int32"===s.dtype)return No(n,s);const r={a:n,b:s};return Lr.runKernel(zt,r,{})}}),Co=Kr({mul_:function(e,t){let n=Hr(e,"a","mul"),s=Hr(t,"b","mul");[n,s]=Er(n,s);const r={a:n,b:s};return Lr.runKernel(_n,r)}}),$o=Kr({sqrt_:function(e){const t={x:Hr(e,"x","sqrt")};return Lr.runKernel(gs,t)}}),To=Kr({square_:function(e){const t=Hr(e,"x","square");return Lr.runKernel("Square",{x:t},{})}}),Eo=Kr({zerosLike_:function(e){const t={x:Hr(e,"x","zerosLike")};return Lr.runKernel(_s,t)}});function Ao(e){return Z(Ce(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const s=Hr(t,"x","tf.grad","string_or_numeric"),r=null!=n?Hr(n,"dy","tf.grad"):null;return Lr.tidy((()=>{const{value:t,grads:n}=Lr.gradients((()=>e(s)),[s],r);return null!=r&&Q(t.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Mo(n),n[0]}))}}function Ro(e){return Z(Ce(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Z(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const s=jr(t,"args","tf.grads","string_or_numeric"),r=null!=n?Hr(n,"dy","tf.grads"):null;return Lr.tidy((()=>{const{value:t,grads:n}=Lr.gradients((()=>e(...s)),s,r);return null!=r&&Q(t.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Mo(n),n}))}}function Do(e){return Z(Ce(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Z(t instanceof xr,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Z(null==n||n instanceof xr,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:r}=Lr.gradients((()=>e(t)),[t],n);return Mo(s),{grad:s[0],value:r}}}function Fo(e){return Z(Ce(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Z(Array.isArray(t)&&t.every((e=>e instanceof xr)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Z(null==n||n instanceof xr,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=Lr.gradients((()=>e(...t)),t,n);return null!=n&&Q(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Mo(s.grads),s}}function _o(e,t){Z(Ce(e),(()=>"The f passed in variableGrads(f) must be a function")),Z(null==t||Array.isArray(t)&&t.every((e=>e instanceof wr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Lr.registeredVariables)t.push(Lr.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),Z(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=Lr.gradients(e,t,null,!0);Z(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Z(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=s&&s.forEach((e=>o[e.name]=null)),{value:a,grads:o}}function Oo(e){return Lr.customGrad(e)}function Mo(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\\n    the f you passed encloses all operations that lead from x to y.")}function Lo(e,t){if((xe(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&xe(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Yr(e,[],[],t)}class zo extends Pi{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return co(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return _o(e,t)}dispose(){null!=this.iterations_&&co(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Lo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(zo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Po extends zo{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Lr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Lr.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:uo((()=>Eo(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:uo((()=>Eo(s).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;uo((()=>{const e=Io(Co(a,this.rho),Co(To(r),1-this.rho)),t=Co(So($o(Io(i,this.epsilon)),$o(Io(a,this.epsilon))),r),n=Io(Co(i,this.rho),Co(To(t),1-this.rho));a.assign(e),i.assign(n);const o=Io(Co(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(co(this.accumulatedGrads.map((e=>e.variable))),co(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Bo(e,t,n){const s={shape:e,value:t,dtype:n};return Lr.runKernel(qt,{},s)}Po.className="Adadelta",Wi(Po);class Wo extends zo{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Lr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:uo((()=>Bo(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;uo((()=>{const e=Io(a,To(r));a.assign(e);const t=Io(Co(So(r,$o(Io(e,Lr.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&co(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Wo.className="Adagrad",Wi(Wo);const Vo=Kr({pow_:function(e,t){let n=Hr(e,"base","pow"),s=Hr(t,"exp","pow");[n,s]=Er(n,s);const r={a:n,b:s};return Lr.runKernel(Hn,r)}}),Uo=Kr({sub_:function(e,t){let n=Hr(e,"a","sub"),s=Hr(t,"b","sub");[n,s]=Er(n,s);const r={a:n,b:s};return Lr.runKernel(Is,r)}});class Go extends zo{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],uo((()=>{this.accBeta1=Lo(t).variable(),this.accBeta2=Lo(n).variable()})),null==s&&(this.epsilon=Lr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);uo((()=>{const n=Uo(1,this.accBeta1),s=Uo(1,this.accBeta2);t.forEach(((t,r)=>{const a=Lr.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:uo((()=>Eo(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:uo((()=>Eo(a).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=Io(Co(o,this.beta1),Co(i,1-this.beta1)),c=Io(Co(l,this.beta2),Co(To(i),1-this.beta2)),h=So(u,n),p=So(c,s);o.assign(u),l.assign(c);const d=Io(Co(So(h,Io($o(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(Co(this.accBeta1,this.beta1)),this.accBeta2.assign(Co(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&co(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&co(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),uo((()=>{this.accBeta1.assign(Vo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Vo(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Go.className="Adam",Wi(Go);const Ho=Kr({abs_:function(e){const t=Hr(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Lr.runKernel(yt,e)}{const e={x:t};return Lr.runKernel(He,e)}}});function jo(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function qo(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function Ko(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(s)}}return n}const Xo=Kr({maximum_:function(e,t){let n=Hr(e,"a","maximum"),s=Hr(t,"b","maximum");[n,s]=Er(n,s),"bool"===n.dtype&&(n=Ha(n,"int32"),s=Ha(s,"int32")),Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(vn,r)}});class Yo extends zo{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],uo((()=>{this.iteration=Lo(0).variable(),this.accBeta1=Lo(t).variable()})),null==s&&(this.epsilon=Lr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);uo((()=>{const n=Uo(1,this.accBeta1),s=So(-this.learningRate,Io(Co(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=Lr.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Eo(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:Eo(a).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=Io(Co(o,this.beta1),Co(i,1-this.beta1)),c=Co(l,this.beta2),h=Ho(i),p=Xo(c,h);o.assign(u),l.assign(p);const d=Io(Co(So(s,n),So(u,Io(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(Io(this.iteration,1)),this.accBeta1.assign(Co(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&co(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&co(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Yo.className="Adamax",Wi(Yo);class Jo extends zo{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=Lr.registeredVariables[t];uo((()=>{const e=Io(Co(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ho(Lo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Jo.className="SGD",Wi(Jo);class Zo extends Jo{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Lo(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Lr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:uo((()=>Eo(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&uo((()=>{let e;const t=Io(Co(this.m,r),a);e=this.useNesterov?Io(Co(this.c,Io(a,Co(t,this.m))),s):Io(Co(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&co(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Zo.className="Momentum",Wi(Zo);class Qo extends zo{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=Lr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Lr.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:uo((()=>Eo(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:uo((()=>Eo(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:uo((()=>Eo(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;uo((()=>{const e=Io(Co(i,this.decay),Co(To(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Io(Co(t,this.decay),Co(a,1-this.decay)),l=So(Co(a,this.learningRate),$o(Uo(e,Io(To(r),this.epsilon)))),u=Io(Co(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=Uo(s,u);s.assign(c)}else{const e=Io(Co(i,this.decay),Co(To(a),1-this.decay)),t=Io(Co(o,this.momentum),So(Co(a,this.learningRate),$o(Io(e,this.epsilon))));i.assign(e),o.assign(t);const n=Uo(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&co(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&co(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&co(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Qo.className="RMSProp",Wi(Qo);const el=Kr({acos_:function(e){const t={x:Hr(e,"x","acos")};return Lr.runKernel(je,t)}}),tl=Kr({acosh_:function(e){const t={x:Hr(e,"x","acosh")};return Lr.runKernel(qe,t)}}),nl=Kr({addN_:function(e){Z(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Z(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Hr(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!re(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=t;return Lr.runKernel(Xe,s)}}),sl=Kr({all_:function(e,t=null,n=!1){const s={x:Hr(e,"x","all","bool")},r={axis:t,keepDims:n};return Lr.runKernel(Ye,s,r)}}),rl=Kr({any_:function(e,t=null,n=!1){const s={x:Hr(e,"x","any","bool")},r={axis:t,keepDims:n};return Lr.runKernel(Je,s,r)}}),al=Kr({argMax_:function(e,t=0){const n={x:Hr(e,"x","argMax")},s={axis:t};return Lr.runKernel(Ze,n,s)}}),il=Kr({argMin_:function(e,t=0){const n={x:Hr(e,"x","argMin")},s={axis:t};return Lr.runKernel(Qe,n,s)}}),ol=Kr({asin_:function(e){const t={x:Hr(e,"x","asin")};return Lr.runKernel(et,t)}}),ll=Kr({asinh_:function(e){const t={x:Hr(e,"x","asinh")};return Lr.runKernel(tt,t)}}),ul=Kr({atan_:function(e){const t={x:Hr(e,"x","atan")};return Lr.runKernel(nt,t)}}),cl=Kr({atan2_:function(e,t){let n=Hr(e,"a","atan2"),s=Hr(t,"b","atan2");[n,s]=Er(n,s);const r={a:n,b:s};return Lr.runKernel(rt,r)}}),hl=Kr({atanh_:function(e){const t={x:Hr(e,"x","atanh")};return Lr.runKernel(st,t)}});function pl(e,t,n,s,r="NHWC",a){return ml(e,[...t,e[3]],n,a,s,null,null,Nl(r))}function dl(e,t,n,s,r,a,i="channelsLast"){const[o,l]=bl(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return ml(e,u,n,s,r,a,!1,i)}function fl(e,t,n,s,r,a,i="NDHWC"){const[o,l,u]=xl(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return gl(e,c,n,s,r,!1,h,a)}function ml(e,t,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[p,d,,f]=t,[m,g]=bl(n),[y,b]=bl(s),x=wl(p,y),w=wl(d,b),{padInfo:k,outHeight:v,outWidth:I}=function(e,t,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=yl(e,t,n));const a=e[1];return[kl((e[0]-t+2*s)/n+1,r),kl((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+a-t),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(e/2),p=e-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],d="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=kl((t-a+p+d)/s+1,o),h=kl((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,x,w,a,o),N=i?f*h:f;let S;return"channelsFirst"===o?S=[l,N,v,I]:"channelsLast"===o&&(S=[l,v,I,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:v,outWidth:I,outChannels:N,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function gl(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=xl(n),[w,k,v]=xl(s),I=wl(d,w),N=wl(f,k),S=wl(m,v),{padInfo:C,outDepth:$,outHeight:T,outWidth:E}=function(e,t,n,s,r,a,i,o,l,u,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=yl(e,t,s));const i=e[1],o=e[2];return[kl((e[0]-t+2*r)/s+1,a),kl((i-t+2*r)/s+1,a),kl((o-t+2*r)/s+1,a),1]}([t,n,s,1],o,0,r,e,c);p=a[0],d=a[1],f=a[2]}else if("same"===e){p=Math.ceil(t/r),d=Math.ceil(n/a),f=Math.ceil(s/i);const e=(p-1)*r+o-t,c=(d-1)*a+l-n,m=(f-1)*i+u-s,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/r),d=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(r,u,c,h,y,b,x,I,N,S,o),A=a?g*p:g;let R;return"channelsFirst"===i?R=[l,A,$,T,E]:"channelsLast"===i&&(R=[l,$,T,E,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:$,outHeight:T,outWidth:E,outChannels:A,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:k,dilationWidth:v,inShape:e,outShape:R,filterShape:t}}function yl(e,t,n,s=1){const r=wl(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function bl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function xl(e){return"number"==typeof e?[e,e,e]:e}function wl(e,t){return t<=1?e:e+(e-1)*(t-1)}function kl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function vl(e){const[t,n,s]=bl(e);return 1===t&&1===n&&1===s}function Il(e,t){return vl(e)||vl(t)}function Nl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const Sl=Kr({reshape_:function(e,t){const n={x:Hr(e,"x","reshape","string_or_numeric")},s={shape:t};return Lr.runKernel(Zn,n,s)}}),Cl=Kr({avgPool_:function(e,t,n,s,r){const a=Hr(e,"x","avgPool","float32");Z(Il(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations \'1\'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Sl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Z(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=r&&Z(ae(s),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let c=Lr.runKernel(at,l,u);return c=Ha(c,a.dtype),o?Sl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),$l=Kr({avgPool3d_:function(e,t,n,s,r,a="NDHWC",i){null==i?i=[1,1,1]:ro("dilations is deprecated, this field will be gone in v3.0.0.");const o=Hr(e,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Z(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),Z("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Z(Il(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations \'${i}\'`)),null!=r&&Z(ae(s),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const c={x:l},h={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a,dilations:i};let p=Lr.runKernel(ot,c,h);return p=Ha(p,l.dtype),u?Sl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Tl=Kr({concat_:function(e,t=0){Z(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=jr(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\\n          with dtype ${e.dtype}. `)})),1===n.length)return ja(n[0]);const s=n,r={axis:t};return Lr.runKernel(bt,s,r)}}),El=Kr({sigmoid_:function(e){const t={x:Hr(e,"x","sigmoid")};return Lr.runKernel(fs,t)}}),Al=Kr({slice_:function(e,t,n){const s=Hr(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:t,size:n};return Lr.runKernel(cs,r,a)}}),Rl=Kr({tanh_:function(e){const t={x:Hr(e,"x","tanh")};return Lr.runKernel($s,t)}}),Dl=Kr({basicLSTMCell_:function(e,t,n,s,r,a){const i=Hr(e,"forgetBias","basicLSTMCell"),o=Hr(t,"lstmKernel","basicLSTMCell"),l=Hr(n,"lstmBias","basicLSTMCell"),u=Hr(s,"data","basicLSTMCell"),c=Hr(r,"c","basicLSTMCell"),h=Hr(a,"h","basicLSTMCell"),p=Tl([u,h],1),d=hi(p,o),f=Io(d,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Al(f,[0,0],y),x=Al(f,[0,g],y),w=Al(f,[0,2*g],y),k=Al(f,[0,3*g],y),v=Io(Co(El(b),Rl(x)),Co(c,El(Io(i,w))));return[v,Co(Rl(v),El(k))]}}),Fl=Kr({batchToSpaceND_:function(e,t,n){const s=Hr(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));Z(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),Z(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Z(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const a={x:s},i={blockShape:t,crops:n};return Lr.runKernel(ct,a,i)}}),_l=Kr({batchNorm_:function(e,t,n,s,r,a){null==a&&(a=.001);const i=Hr(e,"x","batchNorm"),o=Hr(t,"mean","batchNorm"),l=Hr(n,"variance","batchNorm");let u,c;null!=r&&(u=Hr(r,"scale","batchNorm")),null!=s&&(c=Hr(s,"offset","batchNorm")),Z(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Z(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Z(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Sl(e,[1,1,1,e.size]):2===e.rank?Sl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Sl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},d=Lr.runKernel(Jt,h,p);return Sl(d,i.shape)}}),Ol=Kr({batchNorm2d_:function(e,t,n,s,r,a){const i=Hr(e,"x","batchNorm"),o=Hr(t,"mean","batchNorm"),l=Hr(n,"variance","batchNorm");let u,c;return null!=r&&(u=Hr(r,"scale","batchNorm")),null!=s&&(c=Hr(s,"offset","batchNorm")),Z(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),Z(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),Z(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&Z(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&Z(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),_l(i,o,l,c,u,a)}}),Ml=Kr({batchNorm3d_:function(e,t,n,s,r,a){const i=Hr(e,"x","batchNorm"),o=Hr(t,"mean","batchNorm"),l=Hr(n,"variance","batchNorm");let u,c;return null!=r&&(u=Hr(r,"scale","batchNorm")),null!=s&&(c=Hr(s,"offset","batchNorm")),Z(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),Z(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),Z(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&Z(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&Z(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),_l(i,o,l,c,u,a)}}),Ll=Kr({batchNorm4d_:function(e,t,n,s,r,a){const i=Hr(e,"x","batchNorm"),o=Hr(t,"mean","batchNorm"),l=Hr(n,"variance","batchNorm");let u,c;return null!=r&&(u=Hr(r,"scale","batchNorm")),null!=s&&(c=Hr(s,"offset","batchNorm")),Z(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),Z(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),Z(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&Z(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&Z(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),_l(i,o,l,c,u,a)}}),zl=Kr({bincount_:function(e,t,n){const s=Hr(e,"x","bincount"),r=Hr(t,"weights","bincount");Z("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),Z(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Z(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return Lr.runKernel(ht,a,i)}}),Pl=Kr({broadcastTo_:function(e,t){let n=Hr(e,"broadcastTo","x");const s=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Sl(n,e)}const r=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ja(n);const i={x:n},o={reps:a};return Lr.runKernel(Ts,i,o)}}),Bl=Kr({ceil_:function(e){const t={x:Hr(e,"x","ceil")};return Lr.runKernel(ft,t)}}),Wl=Kr({clipByValue_:function(e,t,n){const s=Hr(e,"x","clipByValue");Z(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const r={x:s},a={clipValueMin:t,clipValueMax:n};return Lr.runKernel(mt,r,a)}}),Vl=Kr({concat1d_:function(e){return Tl(e,0)}}),Ul=Kr({concat2d_:function(e,t){return Tl(e,t)}}),Gl=Kr({concat3d_:function(e,t){return Tl(e,t)}}),Hl=Kr({concat4d_:function(e,t){return Tl(e,t)}}),jl=Kr({conv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Hr(e,"x","conv2d"),l=Hr(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Z(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Z(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&Z(ae(s),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];Z(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Z(Il(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations \'${a}\'`));const p={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=Lr.runKernel(xt,p,d);return c?Sl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ql=Kr({conv1d_:function(e,t,n,s,r="NWC",a=1,i){const o=Hr(e,"x","conv1d"),l=Hr(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Sl(o,[1,o.shape[0],o.shape[1]])),Z(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Z(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&Z(ae(s),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),Z(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Z(Il(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation \'${a}\'`)),Z("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=Sl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=Sl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=jl(p,h,[1,n],s,"NHWC",[1,a],i);return Sl(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Kl=Kr({conv2DBackpropInput_:function(e,t,n,s,r,a="NHWC",i){Z(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Z(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Z(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Z(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];Z(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Z(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&Z(ae(r),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p={dy:l,filter:n},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Lr.runKernel(kt,p,d);return u?Sl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Xl=Kr({conv2dTranspose_:function(e,t,n,s,r,a){const i=Hr(e,"x","conv2dTranspose"),o=Hr(t,"filter","conv2dTranspose");return Kl(n,i,o,s,r,"NHWC",a)}}),Yl=Kr({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=Hr(e,"x","conv3d"),o=Hr(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Sl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Z(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Z(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Z(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Z(Il(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations \'${a}\'`)),Z("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},p=Lr.runKernel(vt,c,h);return u?Sl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Jl=Kr({conv3DBackpropInput_:function(e,t,n,s,r){Z(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];Z(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),Z(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Z(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Z(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Z(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},p=Lr.runKernel(Nt,c,h);return o?Sl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Zl=Kr({conv3dTranspose_:function(e,t,n,s,r){const a=Hr(e,"x","conv3dTranspose"),i=Hr(t,"filter","conv3dTranspose");return Jl(n,a,i,s,r)}}),Ql=Kr({cos_:function(e){const t={x:Hr(e,"x","cos")};return Lr.runKernel(St,t)}}),eu=Kr({cosh_:function(e){const t={x:Hr(e,"x","cosh")};return Lr.runKernel(Ct,t)}}),tu=Kr({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:Hr(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:s};return Lr.runKernel($t,r,a)}}),nu=Kr({denseBincount_:function(e,t,n,s=!1){const r=Hr(e,"x","denseBincount"),a=Hr(t,"weights","denseBincount");Z("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),Z(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),Z(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Z(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return Lr.runKernel(Et,i,o)}}),su=Kr({depthToSpace_:function(e,t,n="NHWC"){const s=Hr(e,"x","depthToSpace"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];Z(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\\n    ${r} and ${t}  for depthToSpace with input shape\\n    ${s.shape}`)),Z(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\\n    ${a} and ${t} for depthToSpace with input shape\\n        ${s.shape}`)),Z(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return Lr.runKernel(At,o,l)}}),ru=Kr({depthwiseConv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Hr(e,"x","depthwiseConv2d"),l=Hr(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Z(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Z(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),Z(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&Z(ae(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},d=Lr.runKernel(Rt,h,p);return c?Sl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),au=Kr({diag_:function(e){const t={x:Hr(e,"x","diag")};return Lr.runKernel(_t,t)}}),iu=Kr({dilation2d_:function(e,t,n,s,r=[1,1],a="NHWC"){const i=Hr(e,"x","dilation2d"),o=Hr(t,"filter","dilation2d");Z(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Z(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Z("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Sl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},p=Lr.runKernel(Ot,c,h);return u?Sl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),ou=Kr({equal_:function(e,t){let n=Hr(e,"a","equal"),s=Hr(t,"b","equal");[n,s]=Er(n,s),Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(Vt,r)}}),lu=Kr({where_:function(e,t,n){const s=Hr(t,"a","where"),r=Hr(n,"b","where"),a=Hr(e,"condition","where","bool"),i=Ko(s.shape,r.shape),o=Pl(s,i),l=Pl(r,i);1===a.rank&&Z(a.shape[0]===s.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&Q(a.shape,l.shape,"Error in where: ");const u={condition:a,t:o,e:l};return Lr.runKernel(ls,u)}}),uu=Kr({divNoNan_:function(e,t){let n=Hr(e,"a","div"),s=Hr(t,"b","div");[n,s]=Er(n,s);const r=So(n,s),a=Eo(r),i=ou(s,a);return lu(i,a,r)}}),cu=Kr({dot_:function(e,t){const n=Hr(e,"t1","dot"),s=Hr(t,"t2","dot");Z(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(Z(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=Sl(n,[1,-1]),t=Sl(s,[-1,1]),r=hi(e,t);return Sl(r,[])}if(1===n.rank&&2===s.rank){const e=Sl(n,[1,-1]),t=Sl(s,[s.shape[0],s.shape[1]]),r=hi(e,t);return Sl(r,[r.size])}if(2===n.rank&&1===s.rank){const e=Sl(s,[-1,1]),t=hi(n,e);return Sl(t,[t.size])}{const e=Sl(s,[s.shape[0],s.shape[1]]);return hi(n,e)}}}),hu=Kr({elu_:function(e){const t={x:Hr(e,"x","elu")};return Lr.runKernel(Pt,t)}}),pu=Kr({erf_:function(e){let t=Hr(e,"x","erf");Z("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ha(t,"float32"));const n={x:t};return Lr.runKernel(Wt,n)}}),du=Kr({exp_:function(e){const t={x:Hr(e,"x","exp")};return Lr.runKernel(Ut,t)}}),fu=Kr({expandDims_:function(e,t=0){const n=Hr(e,"x","expandDims","string_or_numeric");Z(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return Lr.runKernel(Gt,s,r)}}),mu=Kr({expm1_:function(e){const t={x:Hr(e,"x","expm1")};return Lr.runKernel(Ht,t)}}),gu=Kr({tile_:function(e,t){const n=Hr(e,"x","tile","string_or_numeric");Z(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return Lr.runKernel(Ts,s,r)}}),yu=Kr({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=Ga([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=Sl(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return gu(fu(i,0),[n[0],1,1]);if(2===n.length)return gu(fu(fu(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return gu(fu(fu(fu(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),bu=Kr({floor_:function(e){const t={x:Hr(e,"x","floor")};return Lr.runKernel(Xt,t)}}),xu=Kr({gather_:function(e,t,n=0,s=0){const r={x:Hr(e,"x","gather"),indices:Hr(t,"indices","gather","int32")},a={axis:n,batchDims:s};return Lr.runKernel(Zt,r,a)}}),wu=Kr({greater_:function(e,t){let n=Hr(e,"a","greater"),s=Hr(t,"b","greater");[n,s]=Er(n,s),Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(en,r)}}),ku=Kr({greaterEqual_:function(e,t){let n=Hr(e,"a","greaterEqual"),s=Hr(t,"b","greaterEqual");[n,s]=Er(n,s),Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(tn,r)}}),vu=Kr({imag_:function(e){const t={input:Hr(e,"input","imag")};return Lr.runKernel(rn,t)}}),Iu=Kr({isFinite_:function(e){const t={x:Hr(e,"x","isFinite")};return Lr.runKernel(an,t)}}),Nu=Kr({isInf_:function(e){const t={x:Hr(e,"x","isInf")};return Lr.runKernel(on,t)}}),Su=Kr({isNaN_:function(e){const t={x:Hr(e,"x","isNaN")};return Lr.runKernel(ln,t)}}),Cu=Kr({leakyRelu_:function(e,t=.2){const n={x:Hr(e,"x","leakyRelu")},s={alpha:t};return Lr.runKernel(un,n,s)}}),$u=Kr({less_:function(e,t){let n=Hr(e,"a","less"),s=Hr(t,"b","less");[n,s]=Er(n,s),Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(cn,r)}}),Tu=Kr({lessEqual_:function(e,t){let n=Hr(e,"a","lessEqual"),s=Hr(t,"b","lessEqual");[n,s]=Er(n,s),Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(hn,r)}});function Eu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return Lr.runKernel(pn,{},s)}const Au=Kr({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const a=Hr(e,"x","localResponseNormalization");Z(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\\n               rank ${a.rank}.`)),Z(ae(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Sl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:s,beta:r},c=Lr.runKernel(xn,l,u);return o?Sl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ru=Kr({log_:function(e){const t={x:Hr(e,"x","log")};return Lr.runKernel(dn,t)}}),Du=Kr({log1p_:function(e){const t={x:Hr(e,"x","log1p")};return Lr.runKernel(fn,t)}}),Fu=Kr({neg_:function(e){const t={x:Hr(e,"x","neg")};return Lr.runKernel(On,t)}}),_u=Kr({softplus_:function(e){const t={x:Hr(e,"x","softplus")};return Lr.runKernel(ms,t)}}),Ou=Kr({logSigmoid_:function(e){const t=Hr(e,"x","logSigmoid");return Oo((e=>({value:Fu(_u(Fu(e))),gradFunc:t=>Co(t,El(Fu(e)))})))(t)}}),Mu=Kr({max_:function(e,t=null,n=!1){const s={x:Hr(e,"x","max")},r={reductionIndices:t,keepDims:n};return Lr.runKernel(kn,s,r)}}),Lu=Kr({sum_:function(e,t=null,n=!1){let s=Hr(e,"x","sum");"bool"===s.dtype&&(s=Ha(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return Lr.runKernel(ys,r,a)}}),zu=Kr({logSoftmax_:function(e,t=-1){const n=Hr(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=Oo(((e,n)=>{const s=Mu(e,t,!0),r=Uo(e,s),a=Uo(Ha(r,"float32"),Ru(Lu(du(r),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[s]=n,r=du(s);return Uo(e,Co(Lu(e,t,!0),r))}}}));return s(n)}});function Pu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Bu(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function Wu(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Vu(e,t){return Bu(e,t.map((e=>1)),t)}function Uu(e,t,n){Z(Pu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Gu(e,t){if(Pu(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function Hu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function ju(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const qu=Kr({logSumExp_:function(e,t=null,n=!1){const s=Hr(e,"x","logSumExp"),r=pe(t,s.shape),a=Mu(s,r,!0),i=Uo(s,a),o=du(i),l=Lu(o,r),u=Ru(l),c=Io(Sl(a,u.shape),u);if(n){const e=Vu(c.shape,r);return Sl(c,e)}return c}}),Ku=Kr({logicalAnd_:function(e,t){const n=Hr(e,"a","logicalAnd","bool"),s=Hr(t,"b","logicalAnd","bool");Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(mn,r)}}),Xu=Kr({logicalNot_:function(e){const t={x:Hr(e,"x","logicalNot","bool")};return Lr.runKernel(gn,t)}}),Yu=Kr({logicalOr_:function(e,t){const n=Hr(e,"a","logicalOr","bool"),s=Hr(t,"b","logicalOr","bool");Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(yn,r)}}),Ju=Kr({logicalXor_:function(e,t){const n=Hr(e,"a","logicalXor","bool"),s=Hr(t,"b","logicalXor","bool");return Ko(n.shape,s.shape),Ku(Yu(e,t),Xu(Ku(e,t)))}}),Zu=Kr({maxPool_:function(e,t,n,s,r){const a=Hr(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Sl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Z(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Z(Il(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations \'1\'`)),null!=r&&Z(ae(s),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},c=Lr.runKernel(In,l,u);return o?Sl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Qu=Kr({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC",i){null==i?i=[1,1,1]:ro("dilations is deprecated, this field will be gone in v3.0.0.");const o=Hr(e,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Z(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),Z("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Z(Il(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations \'${i}\'`)),null!=r&&Z(ae(s),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const c={x:l},h={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a,dilations:i},p=Lr.runKernel(Sn,c,h);return u?Sl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ec=Kr({maxPoolWithArgmax_:function(e,t,n,s,r=!1){const a={x:Hr(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},o=Lr.runKernel($n,a,i);return{result:o[0],indexes:o[1]}}}),tc=Kr({mean_:function(e,t=null,n=!1){const s={x:Hr(e,"x","mean")},r={axis:t,keepDims:n};return Lr.runKernel(Tn,s,r)}}),nc=Kr({min_:function(e,t=null,n=!1){const s={x:Hr(e,"x","min")},r={axis:t,keepDims:n};return Lr.runKernel(En,s,r)}}),sc=Kr({minimum_:function(e,t){let n=Hr(e,"a","minimum"),s=Hr(t,"b","minimum");[n,s]=Er(n,s),"bool"===n.dtype&&(n=Ha(n,"int32"),s=Ha(s,"int32")),Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(An,r)}}),rc=Kr({mirrorPad_:function(e,t,n){Z("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=Hr(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Z(t.length===s.rank,(()=>`Padding doesn\'t match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)Z(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Z(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:t,mode:n},i={x:s};return Lr.runKernel(Rn,i,a)}}),ac=Kr({mod_:function(e,t){let n=Hr(e,"a","mod"),s=Hr(t,"b","mod");[n,s]=Er(n,s);const r={a:n,b:s};return Lr.runKernel(Dn,r)}}),ic=Kr({moments_:function(e,t=null,n=!1){const s=pe(t,(e=Hr(e,"x","moments")).shape),r=tc(e,s,n);let a=r.shape;n||(a=Vu(r.shape,s));const i=To(Uo(Ha(e,"float32"),Sl(r,a)));return{mean:r,variance:tc(i,s,n)}}}),oc=Kr({multiRNNCell_:function(e,t,n,s){const r=Hr(t,"data","multiRNNCell"),a=jr(n,"c","multiRNNCell"),i=jr(s,"h","multiRNNCell");let o=r;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}}),lc=Kr({multinomial_:function(e,t,n,s=!1){const r=Hr(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Sl(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:s},u=Lr.runKernel(Fn,o,l);return 1===i?Sl(u,[u.size]):u}}),uc=Kr({notEqual_:function(e,t){let n=Hr(e,"a","notEqual"),s=Hr(t,"b","notEqual");[n,s]=Er(n,s),Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(Mn,r)}});function cc(e,t="float32"){if("complex64"===t){const t=cc(e,"float32"),n=cc(e,"float32");return Xr(t,n)}const n=De(ne(e),t);return Lr.makeTensor(n,e,t)}function hc(e,t="float32"){if("complex64"===t){const t=hc(e,"float32"),n=cc(e,"float32");return Xr(t,n)}const n=Re(ne(e),t);return Lr.makeTensor(n,e,t)}const pc=Kr({onesLike_:function(e){const t={x:Hr(e,"x","onesLike")};return Lr.runKernel(Bn,t)}}),dc=Kr({outerProduct_:function(e,t){const n=Hr(e,"v1","outerProduct"),s=Hr(t,"v2","outerProduct");Z(1===n.rank&&1===s.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`));const r=Sl(n,[-1,1]),a=Sl(s,[1,-1]);return hi(r,a)}}),fc=Kr({pad_:function(e,t,n=0){const s=Hr(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},a={x:s};return Lr.runKernel(Un,a,r)}}),mc=Kr({pad1d_:function(e,t,n=0){return Z(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),fc(e,[t],n)}}),gc=Kr({pad2d_:function(e,t,n=0){return Z(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),fc(e,t,n)}}),yc=Kr({pad3d_:function(e,t,n=0){return Z(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),fc(e,t,n)}}),bc=Kr({pad4d_:function(e,t,n=0){return Z(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),fc(e,t,n)}}),xc=Kr({spaceToBatchND_:function(e,t,n){const s=Hr(e,"x","spaceToBatchND");Z(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),Z(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Z(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},a={blockShape:t,paddings:n};return Lr.runKernel(bs,r,a)}}),wc=Kr({pool_:function(e,t,n,s,r,a){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const i=Hr(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=Sl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Z(Il(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations \'${r}\'`));const u=dl(o.shape,t,a,r,s),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([u.inHeight,u.inWidth],c,h),m=p?s:"valid",g=p?o:xc(o,c,d),y=("avg"===n?()=>Cl(g,t,a,m):()=>Zu(g,t,a,m))(),b=p?y:Fl(y,c,f);return l?Sl(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),kc=Kr({prelu_:function(e,t){const n={x:Hr(e,"x","prelu"),alpha:Hr(t,"alpha","prelu")};return Lr.runKernel(jn,n)}}),vc=Kr({prod_:function(e,t=null,n=!1){let s=Hr(e,"x","prod");"bool"===s.dtype&&(s=Ha(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return Lr.runKernel(qn,r,a)}}),Ic=Kr({rand_:function(e,t,n){const s=ne(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(s);else if("int32"===n)r=new Int32Array(s);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(s)}for(let e=0;e<s;e++)r[e]=t();return Lr.makeTensor(r,e,n)}});var Nc=n(377);class Sc{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=Nc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Cc{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const r=s||Math.random();this.randu=Nc.alea(r.toString()),this.randn=new Sc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do{s=this.randn.nextValue(),a=1+this.c*s}while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class $c{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Nc.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Tc=Kr({randomGamma_:function(e,t,n=1,s="float32",r){if(null==n&&(n=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const a=new Cc(t,n,s,r),i=Ga(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Ec=Kr({randomNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Sc(t,n,s,!1,r),i=Ga(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Ac=Kr({randomUniform_:function(e,t=0,n=1,s="float32",r){const a=Ga(e,s),i=new $c(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function Rc(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return Lr.runKernel(Kn,{},r)}const Dc=Kr({real_:function(e){const t={input:Hr(e,"input","real")};return Lr.runKernel(Xn,t)}}),Fc=Kr({reciprocal_:function(e){const t={x:Hr(e,"x","reciprocal")};return Lr.runKernel(Yn,t)}}),_c=Kr({relu_:function(e){const t={x:Hr(e,"x","relu")};return Lr.runKernel(Jn,t)}}),Oc=Kr({relu6_:function(e){const t={x:Hr(e,"x","relu6")};return Lr.runKernel(ss,t)}}),Mc=Kr({reverse_:function(e,t){const n={x:Hr(e,"x","reverse")},s={dims:t};return Lr.runKernel(rs,n,s)}}),Lc=Kr({reverse1d_:function(e){const t=Hr(e,"x","reverse");return Z(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Mc(t,0)}}),zc=Kr({reverse2d_:function(e,t){const n=Hr(e,"x","reverse");return Z(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Mc(n,t)}}),Pc=Kr({reverse3d_:function(e,t){const n=Hr(e,"x","reverse");return Z(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Mc(n,t)}}),Bc=Kr({reverse4d_:function(e,t){const n=Hr(e,"x","reverse");return Z(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Mc(n,t)}}),Wc=Kr({round_:function(e){const t={x:Hr(e,"x","round")};return Lr.runKernel(as,t)}}),Vc=Kr({rsqrt_:function(e){const t={x:Hr(e,"x","rsqrt")};return Lr.runKernel(is,t)}}),Uc=Kr({selu_:function(e){const t={x:Hr(e,"x","selu")};return Lr.runKernel(us,t)}}),Gc=Kr({separableConv2d_:function(e,t,n,s,r,a=[1,1],i="NHWC"){const o=Hr(e,"x","separableConv2d"),l=Hr(t,"depthwiseFilter","separableConv2d"),u=Hr(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Z(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Z(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Z(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Z(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Z(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];Z(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=ru(c,l,s,r,i,a),m=jl(f,u,1,"valid",i);return h?Sl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Hc=async function(e,t){const n=Hr(e,"x","setdiff1d"),s=Hr(t,"y","setdiff1d");Z(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),Z(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Z(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const r=await n.data(),a=await s.data(),i=new Set(a);let o=0;for(let e=0;e<r.length;e++)i.has(r[e])||o++;const l=new mr([o],n.dtype),u=new mr([o],"int32");for(let e=0,t=0;e<r.length;e++)i.has(r[e])||(l.values[t]=r[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},jc=Kr({sign_:function(e){const t={x:Hr(e,"x","sign")};return Lr.runKernel(ds,t)}}),qc=Kr({sin_:function(e){const t={x:Hr(e,"x","sin")};return Lr.runKernel(hs,t)}}),Kc=Kr({sinh_:function(e){const t={x:Hr(e,"x","sinh")};return Lr.runKernel(ps,t)}}),Xc=Kr({slice1d_:function(e,t,n){const s=Hr(e,"x","slice1d");return Z(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Al(s,[t],[n])}}),Yc=Kr({slice2d_:function(e,t,n){const s=Hr(e,"x","slice2d");return Z(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Al(s,t,n)}}),Jc=Kr({slice3d_:function(e,t,n){const s=Hr(e,"x","slice3d");return Z(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Al(s,t,n)}}),Zc=Kr({slice4d_:function(e,t,n){const s=Hr(e,"x","slice4d");return Z(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Al(s,t,n)}}),Qc=Kr({softmax_:function(e,t=-1){const n=Hr(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return Lr.runKernel(ws,s,r)}}),eh=Kr({fft_:function(e){Z("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Lr.runKernel(jt,t)}}),th=Kr({ifft_:function(e){Z("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Lr.runKernel(sn,t)}}),nh=Kr({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=Sl(e,[n,t]);s=th(r)}else{const r=[n,2*(t-1)],a=Sl(Dc(e),[n,t]),i=Sl(vu(e),[n,t]),o=Mc(Al(a,[0,1],[n,t-2]),1),l=Co(Mc(Al(i,[0,1],[n,t-2]),1),Lo(-1)),u=Tl([a,o],1),c=Tl([i,l],1),h=Sl(Xr(u,c),[r[0],r[1]]);s=th(h)}if(s=Dc(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=Sl(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}}),sh=Kr({split_:function(e,t,n=0){const s={x:Hr(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Lr.runKernel(xs,s,r)}}),rh=Kr({rfft_:function(e,t){Z("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,r=Al(e,s,a),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=Tl([e,cc(s)],e.shape.length-1),n=t}else r=e;const a=Eo(r),i=Sl(Xr(r,a),[s,n]),o=eh(i),l=Math.floor(n/2)+1,u=Dc(o),c=vu(o),h=sh(u,[l,n-l],u.shape.length-1),p=sh(c,[l,n-l],c.shape.length-1),d=r.shape.slice();return d[r.shape.length-1]=l,Sl(Xr(h[0],p[0]),d)}}),ah=Kr({squaredDifference_:function(e,t){let n=Hr(e,"a","squaredDifference"),s=Hr(t,"b","squaredDifference");[n,s]=Er(n,s),Ko(n.shape,s.shape);const r={a:n,b:s};return Lr.runKernel(ks,r,{})}}),ih=Kr({squeeze_:function(e,t){const n=Hr(e,"x","squeeze");return Sl(n,de(n.shape,t).newShape)}}),oh=Kr({stack_:function(e,t=0){const n=jr(e,"tensors","stack","string_or_numeric");Z(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Z(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return Lr.runKernel(Vn,s,r)}}),lh=Kr({step_:function(e,t=0){const n={x:Hr(e,"x","step")},s={alpha:t};return Lr.runKernel(Os,n,s)}}),uh=Kr({stridedSlice_:function(e,t,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:Hr(e,"x","stridedSlice")},c={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Lr.runKernel(Ss,u,c)}}),ch=Kr({tan_:function(e){const t={x:Hr(e,"x","tan")};return Lr.runKernel(Cs,t)}});function hh(e,t){ee(e);const n=Vr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Yr(e,null,n,t)}function ph(e,t,n){if(ee(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Vr(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Yr(e,t,s,n)}function dh(e,t,n){if(ee(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const s=Vr(e,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Yr(e,t,s,n)}function fh(e,t,n){if(ee(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const s=Vr(e,n);if(5!==s.length&&1!==s.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Yr(e,t,s,n)}function mh(e,t,n){if(ee(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const s=Vr(e,n);if(6!==s.length&&1!==s.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Yr(e,t=t||s,s,n)}const gh=Kr({topk_:function(e,t=1,n=!0){const s=Hr(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t>r)throw new Error(`\'k\' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},i={k:t,sorted:n},[o,l]=Lr.runKernel(Es,a,i);return{values:o,indices:l}}}),yh=Kr({truncatedNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Sc(t,n,s,!0,r),i=Ga(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),bh=Kr({unique_:function(e,t=0){const n=Hr(e,"x","unique","string_or_numeric");Z(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[a,i]=Lr.runKernel(Rs,s,r);return{values:a,indices:i}}}),xh=Kr({unsortedSegmentSum_:function(e,t,n){const s=Hr(e,"x","unsortedSegmentSum"),r=Hr(t,"segmentIds","unsortedSegmentSum","int32");Z(ae(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return Lr.runKernel(Fs,a,i)}}),wh=Kr({unstack_:function(e,t=0){const n=Hr(e,"x","unstack","string_or_numeric");Z(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return Lr.runKernel(Ds,s,r)}});function kh(e,t=!0,n,s){return Lr.makeVariable(e,t,n,s)}function vh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=Ga(e,"int32"),r=Ga([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=s.indexToLoc(n[t]),i=t*e.length;r.values.set(a,i)}return r.toTensor()}const Ih=async function(e){const t=Hr(e,"condition","whereAsync","bool"),n=await t.data(),s=vh(t.shape,n);return e!==t&&t.dispose(),s},Nh=async function(e,t,n){const s=Hr(e,"tensor","boolMask"),r=Hr(t,"mask","boolMask","bool"),a=null==n?0:n,i=r.rank,o=s.shape;Z(i>0,(()=>"mask cannot be scalar")),Q(o.slice(a,a+i),r.shape,"mask\'s shape must match the first K dimensions of tensor\'s shape,");let l=1;for(let e=a;e<a+i;e++)l*=o[e];const u=o.slice(0,a).concat([l],o.slice(a+i)),c=Sl(s,u),h=Sl(r,[-1]),p=await Ih(h),d=ih(p,[1]),f=xu(c,d,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f},Sh=Kr({equalStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","equalStrict"),s=Hr(t,"b","equalStrict");return Q(n.shape,s.shape,"Error in equalStrict: "),ou(n,s)}}),Ch=Kr({greaterEqualStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","greaterEqualStrict"),s=Hr(t,"b","greaterEqualStrict");return Q(n.shape,s.shape,"Error in greaterEqualStrict: "),ku(n,s)}}),$h=Kr({greaterStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","greaterStrict"),s=Hr(t,"b","greaterStrict");return Q(n.shape,s.shape,"Error in greaterStrict: "),wu(n,s)}}),Th=Kr({lessEqualStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","lessEqualStrict"),s=Hr(t,"b","lessEqualStrict");return Q(n.shape,s.shape,"Error in lessEqualStrict: "),Tu(n,s)}}),Eh=Kr({lessStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","lessStrict"),s=Hr(t,"b","lessStrict");return Q(n.shape,s.shape,"Error in lessStrict: "),$u(n,s)}}),Ah=Kr({notEqualStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","notEqualStrict"),s=Hr(t,"b","notEqualStrict");return Q(n.shape,s.shape,"Error in notEqualStrict: "),uc(n,s)}}),Rh=Kr({addStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","addStrict"),s=Hr(t,"b","addStrict");return Q(n.shape,s.shape,"Error in addStrict: "),Io(n,s)}}),Dh=Kr({divStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","div"),s=Hr(t,"b","div");return Q(n.shape,s.shape,"Error in divideStrict: "),So(n,s)}}),Fh=Kr({maximumStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","maximumStrict"),s=Hr(t,"b","maximumStrict");return Q(n.shape,s.shape,"Error in maximumStrict: "),Xo(n,s)}}),_h=Kr({minimumStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","minimumStrict"),s=Hr(t,"b","minimumStrict");return Q(n.shape,s.shape,"Error in minimumStrict: "),sc(n,s)}}),Oh=Kr({modStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","modStrict"),s=Hr(t,"b","modStrict");return Q(n.shape,s.shape,"Error in modStrict: "),ac(n,s)}}),Mh=Kr({mulStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","mul"),s=Hr(t,"b","mul");return Q(n.shape,s.shape,"Error in multiplyStrict: "),Co(n,s)}}),Lh=Kr({powStrict_:function(e,t){return ro("strict variants of ops have been deprecated and will be removed in future"),Q(e.shape,t.shape,"Error in powStrict: "),Vo(e,t)}}),zh=Kr({squaredDifferenceStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","squaredDifferenceStrict"),s=Hr(t,"b","squaredDifferenceStrict");return Q(n.shape,s.shape,"Error in squaredDifferenceStrict: "),ah(n,s)}}),Ph=Kr({subStrict_:function(e,t){ro("strict variants of ops have been deprecated and will be removed in future");const n=Hr(e,"a","subStrict"),s=Hr(t,"b","subStrict");return Q(n.shape,s.shape,"Error in subStrict: "),Uo(n,s)}});function Bh(e,t,n=null){if(0===e.rank)return Ho(e);if(1!==e.rank&&null===n)return Bh(Sl(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Lu(Ho(e),n);if(t===1/0)return Mu(Ho(e),n);if(t===-1/0)return nc(Ho(e),n);if("euclidean"===t||2===t)return $o(Lu(Vo(Ho(e),Lo(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Mu(Lu(Ho(e),n[0]),n[1]-1);if(t===1/0)return Mu(Lu(Ho(e),n[1]),n[0]);if(t===-1/0)return nc(Lu(Ho(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return $o(Lu(To(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Wh=Kr({norm_:function(e,t="euclidean",n=null,s=!1){const r=Bh(e=Hr(e,"x","norm"),t,n);let a=r.shape;if(s){const t=pe(n,e.shape);a=Vu(r.shape,t)}return Sl(r,a)}}),Vh=Kr({movingAverage_:function(e,t,n,s,r=!0){const a=Hr(e,"v","movingAverage"),i=Hr(t,"x","movingAverage"),o=Hr(n,"decay","movingAverage");Ar(a,i),Z(re(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=Lo(1),u=Uo(l,o);let c=Co(Uo(i,a),u);if(r){Z(null!=s,(()=>"When using zeroDebias: true, step is required."));const e=Hr(s,"step","movingAverage");c=So(c,Uo(l,Vo(o,e)))}return Io(a,c)}}),Uh=Kr({scatterND_:function(e,t,n){const s=Hr(e,"indices","scatterND","int32"),r=Hr(t,"updates","scatterND");ki(r,s,n);const a={indices:s,updates:r},i={shape:n};return Lr.runKernel(os,a,i)}}),Gh=Kr({sparseToDense_:function(e,t,n,s=0){const r=Hr(e,"sparseIndices","sparseToDense","int32"),a=Hr(t,"sparseValues","sparseToDense"),i=Hr(s,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,s){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,a,n,i);const o={sparseIndices:r,sparseValues:a,defaultValue:i},l={outputShape:n};return Lr.runKernel(Ns,o,l)}}),Hh=Kr({gatherND_:function(e,t){const n=Hr(t,"indices","gatherND","int32"),s={params:Hr(e,"x","gatherND"),indices:n};return Lr.runKernel(Qt,s)}}),jh=Kr({dropout_:function(e,t,n,s){const r=Hr(e,"x","dropout");if(Z("float32"===r.dtype,(()=>`x has to be a floating point tensor since it\'s going to be scaled, but got a ${r.dtype} tensor instead.`)),Z(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof xr?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(re(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,o=So(bu(Io(Ac(a,0,1,"float32",s),i)),i);return Co(r,o)}});function qh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Kh(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return hh(r,"float32")}const Xh=async function(e,t,n=1){const s=Hr(e,"predictions","inTopK"),r=Hr(t,"targets","inTopK");Z(s.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`)),Z(s.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`)),Q(s.shape.slice(0,s.shape.length-1),r.shape,"predictions\'s shape should be align with the targets\' shape, except the last dimension.");const a=s.shape[s.shape.length-1];Z(n>0&&n<=a,(()=>`\'k\' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await s.data(),o=await r.data(),[l,u]=[i.length/a,a],c=fe("bool",l);for(let e=0;e<l;e++){const t=e*u,s=i.subarray(t,t+u),r=[];for(let e=0;e<s.length;e++)r.push({value:s[e],index:e});r.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(r[t].index===o[e]){c[e]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),Jr(c,r.shape,"bool")},Yh=Kr({conv2DBackpropFilter_:function(e,t,n,s,r,a="NHWC",i){let o=e;3===e.rank&&(o=Sl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Z(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Z(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Z(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];Z(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Z(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&Z(ae(r),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:o,dy:l},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return Lr.runKernel(wt,h,p)}});function Jh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Co(e,lh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Zh(e,t){let n=t;const s=qo(e.shape,t.shape);return s.length>0&&(n=Lu(n,s)),Sl(n,e.shape)}function Qh(e,t,n,s){if("linear"===t)return e;if("relu"===t)return _c(e);if("elu"===t)return hu(e);if("relu6"===t)return Oc(e);if("prelu"===t)return kc(e,n);if("leakyrelu"===t)return Cu(e,s);throw new Error(`Unknown fused activation ${t}.`)}const ep=(e,t)=>!(e>0)||"linear"===t,tp=Kr({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===ep(Lr.state.gradientDepth,l)){let h=jl(e,t,n,s,r,a,i);return null!=o&&(h=Io(h,o)),Qh(h,l,u,c)}const h=Hr(e,"x","conv2d"),p=Hr(t,"filter","conv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=Sl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Z(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),Z(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&Z(ae(s),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),Z(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),Z(Il(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations \'${a}\'`)),Z("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const m=ml(d.shape,p.shape,n,a,s,i);let g,y;null!=o&&(g=Hr(o,"bias","fused conv2d"),[g]=Er(g,h),Ko(m.outShape,g.shape)),null!=u&&(y=Hr(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[r,i,o,u]=t,c=Jh(e,o,l);Z(vl(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations \'${a}\'`));const h=[Kl(i.shape,c,r,n,s),Yh(i,c,r.shape,n,s)];if(null!=u){const e=Zh(u,c);h.push(e)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Oo(((e,t,n)=>{let s=Lr.runKernel(Ps,x,w);return n([t,e,s]),f&&(s=Sl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p)}{const e=Oo(((e,t,n,s)=>{let r=Lr.runKernel(Ps,x,w);return s([t,e,r,n]),f&&(r=Sl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p,g)}}}),np=Kr({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r,a=[1,1],i){let o=e;3===e.rank&&(o=Sl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return Lr.runKernel(Dt,u,c)}}),sp=Kr({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},h=Lr.runKernel(Ft,u,c);return l?Sl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),rp=Kr({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===ep(Lr.state.gradientDepth,l)){let h=ru(e,t,n,s,r,a,i);return null!=o&&(h=Io(h,o)),Qh(h,l,u,c)}const h=Hr(e,"x","depthwiseConv2d"),p=Hr(t,"filter","depthwiseConv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=Sl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Z(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),Z(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),Z(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),Z(Il(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations \'${a}\'`)),null!=i&&Z(ae(s),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${s}.`));const m=ml(d.shape,p.shape,n,a,s,i,!0);let g,y;null!=o&&(g=Hr(o,"bias","fused conv2d"),[g]=Er(g,h),Ko(m.outShape,g.shape)),null!=u&&(y=Hr(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{Z(vl(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations \'${a}\'`));const[r,o,u,c]=t,h=Jh(e,u,l),p=sp(o.shape,h,r,n,s,a,i),d=np(o,h,r.shape,n,s,a,i);return null!=c?[p,d,Zh(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Oo(((e,t,n)=>{let s=Lr.runKernel(Bs,x,w);return n([t,e,s]),f&&(s=Sl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p)}{const e=Oo(((e,t,n,s)=>{let r=Lr.runKernel(Bs,x,w);return s([t,e,r,n]),f&&(r=Sl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p,g)}}}),ap=Kr({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===ep(Lr.state.gradientDepth,a)){let l=hi(e,t,n,s);return null!=r&&(l=Io(l,r)),Qh(l,a,i,o)}let l=Hr(e,"a","fused matMul"),u=Hr(t,"b","fused matMul");[l,u]=Er(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ne(f),y=ne(m);Z(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),Z(re(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),Z(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const b=l.shape.slice(0,-2).concat([p,d]),x=Sl(l,n?[g,c,p]:[g,p,c]),w=Sl(u,s?[y,d,h]:[y,h,d]);let k,v;null!=r&&(k=Hr(r,"bias","fused matMul"),[k]=Er(k,l),Ko(b,k.shape)),null!=i&&(v=Hr(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=Jh(Sl(e,l.shape),l,a);let h,p;return n||s?!n&&s?(h=hi(c,o,!1,!1),p=hi(c,i,!0,!1)):n&&!s?(h=hi(o,c,!1,!0),p=hi(i,c,!1,!1)):(h=hi(o,c,!0,!0),p=hi(c,i,!0,!0)):(h=hi(c,o,!1,!0),p=hi(i,c,!0,!1)),null!=r?[h,p,Zh(u,c)]:[h,p]},N={a:x,b:w,bias:k,preluActivationWeights:v},S={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};if(null==r){const e=Oo(((e,t,n)=>{const s=Lr.runKernel(zs,N,S);return n([e,t,s]),{value:Sl(s,b),gradFunc:I}}));return e(x,w)}{const e=Oo(((e,t,n,s)=>{const r=Lr.runKernel(zs,N,S);return s([e,t,r,n]),{value:Sl(r,b),gradFunc:I}}));return e(x,w,k)}}}),ip=Kr({hammingWindow_:function(e){return Kh(e,.54,.46)}}),op=Kr({hannWindow_:function(e){return Kh(e,.5,.5)}}),lp=Kr({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Al(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=Tl([Al(e,a,t-s),Bo([s],r)]);i.push(o),a+=n}return 0===i.length?ph([],[0,t]):Sl(Tl(i),[i.length,t])}}),up=Kr({stft_:function(e,t,n,s,r=op){null==s&&(s=qh(t));const a=lp(e,t,n),i=Co(a,r(t)),o=[];for(let e=0;e<a.shape[0];e++)o.push(rh(Al(i,[e,0],[1,t]),s));return Tl(o)}}),cp=Kr({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=Hr(e,"image","cropAndResize"),o=Hr(t,"boxes","cropAndResize","float32"),l=Hr(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Z(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Z(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Z(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Z(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),Z(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),Z("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return Lr.runKernel(Tt,c,h)}}),hp=Kr({flipLeftRight_:function(e){const t=Hr(e,"image","flipLeftRight","float32");Z(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Lr.runKernel(Kt,n,{})}}),pp=Kr({rotateWithOffset_:function(e,t,n=0,s=.5){const r=Hr(e,"image","rotateWithOffset","float32");Z(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return Lr.runKernel(Ls,a,i)}});function dp(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),Z(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was \'${s}\'`)),Z(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank \'${e.rank}\'`)),Z(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Z(1===t.rank,(()=>"scores must be a 1D tensor")),Z(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Z(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was \'${a}\'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const fp=Kr({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Hr(e,"boxes","nonMaxSuppression"),i=Hr(t,"scores","nonMaxSuppression"),o=dp(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Lr.runKernel(Ln,{boxes:a,scores:i},l)}});function mp(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||gp)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function gp(e,t){return e>t?1:e<t?-1:0}function yp(e,t,n,s,r){return wp(e,t,n,s,r,0)}function bp(e,t,n,s,r,a){return wp(e,t,n,s,r,0,!1,a,!0)}function xp(e,t,n,s,r,a){return wp(e,t,n,s,r,a,!0)}function wp(e,t,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Ip);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=kp(e,a,h[n]);if(i>=s){o=!0;break}if(t.score=t.score*vp(s,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>r&&mp(u,t,Ip))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function kp(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-a)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function vp(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function Ip(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Np=Kr({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Hr(e,"boxes","nonMaxSuppression"),o=Hr(t,"scores","nonMaxSuppression"),l=dp(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Lr.runKernel(Pn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Sp=Kr({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Hr(e,"boxes","nonMaxSuppression"),o=Hr(t,"scores","nonMaxSuppression"),l=dp(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Lr.runKernel(zn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Cp=Kr({resizeBilinear_:function(e,t,n=!1,s=!1){const r=Hr(e,"images","resizeBilinear");Z(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),Z(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Z(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Sl(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=Lr.runKernel(ts,o,l);return i?Sl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),$p=Kr({resizeNearestNeighbor_:function(e,t,n=!1,s=!1){const r=Hr(e,"images","resizeNearestNeighbor");Z(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),Z(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Z("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Z(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Sl(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=Lr.runKernel(Qn,o,l);return i?Sl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Tp=Kr({bandPart_:function(e,t,n){Z(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Z(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=Hr(e,"a","bandPart");Z(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=Sl(Rc(0,a,1,"int32"),[-1,1]),l=Rc(0,i,1,"int32"),u=Uo(o,l),c=Ku(Tu(u,Lo(+t,"int32")),ku(u,Lo(-n,"int32"))),h=cc([a,i],s.dtype);return Sl(oh(wh(Sl(s,[-1,a,i])).map((e=>lu(c,e,h)))),r)}}),Ep=Kr({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Z(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Z(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=sh(e,e.shape[0],0).map((e=>ih(e,[0])));Z(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(Lr.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=Co(Lu(Co(n[s],e)),n[s]);e=Uo(e,t)}return So(e,Wh(e,"euclidean"))})));return t?oh(n,0):n}});function Ap(e,t=!1){return Lr.tidy((()=>{Z(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=yu(n),a=ja(e);const i=ph([[1]],[1,1]);let o=ja(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=a,l=o,u=r;[o,a,r]=Lr.tidy((()=>{const t=Al(a,[e,e],[n-e,1]),l=Wh(t),u=Al(a,[e,e],[1,1]),c=lu(wu(u,0),ph([[-1]]),ph([[1]])),h=Uo(u,Co(c,l)),p=So(t,h);o=1===p.shape[0]?ja(i):Tl([i,Al(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=Fu(So(hi(c,h),l)),f=Al(a,[e,0],[n-e,s]),m=Co(d,o),g=di(o);if(0===e)a=Uo(f,hi(m,hi(g,f)));else{const t=Uo(f,hi(m,hi(g,f)));a=Tl([Al(a,[0,0],[e,s]),t],0)}const y=di(m),b=Al(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Uo(b,hi(hi(b,o),y));else{const t=Uo(b,hi(hi(b,o),y));r=Tl([Al(r,[0,0],[n,e]),t],1)}return[o,a,r]})),co([t,l,u])}return!t&&n>s&&(r=Al(r,[0,0],[n,s]),a=Al(a,[0,0],[s,s])),[r,a]}))}const Rp=Kr({qr_:function(e,t=!1){if(Z(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Ap(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=wh(Sl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=Ap(e,t);r.push(n),a.push(s)})),[Sl(oh(r,0),e.shape),Sl(oh(a,0),e.shape)]}}});var Dp;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Dp||(Dp={}));const Fp=Kr({computeWeightedLoss_:function(e,t,n=Dp.SUM_BY_NONZERO_WEIGHTS){const s=Hr(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=Hr(t,"weights","computeWeightedLoss"));const a=null==r?s:Co(s,r);if(n===Dp.NONE)return a;if(n===Dp.SUM)return Lu(a);if(n===Dp.MEAN){if(null==r)return tc(a);{const e=s.size/r.size,t=So(Lu(a),Lu(r));return e>1?So(t,Lo(e)):t}}if(n===Dp.SUM_BY_NONZERO_WEIGHTS){if(null==r)return So(Lu(a),Lo(s.size));{const e=Co(r,hc(s.shape)),t=Ha(Lu(uc(e,Lo(0))),"float32");return So(Lu(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),_p=Kr({absoluteDifference_:function(e,t,n,s=Dp.SUM_BY_NONZERO_WEIGHTS){const r=Hr(e,"labels","absoluteDifference"),a=Hr(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Hr(n,"weights","absoluteDifference")),Q(r.shape,a.shape,"Error in absoluteDifference: ");const o=Ho(Uo(r,a));return Fp(o,i,s)}}),Op=Kr({cosineDistance_:function(e,t,n,s,r=Dp.SUM_BY_NONZERO_WEIGHTS){const a=Hr(e,"labels","cosineDistance"),i=Hr(t,"predictions","cosineDistance");let o=null;null!=s&&(o=Hr(s,"weights","cosineDistance")),Q(a.shape,i.shape,"Error in cosineDistance: ");const l=Lo(1),u=Uo(l,Lu(Co(a,i),n,!0));return Fp(u,o,r)}}),Mp=Kr({hingeLoss_:function(e,t,n,s=Dp.SUM_BY_NONZERO_WEIGHTS){let r=Hr(e,"labels","hingeLoss");const a=Hr(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Hr(n,"weights","hingeLoss")),Q(r.shape,a.shape,"Error in hingeLoss: ");const o=Lo(1);r=Uo(Co(Lo(2),r),o);const l=_c(Uo(o,Co(r,a)));return Fp(l,i,s)}}),Lp=Kr({huberLoss_:function(e,t,n,s=1,r=Dp.SUM_BY_NONZERO_WEIGHTS){const a=Hr(e,"labels","huberLoss"),i=Hr(t,"predictions","huberLoss");let o=null;null!=n&&(o=Hr(n,"weights","huberLoss")),Q(a.shape,i.shape,"Error in huberLoss: ");const l=Lo(s),u=Ho(Uo(i,a)),c=sc(u,l),h=Uo(u,c),p=Io(Co(Lo(.5),To(c)),Co(l,h));return Fp(p,o,r)}}),zp=Kr({logLoss_:function(e,t,n,s=1e-7,r=Dp.SUM_BY_NONZERO_WEIGHTS){const a=Hr(e,"labels","logLoss"),i=Hr(t,"predictions","logLoss");let o=null;null!=n&&(o=Hr(n,"weights","logLoss")),Q(a.shape,i.shape,"Error in logLoss: ");const l=Lo(1),u=Lo(s),c=Fu(Co(a,Ru(Io(i,u)))),h=Co(Uo(l,a),Ru(Io(Uo(l,i),u))),p=Uo(c,h);return Fp(p,o,r)}}),Pp=Kr({meanSquaredError_:function(e,t,n,s=Dp.SUM_BY_NONZERO_WEIGHTS){const r=Hr(e,"labels","meanSquaredError"),a=Hr(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Hr(n,"weights","meanSquaredError")),Q(r.shape,a.shape,"Error in meanSquaredError: ");const o=ah(r,a);return Fp(o,i,s)}}),Bp=Kr({sigmoidCrossEntropy_:function(e,t,n,s=0,r=Dp.SUM_BY_NONZERO_WEIGHTS){let a=Hr(e,"multiClassLabels","sigmoidCrossEntropy");const i=Hr(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Hr(n,"weights","sigmoidCrossEntropy")),Q(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=Lo(s),t=Lo(1),n=Lo(.5);a=Io(Co(a,Uo(t,e)),Co(n,e))}const l=function(e,t){const n=Hr(e,"labels","sigmoidCrossEntropyWithLogits"),s=Hr(t,"logits","sigmoidCrossEntropyWithLogits");Q(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=_c(s),a=Co(s,n),i=Du(du(Fu(Ho(s))));return Io(Uo(r,a),i)}(a,i);return Fp(l,o,r)}}),Wp=Kr({softmaxCrossEntropy_:function(e,t,n,s=0,r=Dp.SUM_BY_NONZERO_WEIGHTS){let a=Hr(e,"onehotLabels","softmaxCrossEntropy");const i=Hr(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Hr(n,"weights","softmaxCrossEntropy")),Q(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=Lo(s),t=Lo(1),n=Lo(a.shape[1]);a=Io(Co(a,Uo(t,e)),So(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=Oo(((e,t,s)=>{const r=qu(t,[n],!0),a=Uo(Ha(t,"float32"),r);s([e,a]);const i=Fu(Co(a,e));return{value:Lu(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=Vu(e.shape,[n]);return[Co(Sl(e,a),Uo(Ha(s,"float32"),du(r))),Co(Sl(e,a),Uo(du(r),Ha(s,"float32")))]}}}));return s(e,t)}(a,i);return Fp(l,o,r)}}),Vp={fft:eh,ifft:th,rfft:rh,irfft:nh},Up={hammingWindow:ip,hannWindow:op,frame:lp,stft:up},Gp={flipLeftRight:hp,resizeNearestNeighbor:$p,resizeBilinear:Cp,rotateWithOffset:pp,cropAndResize:cp,nonMaxSuppression:fp,nonMaxSuppressionAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Hr(e,"boxes","nonMaxSuppressionAsync"),i=Hr(t,"scores","nonMaxSuppressionAsync"),o=dp(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=yp(u,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),hh(h,"int32")},nonMaxSuppressionWithScore:Np,nonMaxSuppressionWithScoreAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Hr(e,"boxes","nonMaxSuppressionAsync"),o=Hr(t,"scores","nonMaxSuppressionAsync"),l=dp(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=xp(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:hh(p,"int32"),selectedScores:hh(d)}},nonMaxSuppressionPadded:Sp,nonMaxSuppressionPaddedAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Hr(e,"boxes","nonMaxSuppressionAsync"),o=Hr(t,"scores","nonMaxSuppressionAsync"),l=dp(i,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=bp(p,d,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:hh(f,"int32"),validOutputs:Lo(m,"int32")}}},Hp={bandPart:Tp,gramSchmidt:Ep,qr:Rp},jp={absoluteDifference:_p,computeWeightedLoss:Fp,cosineDistance:Op,hingeLoss:Mp,huberLoss:Lp,logLoss:zp,meanSquaredError:Pp,sigmoidCrossEntropy:Bp,softmaxCrossEntropy:Wp};class qp{static sgd(e){return new Jo(e)}static momentum(e,t,n=!1){return new Zo(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Qo(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Go(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Po(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Yo(e,t,n,s,r)}static adagrad(e,t=.1){return new Wo(e,t)}}const Kp={sgd:qp.sgd,momentum:qp.momentum,adadelta:qp.adadelta,adagrad:qp.adagrad,rmsprop:qp.rmsprop,adamax:qp.adamax,adam:qp.adam},Xp="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Yp(){return new Promise((e=>Xp((()=>e()))))}function Jp(e,t){const n=e[0].length;e.forEach(((e,t)=>{Z(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Z(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)Z(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Zp(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}const Qp=30;function ed(e){return e<=Qp?e:$e(e,Math.floor(Math.sqrt(e)))}function td(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function nd(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function sd(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function rd(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function ad(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function id(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}const od=1.7580993408473768,ld=1.0507009873554805,ud=.3275911,cd=.254829592,hd=-.284496736,pd=1.421413741,dd=-1.453152027,fd=1.061405429;function md(...e){Be().getBool("IS_TEST")||console.warn(...e)}function gd(...e){Be().getBool("IS_TEST")||console.log(...e)}function yd(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function bd(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function xd(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function wd(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function kd(e,t){return{real:e[2*t],imag:e[2*t+1]}}function vd(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function Id(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function Nd(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}function Sd(e,t,n=0){let s=[];if("number"==typeof t)Z(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Z(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}Z(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function Cd(e,t){let n,s=!1;for(e<=Qp?(n=e,s=!0):n=$e(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=$e(e,n+1);return n}function $d(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function Td(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Ed(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=cc(e.shape),s=Ha(e,"float32"),r=n.complex(s,t);return t.dispose(),s.dispose(),r}if(!be(e.dtype,t))return Lr.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const s=n.real(e),r=Ha(s,t);return s.dispose(),r}if("int32"===t)return n.int(e);if("bool"===t){const t=Lo(0,e.dtype),s=n.notEqual(e,t);return t.dispose(),s}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function Ad(e,t){return Lr.makeTensorFromDataId(e.dataId,t,e.dtype)}function Rd(e){try{return e.map((e=>fr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Dd(e){return e.map((e=>dr(e)))}const Fd={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,lh(Ha(n,"float32"),-1))}}},_d={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=To(Ha(n,"float32")),s=$o(Uo(Lo(1),t));return Fu(So(e,s))}}}},Od={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=$o(Uo(To(Ha(n,"float32")),1));return So(e,t)}}}},Md={kernelName:Ke,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ko(n.shape,s.shape);return{a:()=>{let t=e;const s=qo(n.shape,r);return s.length>0&&(t=Lu(t,s)),Sl(t,n.shape)},b:()=>{let t=e;const n=qo(s.shape,r);return n.length>0&&(t=Lu(t,n)),Sl(t,s.shape)}}}},Ld={kernelName:Xe,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},zd={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Eo(n)}}},Pd={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Eo(n)}}},Bd={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>So(e,$o(Uo(Lo(1),To(Ha(n,"float32")))))}}},Wd={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=$o(Io(Lo(1),To(Ha(n,"float32"))));return So(e,t)}}}},Vd={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ko(n.shape,s.shape);return{a:()=>{const t=Io(To(n),To(s));let a=Co(e,So(s,t));const i=qo(n.shape,r);return i.length>0&&(a=Lu(a,i)),Sl(a,n.shape)},b:()=>{const t=Io(To(n),To(s));let a=Fu(Co(e,So(n,t)));const i=qo(s.shape,r);return i.length>0&&(a=Lu(a,i)),Sl(a,s.shape)}}}},Ud={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>So(e,Io(To(Ha(n,"float32")),1))}}},Gd={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>So(e,Uo(Lo(1),To(Ha(n,"float32"))))}}},Hd=Kr({avgPool3dGrad_:function(e,t,n,s,r=[1,1,1],a,i){const o=Hr(e,"dy","avgPool3dGrad"),l=Hr(t,"input","avgPool3dGrad");let u=o,c=l,h=!1;4===l.rank&&(h=!0,u=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=Sl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),Z(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),Z(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),Z(Il(s,r),(()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations \'${r}\'`)),null!=i&&Z(ae(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={dy:u,input:c},d={filterSize:n,strides:s,dilations:r,pad:a,dimRoundingMode:i},f=Lr.runKernel(lt,p,d);return h?Sl(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),jd={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,dilations:i,pad:o,dimRoundingMode:l}=n,u=null==i?[1,1,1]:i;return{x:()=>Hd(e,s,r,a,u,o,l)}}},qd=Kr({avgPoolGrad_:function(e,t,n,s,r){const a=Hr(e,"dy","avgPoolGrad"),i=Hr(t,"input","avgPoolGrad");Z(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Sl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Sl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Z(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Z(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},p=Lr.runKernel(it,c,h);return u?Sl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Kd={kernelName:at,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>qd(e,s,r,a,i)}}},Xd={kernelName:ut,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>hi(e,r,!1,!1),b:()=>hi(e,s,!0,!1)}:a&&!i?{a:()=>hi(r,e,!1,!0),b:()=>hi(s,e,!1,!1)}:{a:()=>hi(r,e,!0,!0),b:()=>hi(e,s,!0,!0)}:{a:()=>hi(e,r,!1,!0),b:()=>hi(s,e,!0,!1)}}},Yd={kernelName:ct,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>xc(e,s,r)}}},Jd={kernelName:pt,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Lu(e,o,!0)}}},Zd={kernelName:dt,gradFunc:e=>({x:()=>e.clone()})},Qd={kernelName:ft,gradFunc:e=>({x:()=>Eo(e)})},ef={kernelName:mt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>lu(Ku(ku(s,r),Tu(s,a)),e,Eo(e))}}},tf={kernelName:yt,inputsToSave:["x"],gradFunc:Fd.gradFunc},nf={kernelName:bt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=pe(r,t[0].shape)[0],i=s.map((e=>e[a]));return sh(e,i,a).map((e=>()=>e))}},sf={kernelName:xt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return Z(vl(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations \'${a}\'`)),{x:()=>Kl(s.shape,e,r,i,o,l),filter:()=>Yh(s,e,r.shape,i,o,l)}}},rf={kernelName:kt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>jl(e,r,a,i,o,1,l),filter:()=>Yh(e,s,r.shape,a,i,o,l)}}},af=Kr({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=Sl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Z(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),Z(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Z(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Z(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),Z(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return Lr.runKernel(It,o,l)}}),of={kernelName:vt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;Z(vl(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations \'${s}\'`));const[i,o]=t;return{x:()=>Jl(i.shape,e,o,r,a),filter:()=>af(i,e,o.shape,r,a)}}},lf={kernelName:St,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(Fu(qc(Ha(n,"float32"))),e)}}},uf={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(Kc(Ha(n,"float32")),e)}}},cf={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=Gu([r],s.rank);let n=tu(e,r,a,!i);return null!=t&&(n=di(n,t)),n}}}},hf={kernelName:Rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;Z(vl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations \'${o}\'`));const[l,u]=t;return Z(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Z(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Z(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Z(Il(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations \'${o}\'.`)),null!=i&&Z(ae(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>sp(l.shape,e,u,r,a,s,i),filter:()=>np(l,e,u.shape,r,a,s,i)}}},pf={kernelName:Ot,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>Lr.runKernel(Mt,a,n),filter:()=>Lr.runKernel(Lt,i,n)}}},df={kernelName:Pt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>Lr.runKernel(Bt,s)}}},ff={kernelName:Wt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Co(du(Fu(To(n))),2/Math.sqrt(Math.PI));return{x:()=>Co(e,s)}}},mf={kernelName:Ut,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,n)}}},gf={kernelName:Gt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Sl(e,n.shape)}}},yf={kernelName:Ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,du(n))}}},bf={kernelName:Xt,gradFunc:e=>({x:()=>Eo(e)})},xf={kernelName:Yt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ko(n.shape,s.shape);return{a:()=>{const t=So(e,Ha(s,"float32")),a=qo(n.shape,r);return a.length>0?Sl(Lu(t,a),n.shape):t},b:()=>{let t=Co(e,Ha(n,"float32"));const a=qo(s.shape,r);a.length>0&&(t=Sl(Lu(t,a),s.shape));const i=To(s);return Fu(So(t,Ha(i,"float32")))}}}},wf={kernelName:Jt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?Lo(1):o,u=qo(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=Uo(r,a),p=Co(e,l),d=Vc(Io(i,Lo(s))),f=Co(Co(Co(d,d),d),Lo(-.5));return{x:()=>1===a.rank?Sl(Co(Co(e,gu(Sl(d,[1,1,1,a.shape[0]]),c)),l),r.shape):Sl(Co(Co(e,d),l),r.shape),mean:()=>{let e=Co(Co(d,Lo(-1)),p);return 1===a.rank&&(e=Lu(e,u)),Sl(e,a.shape)},variance:()=>{let e=Co(Co(f,h),p);return 1===a.rank&&(e=Lu(e,u)),Sl(e,a.shape)},scale:()=>{const t=Co(h,d);let n=Co(e,t);return 1===a.rank&&(n=Lu(n,u)),Sl(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Lu(t,u)),Sl(t,a.shape)}}}},kf={kernelName:Zt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=pe(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=vf(0,l),p=vf(l+1,l+1+c),d=If([o,[n],u]),f=Sl(e,d),m=Sl(r,[n]),g=If([[l],h,p]),y=di(f,g);let b=xh(y,m,s.shape[i]);const x=Hu(g);return b=di(b,x),b},indices:()=>r}}};function vf(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function If(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const Nf={kernelName:tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Eo(n),b:()=>Eo(s)}}},Sf={kernelName:nn,gradFunc:e=>({x:()=>Ha(e,"float32")})},Cf={kernelName:an,gradFunc:e=>({x:()=>Eo(e)})},$f={kernelName:on,gradFunc:e=>({x:()=>Eo(e)})},Tf={kernelName:ln,gradFunc:e=>({x:()=>Eo(e)})},Ef={kernelName:un,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=wu(s,0);return{x:()=>lu(a,e,Co(e,r))}}},Af={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>So(e,Io(n,1))}}},Rf={kernelName:dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>So(e,Ha(n,"float32"))}}},Df={kernelName:bn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=du(s);return Uo(e,Co(Lu(e,r,!0),t))}}}},Ff=Kr({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return Lr.runKernel(wn,o,l)}}),_f={kernelName:xn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Ff(s,r,e,a,i,o,l)}}};function Of(e,t,n,s){return t.rank<n.rank&&(t=Sl(t,Vu(t.shape,s))),e.rank<n.rank&&(e=Sl(e,Vu(e.shape,s))),{x:()=>Co(e,Ha(ou(n,t),e.dtype))}}const Mf={kernelName:kn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=Of(e,t[1],a,pe(r,a.shape));return{x:()=>i.x()}}},Lf={kernelName:vn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Co(e,Ha(ku(n,s),"float32")),b:()=>Co(e,Ha($u(n,s),"float32"))}}},zf=Kr({maxPool3dGrad_:function(e,t,n,s,r,a=[1,1,1],i,o){const l=Hr(e,"dy","maxPool3dGrad"),u=Hr(t,"input","maxPool3dGrad"),c=Hr(n,"output","maxPool3dGrad");let h=l,p=u,d=c,f=!1;4===u.rank&&(f=!0,h=Sl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=Sl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=Sl(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),Z(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),Z(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),Z(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Z(Il(r,a),(()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations \'${a}\'`)),null!=o&&Z(ae(i),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const m={dy:h,input:p,output:d},g={filterSize:s,strides:r,dilations:a,pad:i,dimRoundingMode:o},y=Lr.runKernel(Cn,m,g);return f?Sl(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Pf={kernelName:Sn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>zf(e,s,r,a,i,c,l,u)}}},Bf=Kr({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=Hr(e,"dy","maxPoolGrad"),l=Hr(t,"input","maxPoolGrad"),u=Hr(n,"output","maxPoolGrad");Z(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Z(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Z(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&Z(ae(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return Lr.runKernel(Nn,c,h)}}),Wf={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Bf(e,s,r,a,i,o)}}},Vf={kernelName:Rn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>Al(e,a,s.shape)}}},Uf={kernelName:Un,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>Al(e,a,s.shape)}}},Gf={kernelName:Hn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=Ko(a.shape,i.shape);return{a:()=>{const t=Ha(i,"float32");let n=Co(e,Co(t,Vo(a,Uo(t,Lo(1)))));const s=qo(a.shape,o);return s.length>0&&(n=Lu(n,s)),Sl(n,a.shape)},b:()=>{const t=wu(a,0),n=lu(t,Ru(a),Eo(a));let s=Co(e,Co(r,n));const l=qo(i.shape,o);return l.length>0&&(s=Lu(s,l)),Sl(s,i.shape)}}}},Hf={kernelName:us,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=wu(n,Lo(0)),s=Lo(od),r=Lo(ld),a=Co(e,r),i=Co(Co(e,s),du(Ha(n,"float32")));return lu(t,a,i)}}}},jf={kernelName:bs,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Fl(e,s,r)}}},qf={kernelName:xs,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>Tl(e,s)}}},Kf=[Fd,_d,Od,Md,Ld,zd,Pd,Bd,Wd,Vd,Ud,Gd,jd,Kd,Xd,Yd,Jd,Zd,Qd,ef,tf,nf,rf,sf,of,lf,uf,cf,hf,pf,{kernelName:zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ko(n.shape,s.shape);return{a:()=>{const t=So(e,Ha(s,"float32")),a=qo(n.shape,r);return a.length>0?Sl(Lu(t,a),n.shape):t},b:()=>{let t=Co(e,Ha(n,"float32"));const a=qo(s.shape,r);a.length>0&&(t=Sl(Lu(t,a),s.shape));const i=To(s);return Fu(So(t,Ha(i,"float32")))}}}},df,ff,mf,gf,yf,xf,bf,wf,kf,Nf,Sf,Cf,$f,Tf,Ef,Af,Rf,Df,_f,Mf,Mf,Lf,Pf,Wf,{kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=pe(r,s.shape),i=ne(Wu(s.shape,a)[1]);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=Sl(e,t);return So(Co(n,hc(s.shape,"float32")),i)}}}},{kernelName:En,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=Of(e,i,a,pe(r,a.shape));return{x:()=>o.x()}}},{kernelName:An,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Co(e,Ha(Tu(n,s),"float32")),b:()=>Co(e,Ha(wu(n,s),"float32"))}}},Vf,{kernelName:Dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ko(n.shape,s.shape);return{a:()=>{const t=qo(n.shape,r);return t.length>0?Sl(Lu(e,t),n.shape):e},b:()=>{const t=Co(e,Fu(bu(So(n,s)))),a=qo(s.shape,r);return a.length>0?Sl(Lu(t,a),s.shape):t}}}},{kernelName:_n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ko(n.shape,s.shape);return{a:()=>{const t=Co(e,Ha(s,"float32")),a=qo(n.shape,r);return a.length>0?Sl(Lu(t,a),n.shape):t},b:()=>{const t=Co(e,Ha(n,"float32")),a=qo(s.shape,r);return a.length>0?Sl(Lu(t,a),s.shape):t}}}},{kernelName:On,gradFunc:e=>({x:()=>Fu(e)})},{kernelName:Wn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>cc(n.shape,"float32")}}},{kernelName:Bn,gradFunc:e=>({x:()=>Eo(e)})},{kernelName:Vn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return wh(e,s).map((e=>()=>e))}},Uf,Uf,Gf,{kernelName:jn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=wu(n,0);return{x:()=>lu(r,e,Co(e,s)),alpha:()=>{let t=lu(r,Eo(e),Co(e,n));const a=qo(s.shape,e.shape);return a.length>0&&(t=Lu(t,a)),Sl(t,s.shape)}}}},{kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>So(e,Fu(To(n)))}}},{kernelName:ss,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Co(Tu(n,6),lh(n));return{x:()=>Co(e,Ha(s,"float32"))}}},{kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Ha(lh(n),"float32"))}}},{kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sl(e,n.shape)}}},{kernelName:ts,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Lr.runKernel(ns,r,n)}}},{kernelName:Qn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Lr.runKernel(es,r,n)}}},{kernelName:rs,gradFunc:(e,t,n)=>{const{dims:s}=n,r=pe(s,e.shape);return{x:()=>Mc(e,r)}}},{kernelName:as,gradFunc:e=>({x:()=>Eo(e)})},{kernelName:is,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fu(So(e,Co(Vo(n,1.5),2)))}}},{kernelName:ls,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ha(Eo(n),"float32"),t:()=>Co(e,Ha(n,e.dtype)),e:()=>Co(e,Ha(Xu(n),e.dtype))}}},Hf,{kernelName:fs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Co(n,Uo(Lo(1),n)))}}},{kernelName:ds,gradFunc:e=>({x:()=>Eo(e)})},{kernelName:hs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(Ql(Ha(n,"float32")),e)}}},{kernelName:ps,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(eu(Ha(n,"float32")),e)}}},{kernelName:cs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=Li(s,r,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>fc(e,u)}}},{kernelName:ws,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=Co(e,s);return{logits:()=>Uo(a,Co(Lu(a,[r],!0),s))}}},{kernelName:ms,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,El(n))}}},jf,jf,qf,qf,{kernelName:gs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>So(e,Co($o(Ha(n,"float32")),2))}}},{kernelName:ks,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Lo(2);return{a:()=>Co(e,Co(r,Uo(n,s))),b:()=>Co(e,Co(r,Uo(s,n)))}}},{kernelName:vs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Co(Ha(n,"float32"),2))}}},{kernelName:Os,gradFunc:e=>({x:()=>Eo(e)})},{kernelName:Is,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ko(n.shape,s.shape);return{a:()=>{let t=e;const s=qo(n.shape,r);return s.length>0&&(t=Lu(t,s)),Sl(t,n.shape)},b:()=>{let t=e;const n=qo(s.shape,r);return n.length>0&&(t=Lu(t,n)),Sl(Fu(t),s.shape)}}}},{kernelName:ys,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;pe(a,s.shape).forEach((e=>{r[e]=1}));const i=Sl(e,r),o=Co(i,hc(s.shape,"float32"));return{x:()=>o}}},{kernelName:Cs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>So(e,To(Ql(n)))}}},{kernelName:$s,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(Uo(Lo(1),To(n)),e)}}},{kernelName:Ts,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=Eo(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=Io(t,Al(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=Io(t,Al(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=Io(t,Al(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=Io(t,Al(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:As,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=Hu(r);return{x:()=>di(e,a)}}},{kernelName:Ds,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>oh(e,r)}}},{kernelName:Fs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Xo(t,Eo(t)),s=xu(e,n);let r=ku(t,Lo(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=fu(r,e+1);r=Ku(r,hc(s.shape,"bool"));const i=Eo(s);return lu(r,s,i)}(e,n)}}},{kernelName:_s,gradFunc:e=>({x:()=>Eo(e)})}];for(const e of Kf)qs(e);let Xf;function Yf(){return null==Xf&&(Xf=ko().epsilon()),Xf}xr.prototype.abs=function(){return this.throwIfDisposed(),Ho(this)},xr.prototype.acos=function(){return this.throwIfDisposed(),el(this)},xr.prototype.acosh=function(){return this.throwIfDisposed(),tl(this)},xr.prototype.addStrict=function(e){return this.throwIfDisposed(),Rh(this,e)},xr.prototype.add=function(e){return this.throwIfDisposed(),Io(this,e)},xr.prototype.all=function(e,t){return this.throwIfDisposed(),sl(this,e,t)},xr.prototype.any=function(e,t){return this.throwIfDisposed(),rl(this,e,t)},xr.prototype.argMax=function(e){return this.throwIfDisposed(),al(this,e)},xr.prototype.argMin=function(e){return this.throwIfDisposed(),il(this,e)},xr.prototype.asScalar=function(){return this.throwIfDisposed(),Z(1===this.size,(()=>"The array must have only 1 element.")),Sl(this,[])},xr.prototype.asType=function(e){return this.throwIfDisposed(),Ha(this,e)},xr.prototype.as1D=function(){return this.throwIfDisposed(),Sl(this,[this.size])},xr.prototype.as2D=function(e,t){return this.throwIfDisposed(),Sl(this,[e,t])},xr.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Sl(this,[e,t,n])},xr.prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),Sl(this,[e,t,n,s])},xr.prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),Sl(this,[e,t,n,s,r])},xr.prototype.asin=function(){return this.throwIfDisposed(),ol(this)},xr.prototype.asinh=function(){return this.throwIfDisposed(),ll(this)},xr.prototype.atan=function(){return this.throwIfDisposed(),ul(this)},xr.prototype.atan2=function(e){return this.throwIfDisposed(),cl(this,e)},xr.prototype.atanh=function(){return this.throwIfDisposed(),hl(this)},xr.prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),Cl(this,e,t,n,s)},xr.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Fl(this,e,t)},xr.prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),_l(this,e,t,n,s,r)},xr.prototype.broadcastTo=function(e){return this.throwIfDisposed(),Pl(this,e)},xr.prototype.cast=function(e){return this.throwIfDisposed(),Ha(this,e)},xr.prototype.ceil=function(){return this.throwIfDisposed(),Bl(this)},xr.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Wl(this,e,t)},xr.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof xr&&(e=[e]),Tl([this,...e],t)},xr.prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),ql(this,e,t,n,s,r,a)},xr.prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),Xl(this,e,t,n,s,r)},xr.prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),jl(this,e,t,n,s,r,a)},xr.prototype.cos=function(){return this.throwIfDisposed(),Ql(this)},xr.prototype.cosh=function(){return this.throwIfDisposed(),eu(this)},xr.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),tu(this,e,t,n)},xr.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),su(this,e,t)},xr.prototype.depthwiseConv2D=function(e,t,n,s,r,a){return ro("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),ru(this,e,t,n,s,r,a)},xr.prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),ru(this,e,t,n,s,r,a)},xr.prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),iu(this,e,t,n,s,r)},xr.prototype.divNoNan=function(e){return this.throwIfDisposed(),uu(this,e)},xr.prototype.divStrict=function(e){return this.throwIfDisposed(),Dh(this,e)},xr.prototype.div=function(e){return this.throwIfDisposed(),So(this,e)},xr.prototype.dot=function(e){return this.throwIfDisposed(),cu(this,e)},xr.prototype.elu=function(){return this.throwIfDisposed(),hu(this)},xr.prototype.equalStrict=function(e){return this.throwIfDisposed(),Sh(this,e)},xr.prototype.equal=function(e){return this.throwIfDisposed(),ou(this,e)},xr.prototype.erf=function(){return this.throwIfDisposed(),pu(this)},xr.prototype.exp=function(){return this.throwIfDisposed(),du(this)},xr.prototype.expandDims=function(e){return this.throwIfDisposed(),fu(this,e)},xr.prototype.expm1=function(){return this.throwIfDisposed(),mu(this)},xr.prototype.fft=function(){return this.throwIfDisposed(),eh(this)},xr.prototype.flatten=function(){return this.throwIfDisposed(),Sl(this,[this.size])},xr.prototype.floor=function(){return this.throwIfDisposed(),bu(this)},xr.prototype.floorDiv=function(e){return this.throwIfDisposed(),No(this,e)},xr.prototype.gather=function(e,t){return this.throwIfDisposed(),xu(this,e,t)},xr.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Ch(this,e)},xr.prototype.greaterEqual=function(e){return this.throwIfDisposed(),ku(this,e)},xr.prototype.greaterStrict=function(e){return this.throwIfDisposed(),$h(this,e)},xr.prototype.greater=function(e){return this.throwIfDisposed(),wu(this,e)},xr.prototype.ifft=function(){return this.throwIfDisposed(),th(this)},xr.prototype.irfft=function(){return this.throwIfDisposed(),nh(this)},xr.prototype.isFinite=function(){return this.throwIfDisposed(),Iu(this)},xr.prototype.isInf=function(){return this.throwIfDisposed(),Nu(this)},xr.prototype.isNaN=function(){return this.throwIfDisposed(),Su(this)},xr.prototype.leakyRelu=function(e){return this.throwIfDisposed(),Cu(this,e)},xr.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Th(this,e)},xr.prototype.lessEqual=function(e){return this.throwIfDisposed(),Tu(this,e)},xr.prototype.lessStrict=function(e){return this.throwIfDisposed(),Eh(this,e)},xr.prototype.less=function(e){return this.throwIfDisposed(),$u(this,e)},xr.prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Au(this,e,t,n,s)},xr.prototype.logSigmoid=function(){return this.throwIfDisposed(),Ou(this)},xr.prototype.logSoftmax=function(e){return this.throwIfDisposed(),zu(this,e)},xr.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),qu(this,e,t)},xr.prototype.log=function(){return this.throwIfDisposed(),Ru(this)},xr.prototype.log1p=function(){return this.throwIfDisposed(),Du(this)},xr.prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ku(this,e)},xr.prototype.logicalNot=function(){return this.throwIfDisposed(),Xu(this)},xr.prototype.logicalOr=function(e){return this.throwIfDisposed(),Yu(this,e)},xr.prototype.logicalXor=function(e){return this.throwIfDisposed(),Ju(this,e)},xr.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),hi(this,e,t,n)},xr.prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),Zu(this,e,t,n,s)},xr.prototype.max=function(e,t){return this.throwIfDisposed(),Mu(this,e,t)},xr.prototype.maximumStrict=function(e){return this.throwIfDisposed(),Fh(this,e)},xr.prototype.maximum=function(e){return this.throwIfDisposed(),Xo(this,e)},xr.prototype.mean=function(e,t){return this.throwIfDisposed(),tc(this,e,t)},xr.prototype.min=function(e,t){return this.throwIfDisposed(),nc(this,e,t)},xr.prototype.minimumStrict=function(e){return this.throwIfDisposed(),_h(this,e)},xr.prototype.minimum=function(e){return this.throwIfDisposed(),sc(this,e)},xr.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),rc(this,e,t)},xr.prototype.modStrict=function(e){return this.throwIfDisposed(),Oh(this,e)},xr.prototype.mod=function(e){return this.throwIfDisposed(),ac(this,e)},xr.prototype.mulStrict=function(e){return this.throwIfDisposed(),Mh(this,e)},xr.prototype.mul=function(e){return this.throwIfDisposed(),Co(this,e)},xr.prototype.neg=function(){return this.throwIfDisposed(),Fu(this)},xr.prototype.norm=function(e,t,n){return this.throwIfDisposed(),Wh(this,e,t,n)},xr.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Ah(this,e)},xr.prototype.notEqual=function(e){return this.throwIfDisposed(),uc(this,e)},xr.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),pi(this,e,t,n)},xr.prototype.onesLike=function(){return this.throwIfDisposed(),pc(this)},xr.prototype.pad=function(e,t){return this.throwIfDisposed(),fc(this,e,t)},xr.prototype.pool=function(e,t,n,s,r){return this.throwIfDisposed(),wc(this,e,t,n,s,r)},xr.prototype.powStrict=function(e){return this.throwIfDisposed(),Lh(this,e)},xr.prototype.pow=function(e){return this.throwIfDisposed(),Vo(this,e)},xr.prototype.prelu=function(e){return this.throwIfDisposed(),kc(this,e)},xr.prototype.prod=function(e,t){return this.throwIfDisposed(),vc(this,e,t)},xr.prototype.reciprocal=function(){return this.throwIfDisposed(),Fc(this)},xr.prototype.relu=function(){return this.throwIfDisposed(),_c(this)},xr.prototype.relu6=function(){return this.throwIfDisposed(),Oc(this)},xr.prototype.reshapeAs=function(e){return this.throwIfDisposed(),Sl(this,e.shape)},xr.prototype.reshape=function(e){return this.throwIfDisposed(),Sl(this,e)},xr.prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Cp(this,e,t,n)},xr.prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),$p(this,e,t,n)},xr.prototype.reverse=function(e){return this.throwIfDisposed(),Mc(this,e)},xr.prototype.rfft=function(){return this.throwIfDisposed(),rh(this)},xr.prototype.round=function(){return this.throwIfDisposed(),Wc(this)},xr.prototype.rsqrt=function(){return this.throwIfDisposed(),Vc(this)},xr.prototype.selu=function(){return this.throwIfDisposed(),Uc(this)},xr.prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Gc(this,e,t,n,s,r,a)},xr.prototype.sigmoid=function(){return this.throwIfDisposed(),El(this)},xr.prototype.sign=function(){return this.throwIfDisposed(),jc(this)},xr.prototype.sin=function(){return this.throwIfDisposed(),qc(this)},xr.prototype.sinh=function(){return this.throwIfDisposed(),Kc(this)},xr.prototype.slice=function(e,t){return this.throwIfDisposed(),Al(this,e,t)},xr.prototype.softmax=function(e){return this.throwIfDisposed(),Qc(this,e)},xr.prototype.softplus=function(){return this.throwIfDisposed(),_u(this)},xr.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),xc(this,e,t)},xr.prototype.split=function(e,t){return this.throwIfDisposed(),sh(this,e,t)},xr.prototype.sqrt=function(){return this.throwIfDisposed(),$o(this)},xr.prototype.square=function(){return this.throwIfDisposed(),To(this)},xr.prototype.squaredDifference=function(e){return this.throwIfDisposed(),ah(this,e)},xr.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),zh(this,e)},xr.prototype.squeeze=function(e){return this.throwIfDisposed(),ih(this,e)},xr.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof xr?[this,e]:[this,...e];return oh(n,t)},xr.prototype.step=function(e){return this.throwIfDisposed(),lh(this,e)},xr.prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),uh(this,e,t,n,s,r,a,i,o)},xr.prototype.subStrict=function(e){return this.throwIfDisposed(),Ph(this,e)},xr.prototype.sub=function(e){return this.throwIfDisposed(),Uo(this,e)},xr.prototype.sum=function(e,t){return this.throwIfDisposed(),Lu(this,e,t)},xr.prototype.tan=function(){return this.throwIfDisposed(),ch(this)},xr.prototype.tanh=function(){return this.throwIfDisposed(),Rl(this)},xr.prototype.tile=function(e){return this.throwIfDisposed(),gu(this,e)},xr.prototype.toBool=function(){return this.throwIfDisposed(),Ha(this,"bool")},xr.prototype.toFloat=function(){return this.throwIfDisposed(),Ha(this,"float32")},xr.prototype.toInt=function(){return this.throwIfDisposed(),Ha(this,"int32")},xr.prototype.topk=function(e,t){return this.throwIfDisposed(),gh(this,e,t)},xr.prototype.transpose=function(e){return this.throwIfDisposed(),di(this,e)},xr.prototype.unique=function(e){return this.throwIfDisposed(),bh(this,e)},xr.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),xh(this,e,t)},xr.prototype.unstack=function(e){return this.throwIfDisposed(),wh(this,e)},xr.prototype.where=function(e,t){return this.throwIfDisposed(),lu(e,this,t)},xr.prototype.zerosLike=function(){return this.throwIfDisposed(),Eo(this)};class Jf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jf.prototype)}}class Zf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zf.prototype)}}class Qf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qf.prototype)}}class em extends Error{constructor(e){super(e),Object.setPrototypeOf(this,em.prototype)}}class tm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tm.prototype)}}class nm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nm.prototype)}}function sm(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function rm(e,t){if(!e)throw new tm(t)}function am(e,t){let n=0;for(const s of e)s===t&&n++;return n}function im(e){return 1===e.length?e[0]:e}function om(e){return Array.isArray(e)?e:[e]}function lm(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function um(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\\w|$)/g,((e,t)=>t.toUpperCase()))}let cm={};function hm(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function pm(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>pm(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?pm(t):e[n]=t.value)}}}function dm(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in cm)a=cm[r];else if(a=t[r],null==a)throw new Qf(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Qf(`${s}: Improper config format: ${JSON.stringify(a)}.\\n\'className\' and \'config\' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in cm?[o,l]=cm.className:i in t&&([o,l]=t[i]),null==o)throw new Qf(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(cm))e[t]=cm[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},cm);for(const e of Object.keys(n))cm[e]=n[e];pm(a.config);const s=l(o,a.config,n,r);return cm=Object.assign({},t),s}{const e=Object.assign({},cm);for(const e of Object.keys(n))cm[e]=n[e];const t=new o(a.config);return cm=Object.assign({},e),t}}}function fm(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function mm(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function gm(e){if(null==e)throw new Qf(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function ym(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Qf(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function bm(e,t,n=0,s=1/0){return rm(n>=0),rm(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function xm(e,t){Array.isArray(e)?(Z(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>xm(e,`element ${n+1} of ${t}`)))):Z(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${wm(e)}.`))}function wm(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>wm(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function km(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function vm(e,t){return uo((()=>$o(Lu(Co(e,e),t,!0))))}class Im extends Pi{getConfig(){return{}}}class Nm extends Im{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return uo((()=>{const t=vm(e,this.axis),n=Wl(t,0,this.maxValue);return Co(e,So(n,Io(Yf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Nm.className="MaxNorm",Wi(Nm);class Sm extends Im{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return uo((()=>So(e,Io(Yf(),vm(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Sm.className="UnitNorm",Wi(Sm);class Cm extends Im{apply(e){return _c(e)}}Cm.className="NonNeg",Wi(Cm);class $m extends Im{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return uo((()=>{const t=vm(e,this.axis),n=Io(Co(this.rate,Wl(t,this.minValue,this.maxValue)),Co(1-this.rate,t));return Co(e,So(n,Io(Yf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}$m.className="MinMaxNorm",Wi($m);const Tm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Em(e){return hm(e)}function Am(e,t={}){return dm(e,Bi.getMap().classNameMap,t,"constraint")}function Rm(e){return null==e?null:"string"==typeof e?Am({className:e in Tm?Tm[e]:e,config:{}}):e instanceof Im?e:Am(e)}function Dm(e){return new Nm(e)}function Fm(e){return new Sm(e)}function _m(){return new Cm}function Om(e){return new $m(e)}const Mm=["channelsFirst","channelsLast"],Lm=["nearest","bilinear"],zm=["valid","same","causal"],Pm=["max","avg"],Bm=["sum","mul","concat","ave"],Wm=new Map;function Vm(e){ym(Mm,"DataFormat",e)}function Um(e){ym(zm,"PaddingMode",e)}function Gm(e){ym(Pm,"PoolMode",e)}const Hm=[],jm="/";function qm(e,t){Hm.push(e);try{const e=t();return Hm.pop(),e}catch(e){throw Hm.pop(),e}}function Km(e){if(!Jm(e))throw new Error("Not a valid tensor name: \'"+e+"\'");return(0===Hm.length?"":Hm.join(jm)+jm)+e}function Xm(e){if(!Jm(e))throw new Error("Not a valid tensor name: \'"+e+"\'");Wm.has(e)||Wm.set(e,0);const t=Wm.get(e);if(Wm.set(e,Wm.get(e)+1),t>0){const n=`${e}_${t}`;return Wm.set(n,1),n}return e}const Ym=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\\._\\/]*$/);function Jm(e){return!!e.match(Ym)}function Zm(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Qm(e){return hh(e=Array.isArray(e)?new Float32Array(e):e)}function eg(e){return nc(Qm(e)).dataSync()[0]}function tg(e){return Mu(Qm(e)).dataSync()[0]}function ng(e,t){if(t<e)throw new Qf(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}function sg(e,t){return e.asType(t)}function rg(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function ag(e,t,n){return uo((()=>{switch(e.rank){case 1:return Xc(e,t,n);case 2:return Yc(e,[t,0],[n,e.shape[1]]);case 3:return Jc(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Zc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Al(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Al(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Qf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ig(e,t,n){return uo((()=>{switch(e.rank){case 1:return Xc(e,t,n);case 2:return Yc(e,[0,t],[e.shape[0],n]);case 3:return Jc(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Zc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Qf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function og(e,t,n,s){return uo((()=>{switch(e.rank){case 1:return Xc(e,t,n);case 2:switch(s){case 1:return ag(e,t,n);case 2:return ig(e,t,n);default:throw new Qf(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return ag(e,t,n);case 2:return Jc(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ig(e,t,n);default:throw new Qf(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return ag(e,t,n);case 2:return Zc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Zc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ig(e,t,n);default:throw new Qf(`The axis is not within the rank of the tensor ${s}`)}default:throw new Qf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function lg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Tl(e,t)}function ug(e,t){switch(e.rank){case 1:return Vl([e,t]);case 2:return Ul([e,t],0);case 3:return Gl([e,t],0);case 4:return Hl([e,t],0);default:throw new Qf(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function cg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Qf(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return gu(e,t)}function hg(e,t=0,n=1,s,r){return Ec(e,t,n,s,r)}function pg(e,t,n,s){if(e.rank<2||t.rank<2)throw new em(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new em(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return ap({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?mg(e.rank,s,"channelsLast"):null,activation:n});{const r=e.shape.slice(),a=r.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([l,-1]);const h=[...r,...u];return ap({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?mg(e.rank,s,"channelsLast"):null,activation:n}).reshape(h)}}function dg(e,t,n){return uo((()=>(t=Array.isArray(t)?hh(t,"int32"):t.toInt(),xu(e,t,n))))}function fg(e){return Co(e,e)}function mg(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new Qf(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1,1,1]):t.reshape([1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,1,1,s[0]]):t.reshape([1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1,1]):t.reshape([1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,1,s[0]]):t.reshape([1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1]):t.reshape([1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,s[0]]):t.reshape([1].concat(s))}else if(e<3)return t;throw new Qf(`Unsupported input rank by biasAdd: ${t.rank}`)}function gg(e,t,n){return uo((()=>(null==n&&(n="channelsLast"),Vm(n),e.add(mg(e.rank,t,n)))))}function yg(e,t,n,s){return uo((()=>jh(e,t,n,s)))}function bg(e,t,n=!1){return n?e():t()}const xg=["fanIn","fanOut","fanAvg"],wg=["normal","uniform","truncatedNormal"];class kg extends Pi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class vg extends kg{apply(e,t){return cc(e,t)}}vg.className="Zeros",Wi(vg);class Ig extends kg{apply(e,t){return hc(e,t)}}Ig.className="Ones",Wi(Ig);class Ng extends kg{constructor(e){if(super(),"object"!=typeof e)throw new Qf(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Qf(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return uo((()=>Co(Lo(this.value),hc(e,t))))}getConfig(){return{value:this.value}}}Ng.className="Constant",Wi(Ng);class Sg extends kg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ac(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Sg.className="RandomUniform",Wi(Sg);class Cg extends kg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new em(`randomNormal does not support dType ${t}.`);return hg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Cg.className="RandomNormal",Wi(Cg);class $g extends kg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new em(`truncatedNormal does not support dType ${t}.`);return yh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}$g.className="TruncatedNormal",Wi($g);class Tg extends kg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return uo((()=>{if(2!==e.length||e[0]!==e[1])throw new Qf("Identity matrix initializer can only be used for 2D square matrices.");return Co(this.gain,yu(e[0]))}))}getConfig(){return{gain:this.gain}}}Tg.className="Identity",Wi(Tg);class Eg extends kg{constructor(e){if(super(),e.scale<0)throw new Qf(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,ym(xg,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){ym(wg,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(Vm(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Zm(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=Zm(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=Zm(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new em(`${this.getClassName()} does not support dType ${t}.`);return yh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Ac(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Eg.className="VarianceScaling",Wi(Eg);class Ag extends Eg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Eg.className}}Ag.className="GlorotUniform",Wi(Ag);class Rg extends Eg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Eg.className}}Rg.className="GlorotNormal",Wi(Rg);class Dg extends Eg{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Eg.className}}Dg.className="HeNormal",Wi(Dg);class Fg extends Eg{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Eg.className}}Fg.className="HeUniform",Wi(Fg);class _g extends Eg{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Eg.className}}_g.className="LeCunNormal",Wi(_g);class Og extends Eg{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Eg.className}}Og.className="LeCunNormal",Wi(Og);class Mg extends kg{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new em("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return uo((()=>{if(e.length<2)throw new em("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=hg(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Hp.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),Co(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Mg.className="Orthogonal",Wi(Mg);const Lg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function zg(e,t={}){return dm(e,Bi.getMap().classNameMap,t,"initializer")}function Pg(e){return hm(e)}function Bg(e){if("string"==typeof e){const t=e in Lg?Lg[e]:e;if("GlorotNormal"===t)return new Rg;if("GlorotUniform"===t)return new Ag;if("HeNormal"===t)return new Dg;if("HeUniform"===t)return new Fg;if("LeCunNormal"===t)return new _g;if("LeCunUniform"===t)return new Og;{const e={};return e.className=t,e.config={},zg(e)}}return e instanceof kg?e:zg(e)}function Wg(){return new vg}function Vg(){return new Ig}function Ug(e){return new Ng(e)}function Gg(e){return new Sg(e)}function Hg(e){return new Cg(e)}function jg(e){return new $g(e)}function qg(e){return new Tg(e)}function Kg(e){return new Eg(e)}function Xg(e){return new Ag(e)}function Yg(e){return new Rg(e)}function Jg(e){return new Dg(e)}function Zg(e){return new Fg(e)}function Qg(e){return new _g(e)}function ey(e){return new Og(e)}function ty(e){return new Mg(e)}let ny=0;function sy(){return ny++}const ry={};function ay(e=""){return e in ry||(ry[e]=0),ry[e]+=1,e+ry[e].toString()}function iy(e){return Array.isArray(e)&&Array.isArray(e[0])}function oy(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function ly(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Qf(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function uy(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Qf(`Expected exactly 1 Shape; got ${e.length}`)}return e}function cy(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const hy="Variable";class py{constructor(e,t="float32",n=hy,s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=sy(),n=null==n?hy:n,this.originalName=Km(n),this.name=Xm(this.originalName),this.trainable_=s,this.constraint=r,this.val=kh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function dy(e){return e.map((e=>e.read()))}function fy(e){e.forEach((e=>{e[0].write(e[1])}))}class my{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class gy{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=sy(),null!=a&&(this.originalName=Km(a),this.name=Xm(this.originalName)),this.rank=t.length}}let yy=0;class by{constructor(e,t){this.callArgs=t,this.id=yy++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let xy=0;class wy extends Pi{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=xy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=lm(e)+"_"+ay(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Zf(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Qf(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return im(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return im(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Jf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \\`getInputAt(nodeIndex)\\` instead.`);if(0===this.inboundNodes.length)throw new Jf(`Layer ${this.name} is not connected, no input to return.`);return im(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Jf(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Jf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \\`getOutputAt(nodeIndex)\\` instead.`);return im(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=om(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=om(this.inputSpec);if(e.length!==t.length)throw new Qf(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new Qf(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new Qf(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new Qf(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new Qf(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new Qf(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new Qf(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=om(e);let s=!0;for(const e of n)if(!(e instanceof gy)){s=!1;break}let r=!0;for(const e of n)if(e instanceof gy){r=!1;break}if(s===r)throw new Qf("Arguments to apply() must be all SymbolicTensors or all Tensors");return qm(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of om(e))t.push(n.shape);this.build(im(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=om(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=im(a),null!=this.activityRegularizer)throw new em("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=om(e);const t=[];for(const n of e)t.push(n.shape);return im(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new gy(a,n,this,om(e),t,this.name,s))):new gy(a,s,this,om(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new em("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Jf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Jf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Zf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return cy(this.weights)}build(e){this.built=!0}getWeights(e=!1){return dy(e?this.trainableWeights:this.weights)}setWeights(e){uo((()=>{const t=this.weights;if(t.length!==e.length)throw new Qf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=dy(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!re(a.shape,o.shape))throw new Qf(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}fy(n)}))}addWeight(e,t,n,s,r,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Qf(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=Bg("zeros"));const o=s.apply(t,n),l=new py(o,n,e,a,i);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=om(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=om(e);t=om(t),n=om(n),s=om(s),r=oy(r),a=oy(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new by({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer \'${this.name}\' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ky(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=ky(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class vy extends wy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:ay("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Qf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Qf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Qf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new gy(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new by({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Qf(`Cannot pass any input to an InputLayer\'s apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Iy(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Qf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new vy({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Ny(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];co(s)}}function Sy(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Cy;vy.className="InputLayer",Wi(vy),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Cy||(Cy={}));class $y{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Ty{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Ey extends $y{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=uo((()=>Io(this.totals[e],Co(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:uo((()=>{const n=Co(So(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ho(t[e])})))}}class Ay extends $y{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class Ry extends $y{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ne(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,s=hr();return(...r)=>{const a=hr();return a-s<t||(s=a,n=e(...r)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await Ny(n),s.push(this.yield(e,t,n))),s.push(Yp()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ny(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Ny(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Yp()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ny(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Ny(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Yp()):Ne(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ny(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ny(e),await this.trainEnd(e))}}function Dy(e,t){return null==e&&(e={}),e instanceof $y?[e]:Array.isArray(e)&&e[0]instanceof $y?e:om(e).map((e=>new Ry(e,t)))}class Fy{constructor(){}static registerCallbackConstructor(e,t){Z(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Fy.checkForDuplicate(t),null==Fy.constructors[e]&&(Fy.constructors[e]=[]),Fy.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Fy.constructors)Fy.constructors[+t].forEach((t=>{if(t===e)throw new Qf("Duplicate callback constructor.")}))}static clear(){Fy.constructors={}}static createCallbacks(e){const t=[];for(const n in Fy.constructors){const s=+n;e>=s&&t.push(...Fy.constructors[s])}return t.map((e=>new e))}}function _y(e,t,n,s,r,a,i,o,l){const u=new Ay,c=[new Ey,...Fy.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Ty(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Oy(e,t={},n=!1){return dm(e,Bi.getMap().classNameMap,t,"layer",n)}function My(e,t){return uo((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=Lu(fg(e),t,!0),s=Bo(n.shape,Yf()),r=$o(Xo(n,s));return So(e,r)}))}function Ly(e,t){return uo((()=>tc(fg(Uo(t,e)),-1)))}function zy(e,t){return uo((()=>tc(Ho(Uo(t,e)),-1)))}function Py(e,t){return uo((()=>{const n=Uo(e,t),s=Wl(Ho(e),Yf(),Number.MAX_VALUE),r=Ho(So(n,s));return Co(100,tc(r,-1))}))}function By(e,t,n=!1){return uo((()=>{if(n)t=Qc(t);else{const e=Lu(t,t.shape.length-1,!0);t=So(t,e)}return t=Wl(t,Yf(),1-Yf()),Fu(Lu(Co(e.toFloat(),Ru(t)),t.shape.length-1))}))}function Wy(e,t,n=!1){return uo((()=>{const s=bu(function(e){const t=[Zm(e.shape)];return e.reshape(t)}(e)).toInt(),r=(t=Wl(t,Yf(),1-Yf())).shape;return By(pi(s,r[r.length-1]).reshape(r),t,n)}))}function Vy(e,t){return uo((()=>{let n;return n=Wl(t,Yf(),1-Yf()),n=Ru(So(n,Uo(1,n))),tc(function(e,t){if(!re(e.shape,t.shape))throw new Qf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return uo((()=>{const n=t.relu(),s=t.abs().neg();return n.sub(t.mul(e)).add(s.exp().log1p())}))}(e,n),-1)}))}function Uy(e,t){return uo((()=>{const n=My(e,-1),s=My(t,-1),r=Co(n,s);return Fu(Lu(r,-1))}))}Fy.constructors={};const Gy={meanSquaredError:Ly,meanAbsoluteError:zy,meanAbsolutePercentageError:Py,meanSquaredLogarithmicError:function(e,t){return uo((()=>{const n=Wl(t,Yf(),Number.MAX_VALUE),s=Ru(Io(1,n)),r=Wl(e,Yf(),Number.MAX_VALUE),a=Ru(Io(1,r));return tc(fg(Uo(s,a)),-1)}))},squaredHinge:function(e,t){return uo((()=>{const n=Xo(0,Uo(1,Co(e,t)));return tc(fg(n),-1)}))},hinge:function(e,t){return uo((()=>{const n=Xo(0,Uo(1,Co(e,t)));return tc(n,-1)}))},categoricalHinge:function(e,t){return uo((()=>{const n=Lu(Co(e,t),-1),s=Mu(Co(Uo(1,e),t),-1);return Xo(0,Io(1,Uo(s,n)))}))},logcosh:function(e,t){return uo((()=>{const n=Math.log(2),s=Uo(t,e),r=Uo(Io(s,_u(Co(-2,s))),n);return tc(r,-1)}))},categoricalCrossentropy:By,sparseCategoricalCrossentropy:Wy,binaryCrossentropy:Vy,kullbackLeiblerDivergence:function(e,t){return uo((()=>{const n=Wl(e,Yf(),1),s=Wl(t,Yf(),1);return Lu(Co(e,Ru(So(n,s))),-1)}))},poisson:function(e,t){return uo((()=>{const n=Ru(Io(Yf(),t));return tc(Uo(t,Co(e,n)),-1)}))},cosineProximity:Uy};function Hy(e){if("string"==typeof e){if(e in Gy)return Gy[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Qf(t)}return e}function jy(e,t){return uo((()=>{const n=Co(.5,pc(t)),s=sg(wu(t,n),e.dtype);return tc(ou(e,s),-1)}))}function qy(e,t){return uo((()=>sg(ou(al(e,-1),al(t,-1)),"float32")))}function Ky(e,t){return uo((()=>Ku(e.equal(1),t.equal(1)).sum().cast("float32")))}function Xy(e,t){return uo((()=>{const n=Ky(e,t),s=function(e,t){return uo((()=>Ku(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),r=n.add(s);return lu(wu(r,0),n.div(r),0).cast("float32")}))}function Yy(e,t){return Vy(e,t)}function Jy(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),ou(e,t).asType("float32")}const Zy=By,Qy=Wy,eb={binaryAccuracy:jy,categoricalAccuracy:qy,precision:Xy,categoricalCrossentropy:Zy,sparseCategoricalCrossentropy:Qy,mse:Ly,MSE:Ly,mae:zy,MAE:zy,mape:Py,MAPE:Py,cosine:Uy};function tb(e){if("string"==typeof e&&e in eb)return eb[e];if("string"!=typeof e&&null!=e)return e;throw new Qf(`Unknown metric ${e}`)}function nb(e){if(rm(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Gy))if(Gy[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(eb))if(eb[n]===e){t=n;break}return void 0!==t?t:e.name}}const sb=1048576;function rb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!ab(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>sb&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${sb}.`)}}function ab(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!ab(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!ab(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function ib(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function ob(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}ib([`${e.name} (${e.getClassName()})`,s,e.countParams().toString()],t,n)}function lb(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];a.push(`${n}[${s}][${r}]`)}const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];ib([`${i} (${o})`,r,e.countParams().toString(),l],t,s);for(let e=1;e<a.length;++e)ib(["","","",a[e]],t,s)}function ub(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function cb(e,t){if(null===e)return null;if("string"==typeof e)return um(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];ub(t,r,s)?n.push(s):n.push(cb(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=um(n);t[e]=cb(s,e)}}return t}}function hb(e,t){if(null==e)return null;if("string"==typeof e)return lm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];ub(t,r,s)?n.push(s):n.push(hb(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[lm(n)]="name"!==n&&"className"!==n||"string"!=typeof s?hb(s,n):s}return t}}const pb="2.8.6";class db{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof db)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Qf(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ha(t,e.dtype)}catch(n){throw new Qf(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key \'${e.name}\' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof gy){if(null==this.id2Value[e.id])throw new Qf(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Qf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof gy){if(null==this.id2Value[e.id])throw new Qf(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Qf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&co(this.id2Mask)}}const fb={},mb={};function gb(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,p;if(null==fb[c]){const e=function(e,t){Z(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=bb(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=bb(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:yb(s)}}(i,t);h=e.sorted,p=e.recipientCounts,fb[c]=h,mb[c]=p}h=fb[c],p={},r||Object.assign(p,mb[c]);const d=new db(t);for(let e=0;e<h.length;++e){if(null!=s){const e=oo().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof vy)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=d.getValue(e),s=d.getMask(e);u.push(n),c.push(s),null!=s&&(m=!0),r||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=om(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=xb(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}r||co(f)}return d.disposeMasks(),a?l:l[0]}function yb(e){const t={};for(const n in e)t[n]=e[n].size;return t}function bb(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function xb(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class wb extends wy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=ay(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],mm(this.inputs).length!==this.inputs.length)throw new Qf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);mm(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;rm(0===n,"input layer has >1 nodes"),rm(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof vy))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new Zf(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(wb.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const p={};for(const e in s){const t=s[e];t in p||(p[t]=[]),p[t].push(r[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(fm);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof wb&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(fm);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Zf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Zf(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new by({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container \'${this.name}\' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Qf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Qf(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new Qf(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Qf(`${e.length} of ${s} weights are not set: ${e}`)}fy(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${pb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=hb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return uo((()=>{e=om(e);const n=new db;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return gb(this.outputs,n,t)}))}computeMask(e,t){return uo((()=>{let n;return e=om(e),n=null==t?sm(null,e.length):om(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=oy(e);if(t.length!==this.inputLayers.length)throw new Qf(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(fm);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=oy(t.computeOutputShape(im(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];rm(t in n),r.push(n[t])}return im(r)}runInternalGraph(e,t){null==t&&(t=sm(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(fm);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=om(t.call(e,u)),l=om(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=om(t.call(s,u)),l=om(t.computeMask(s,i));if(t.activityRegularizer)throw new em("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){rm(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof wb?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=wb.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Qf(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Qf("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Qf(`No such layer: ${e}`)}calculateLosses(){return uo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=wb.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=wb.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[wb.nodeKey(r,a)];null==l&&(l=0),e.push([r.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=wb.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=wb.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(im(n),s)}function l(e){const n=e.name,a=Oy(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Qf(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!gm(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],s=e[2];rm(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];rm(t in r);const a=r[t].inboundNodes[n].outputTensors;p.push(a[s])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new Qf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){uo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function kb(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function vb(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=uo((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());co(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),hh(r,"float32")}return null}function Ib(e,t){return Co(e,t)}const Nb=32;function Sb(e,t){let n,s;const r=t;n=r.xs,s=r.ys,Z(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \\`{xs: xVal, ys: yVal}\\`, where the two values may be \\`tf.Tensor\\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Cb("input",e.inputNames,n),i=Cb("output",e.outputNames,s),o=a[0].shape[0];Z(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),Z(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)Z(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)Z(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Cb(e,t,n){if(n instanceof xr)return[n];if(Array.isArray(n))return Z(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new Qf(`The feature data generated by the dataset lacks the required ${e} key \'${r}\'.`);s.push(n[r])}return s}}function $b(e){return"function"==typeof e.iterator}function Tb(e){Z(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Eb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ag(e,t,n-t))):ag(e,t,n-t)}function Ab(e,t){return uo((()=>null==e?null:Array.isArray(e)?e.map((e=>Ab(e,t))):dg(e,"int32"===t.dtype?t:t.toInt())))}function Rb(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function Db(e){const t=[];e instanceof xr&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(rg(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Fb(e,t){if(null==e)return;const n=[];if(t instanceof xr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof xr)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function _b(e){return Array.isArray(e)}function Ob(e){return!function(e){return e instanceof xr}(e)&&!_b(e)}function Mb(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(_b(e)&&e.length>0)t=!0;else if(Ob(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Qf(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Ob(e)){a=[];for(const n of t){if(null==e[n])throw new Qf(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(_b(e)){if(e.length!==t.length)throw new Qf(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new Qf(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Db(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Qf(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l>=0&&o!==l)throw new Qf(`Error when checking ${r}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function Lb(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Qf(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Qf(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Qf(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Qf(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class zb extends wb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Qf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),ib(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?ob(o[e],n,s):lb(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?cy(e.collectedTrainableWeights):cy(e.trainableWeights),t}(e),u=cy(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Kp.adagrad(.01),Adadelta:()=>Kp.adadelta(1,.95,Yf()),Adam:()=>Kp.adam(.001,.9,.999,Yf()),Adamax:()=>Kp.adamax(.002,.9,.999,Yf(),0),RMSProp:()=>Kp.rmsprop(.001,.9,0,Yf()),SGD:()=>Kp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Qf(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof zo))throw new Qf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Qf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Hy(e)))}else{const n=Hy(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Qf(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Hy(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],qm("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};qm("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Vy?-1!==["accuracy","acc"].indexOf(i)?s=jy:-1!==["crossentropy","ce"].indexOf(i)&&(s=Yy):this.lossFunctions[e]===Wy?-1!==["accuracy","acc"].indexOf(i)?s=Jy:-1!==["crossentropy","ce"].indexOf(i)&&(s=Qy):-1!==["accuracy","acc"].indexOf(i)?s=qy:-1!==["crossentropy","ce"].indexOf(i)&&(s=Zy),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=tb(i);a=e,n=""+nb(i)}let t;qm(n,(()=>{t=a})),r(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;Tb(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return im(this.testLoop(t,e,s,n.verbose,n.steps))}finally{Fb(r[0],e),Fb(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new em("Verbose mode is not implemented yet.");Z(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \\`batches\\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await i.next();if(a=uo((()=>{if(t.value){const{xs:n,ys:s}=Sb(e,t.value),i=n.concat(s),u=uo((()=>r(i)));if(co(i),0===l)for(let e=0;e<u.length;++e)a.push(Lo(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=uo((()=>Io(a[e],Co(c,t)))),l>0&&co(n)}co(u),o+=c,++l}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \\`batches\\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=So(a[e],o),co(t)}return im(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new Qf(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Qf(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Qf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new db;if(e instanceof xr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Qf(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Qf(`No value is provided for the model\'s input ${t.name}`);a.add(t,n)}const i=gb(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=sm(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new Qf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return uo((()=>{const s=this.checkNumSamples(e);if(n)throw new em("Verbose predictLoop() is not implemented yet.");const r=Rb(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)uo((()=>{const n=r[t][0],s=r[t][1],a=Eb(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new db(i);return gb(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return im(a.map((e=>Tl(e,0))))}))}predict(e,t={}){const n=Db(e);Lb(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Tb(e),this.predictLoop(n,e)}finally{Fb(n,e)}}predictOnBatch(e){Lb(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new Zf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Wy?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const s=mm(e.map((e=>e.shape[0])));s.sort();const r=mm(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new Qf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Qf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!re(s,r))throw new Qf(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Mb(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Mb(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[Ly,Vy,By];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===By&&1===a.shape[a.shape.length-1])throw new Qf(`You are passing a target array of shape ${a.shape} while using a loss \'categorical_crossentropy\'. \'categorical_crossentropy\'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new Qf(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new Qf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=kb(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await vb(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,r){return uo((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new em("Verbose mode is not implemented yet.");if(null!=r)throw new em("steps mode in testLoop() is not implemented yet");{const s=Rb(a,n),r=hh(ng(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=ag(r,a,o-a),u=Ab(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Lo(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Io(i[e],Co(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=So(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;am(e,s)>1&&(r+=`_${am(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new db(e),o=gb(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=Ib(n,r[e]));const a=tc(n);t.push(a),l=0===e?n:Io(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=tc(t(s[r],o[r]))}ho(n),a.push(n)}return l=tc(l),this.calculateLosses().forEach((e=>{l=Io(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>uo((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new db(a),o=gb(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=tc(s(r[e],o[e]));n=0===e?a:Io(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=tc(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,o,l,u,c;e.isTraining=!0;try{const h=null==s.batchSize?32:s.batchSize;Tb(h);const p=!1,d=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,p,h);r=d[0],a=d[1],c=d[2];let f,m=!1;if(null!=s.validationData&&s.validationData.length>0){if(m=!0,2!==s.validationData.length)throw 3===s.validationData.length?new em("validationData including sample weights is not supported yet."):new Qf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);i=s.validationData[0],o=s.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){m=!0;const e=Math.floor(r[0].shape[0]*(1-s.validationSplit)),t=r[0].shape[0];l=Eb(r,e,t),r=Eb(r,0,e),u=Eb(a,e,t),a=Eb(a,0,e),f=l.concat(u)}else null!=s.validationSteps&&(m=!0);const g=r.concat(a).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,w;m?(e.makeTestFunction(),x=e.testFunction,w=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,f=[],w=b.slice());const k=Dy(s.callbacks,s.yieldEvery),v=await async function(e,t,n,s,r,a,i,o,l,u,c,h,p,d,f){null==r&&(r=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=e.checkNumSamples(n,r,d,"steps_per_epoch");let y;null!=g&&(y=ng(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=_y(o,i,a,p,g,d,r,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<a;++i){await b.onEpochBegin(i);const a={};{if("batch"===c)throw new em("batch shuffling is not implemneted yet");c&&j(y);const i=hh(y),o=Rb(g,r);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),uo((()=>{const p=o[c][0],d=o[c][1],f=ag(i,p,d-p);h.batch=c,h.size=d-p;const g=Ab(n,f),y=t(g);for(let e=0;e<s.length;++e){const t=s[e],n=y[e];h[t]=n,ho(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,r);for(let e=0;e<s.length;++e){const n=s[e],r=t[e];ho(r),a["val_"+n]=r}}})),await b.onBatchEnd(c,h),Sy(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,a),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,h,s.epochs,s.verbose,k,x,f,s.shuffle,w,s.initialEpoch,null);return v}finally{e.isTraining=!1,Fb(r,t),Fb(a,n),Fb(l,i),Fb(u,o),null!=c&&co(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(Z(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Z(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Z(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Z(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Z(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if($b(n.validationData))Z(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new em("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Dy(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=_y(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,u);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(s||(m=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await m.next();if(s&&t.done){console.warn(`You provided \\`batchesPerEpoch\\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \\`batchesPerEpoch * epochs\\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=Sb(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=kb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await vb(r[e],null,t[e]))}const u=s.concat(r).concat(i),d=o(u);co(u);for(let e=0;e<l.length;++e){const t=l[e],n=d[e];a[t]=n,ho(n)}await p.onBatchEnd(h,a),Sy(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=$b(n.validationData)?om(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):om(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?Nb:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return co(a),im(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=oo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-oo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=lm(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>lm(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=lm(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[lm(nb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>lm(nb(e))));{const e={};for(const t in this.metrics)e[t]=lm(nb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Oy(cb(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=um(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>um(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=um(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>um(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=um(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=pa(e);if(0===t.length)throw new Qf(`Cannot find any save handlers for URL \'${e}\'`);if(t.length>1)throw new Qf(`Found more than one (${t.length}) save handlers for URL \'${e}\'`);e=t[0]}if(null==e.save)throw new Qf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ea(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${pb}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await ea(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=aa([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;rb(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){rb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}zb.className="Model",Wi(zb);class Pb extends zb{}async function Bb(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const s=Oy(cb(n),t);if(null!=e.weightsManifest){const t=await ei(e.weightsManifest,e.pathPrefix,s.weights.map((e=>e.originalName))),n={};for(const e of s.weights)n[e.originalName]=t[e.originalName];s.loadWeights(n),co(t)}return s}Pb.className="Functional",Wi(Pb);class Wb extends zb{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:ay("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Qf(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Wb||e instanceof zb;let n;if(t){if(n=e,1!==n.outputs.length)throw new Qf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Qf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Qf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Iy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Qf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Qf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ky(this.outputs[0])}this.inboundNodes=[],new by({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:sm(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(uy(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zb({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Zf("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Zf("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Zf("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Zf("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Qf("Legacy serialization format not supported yet.");r=t}else Z(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the \'layers\' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Wb))throw new em(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=Oy(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Qf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Qf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Vb(e){return new zb(e)}function Ub(e){return new Wb(e)}function Gb(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=da(e,t);if(0===n.length)n.push(ii(e,t));else if(n.length>1)throw new Qf(`Found more than one (${n.length}) load handlers for URL \'${e}\'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Qf("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&a,o=Oy(cb(r),void 0,i),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new Qf("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=ta(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),co(e),co(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function Hb(e){return Iy(e)}function jb(e,t){Fy.registerCallbackConstructor(e,t)}Wb.className="Sequential",Wi(Wb);class qb extends Pi{getConfig(){return{}}}class Kb extends qb{apply(e,t=1){return function(e,t=1){if(1!==t)throw new em(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return hu(e)}(e,t)}}Kb.className="elu",Wi(Kb);class Xb extends qb{apply(e){return Uc(e)}}Xb.className="selu",Wi(Xb);class Yb extends qb{apply(e){return _c(e)}}Yb.className="relu",Wi(Yb);class Jb extends qb{apply(e){return uo((()=>sc(6,_c(e))))}}Jb.className="relu6",Wi(Jb);class Zb extends qb{apply(e){return e}}Zb.className="linear",Wi(Zb);class Qb extends qb{apply(e){return El(e)}}Qb.className="sigmoid",Wi(Qb);class ex extends qb{apply(e){return function(e){return uo((()=>{const t=Io(.5,Co(.2,e));return Wl(t,0,1)}))}(e)}}ex.className="hardSigmoid",Wi(ex);class tx extends qb{apply(e){return _u(e)}}tx.className="softplus",Wi(tx);class nx extends qb{apply(e){return function(e){return uo((()=>So(e,Ho(e).add(1))))}(e)}}nx.className="softsign",Wi(nx);class sx extends qb{apply(e){return Rl(e)}}sx.className="tanh",Wi(sx);class rx extends qb{apply(e,t=-1){return Qc(e,t)}}rx.className="softmax",Wi(rx);class ax extends qb{apply(e,t=-1){return zu(e,t)}}ax.className="logSoftmax",Wi(ax);class ix extends qb{apply(e,t=1){return uo((()=>El(e.mul(t)).mul(e)))}}function ox(e){return e.getClassName()}function lx(e,t={}){return dm(e,Bi.getMap().classNameMap,t,"activation")}function ux(e){if(null==e){return lx({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},lx(t)}return e instanceof qb?e:lx(e)}function cx(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer\'s constructor is expected to be an object, but received: ${e}`)}ix.className="swish",Wi(ix);class hx extends Pi{}class px extends hx{constructor(e){super(),cx(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return uo((()=>{let t=cc([1]);return this.hasL1&&(t=Io(t,Lu(Co(this.l1,Ho(e))))),this.hasL2&&(t=Io(t,Lu(Co(this.l2,fg(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}px.className="L1L2",Wi(px);const dx={l1l2:"L1L2"};function fx(e){return hm(e)}function mx(e,t={}){return dm(e,Bi.getMap().classNameMap,t,"regularizer")}function gx(e){return null==e?null:"string"==typeof e?mx({className:e in dx?dx[e]:e,config:{}}):e instanceof hx?e:mx(e)}class yx extends wy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=ly(e);let n=_c(e);return null!=this.maxValue&&(n=Wl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}yx.className="ReLU",Wi(yx);class bx extends wy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ly(e);return Cu(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}bx.className="LeakyReLU",Wi(bx);class xx extends wy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Bg(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gx(e.alphaRegularizer),this.alphaConstraint=Rm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Qf(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=uy(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new my({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=ly(e),kc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Pg(this.alphaInitializer),alphaRegularizer:fx(this.alphaRegularizer),alphaConstraint:Em(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}xx.className="PReLU",Wi(xx);class wx extends wy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new em(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ly(e);return hu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}wx.className="ELU",Wi(wx);class kx extends wy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=ly(e);return n.mul(sg(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}kx.className="ThresholdedReLU",Wi(kx);class vx extends wy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new rx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=ly(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ix(e,t,n){if("number"==typeof e)return sm(e,t);if(e.length!==t)throw new Qf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new Qf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function Nx(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function Sx(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+tg([n-t,0]);else{if("same"!==s)throw new Qf(`Unsupport padding mode: ${s}.`);e*=t}return e}function Cx(e,t){return uo((()=>(Vm(t),"channelsFirst"===t?di(e,[0,2,3,1]):e)))}function $x(e,t){return uo((()=>(Vm(t),"channelsFirst"===t?di(e,[0,2,3,4,1]):e)))}function Tx(e,t,n,s=[1,1],r="valid",a,i,o=null){return uo((()=>{if(null==a&&(a="channelsLast"),Vm(a),3!==e.rank&&4!==e.rank)throw new Qf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Qf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Cx(e,a);if("causal"===r)throw new em("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=tp({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=di(l,[0,3,1,2])),l}))}vx.className="Softmax",Wi(vx);class Ex extends wy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ex.verifyArgs(t),this.rank=e,xm(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new em(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ix(t.kernelSize,e,"kernelSize"),this.strides=Ix(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Um(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Vm(this.dataFormat),this.activation=ux(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Bg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Rm(t.biasConstraint),this.biasRegularizer=gx(t.biasRegularizer),this.activityRegularizer=gx(t.activityRegularizer),this.dilationRate=Ix(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Qf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Qf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Qf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(rm("kernelSize"in e,"required key \'kernelSize\' not in config"),"number"!=typeof e.kernelSize&&!bm(e.kernelSize,"number",1,3))throw new Qf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ox(this.activation),useBias:this.useBias,biasInitializer:Pg(this.biasInitializer),biasRegularizer:fx(this.biasRegularizer),activityRegularizer:fx(this.activityRegularizer),biasConstraint:Em(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Ax extends Ex{constructor(e,t){super(e,t),this.kernel=null,Ax.verifyArgs(t),this.filters=t.filters,xm(this.filters,"filters"),this.kernelInitializer=Bg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Rm(t.kernelConstraint),this.kernelRegularizer=gx(t.kernelRegularizer)}build(e){e=uy(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qf(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return uo((()=>{let t;e=ly(e);const n=null==this.bias?null:this.bias.read(),s=km(this.activation.getClassName());if(null!=s&&2===this.rank)t=Tx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",a,i=1){return uo((()=>{if(null==a&&(a="channelsLast"),Vm(a),3!==e.shape.length)throw new Qf(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Qf(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Qf(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=di(e,[0,2,1])),"causal"===r)throw new em("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ql(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=gg(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Tx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new em("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",a,i){return uo((()=>{if(null==a&&(a="channelsLast"),Vm(a),4!==e.rank&&5!==e.rank)throw new Qf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Qf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=$x(e,a);if("causal"===r)throw new em("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Yl(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=gg(o,n)),"channelsFirst"===a&&(o=di(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=uy(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=Nx(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Pg(this.kernelInitializer),kernelRegularizer:fx(this.kernelRegularizer),kernelConstraint:Em(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Qf(`Convolution layer expected config.filters to be a \'number\' > 0 but got ${JSON.stringify(e.filters)}`)}}class Rx extends Ax{constructor(e){super(2,e),Rx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!bm(e.kernelSize,"number",1,2))throw new Qf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Rx.className="Conv2D",Wi(Rx);class Dx extends Ax{constructor(e){super(3,e),Dx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Qf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Dx.className="Conv3D",Wi(Dx);class Fx extends Rx{constructor(e){if(super(e),this.inputSpec=[new my({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Qf(`Conv2DTranspose currently supports only padding modes \'same\' and \'valid\', but received padding mode ${this.padding}`)}build(e){if(4!==(e=uy(e)).length)throw new Qf("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new my({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return uo((()=>{let t=ly(e);if(4!==t.shape.length)throw new Qf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[s,Sx(i,c,l,this.padding),Sx(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=di(t,[0,2,3,1]));let d=Xl(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=di(d,[0,3,1,2])),null!=this.bias&&(d=gg(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=uy(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Sx(t[s],o,a,this.padding),t[r]=Sx(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Fx.className="Conv2DTranspose",Wi(Fx);class _x extends Ax{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Qf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Qf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Qf(`SeparableConv${this.rank}D supports only padding modes: \'same\' and \'valid\', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Bg(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gx(t.depthwiseRegularizer),this.depthwiseConstraint=Rm(t.depthwiseConstraint),this.pointwiseInitializer=Bg(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gx(t.pointwiseRegularizer),this.pointwiseConstraint=Rm(t.pointwiseConstraint)}build(e){if((e=uy(e)).length<this.rank+2)throw new Qf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Qf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new my({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return uo((()=>{let t;if(e=ly(e),1===this.rank)throw new em("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=di(e,[0,2,3,1])),t=Gc(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=gg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=di(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Pg(this.depthwiseInitializer),e.pointwiseInitializer=Pg(this.pointwiseInitializer),e.depthwiseRegularizer=fx(this.depthwiseRegularizer),e.pointwiseRegularizer=fx(this.pointwiseRegularizer),e.depthwiseConstraint=Em(this.depthwiseConstraint),e.pointwiseConstraint=Em(this.pointwiseConstraint),e}}_x.className="SeparableConv";class Ox extends _x{constructor(e){super(2,e)}}Ox.className="SeparableConv2D",Wi(Ox);class Mx extends Ax{constructor(e){super(1,e),Mx.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!bm(e.kernelSize,"number",1,1))throw new Qf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Mx.className="Conv1D",Wi(Mx);class Lx extends wy{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return uo((()=>{if(e=ly(e),"channelsLast"===this.dataFormat){const t=og(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return og(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=og(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return og(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Lx.className="Cropping2D",Wi(Lx);class zx extends wy{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vm(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,ym(Lm,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return uo((()=>{let t=ly(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=di(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?t.resizeNearestNeighbor([e,s]):t.resizeBilinear([e,s]);return di(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,s]):t.resizeBilinear([e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}zx.className="UpSampling2D",Wi(zx);class Px extends Ex{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Bg(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Rm(e.depthwiseConstraint),this.depthwiseRegularizer=gx(e.depthwiseRegularizer)}build(e){if((e=uy(e)).length<4)throw new Qf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Qf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return uo((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return uo((()=>{null==r&&(r="channelsLast"),Vm(r);let i=Cx(e,r);if(4!==e.rank)throw new Qf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Qf(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=ru(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=di(i,[0,3,1,2])),i}))}(e=ly(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=gg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=uy(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Nx(t,this.kernelSize[0],this.padding,this.strides[0]),a=Nx(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Pg(this.depthwiseInitializer),e.depthwiseRegularizer=fx(this.depthwiseRegularizer),e.depthwiseConstraint=Em(this.depthwiseRegularizer),e}}function Bx(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new Qf("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Wx(e,t,n,s=!1,r,a,i=!1,o=!1){return uo((()=>{const l=t.shape.length;if(l<3)throw new Qf(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(ng(2,l));if(t=di(t,u),null!=a)throw new em("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=r.asType("bool").asType("float32")).rank===l-1&&(r=fu(r,-1)),r=di(r,u)),s&&(t=Mc(t,0),null!=r&&(r=Mc(r,0)));const c=[];let h,p=n;const d=t.shape[0],f=wh(t);let m,g;null!=r&&(m=wh(r));for(let t=0;t<d;++t){const n=f[t],s=uo((()=>e(n,p)));if(null==r)h=s[0],p=s[1];else{const e=uo((()=>{const e=m[t],n=pc(e).sub(e);return{output:s[0].mul(e).add(p[0].mul(n)),newStates:p.map(((t,r)=>s[1][r].mul(e).add(t.mul(n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=oh(c,1)),[h,g,p]}))}Px.className="DepthwiseConv2D",Wi(Px);class Vx extends wy{constructor(e){let t;if(super(e),null==e.cell)throw new Qf("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Yx({cells:e.cell}):e.cell,null==t.stateSize)throw new Qf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new my({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?ng(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){iy(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return uo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new em("Constants support is not implemented in RNN yet.");iy(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new my({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!re(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Qf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new my({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){uo((()=>{if(!this.stateful)throw new Jf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Qf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \\n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>cc([n,e]))):this.states_=[cc([n,this.cell.stateSize])];else if(null==e)co(this.states_),null!=this.keptStates&&(co(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>cc([n,e]))):this.states_[0]=cc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Qf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):co(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!re(s.shape,a))throw new Qf(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>ho(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Bx(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new my({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof gy){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return uo((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=ly(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new Qf(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=Wx(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return uo((()=>{let t=cc(e.shape);return t=Lu(t,[1,2]),t=rg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?cg(t,[1,e]):t)):this.cell.stateSize>1?[cg(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Vx.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const s=Oy(t.cell,n);return new e(Object.assign(t,{cell:s}))}}Vx.className="RNN",Wi(Vx);class Ux extends wy{}class Gx extends Ux{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xm(this.units,"units"),this.activation=ux(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Bg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gx(e.kernelRegularizer),this.recurrentRegularizer=gx(e.recurrentRegularizer),this.biasRegularizer=gx(e.biasRegularizer),this.kernelConstraint=Rm(e.kernelConstraint),this.recurrentConstraint=Rm(e.recurrentConstraint),this.biasConstraint=Rm(e.biasConstraint),this.dropout=eg([1,tg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=eg([1,tg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=uy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return uo((()=>{if(2!==e.length)throw new Qf(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jx({ones:()=>pc(e),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jx({ones:()=>pc(n),rate:this.recurrentDropout,training:s}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=pg(null!=a?Co(e,a):e,this.kernel.read()),null!=this.bias&&(r=gg(r,this.bias.read())),null!=i&&(n=Co(n,i));let o=Io(r,pg(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ox(this.activation),useBias:this.useBias,kernelInitializer:Pg(this.kernelInitializer),recurrentInitializer:Pg(this.recurrentInitializer),biasInitializer:Pg(this.biasInitializer),kernelRegularizer:fx(this.kernelRegularizer),recurrentRegularizer:fx(this.recurrentRegularizer),biasRegularizer:fx(this.biasRegularizer),activityRegularizer:fx(this.activityRegularizer),kernelConstraint:Em(this.kernelConstraint),recurrentConstraint:Em(this.recurrentConstraint),biasConstraint:Em(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Gx.className="SimpleRNNCell",Wi(Gx);class Hx extends Vx{constructor(e){e.cell=new Gx(e),super(e)}call(e,t){return uo((()=>{null!=this.cell.dropoutMask&&(co(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(co(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Hx.className="SimpleRNN",Wi(Hx);class jx extends Ux{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Qf("GRUCell does not support reset_after parameter set to true.");this.units=e.units,xm(this.units,"units"),this.activation=ux(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ux(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Bg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gx(e.kernelRegularizer),this.recurrentRegularizer=gx(e.recurrentRegularizer),this.biasRegularizer=gx(e.biasRegularizer),this.kernelConstraint=Rm(e.kernelConstraint),this.recurrentConstraint=Rm(e.recurrentConstraint),this.biasConstraint=Rm(e.biasConstraint),this.dropout=eg([1,tg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=eg([1,tg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=uy(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return uo((()=>{if(2!==e.length)throw new Qf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jx({ones:()=>pc(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jx({ones:()=>pc(s),rate:this.recurrentDropout,training:n,count:3}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Co(e,r[0]));let u=pg(e,this.kernel.read());this.useBias&&(u=gg(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Co(s,a[0]));const c=this.recurrentKernel.read(),[h,p]=sh(c,[2*this.units,this.units],c.rank-1),d=pg(s,h),[f,m,g]=sh(u,3,u.rank-1),[y,b]=sh(d,2,d.rank-1);i=this.recurrentActivation.apply(Io(f,y)),o=this.recurrentActivation.apply(Io(m,b));const x=pg(Co(o,s),p);l=this.activation.apply(Io(g,x));const w=Io(Co(i,s),Co(Io(1,Fu(i)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ox(this.activation),recurrentActivation:ox(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pg(this.kernelInitializer),recurrentInitializer:Pg(this.recurrentInitializer),biasInitializer:Pg(this.biasInitializer),kernelRegularizer:fx(this.kernelRegularizer),recurrentRegularizer:fx(this.recurrentRegularizer),biasRegularizer:fx(this.biasRegularizer),activityRegularizer:fx(this.activityRegularizer),kernelConstraint:Em(this.kernelConstraint),recurrentConstraint:Em(this.recurrentConstraint),biasConstraint:Em(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}jx.className="GRUCell",Wi(jx);class qx extends Vx{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new jx(e),super(e)}call(e,t){return uo((()=>{null!=this.cell.dropoutMask&&(co(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(co(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}qx.className="GRU",Wi(qx);class Kx extends Ux{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xm(this.units,"units"),this.activation=ux(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ux(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Bg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=gx(e.kernelRegularizer),this.recurrentRegularizer=gx(e.recurrentRegularizer),this.biasRegularizer=gx(e.biasRegularizer),this.kernelConstraint=Rm(e.kernelConstraint),this.recurrentConstraint=Rm(e.recurrentConstraint),this.biasConstraint=Rm(e.biasConstraint),this.dropout=eg([1,tg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=eg([1,tg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=uy(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends kg{apply(t,s){const r=e.apply([n]),a=(new Ig).apply([n]),i=e.apply([2*n]);return ug(ug(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return uo((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Qf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jx({ones:()=>pc(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jx({ones:()=>pc(s),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Co(e,a[0]));let h=pg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Co(s,i[0])),h=Io(h,pg(s,this.recurrentKernel.read())),this.useBias&&(h=gg(h,this.bias.read()));const[p,d,f,m]=sh(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=Io(Co(l,r),Co(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Co(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ox(this.activation),recurrentActivation:ox(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pg(this.kernelInitializer),recurrentInitializer:Pg(this.recurrentInitializer),biasInitializer:Pg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:fx(this.kernelRegularizer),recurrentRegularizer:fx(this.recurrentRegularizer),biasRegularizer:fx(this.biasRegularizer),activityRegularizer:fx(this.activityRegularizer),kernelConstraint:Em(this.kernelConstraint),recurrentConstraint:Em(this.recurrentConstraint),biasConstraint:Em(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Kx.className="LSTMCell",Wi(Kx);class Xx extends Vx{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kx(e),super(e)}call(e,t){return uo((()=>{null!=this.cell.dropoutMask&&(co(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(co(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Xx.className="LSTM",Wi(Xx);class Yx extends Ux{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return uo((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;iy(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{qm(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(Oy(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return dy(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}fy(t)}}function Jx(e){const{ones:t,rate:n,training:s=!1,count:r=1}=e,a=()=>yg(t(),n),i=()=>bg(a,t,s);return!r||r<=1?ho(i().clone()):Array(r).fill(void 0).map(i).map((e=>ho(e.clone())))}Yx.className="StackedRNNCells",Wi(Yx);class Zx extends Vx{constructor(e){if(e.unroll)throw new em("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new em("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new my({ndim:5})]}call(e,t){return uo((()=>{if(null!=this.cell.dropoutMask&&(co(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(co(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Qf("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return uo((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=cc([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){uo((()=>{if(!this.stateful)throw new Jf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new Qf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \\n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>cc(r))):this.states_=[cc(r)];else if(null==e)co(this.states_),null!=this.keptStates&&(co(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>cc(r))):this.states_[0]=cc(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Qf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):co(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!re(n.shape,s))throw new Qf(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ho(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Nx(l,s[0],r,a[0],i[0]),h=Nx(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Zx.className="ConvRNN2D";class Qx extends Kx{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,xm(this.filters,"filters"),this.kernelSize=Ix(n,2,"kernelSize"),this.kernelSize.forEach((e=>xm(e,"kernelSize"))),this.strides=Ix(s||1,2,"strides"),this.strides.forEach((e=>xm(e,"strides"))),this.padding=r||"valid",Um(this.padding),this.dataFormat=a||"channelsLast",Vm(this.dataFormat),this.dilationRate=Ix(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>xm(e,"dilationRate")))}build(e){var t;e=uy(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Qf(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends kg{apply(e,t){return lg([n.apply([s]),hc([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return uo((()=>{if(3!==e.length)throw new Qf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jx({ones:()=>pc(s),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Co(t[n],e):e;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jx({ones:()=>pc(r),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(r,p,0),f=o(r,p,1),m=o(r,p,2),g=o(r,p,3);const[y,b,x,w]=sh(this.kernel.read(),4,3),[k,v,I,N]=this.useBias?sh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,k,this.padding),u=this.inputConv(u,b,v,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,N,this.padding);const[S,C,$,T]=sh(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,$),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(Io(l,d)),A=this.recurrentActivation.apply(Io(u,f)),R=Io(Co(A,a),Co(E,this.activation.apply(Io(c,m)))),D=Co(this.recurrentActivation.apply(Io(h,g)),this.activation.apply(R));return[D,D,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){const r=jl(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?gg(r,n,this.dataFormat):r}recurrentConv(e,t){return jl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Qx.className="ConvLSTM2DCell",Wi(Qx);class ew extends Zx{constructor(e){const t=new Qx(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}ew.className="ConvLSTM2D",Wi(ew);class tw extends wy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return bg((()=>yg(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}tw.className="Dropout",Wi(tw);class nw extends tw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}nw.className="SpatialDropout1D",Wi(nw);class sw extends wy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,xm(this.units,"units"),this.activation=ux(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Bg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Bg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Rm(e.kernelConstraint),this.biasConstraint=Rm(e.biasConstraint),this.kernelRegularizer=gx(e.kernelRegularizer),this.biasRegularizer=gx(e.biasRegularizer),this.activityRegularizer=gx(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=uy(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=uy(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e),s=km(this.activation.getClassName());let r;return null!=s?r=pg(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=pg(n,this.kernel.read()),null!=this.bias&&(r=gg(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:ox(this.activation),useBias:this.useBias,kernelInitializer:Pg(this.kernelInitializer),biasInitializer:Pg(this.biasInitializer),kernelRegularizer:fx(this.kernelRegularizer),biasRegularizer:fx(this.biasRegularizer),activityRegularizer:fx(this.activityRegularizer),kernelConstraint:Em(this.kernelConstraint),biasConstraint:Em(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}sw.className="Dense",Wi(sw);class rw extends wy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=uy(e);for(const t of e.slice(1))if(null==t)throw new Qf(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Zm(e,1)]}call(e,t){return uo((()=>{this.invokeCallHook(e,t);let n=ly(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Qf(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Zm(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}rw.className="Flatten",Wi(rw);class aw extends wy{constructor(e){super(e),this.supportsMasking=!0,this.activation=ux(e.activation)}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ox(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}aw.className="Activation",Wi(aw);class iw extends wy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return uo((()=>{return e=ly(e),t=e,n=this.n,uo((()=>{if(2!==t.shape.length)throw new Qf(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return cg(rg(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}iw.className="RepeatVector",Wi(iw);class ow extends wy{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new Qf("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=Zm(e);if(null!==a){if(0===r||i%r!=0)throw new Qf(n);s[a]=i/r}else if(i!==r)throw new Qf(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ow.className="Reshape",Wi(ow);class lw extends wy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \\`dims\\` to be an Array, but received ${e.dims} instead.`);const t=ng(1,e.dims.length+1);if(!re(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new my({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=uy(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return di(ly(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}lw.className="Permute",Wi(lw);class uw extends wy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=ly(e);return rl(uc(n,this.maskValue),-1)}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e),s=rl(uc(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}uw.className="Masking",Wi(uw);class cw extends wy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(om(e.inputLength))}this.inputDim=e.inputDim,xm(this.inputDim,"inputDim"),this.outputDim=e.outputDim,xm(this.outputDim,"outputDim"),this.embeddingsInitializer=Bg(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gx(e.embeddingsRegularizer),this.activityRegularizer=gx(e.activityRegularizer),this.embeddingsConstraint=Rm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return uo((()=>this.maskZero?(e=ly(e),uc(e,Eo(e))):null))}computeOutputShape(e){if(e=uy(e),null==this.inputLength)return[...e,this.outputDim];const t=om(this.inputLength);if(t.length!==e.length-1)throw new Qf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new Qf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return uo((()=>{this.invokeCallHook(e,t);let n=ly(e);return"int32"!==n.dtype&&(n=sg(n,"int32")),dg(this.embeddings.read(),n.as1D()).reshape(uy(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Pg(this.embeddingsInitializer),embeddingsRegularizer:fx(this.embeddingsRegularizer),activityRegularizer:fx(this.activityRegularizer),embeddingsConstraint:Em(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}cw.className="Embedding",Wi(cw);class hw extends wy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new em}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new Qf("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[uy(e)]),e.length<2)throw new Qf(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=mm(t),t.length>1)throw new Qf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===mm(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return uo((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=tg(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=rg(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=s.reshape([r].concat(Zm(e.slice(1))));i=di(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const r=ng(1,e).concat([0]);t.push(di(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=di(s.reshape([-1,t]),[1,0]).reshape(n)}else if(r>1){const e=[r-1].concat(ng(0,r-1));s=di(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=mm(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return uo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Qf("`mask` should be an Array");if(!Array.isArray(e))throw new Qf("`inputs` should be an Array");if(t.length!==e.length)throw new Qf(`The Array \'inputs\' and \'mask\' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:fu(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Ku(n,t[e]);return n}))}}class pw extends hw{constructor(e){super(e)}mergeFunction(e){return uo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Io(t,e[n]);return t}))}}pw.className="Add",Wi(pw);class dw extends hw{constructor(e){super(e)}mergeFunction(e){return uo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Co(t,e[n]);return t}))}}dw.className="Multiply",Wi(dw);class fw extends hw{constructor(e){super(e)}mergeFunction(e){return uo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Io(t,e[n]);return Co(1/e.length,t)}))}}fw.className="Average",Wi(fw);class mw extends hw{constructor(e){super(e)}mergeFunction(e){return uo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Xo(t,e[n]);return t}))}}mw.className="Maximum",Wi(mw);class gw extends hw{constructor(e){super(e)}mergeFunction(e){return uo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=sc(t,e[n]);return t}))}}gw.className="Minimum",Wi(gw);class yw extends hw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Qf("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(re(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new Qf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return uo((()=>lg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Qf("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Qf("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Qf("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Qf(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return uo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(pc(e[n]).asType("bool")):t[n].rank<e[n].rank?s.push(fu(t[n],-1)):s.push(t[n]);const r=Tl(s,this.axis);return sl(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function bw(e,t){for(;e<0;)e+=t;return e}yw.className="Concatenate",Wi(yw);class xw extends hw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Z(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new em("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new Qf(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Qf(`A \\`Dot\\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>bw(t,e[n].shape.length))):[bw(this.axes,n.shape.length),bw(this.axes,s.shape.length)],this.normalize&&(n=My(n,t[0]),s=My(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new em("batchDot is not implemented for tensors of 4D or higher rank yet");if(Z(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),Z(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new em("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return uo((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=e.matMul(t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[bw(this.axes,e.length),bw(this.axes,t.length)],n}computeOutputShape(e){Z(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new em("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}xw.className="Dot",Wi(xw);class ww extends wy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e);return bg((()=>hg(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}ww.className="GaussianNoise",Wi(ww);class kw extends wy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return uo((()=>{this.invokeCallHook(e,t);const n=ly(e);return this.rate>0&&this.rate<1?bg((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(hg(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}kw.className="GaussianDropout",Wi(kw);class vw extends wy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||ly(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return uo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),s=()=>{const t=ly(e),s=-1.7580993408473766;let r=ku(Ac(n),this.rate);r=sg(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate;return t.mul(r).add(r.add(-1).mul(s)).mul(a).add(i)};return bg(s,(()=>ly(e)),t.training||!1)}return e}))}}function Iw(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=Ol(e,t,n,s,r,a);else if(3===e.rank)i=Ml(e,t,n,s,r,a);else{if(4!==e.rank)throw new em(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Ll(e,t,n,s,r,a)}return i}vw.className="AlphaDropout",Wi(vw);class Nw extends wy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Bg(e.betaInitializer||"zeros"),this.gammaInitializer=Bg(e.gammaInitializer||"ones"),this.movingMeanInitializer=Bg(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Bg(e.movingVarianceInitializer||"ones"),this.betaConstraint=Rm(e.betaConstraint),this.gammaConstraint=Rm(e.gammaConstraint),this.betaRegularizer=gx(e.betaRegularizer),this.gammaRegularizer=gx(e.gammaRegularizer)}build(e){e=uy(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Qf(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new my({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return uo((()=>{const n=null!=t.training&&t.training,s=ly(e),r=s.shape,a=r.length,i=ng(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=sm(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!re(u,ng(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,r=this.scale?this.gamma.read().reshape(l):null;return Iw(s,e,t,n,r,this.epsilon)}return Iw(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,s,r=.001){return re(s.slice().sort(),ng(0,e.rank-1))?function(e,t,n,s,r=.001){return uo((()=>{const a=ic(e,s),i=a.mean,o=a.variance;return[Iw(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return uo((()=>{const a=ic(e,s),i=a.mean,o=a.variance,l=[];for(const t of ng(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=i.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),p=null==n?null:n.reshape(l);return[Iw(e,u,c,p,h,r),i,o]}))}(e,t,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{uo((()=>{const s=1-n,r=e.read(),a=r.sub(t).mul(s);e.write(r.sub(a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pg(this.betaInitializer),gammaInitializer:Pg(this.gammaInitializer),movingMeanInitializer:Pg(this.movingMeanInitializer),movingVarianceInitializer:Pg(this.movingVarianceInitializer),betaRegularizer:fx(this.betaRegularizer),gammaRegularizer:fx(this.gammaRegularizer),betaConstraint:Em(this.betaConstraint),gammaConstraint:Em(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Nw.className="BatchNormalization",Wi(Nw);class Sw extends wy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Bg(e.betaInitializer||"zeros"),this.gammaInitializer=Bg(e.gammaInitializer||"ones"),this.betaRegularizer=gx(e.betaRegularizer),this.gammaRegularizer=gx(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=uy(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==mm(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=ly(e),s=n.shape,r=s.length;return uo((()=>{let{mean:e,variance:t}=ic(n,this.axis,!0);const a=sm(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r&&this.axis!==[r-1]?e.reshape(a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),Iw(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pg(this.betaInitializer),gammaInitializer:Pg(this.gammaInitializer),betaRegularizer:fx(this.betaRegularizer),gammaRegularizer:fx(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Sw.className="LayerNormalization",Wi(Sw);class Cw extends wy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Qf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Qf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Qf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new my({ndim:4})]}computeOutputShape(e){let t,n;return e=uy(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return uo((()=>{return t=ly(e),n=this.padding,s=this.dataFormat,uo((()=>{if(4!==t.rank)throw new Qf(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Qf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new Qf(`Unknown data format: ${s}. Supported data formats are \'channelsLast\' and \'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],fc(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function $w(e,t,n,s,r,a){return uo((()=>{let i;Vm(r),Gm(a),Um(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Cx(e,r);const o="same"===s?"same":"valid";return i="max"===a?Zu(e,t,n,o):Cl(e,t,n,o),"channelsFirst"===r&&(i=di(i,[0,3,1,2])),i}))}function Tw(e,t,n,s,r,a){return uo((()=>{let i;Vm(r),Gm(a),Um(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=$x(e,r);const o="same"===s?"same":"valid";return i="max"===a?Qu(e,t,n,o):$l(e,t,n,o),"channelsFirst"===r&&(i=di(i,[0,4,1,2,3])),i}))}Cw.className="ZeroPadding2D",Wi(Cw);class Ew extends wy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Qf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(xm(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Qf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}xm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Um(this.padding),this.inputSpec=[new my({ndim:3})]}computeOutputShape(e){const t=Nx((e=uy(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return uo((()=>{this.invokeCallHook(e,t),e=rg(ly(e),2);const n=this.poolingFunction(ly(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ih(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Aw extends Ew{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Vm(r),Um(s),$w(e,t,n,s,r,"max")}}Aw.className="MaxPooling1D",Wi(Aw);class Rw extends Ew{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Vm(r),Um(s),$w(e,t,n,s,r,"avg")}}Rw.className="AveragePooling1D",Wi(Rw);class Dw extends wy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Qf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];xm(this.poolSize,"poolSize"),xm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vm(this.dataFormat),Um(this.padding),this.inputSpec=[new my({ndim:4})]}computeOutputShape(e){e=uy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Nx(t,this.poolSize[0],this.padding,this.strides[0]),n=Nx(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return uo((()=>(this.invokeCallHook(e,t),this.poolingFunction(ly(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Fw extends Dw{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Vm(r),Um(s),$w(e,t,n,s,r,"max")}}Fw.className="MaxPooling2D",Wi(Fw);class _w extends Dw{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Vm(r),Um(s),$w(e,t,n,s,r,"avg")}}_w.className="AveragePooling2D",Wi(_w);class Ow extends wy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Qf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];xm(this.poolSize,"poolSize"),xm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vm(this.dataFormat),Um(this.padding),this.inputSpec=[new my({ndim:5})]}computeOutputShape(e){e=uy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Nx(t,this.poolSize[0],this.padding,this.strides[0]),n=Nx(n,this.poolSize[1],this.padding,this.strides[1]),s=Nx(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return uo((()=>(this.invokeCallHook(e,t),this.poolingFunction(ly(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Mw extends Ow{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Vm(r),Um(s),Tw(e,t,n,s,r,"max")}}Mw.className="MaxPooling3D",Wi(Mw);class Lw extends Ow{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Vm(r),Um(s),Tw(e,t,n,s,r,"avg")}}Lw.className="AveragePooling3D",Wi(Lw);class zw extends wy{constructor(e){super(e),this.inputSpec=[new my({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new em}}class Pw extends zw{constructor(e){super(e||{})}call(e,t){return uo((()=>{const t=ly(e);return tc(t,1)}))}}Pw.className="GlobalAveragePooling1D",Wi(Pw);class Bw extends zw{constructor(e){super(e||{})}call(e,t){return uo((()=>{const t=ly(e);return Mu(t,1)}))}}Bw.className="GlobalMaxPooling1D",Wi(Bw);class Ww extends wy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vm(this.dataFormat),this.inputSpec=[new my({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new em}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Vw extends Ww{call(e,t){return uo((()=>{const t=ly(e);return"channelsLast"===this.dataFormat?tc(t,[1,2]):tc(t,[2,3])}))}}Vw.className="GlobalAveragePooling2D",Wi(Vw);class Uw extends Ww{call(e,t){return uo((()=>{const t=ly(e);return"channelsLast"===this.dataFormat?Mu(t,[1,2]):Mu(t,[2,3])}))}}Uw.className="GlobalMaxPooling2D",Wi(Uw);class Gw extends wy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=Oy(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class Hw extends Gw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=uy(e)).length<3)throw new Qf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=uy(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return uo((()=>Wx(((e,n)=>[ly(this.layer.call(e,t)),[]]),e=ly(e),[],!1,null,null,!1,!0)[1]))}}Hw.className="TimeDistributed",Wi(Hw);class jw extends Gw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Oy(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Oy(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,ym(Bm,"BidirectionalMergeMode",r),e.weights)throw new em("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):im(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Bx(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Qf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new my({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new em("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof gy;for(const e of a)if(e instanceof gy!==o)throw new Qf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return uo((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Mc(r,1)),"concat"===this.mergeMode?i=lg([s,r]):"sum"===this.mergeMode?i=Io(s,r):"ave"===this.mergeMode?i=Co(.5,Io(s,r)):"mul"===this.mergeMode?i=Co(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){qm(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),qm(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Oy(t.layer);if(delete t.layer,null!=t.numConstants)throw new em("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}function qw(e){return new vy(e)}function Kw(e){return new wx(e)}function Xw(e){return new yx(e)}function Yw(e){return new bx(e)}function Jw(e){return new xx(e)}function Zw(e){return new vx(e)}function Qw(e){return new kx(e)}function ek(e){return new Mx(e)}function tk(e){return new Rx(e)}function nk(e){return new Fx(e)}function sk(e){return new Dx(e)}function rk(e){return new Ox(e)}function ak(e){return new Lx(e)}function ik(e){return new zx(e)}function ok(e){return new Px(e)}function lk(e){return new aw(e)}function uk(e){return new sw(e)}function ck(e){return new tw(e)}function hk(e){return new nw(e)}function pk(e){return new rw(e)}function dk(e){return new iw(e)}function fk(e){return new ow(e)}function mk(e){return new lw(e)}function gk(e){return new cw(e)}function yk(e){return new pw(e)}function bk(e){return new fw(e)}function xk(e){return new yw(e)}function wk(e){return new mw(e)}function kk(e){return new gw(e)}function vk(e){return new dw(e)}function Ik(e){return new xw(e)}function Nk(e){return new Nw(e)}function Sk(e){return new Sw(e)}function Ck(e){return new Cw(e)}function $k(e){return new Rw(e)}function Tk(e){return $k(e)}function Ek(e){return $k(e)}function Ak(e){return new _w(e)}function Rk(e){return Ak(e)}function Dk(e){return Ak(e)}function Fk(e){return new Lw(e)}function _k(e){return Fk(e)}function Ok(e){return Fk(e)}function Mk(e){return new Pw(e)}function Lk(e){return new Vw(e)}function zk(e){return new Bw(e)}function Pk(e){return new Uw(e)}function Bk(e){return new Aw(e)}function Wk(e){return new Fw(e)}function Vk(e){return new Mw(e)}function Uk(e){return new qx(e)}function Gk(e){return new jx(e)}function Hk(e){return new Xx(e)}function jk(e){return new Kx(e)}function qk(e){return new Hx(e)}function Kk(e){return new Gx(e)}function Xk(e){return new ew(e)}function Yk(e){return new Qx(e)}function Jk(e){return new Vx(e)}function Zk(e){return new Yx(e)}function Qk(e){return new jw(e)}function ev(e){return new Hw(e)}jw.className="Bidirectional",Wi(jw);const tv=zk,nv=Pk,sv=Bk,rv=Wk;function av(e){return new ww(e)}function iv(e){return new kw(e)}function ov(e){return new vw(e)}function lv(e){return new uw(e)}function uv(e,t){return jy(e,t)}function cv(e,t){return Yy(e,t)}function hv(e,t){return Jy(e,t)}function pv(e,t){return qy(e,t)}function dv(e,t){return Zy(e,t)}function fv(e,t){return Xy(e,t)}function mv(e,t){return function(e,t){return uo((()=>{const n=Ky(e,t),s=function(e,t){return uo((()=>Ku(e.equal(1),t.equal(0)).sum().cast("float32")))}(e,t),r=n.add(s);return lu(wu(r,0),n.div(r),0).cast("float32")}))}(e,t)}function gv(e,t){return Uy(e,t)}function yv(e,t){return zy(e,t)}function bv(e,t){return Py(e,t)}function xv(e,t){return Py(e,t)}function wv(e,t){return Py(e,t)}function kv(e,t){return Ly(e,t)}function vv(e,t){return Ly(e,t)}function Iv(e,t){return Ly(e,t)}function Nv(e){return new px(e)}function Sv(e){return cx(t=e),new px({l1:null!=t?t.l1:null,l2:0});var t}function Cv(e){return cx(t=e),new px({l2:null!=t?t.l2:null,l1:0});var t}class $v extends $y{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof zb))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Tv(e,t){return e<t}function Ev(e,t){return e>t}class Av extends $v{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new em("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode \'${this.mode}\' is invalid. Falling back to mode \'auto\'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Tv:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Ev:this.monitorFunc=Tv,this.monitorFunc===Tv&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Tv?1/0:-1/0}async onEpochEnd(e,t){await Ny(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const Rv={earlyStopping:function(e){return new Av(e)}};var Dv,Fv;!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Dv||(Dv={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Fv||(Fv={}));const _v={};function Ov(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};_v[e]=n}function Mv(e){return _v[e]}function Lv(e){delete _v[e]}function zv(e,t,n,s,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return Pv(t.inputNames[a.inputIndexStart],n,s,r);if("tensors"===a.type)return t.inputNames.slice(e,i).map((e=>Pv(e,n,s,r)));const o=Pv(t.inputNames.slice(e)[0],n,s,r),l=o.dataSync();return"number"===a.type?l[0]:Ae(o.shape,l)}const i=t.attrParams[e];return i&&i.value}function Pv(e,t,n,s){const[r,a]=Vv(e);if(null!=s){const e=s.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[Wv(r,e)]));return void 0!==i?t[Wv(r,i)][a]:void 0}function Bv(e,t){const[n,s]=Vv(e);return[Wv(n,t&&t.currentContextId),s]}function Wv(e,t){return t?`${e}-${t}`:e}function Vv(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function Uv(e,t,n){let s=zv("pad",e,t,n);if("explicit"===s){s=zv("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=s[2*e],r[e][1]=s[2*e+1];return r}return s}function Gv(e){return e.kept?e:ja(e)}const Hv=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],jv=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qv=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Kv=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Xv=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Yv=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Jv=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Zv=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Qv=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],eI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],tI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],sI=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],rI=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],aI=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],iI=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],oI=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class lI{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[N,S,C,$,T,E,A,_,F,R,O,M,L,z,P,B,D].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,s=[],r=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?s.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach((e=>{const[n]=Bv(e);t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=Bv(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=Bv(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=s;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:l,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Mv(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const s=n.type;let r;switch(n.type){case"string":r=cI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=cI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=wI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=wI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=pI(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=pI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=xI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=xI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=hI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=hI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=vI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=vI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=bI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=bI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=kI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=kI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=mI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=mI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=gI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=gI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=fI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:s},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let s={};null!=t&&(s=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=Bv(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:dI(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),s[t]=n})),Object.keys(s).forEach((e=>{const t=s[e];t.inputNames.forEach((e=>{const[n]=Bv(e);t.inputs.push(s[n]),s[n].children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Bv(i[e.name]),r=s[t];null!=r&&(r.defaultOutput=n,a.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function uI(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Be().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function cI(e,t,n,s=!1){const r=e[t];return null!=r?uI(r.s,s):n}function hI(e,t,n){const s=e[t];return s?s.b:n}function pI(e,t,n){const s=e[t]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function dI(e){switch("string"==typeof e&&(e=Dv[e]),e){case Dv.DT_FLOAT:return"float32";case Dv.DT_INT32:case Dv.DT_INT64:case Dv.DT_INT8:case Dv.DT_UINT8:return"int32";case Dv.DT_BOOL:return"bool";case Dv.DT_DOUBLE:return"float32";case Dv.DT_STRING:return"string";default:return null}}function fI(e,t,n){const s=e[t];return s&&s.func?s.func.name:n}function mI(e,t,n){const s=e[t];return s&&s.type?dI(s.type):n}function gI(e,t,n){const s=e[t];return s&&s.list&&s.list.type?s.list.type.map((e=>dI(e))):n}function yI(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function bI(e,t,n){const s=e[t];return s&&s.shape?yI(s.shape):n}function xI(e,t,n){const s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function wI(e,t,n,s=!1){const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>uI(e,s))):n}function kI(e,t,n){const s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map((e=>yI(e))):n}function vI(e,t,n){const s=e[t];return s&&s.list&&s.list.b?s.list.b:n}class II{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Pv(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Pv(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return pI(this.node.rawAttrs,e,t);if(null!=n.s)return cI(this.node.rawAttrs,e,t);if(null!=n.b)return hI(this.node.rawAttrs,e,t);if(null!=n.shape)return bI(this.node.rawAttrs,e,t);if(null!=n.type)return mI(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return xI(this.node.rawAttrs,e,t);if(null!=n.list.s)return wI(this.node.rawAttrs,e,t);if(null!=n.list.shape)return kI(this.node.rawAttrs,e,t);if(null!=n.list.b)return vI(this.node.rawAttrs,e,t);if(null!=n.list.type)return gI(this.node.rawAttrs,e,t)}return t}}const NI=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Io(zv("a",e,t,n),zv("b",e,t,n))];case"AddN":return[nl(zv("tensors",e,t,n))];case"FloorMod":case"Mod":return[ac(zv("a",e,t,n),zv("b",e,t,n))];case"Mul":return[Co(zv("a",e,t,n),zv("b",e,t,n))];case"RealDiv":case"Div":return[So(zv("a",e,t,n),zv("b",e,t,n))];case"DivNoNan":return[uu(zv("a",e,t,n),zv("b",e,t,n))];case"FloorDiv":return[No(zv("a",e,t,n),zv("b",e,t,n))];case"Sub":return[Uo(zv("a",e,t,n),zv("b",e,t,n))];case"Minimum":return[sc(zv("a",e,t,n),zv("b",e,t,n))];case"Maximum":return[Xo(zv("a",e,t,n),zv("b",e,t,n))];case"Pow":return[Vo(zv("a",e,t,n),zv("b",e,t,n))];case"SquaredDifference":return[ah(zv("a",e,t,n),zv("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},SI=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Ho(zv("x",e,t,n))];case"Acos":return[el(zv("x",e,t,n))];case"Acosh":return[tl(zv("x",e,t,n))];case"Asin":return[ol(zv("x",e,t,n))];case"Asinh":return[ll(zv("x",e,t,n))];case"Atan":return[ul(zv("x",e,t,n))];case"Atan2":return[cl(zv("x",e,t,n),zv("y",e,t,n))];case"Atanh":return[hl(zv("x",e,t,n))];case"Ceil":return[Bl(zv("x",e,t,n))];case"Complex":return[Xr(zv("real",e,t,n),zv("imag",e,t,n))];case"Cos":return[Ql(zv("x",e,t,n))];case"Cosh":return[eu(zv("x",e,t,n))];case"Elu":return[hu(zv("x",e,t,n))];case"Erf":return[pu(zv("x",e,t,n))];case"Exp":return[du(zv("x",e,t,n))];case"Expm1":return[mu(zv("x",e,t,n))];case"Floor":return[bu(zv("x",e,t,n))];case"Log":return[Ru(zv("x",e,t,n))];case"Log1p":return[Du(zv("x",e,t,n))];case"Imag":return[vu(zv("x",e,t,n))];case"Neg":return[Fu(zv("x",e,t,n))];case"Reciprocal":return[Fc(zv("x",e,t,n))];case"Real":return[Dc(zv("x",e,t,n))];case"Relu":return[_c(zv("x",e,t,n))];case"Round":return[Wc(zv("x",e,t,n))];case"Selu":return[Uc(zv("x",e,t,n))];case"Sigmoid":return[El(zv("x",e,t,n))];case"Sin":return[qc(zv("x",e,t,n))];case"Sign":return[jc(zv("x",e,t,n))];case"Sinh":return[Kc(zv("x",e,t,n))];case"Softplus":return[_u(zv("x",e,t,n))];case"Sqrt":return[$o(zv("x",e,t,n))];case"Square":return[To(zv("x",e,t,n))];case"Tanh":return[Rl(zv("x",e,t,n))];case"Tan":return[ch(zv("x",e,t,n))];case"ClipByValue":return[Wl(zv("x",e,t,n),zv("clipValueMin",e,t,n),zv("clipValueMax",e,t,n))];case"Relu6":return[Oc(zv("x",e,t,n))];case"Rsqrt":return[Vc(Pv(e.inputNames[0],t,n))];case"Prod":return[vc(zv("x",e,t,n),zv("axes",e,t,n))];case"LeakyRelu":return[Cu(zv("x",e,t,n),zv("alpha",e,t,n))];case"Prelu":return[kc(zv("x",e,t,n),zv("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function CI(e,t,n=""){Z(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}class $I{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Lo(0),ho(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),CI(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ho(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Jr([],[0].concat(this.elementShape));const n=this.readMany(e);return CI(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),oh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Jr([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return CI(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Tl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,wh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const s=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\\n          tensor.shape[0], but sum of lengths is\\n        ${n}, and tensor\'s shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray\'s size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,a=[];uo((()=>{t=Sl(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,e[n],r];a[n]=Sl(Al(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class TI{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);CI(t,e.shape,"TensorList shape mismatch: "),ho(e)})),this.idTensor=Lo(0),this.maxNumElements=s,ho(this.idTensor)}get id(){return this.idTensor.id}copy(){return new TI([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return CI(e,this.elementShape,"TensorList shape mismatch: "),uo((()=>{const t=this.tensors.map((t=>Sl(t,e)));return oh(t,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return CI(n.shape,e,"TensorList shape mismatch: "),Sl(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(CI(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ho(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return CI(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);CI(this.elementShape,t.shape,"TensorList shape mismatch: "),ho(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return CI(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?Jr([],[0].concat(this.elementShape)):uo((()=>{const t=e.map((e=>Sl(this.tensors[e],n)));return oh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return CI(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?Jr([],[0].concat(this.elementShape)):uo((()=>{const e=this.tensors.map((e=>Sl(e,t)));return Tl(e,0)}))}}const EI=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const s=zv("thenBranch",e,t,n),r=zv("elseBranch",e,t,n),a=zv("cond",e,t,n),i=zv("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=zv("body",e,t,n),r=zv("cond",e,t,n),a=zv("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[Gv(zv("pred",e,t,n))];case"Switch":{const s=zv("pred",e,t,n);let r=zv("data",e,t,n);return r.kept||(r=Gv(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=e.inputNames.find((e=>void 0!==Pv(e,t,n)));return s?[Gv(Pv(s,t,n))]:void 0}case"Enter":{const s=zv("frameName",e,t,n),r=zv("tensor",e,t,n);return n.enterFrame(s),[Gv(r)]}case"Exit":{const s=zv("tensor",e,t,n);return n.exitFrame(),[Gv(s)]}case"NextIteration":{const s=zv("tensor",e,t,n);return n.nextIteration(),[Gv(s)]}case"TensorArrayV3":{const s=zv("size",e,t,n),r=zv("dtype",e,t,n),a=zv("elementShape",e,t,n),i=zv("dynamicSize",e,t,n),o=zv("clearAfterRead",e,t,n),l=zv("identicalElementShapes",e,t,n),u=zv("name",e,t,n),c=new $I(u,r,s,a,l,i,o);return n.addTensorArray(c),[c.idTensor,Lo(1)]}case"TensorArrayWriteV3":{const s=zv("tensorArrayId",e,t,n),r=zv("index",e,t,n),a=zv("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{const s=zv("tensorArrayId",e,t,n),r=zv("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=zv("tensorArrayId",e,t,n),r=zv("indices",e,t,n),a=zv("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=zv("tensorArrayId",e,t,n),r=zv("indices",e,t,n),a=zv("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=zv("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=zv("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{const s=zv("tensorArrayId",e,t,n),r=zv("tensor",e,t,n),a=zv("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{const s=zv("tensorArrayId",e,t,n);return[Lo(n.getTensorArray(s.id).size(),"int32")]}case"TensorArrayCloseV3":{const s=zv("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=zv("tensorListId",e,t,n),r=zv("index",e,t,n),a=zv("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{const s=zv("tensorListId",e,t,n),r=zv("index",e,t,n),a=zv("elementShape",e,t,n),i=zv("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=zv("indices",e,t,n),r=function(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new TI([],n,e.dtype,s),i=wh(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(zv("tensor",e,t,n),s,zv("elementShape",e,t,n),zv("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=zv("elementShape",e,t,n),r=zv("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new TI([],e,t,n)}(s,r,zv(a,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const s=zv("tensorListId",e,t,n),r=zv("indices",e,t,n),a=zv("elementShape",e,t,n),i=zv("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{const s=zv("tensorListId",e,t,n),r=zv("elementShape",e,t,n),a=zv("elementDType",e,t,n),i=zv("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{const s=function(e,t,n){const s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);CI(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=wh(e);return new TI(r,t,s)}(zv("tensor",e,t,n),zv("elementShape",e,t,n),zv("elementDType",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":{const s=zv("tensorListId",e,t,n),r=n.getTensorList(s.id),a=zv("dtype",e,t,n),i=zv("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{const s=zv("tensorListId",e,t,n),r=zv("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=zv("tensorListId",e,t,n),r=zv("elementShape",e,t,n),a=zv("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=zv("tensor",e,t,n),r=zv("elementShape",e,t,n),a=function(e,t,n){let s=0;const r=t.map((e=>(s+=e,s)));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\\n          tensor.shape[0], but sum of lengths is\\n        ${s}, and tensor\'s shape is: ${e.shape}`);const a=0===s?0:e.size/s,i=uo((()=>{const i=[];e=Sl(e,[1,s,a]);for(let s=0;s<t.length;++s){const o=[0,0===s?0:r[s-1],0],l=[1,t[s],a];i[s]=Sl(Al(e,o,l),n)}return e.dispose(),i})),o=new TI([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)o.setItem(e,i[e]);return o}(s,zv("lengths",e,t,n),r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function AI(e,t,n){const[s,r]=zv("fusedOps",e,t,n),a="biasadd"===s,i="prelu"===r,o="fusedbatchnorm"===s,l=zv("numArgs",e,t,n);if(a){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const u=zv("strides",e,t,n),c=Uv(e,t,n),h=zv("dataFormat",e,t,n).toUpperCase(),p=zv("dilations",e,t,n),[d,f]=zv("args",e,t,n);return{stride:u,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:r,leakyreluAlpha:zv("leakyreluAlpha",e,t,n)}}const RI=(e,t,n)=>{switch(e.op){case"Conv1D":{const s=zv("stride",e,t,n),r=zv("pad",e,t,n),a=zv("dataFormat",e,t,n).toUpperCase(),i=zv("dilation",e,t,n);return[ql(zv("x",e,t,n),zv("filter",e,t,n),s,r,a,i)]}case"Conv2D":{const s=zv("strides",e,t,n),r=Uv(e,t,n),a=zv("dataFormat",e,t,n).toUpperCase(),i=zv("dilations",e,t,n);return[jl(zv("x",e,t,n),zv("filter",e,t,n),[s[1],s[2]],r,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=AI(e,t,n);return[tp({x:zv("x",e,t,n),filter:zv("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=AI(e,t,n);return[rp({x:zv("x",e,t,n),filter:zv("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=zv("outputShape",e,t,n),r=zv("strides",e,t,n),a=Uv(e,t,n);return[Xl(zv("x",e,t,n),zv("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=zv("strides",e,t,n),r=Uv(e,t,n),a=zv("dilations",e,t,n),i=zv("dataFormat",e,t,n).toUpperCase();return[ru(zv("input",e,t,n),zv("filter",e,t,n),[s[1],s[2]],r,i,[a[1],a[2]])]}case"Conv3D":{const s=zv("strides",e,t,n),r=zv("pad",e,t,n),a=zv("dataFormat",e,t,n).toUpperCase(),i=zv("dilations",e,t,n);return[Yl(zv("x",e,t,n),zv("filter",e,t,n),[s[1],s[2],s[3]],r,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=zv("strides",e,t,n),r=zv("pad",e,t,n),a=zv("kernelSize",e,t,n);return[Cl(zv("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=zv("strides",e,t,n),r=zv("pad",e,t,n),a=zv("kernelSize",e,t,n);return[Zu(zv("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=zv("strides",e,t,n),r=zv("pad",e,t,n),a=zv("kernelSize",e,t,n),i=zv("includeBatchInIndex",e,t,n),{result:o,indexes:l}=ec(zv("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,i);return[o,l]}case"AvgPool3D":{const s=zv("strides",e,t,n),r=zv("pad",e,t,n),a=zv("kernelSize",e,t,n);return[$l(zv("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=zv("strides",e,t,n),r=zv("pad",e,t,n),a=zv("kernelSize",e,t,n);return[Qu(zv("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=zv("strides",e,t,n),r=zv("pad",e,t,n),a=zv("dilations",e,t,n),i=s[1],o=s[2],l=a[1],u=a[2];return[iu(zv("x",e,t,n),zv("filter",e,t,n),[i,o],r,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},DI=(e,t,n)=>{switch(e.op){case"Fill":{const s=zv("shape",e,t,n),r=zv("dtype",e,t,n);return[Bo(s,zv("value",e,t,n),r)]}case"LinSpace":return[Eu(zv("start",e,t,n),zv("stop",e,t,n),zv("num",e,t,n))];case"Multinomial":{const s=zv("logits",e,t,n),r=zv("numSamples",e,t,n),a=zv("seed",e,t,n);return[lc(s,r,a)]}case"OneHot":{const s=zv("indices",e,t,n),r=zv("depth",e,t,n),a=zv("onValue",e,t,n),i=zv("offValue",e,t,n);return[pi(s,r,a,i)]}case"Ones":return[hc(zv("shape",e,t,n),zv("dtype",e,t,n))];case"OnesLike":return[pc(zv("x",e,t,n))];case"RandomUniform":return[Ac(zv("shape",e,t,n),zv("minval",e,t,n),zv("maxval",e,t,n),zv("dtype",e,t,n))];case"Range":return[Rc(zv("start",e,t,n),zv("stop",e,t,n),zv("step",e,t,n),zv("dtype",e,t,n))];case"TruncatedNormal":{const s=zv("shape",e,t,n),r=zv("mean",e,t,n),a=zv("stdDev",e,t,n),i=zv("seed",e,t,n);return[yh(s,r,a,zv("dtype",e,t,n),i)]}case"Zeros":return[cc(zv("shape",e,t,n),zv("dtype",e,t,n))];case"ZerosLike":return[Eo(zv("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function FI(e,t,n){return{boxes:zv("boxes",e,t,n),scores:zv("scores",e,t,n),maxOutputSize:zv("maxOutputSize",e,t,n),iouThreshold:zv("iouThreshold",e,t,n),scoreThreshold:zv("scoreThreshold",e,t,n),softNmsSigma:zv("softNmsSigma",e,t,n)}}const _I=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=FI(e,t,n),u=await Gp.nonMaxSuppressionWithScoreAsync(s,r,a,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=FI(e,t,n),l=zv("padToMaxOutputSize",e,t,n),u=await Gp.nonMaxSuppressionPaddedAsync(s,r,a,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=FI(e,t,n);return[await Gp.nonMaxSuppressionAsync(s,r,a,i,o)]}case"Where":{const s=Ha(zv("condition",e,t,n),"bool"),r=[await Ih(s)];return s.dispose(),r}case"ListDiff":return Hc(zv("x",e,t,n),zv("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},OI=(e,t,n)=>{switch(e.op){case"TopKV2":{const s=zv("x",e,t,n),r=zv("k",e,t,n),a=zv("sorted",e,t,n),i=gh(s,r,a);return[i.values,i.indices]}case"Unique":{const s=zv("x",e,t,n),r=bh(s);return[r.values,r.indices]}case"UniqueV2":{const s=zv("x",e,t,n),r=zv("axis",e,t,n),a=bh(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},MI=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=zv("default",e,t,n);return[Pv(e.name,t,n)||s];case"Placeholder":return[Pv(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Gv(zv("x",e,t,n))];case"IdentityN":return zv("x",e,t,n).map((e=>Gv(e)));case"Shape":return[hh(zv("x",e,t,n).shape,"int32")];case"ShapeN":return zv("x",e,t,n).map((e=>hh(e.shape)));case"Size":return[Lo(zv("x",e,t,n).size,"int32")];case"Rank":return[Lo(zv("x",e,t,n).rank,"int32")];case"NoOp":return[Lo(1)];case"Print":const r=zv("x",e,t,n),a=zv("data",e,t,n),i=zv("message",e,t,n),o=zv("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,o));return[r];default:throw TypeError(`Node type ${e.op} is not implemented`)}};class LI{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Lo(0),this.tensorMap=new Map,ho(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),uo((()=>{const e=wh(t),s=n.length,r=e.length;Z(s===r,(()=>`The number of elements doesn\'t match, keys has ${s} elements, the values has ${r} elements.`));for(let t=0;t<s;t++){const s=n[t],r=e[t];ho(r),this.tensorMap.set(s,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return uo((()=>{const e=[];for(let s=0;s<n.length;s++){const r=n[s],a=this.findWithDefault(r,t);e.push(a)}return oh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}const zI=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=zv("keyDType",e,t,n),a=zv("valueDType",e,t,n),i=new LI(r,a);return s.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=zv("tableHandle",e,t,n,s),a=zv("keys",e,t,n),i=zv("values",e,t,n),o=s.getHashTableById(r.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=zv("tableHandle",e,t,n,s),a=zv("keys",e,t,n),i=zv("defaultValue",e,t,n),o=s.getHashTableById(r.id);return[await o.find(a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},PI=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{const s=zv("images",e,t,n),r=zv("size",e,t,n),a=zv("alignCorners",e,t,n),i=zv("halfPixelCenters",e,t,n);return[Gp.resizeBilinear(s,[r[0],r[1]],a,i)]}case"ResizeNearestNeighbor":{const s=zv("images",e,t,n),r=zv("size",e,t,n),a=zv("alignCorners",e,t,n),i=zv("halfPixelCenters",e,t,n);return[Gp.resizeNearestNeighbor(s,[r[0],r[1]],a,i)]}case"CropAndResize":{const s=zv("image",e,t,n),r=zv("boxes",e,t,n),a=zv("boxInd",e,t,n),i=zv("cropSize",e,t,n),o=zv("method",e,t,n),l=zv("extrapolationValue",e,t,n);return[Gp.cropAndResize(s,r,a,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},BI=(e,t,n)=>{switch(e.op){case"Equal":return[ou(zv("a",e,t,n),zv("b",e,t,n))];case"NotEqual":return[uc(zv("a",e,t,n),zv("b",e,t,n))];case"Greater":return[wu(zv("a",e,t,n),zv("b",e,t,n))];case"GreaterEqual":return[ku(zv("a",e,t,n),zv("b",e,t,n))];case"Less":return[$u(zv("a",e,t,n),zv("b",e,t,n))];case"LessEqual":return[Tu(zv("a",e,t,n),zv("b",e,t,n))];case"LogicalAnd":return[Ku(zv("a",e,t,n),zv("b",e,t,n))];case"LogicalNot":return[Xu(zv("a",e,t,n))];case"LogicalOr":return[Yu(zv("a",e,t,n),zv("b",e,t,n))];case"Select":case"SelectV2":return[lu(zv("condition",e,t,n),zv("a",e,t,n),zv("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},WI=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[hi(zv("a",e,t,n),zv("b",e,t,n),zv("transposeA",e,t,n),zv("transposeB",e,t,n))];case"Transpose":return[di(zv("x",e,t,n),zv("perm",e,t,n))];case"_FusedMatMul":const[s,r]=zv("fusedOps",e,t,n),a="biasadd"===s,i="prelu"===r,o=zv("numArgs",e,t,n),l=zv("leakyreluAlpha",e,t,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=zv("args",e,t,n);return[ap({a:zv("a",e,t,n),b:zv("b",e,t,n),transposeA:zv("transposeA",e,t,n),transposeB:zv("transposeB",e,t,n),bias:u,activation:r,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},VI=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[_l(zv("x",e,t,n),zv("mean",e,t,n),zv("variance",e,t,n),zv("offset",e,t,n),zv("scale",e,t,n),zv("epsilon",e,t,n))];case"LRN":return[Au(zv("x",e,t,n),zv("radius",e,t,n),zv("bias",e,t,n),zv("alpha",e,t,n),zv("beta",e,t,n))];case"Softmax":return[Qc(zv("x",e,t,n))];case"LogSoftmax":return[zu(zv("x",e,t,n))];case"SparseToDense":return[Gh(zv("sparseIndices",e,t,n),zv("outputShape",e,t,n),zv("sparseValues",e,t,n),zv("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},UI=(e,t,n)=>{switch(e.op){case"Max":{const s=zv("axis",e,t,n),r=zv("keepDims",e,t,n);return[Mu(zv("x",e,t,n),s,r)]}case"Mean":{const s=zv("axis",e,t,n),r=zv("keepDims",e,t,n);return[tc(zv("x",e,t,n),s,r)]}case"Min":{const s=zv("axis",e,t,n),r=zv("keepDims",e,t,n);return[nc(zv("x",e,t,n),s,r)]}case"Sum":{const s=zv("axis",e,t,n),r=zv("keepDims",e,t,n);return[Lu(zv("x",e,t,n),s,r)]}case"All":{const s=zv("axis",e,t,n),r=zv("keepDims",e,t,n);return[sl(zv("x",e,t,n),s,r)]}case"Any":{const s=zv("axis",e,t,n),r=zv("keepDims",e,t,n);return[rl(zv("x",e,t,n),s,r)]}case"ArgMax":{const s=zv("axis",e,t,n);return[al(zv("x",e,t,n),s)]}case"ArgMin":{const s=zv("axis",e,t,n);return[il(zv("x",e,t,n),s)]}case"Prod":{const s=zv("axis",e,t,n),r=zv("keepDims",e,t,n);return[vc(zv("x",e,t,n),s,r)]}case"Cumsum":{const s=zv("axis",e,t,n),r=zv("exclusive",e,t,n),a=zv("reverse",e,t,n);return[tu(zv("x",e,t,n),s,r,a)]}case"Bincount":const s=zv("x",e,t,n),r=zv("weights",e,t,n),a=zv("size",e,t,n);return[zl(s,r,a)];case"DenseBincount":{const s=zv("x",e,t,n),r=zv("weights",e,t,n),a=zv("size",e,t,n),i=zv("binaryOutput",e,t,n);return[nu(s,r,a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},GI=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=zv("n",e,t,n),r=zv("axis",e,t,n);let a=zv("tensors",e,t,n);return a=a.slice(0,s),[Tl(a,r)]}case"Gather":{const s=zv("x",e,t,n),r=zv("indices",e,t,n);return[xu(s,Ha(r,"int32"),0)]}case"GatherV2":{const s=zv("axis",e,t,n),r=zv("batchDims",e,t,n),a=zv("x",e,t,n),i=zv("indices",e,t,n);return[xu(a,Ha(i,"int32"),s,r)]}case"Reverse":{const s=zv("dims",e,t,n),r=[];for(let e=0;e<s.length;e++)s[e]&&r.push(e);const a=zv("x",e,t,n);return[Mc(a,r)]}case"ReverseV2":{const s=zv("axis",e,t,n),r=zv("x",e,t,n);return[Mc(r,s)]}case"Slice":{const s=zv("begin",e,t,n),r=zv("size",e,t,n);return[Al(zv("x",e,t,n),s,r)]}case"StridedSlice":{const s=zv("begin",e,t,n),r=zv("end",e,t,n),a=zv("strides",e,t,n),i=zv("beginMask",e,t,n),o=zv("endMask",e,t,n),l=zv("ellipsisMask",e,t,n),u=zv("newAxisMask",e,t,n),c=zv("shrinkAxisMask",e,t,n),h=zv("x",e,t,n);return[uh(h,s,r,a,i,o,l,u,c)]}case"Pack":return uo((()=>{const s=zv("axis",e,t,n),r=zv("tensors",e,t,n),a=r[0].shape,i=ih(r[0]).shape,o=r.map((e=>{const t=re(e.shape,a);if(!t&&!re(ih(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Sl(e,a)}));return[oh(o,s)]}));case"Unpack":{const s=zv("axis",e,t,n),r=zv("tensor",e,t,n);return wh(r,s)}case"Tile":{const s=zv("reps",e,t,n);return[gu(zv("x",e,t,n),s)]}case"Split":case"SplitV":{const s=zv("axis",e,t,n),r=zv("numOrSizeSplits",e,t,n),a=zv("x",e,t,n);return sh(a,r,s)}case"ScatterNd":{const s=zv("indices",e,t,n),r=zv("values",e,t,n),a=zv("shape",e,t,n);return[Uh(s,r,a)]}case"GatherNd":{const s=zv("x",e,t,n),r=zv("indices",e,t,n);return[Hh(s,r)]}case"SparseToDense":{const s=zv("sparseIndices",e,t,n),r=zv("outputShape",e,t,n),a=zv("sparseValues",e,t,n),i=zv("defaultValue",e,t,n);return[Gh(s,a,r,a.dtype===i.dtype?i:Ha(i,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},HI=(e,t,n)=>{switch(e.op){case"FFT":return[eh(zv("x",e,t,n))];case"IFFT":return[th(zv("x",e,t,n))];case"RFFT":return[rh(zv("x",e,t,n))];case"IRFFT":return[nh(zv("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},jI=(e,t,n)=>{switch(e.op){case"Cast":return[Ha(zv("x",e,t,n),zv("dtype",e,t,n))];case"ExpandDims":{const s=zv("axis",e,t,n);return[fu(zv("x",e,t,n),s)]}case"Squeeze":{const s=zv("axis",e,t,n);return[ih(zv("x",e,t,n),s)]}case"Reshape":return[Sl(zv("x",e,t,n),zv("shape",e,t,n))];case"MirrorPad":return[rc(zv("x",e,t,n),zv("padding",e,t,n),zv("mode",e,t,n))];case"PadV2":case"Pad":return[fc(zv("x",e,t,n),zv("padding",e,t,n),zv("constantValue",e,t,n))];case"SpaceToBatchND":{const s=zv("blockShape",e,t,n),r=zv("paddings",e,t,n);return[xc(zv("x",e,t,n),s,r)]}case"BatchToSpaceND":{const s=zv("blockShape",e,t,n),r=zv("crops",e,t,n);return[Fl(zv("x",e,t,n),s,r)]}case"DepthToSpace":{const s=zv("blockSize",e,t,n),r=zv("dataFormat",e,t,n).toUpperCase();return[su(zv("x",e,t,n),s,r)]}case"BroadcastTo":return[Pl(zv("x",e,t,n),zv("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function qI(e,t,n,s){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return uo((()=>NI(e,t,n)));case"basic_math":return uo((()=>SI(e,t,n)));case"control":return EI(e,t,n);case"convolution":return uo((()=>RI(e,t,n)));case"creation":return uo((()=>DI(e,t,n)));case"dynamic":return _I(e,t,n);case"evaluation":return uo((()=>OI(e,t,n)));case"image":return uo((()=>PI(e,t,n)));case"graph":return uo((()=>MI(e,t,n)));case"logical":return uo((()=>BI(e,t,n)));case"matrices":return uo((()=>WI(e,t,n)));case"normalization":return uo((()=>VI(e,t,n)));case"reduction":return uo((()=>UI(e,t,n)));case"slice_join":return uo((()=>GI(e,t,n)));case"spectral":return uo((()=>HI(e,t,n)));case"transformation":return uo((()=>jI(e,t,n)));case"hash_table":return zI(e,t,n,s);case"custom":const r=Mv(e.op);if(r&&r.customExecutor)return r.customExecutor(new II(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op \'${e.op}\'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Le(r)?r.then((e=>[].concat(e))):[].concat(r)}class KI{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function XI(e,t,n,s){const r=new Set,a=[];let i=null,o=null;const l=new Set,u=Object.keys(e).map((e=>Vv(e)[0]));let c=[];null!=s&&(c=s.map((e=>Vv(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(QI(e)||eN(e)||tN(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}const YI=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],JI=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],ZI=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function QI(e){return YI.indexOf(e.op)>=0}function eN(e){return JI.indexOf(e.op)>=0}function tN(e){return ZI.indexOf(e.op)>=0}class nN{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new nN(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),s=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){const n=XI(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(null!=r)throw new Error(`This execution contains the node \'${r.name}\', which has the dynamic op \'${r.op}\'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}return function(e,t,n){const{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map((e=>Vv(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{s.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{s.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{s.has(e.name)&&a.push(e)}));const l=new Set,u=[];for(;a.length>0;){const e=a.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&s.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&a.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=n.map((e=>this.graph.nodes[Vv(e)[0]])),r=t.map((e=>Vv(e)[0]));let a=r.map((e=>this.graph.nodes[e]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(s,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));const l={},u={};return uo((()=>{const n=new KI(this.weightMap,l,u,this.functionExecutorMap),s=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Vv(t),a=[];a[r]=e[t],s[n]=a}));const a=this.getFrozenTensorIds(s),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!s[t.name]){const e=qI(t,s,n,this._resourceManager);if(Le(e))throw new Error(`The execution of the op \'${t.op}\' returned a promise. Please use model.executeAsync() instead.`);s[t.name]=e,this.checkTensorForDisposal(t.name,t,s,n,a,r,i)}}return null==this.parent&&n.dispose(a),t.map((e=>Pv(e,s,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[Wv(e,n.currentContextId)]}(e.name,n,s);null!=t&&t.forEach((e=>{if(e&&!r.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const a=new KI(this.weightMap,s,r,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>Pv(e,i,a))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const s=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){const r=Object.keys(e),a=r.map((e=>this.graph.nodes[Vv(e)[0]])),i=n.map((e=>Vv(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=XI(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=Vv(t),r=[];r[s]=e[t],d[n]=r}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,l);await Promise.all(e)}null!=c||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!QI(e)&&!Pv(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${e}`)}return d}processStack(e,t,n,s,r,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&zv("isConstant",e.node,s,n)&&([c]=Bv(e.node.name,n)),null==s[e.node.name]){const h=qI(e.node,s,n,this._resourceManager);c||([c]=Bv(e.node.name,n));const p=n.currentContext;Le(h)?u.push(h.then((u=>(s[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,l),u)))):(s[c]=h,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,l))}else this.processChildNodes(e.node,t,n,s,r,l)}return u}processChildNodes(e,t,n,s,r,a){e.children.forEach((e=>{const[i]=Bv(e.name,n);!r[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Pv(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Pv(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[s]=Vv(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;Z(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict[\'${r.name}\'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&Z(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict[\'${r.name}\'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Vv(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=Vv(e);if(!this.graph.nodes[t])throw new Error(`The output \'${e}\' is not found in the graph`)}))}}class sN{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const rN="?tfjs-format=file",aN="model.json";class iN{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new sN}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=ii(e,this.loadOptions);else{const t=da(e,this.loadOptions);if(0===t.length)t.push(ii(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL \'${[e]}\'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=ta(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new nN(lI.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=lI.Instance.transformGraph(e.modelInitializer);this.initializer=new nN(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=pa(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL \'${e}\'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL \'${e}\'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof xr||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,s)=>(t[n]=e[s],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function oN(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${aN}${rN}`);const n=new iN(e,t);return await n.load(),n}const lN="2.8.6";function uN(e,t,n=new Map,s=new Set){if(null==e)return null;if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(fN(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=uN(e[a],t,n,s);r[a]=i}return s.delete(e),r}throw new Error(`Can\'t recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function cN(e,t=pN){return hN(e,t)}function hN(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(fN(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=hN(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can\'t recurse into non-iterable type: ${s}`)}return r.value}function pN(e){return null===e?null:fN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function dN(e,t){const n=new Map;uN(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(Le(t)){const s=await t;n.set(e,s)}}return uN(e,t,n)}function fN(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof xr))}function mN(e){return e instanceof xr?{value:e.clone(),recurse:!1}:fN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class gN{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can\'t create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can\'t create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can\'t get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can\'t set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class yN extends gN{constructor(){super(yN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function bN(e){return new kN(e)}function xN(e){return new vN(e)}yN.INITIAL_CAPACITY=32;class wN{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new EN(this,e)}filter(e){return new $N(this,e)}map(e){return new TN(this,e)}mapAsync(e){return new AN(this,e)}serialMapAsync(e){return new AN(this,e).serial()}flatmap(e){return new DN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new CN(this,e,t)}columnMajorBatch(e,t=!0,n=pN){return this.rowMajorBatch(e,t).map((e=>cN(e,n)))}concatenate(e,t){return new FN(bN([this,e]),t)}take(e){return e<0||null==e?this:new SN(this,e)}skip(e){return e<0||null==e?this:new NN(this,e)}prefetch(e){return new MN(this,e)}shuffle(e,t){return new LN(this,e,t)}serial(){return new IN(this)}}class kN extends wN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return uN(e,t)}(t,mN)),done:!1};var t}}class vN extends wN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class IN extends wN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class NN extends wN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;co(e.value)}return this.upstream.next()}}class SN extends wN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class CN extends wN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class $N extends wN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;co(e.value)}}}class TN extends wN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Dr(e.value),n=this.transform(e.value),s=Dr(n);for(const e of t)Rr(e,s)||e.dispose();return{value:n,done:!1}}}class EN extends wN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class AN extends wN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Dr(e.value),n=await this.transform(e.value),s=Dr(n);for(const e of t)Rr(e,s)||e.dispose();return{value:n,done:!1}}}class RN extends wN{constructor(){super(),this.outputQueue=new yN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class DN extends RN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Dr(e.value),n=this.transform(e.value),s=Dr(n);this.outputQueue.pushAll(n);for(const e of t)Rr(e,s)||e.dispose();return!0}}class FN extends wN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var _N;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(_N||(_N={}));class ON extends wN{constructor(e,t=_N.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const s=await dN(this.iterators,(function(e){return e instanceof wN?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case _N.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case _N.SHORTEST:return{value:null,done:!0};case _N.LONGEST:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class MN extends wN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new gN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class LN extends MN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Nc.alea(n||hr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class zN{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return Z(e>0,(()=>`batchSize needs to be positive, but it is\\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),PN((async()=>(await n.iterator()).columnMajorBatch(e,t,VN)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,PN((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,PN((async()=>(await t.iterator()).filter((t=>uo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return PN((async()=>(await t.iterator()).map((t=>uo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return PN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return PN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,PN((async()=>{return n=xN((async()=>({value:await t.iterator(),done:!1}))).take(e),new FN(n,s);var n,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,PN((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\\`Dataset.shuffle()\\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \\`tf.Tensor\\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=Nc.alea(t||hr().toString());return PN((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,PN((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function PN(e,t=null){return new class extends zN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function BN(e){return PN((async()=>bN(e)),e.length)}function WN(e){if(!fN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return PN((async()=>function(e,t=_N.FAIL){return new ON(e,t)}(await dN(e,(e=>{if(e instanceof zN)return{value:e.iterator(),recurse:!1};if(fN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),_N.SHORTEST)),t)}function VN(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof xr||xe(t)?{value:function(e){if(0===e.length)throw new Error("Can\'t make a batch of zero elements.");return e[0]instanceof xr?oh(e):Jr(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}zN.MAX_BUFFER_SIZE=1e4;class UN extends zN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\\n").map((e=>(e.endsWith("\\r")&&(e=e.slice(0,-1)),e)))}}const GN=\'"\',HN=Symbol("out"),jN=Symbol("field"),qN=Symbol("quote"),KN=Symbol("quoteafterquote"),XN=Symbol("quoteinquote");class YN extends zN{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new UN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(Z(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&Z(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(Z(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error(\'The key "\'+e+\'" provided in columnConfigs does not match any of the column names (\'+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){const a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[r];let l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{const e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?s[a]=l:n[a]=l}}return 0===Object.keys(s).length?n:{xs:n,ys:s}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let s=0;const r=e.length;let a=HN;for(let t=0;t<r;t++)switch(a){case HN:switch(e.charAt(t)){case GN:s=t+1,a=qN;break;case this.delimiter:if(s=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=HN;break;default:a=jN,s=t}break;case jN:e.charAt(t)===this.delimiter&&(n.push(e.substring(s,t)),a=HN,s=t+1);break;case qN:e.charAt(t)===GN&&(a=KN);break;case KN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(s,t-1)),a=HN,s=t+1;break;case GN:a=qN;break;default:a=XN}break;case XN:e.charAt(t)===GN&&(a=qN)}if(a===KN?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class JN extends wN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Be().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new JN(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((s=>{const r=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,s)=>n.set(e,s*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ne(t));return n.set(e,n.length-e.length),Jr(n,t)}}class ZN extends wN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=hh([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,s=(1-t)/2,r=n+e,a=t+s;this.cropBox=ph([s,n,a,r],[1,4])}else this.cropBox=ph([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Be().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new ZN(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Z("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide \'user\' or \'environment\'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=bi(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return uo((()=>{const t=e.toFloat().expandDims(0);let n;n=Gp.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const s=n.shape;return n.reshape(s.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class QN{}class eS extends wN{split(e){return new tS(this,e)}}class tS extends eS{constructor(e,t){super(),this.upstream=e,this.impl=new nS(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class nS extends RN{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split(\'${this.separator}\')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class sS extends wN{decodeUTF8(){return new rS(this)}}class rS extends eS{constructor(e){super(),this.upstream=e,this.impl=new aS(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class aS extends RN{constructor(e){if(super(),this.upstream=e,Be().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(312);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Be().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class iS extends sS{constructor(e,t={}){super(),this.file=e,this.options=t,Z(e instanceof Uint8Array||!!Be().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const s=new FileReader;s.onload=n=>{let r=s.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(r)},s.onabort=e=>t(new Error("Aborted")),s.onerror=e=>t(new Error(e.type));const r=this.file.slice(this.offset,n);s.readAsArrayBuffer(r)}this.offset=n}));return{value:await e,done:!1}}}function oS(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class lS extends QN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(oS(this.input)&&Be().get("IS_NODE")){const e=n(993);this.input=e.readFileSync(this.input.substr(7))}return new iS(this.input,this.options)}}class uS extends QN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return oS(this.url)?new lS(this.url,this.fileOptions).iterator():async function(e,t={}){let n,s;var r;"string"==typeof e?n=e:(n=e.url,s={method:(r=e).method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});const a=await pr(n,s);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new iS(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function cS(e,t={}){return new YN(new uS(e),t)}function hS(e){const t=xN(e);return PN((async()=>t))}function pS(e){return PN((async()=>{const t=await e();return xN((()=>t.next()))}))}async function dS(e,t){return ZN.create(e,t)}async function fS(e){return JN.create(e)}const mS="2.8.6";function gS(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Z("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const yS=vh;class bS extends G{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new U(this,io())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Be().get("IS_NODE")&&md("\\n============================\\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require(\'@tensorflow/tfjs-node\'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\\n============================"));const s={};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&ve(n[0])){const r=n.map((e=>dr(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s){this.data.set(e,{values:t,dtype:s,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?yd(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>fr(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ga(e.shape,e.dtype,n)}makeOutput(e,t,n){const s=this.write(e,t,n);return io().makeTensorFromDataId(s,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=hr();return e(),{kernelMs:hr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){gS([e],"where");const t=this.readSync(e.dataId);return yS(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function xS(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(gS(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=ne(i.shape),c=n||i.dtype,h=me(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],r);return o.makeTensorInfo(i.shape,c,h)}}function wS(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(gS(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}wo("cpu",(()=>new bS),1);const kS=xS(Pt,(e=>e>=0?e:Math.exp(e)-1)),vS={kernelName:Pt,backendName:"cpu",kernelFunc:kS};function IS(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const NS={kernelName:nn,backendName:"cpu",kernelFunc:IS};function SS(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;gS([r],"leakyRelu");const i=ne(r.shape),o=n.data.get(r.dataId).values,l=fe("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}const CS={kernelName:un,backendName:"cpu",kernelFunc:SS};function $S(e){return(t,n,s,r,a)=>{const i=Ko(t,n),o=i.length,l=Te(i),u=fe(a,ne(i)),c=t.length,h=n.length,p=Te(t),d=Te(n),f=jo(t,i),m=jo(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<u.length;++t){const n=Me(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=Oe(a,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=Oe(g,h,d);u[t]=e(s[i],r[y])}return[u,i]}}const TS=$S(((e,t)=>e<0?t*e:e));function ES(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;gS([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=TS(s.shape,r.shape,a,i,s.dtype);return n.makeTensorInfo(l,s.dtype,o)}const AS={kernelName:jn,backendName:"cpu",kernelFunc:ES},RS=xS(Jn,(e=>Math.max(0,e))),DS={kernelName:Jn,backendName:"cpu",kernelFunc:RS},FS=xS(ss,(e=>Math.min(Math.max(0,e),6))),_S={kernelName:ss,backendName:"cpu",kernelFunc:FS};function OS(e,t,n,s,r){if("linear"===n)return IS({inputs:{x:t},backend:e});if("relu"===n)return RS({inputs:{x:t},backend:e});if("elu"===n)return kS({inputs:{x:t},backend:e});if("relu6"===n)return FS({inputs:{x:t},backend:e});if("prelu"===n)return ES({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return SS({inputs:{x:t},backend:e,attrs:{alpha:r}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function MS(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const LS={kernelName:gt,backendName:"cpu",kernelFunc:MS};function zS(e,t,n="float32"){if("complex64"===n)return MS({inputs:{real:zS(e,t,"float32"),imag:zS(e,t,"float32")},backend:e});const s=De(ne(t),n);return e.makeTensorInfo(t,n,s)}function PS(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const BS={kernelName:Xn,backendName:"cpu",kernelFunc:PS};function WS(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return IS({inputs:{x:r},backend:n});const e=zS(n,r.shape,r.dtype),t=WS({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=MS({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=PS({inputs:{input:r},backend:n}),t=WS({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!be(r.dtype,a)){const e=IS({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(r.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(r.shape,"int32",t)}if("bool"===a){const e=n.data.get(r.dataId).values,t=cr([0],r.dtype),[s,a]=$S(((e,t)=>e!==t?1:0))(r.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",s)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const VS={kernelName:dt,backendName:"cpu",kernelFunc:WS};function US(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;gS([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=s||a.dtype,[h,p]=t(a.shape,i.shape,l,u,c);return o.makeTensorInfo(p,c,h)}:({inputs:e,backend:r})=>{const{a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=WS({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=WS({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),k=MS({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),k}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function GS(e){return(t,n,s,r,a,i)=>{const o=Ko(t,n),l=ne(o),u=o.length,c=Te(o),h=fe("float32",l),p=fe("float32",l),d=jo(t,o),f=jo(n,o),m=yd(s,r),g=yd(a,i),y=t.length,b=Te(t),x=n.length,w=Te(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,s=t%g.length,r=e(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[t]=r.real,p[t]=r.imag}else for(let t=0;t<h.length;t++){const n=Me(t,u,c),s=n.slice(-y);d.forEach((e=>s[e]=0));const r=Oe(s,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=Oe(a,x,w),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const HS=$S(((e,t)=>e+t)),jS=GS(((e,t,n,s)=>({real:e+n,imag:t+s}))),qS=US(Ke,HS,jS),KS={kernelName:Ke,backendName:"cpu",kernelFunc:qS};function XS(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=ne(r.shape),o=he(a,i),l=ne(o);Z(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const YS={kernelName:Zn,backendName:"cpu",kernelFunc:XS};function JS(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;gS([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],d=o?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=ne(f),y=ne(m);Z(l>=2&&u>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?r.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,d]);Z(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],w=XS({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),k=XS({inputs:{x:a},backend:n,attrs:{shape:x}}),v=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],N=o?k.shape[1]:k.shape[2],S=Math.max(g,y),C=n.data.get(w.dataId).values,$=n.data.get(k.dataId).values,T=Te(w.shape),E=Te(k.shape),[A,R,D]=i?[T[0],1,T[1]]:[T[0],T[1],1],[F,_,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],M=I*N,L=Ga([S,I,N],w.dtype),z=L.values,P=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<I;t+=P)for(let n=0;n<N;n+=P)for(let s=0;s<v;s+=P){const r=Math.min(t+P,I),a=Math.min(n+P,N),i=Math.min(s+P,v);for(let o=t;o<r;o++)for(let t=n;t<a;t++){let n=0;for(let r=s;r<i;r++){const s=Math.min(e,g-1)*A,a=Math.min(e,y-1)*O;n+=C[s+o*R+r*D]*$[r*F+t*_+a]}z[e*M+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(b,L.dtype,L.values)}const ZS={kernelName:ut,backendName:"cpu",kernelFunc:JS},QS={kernelName:zs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let p,d,f;const m=[];p=JS({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=qS({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=OS(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function eC(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const tC={kernelName:He,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;gS(t,"abs");let s=new Float32Array(ne(t.shape));return s=eC(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,"float32")}},nC=xS(je,(e=>Math.acos(e))),sC={kernelName:je,backendName:"cpu",kernelFunc:nC},rC=xS(qe,(e=>Math.acosh(e))),aC={kernelName:qe,backendName:"cpu",kernelFunc:rC},iC={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;gS(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=Ga(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function oC(e,t,n,s,r){const a=t.length,i=ne(t),o=Te(t),l=Te(r),u=fe(n,ne(r));for(let t=0;t<i;++t){const n=Me(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[Oe(r,a,l)]=e[t]}return u}function lC(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;gS(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];const l=oC(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const uC={kernelName:As,backendName:"cpu",kernelFunc:lC},cC={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;gS(r,"all");const o=pe(a,r.shape);let l=o;const u=Gu(l,r.shape.length);let c=r;null!=u&&(c=lC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=ju(l.length,r.shape.length)),Uu("all",l,c.shape.length);const[h,p]=Wu(c.shape,l),d=ne(p),f=De(ne(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];n=n&&s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=XS({inputs:{x:g},backend:n,attrs:{shape:Vu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},hC={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;gS(r,"any");const o=pe(a,r.shape);let l=o;const u=Gu(l,r.shape.length);let c=r;null!=u&&(c=lC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=ju(l.length,r.shape.length)),Uu("any",l,c.shape.length);const[h,p]=Wu(c.shape,l),d=ne(p),f=De(ne(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];n=n||s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=XS({inputs:{x:g},backend:n,attrs:{shape:Vu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},pC={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;gS(r,"argMax");let i=pe(a,r.shape);const o=Gu(i,r.shape.length);let l=r;const u=[];null!=o&&(l=lC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=ju(i.length,l.shape.length)),i=[i[0]],Uu("argMax",i,l.shape.length);const[c,h]=Wu(l.shape,i),p=De(ne(c),"int32"),d=ne(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],s=0;for(let e=0;e<d;++e){const r=f[t+e];r>n&&(n=r,s=e)}p[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},dC={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;gS(r,"argMin");let i=pe(a,r.shape);const o=Gu(i,r.shape.length);let l=r;const u=[];null!=o&&(l=lC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=ju(i.length,l.shape.length)),i=[i[0]],Uu("argMin",i,l.shape.length);const[c,h]=Wu(l.shape,i),p=De(ne(c),"int32"),d=ne(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],s=0;for(let e=0;e<d;++e){const r=f[t+e];r<n&&(n=r,s=e)}p[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},fC=xS(et,(e=>Math.asin(e))),mC={kernelName:et,backendName:"cpu",kernelFunc:fC},gC=xS(tt,(e=>Math.asinh(e))),yC={kernelName:tt,backendName:"cpu",kernelFunc:gC},bC=xS(nt,(e=>Math.atan(e))),xC={kernelName:nt,backendName:"cpu",kernelFunc:bC},wC=$S(((e,t)=>Math.atan2(e,t))),kC=US(rt,wC),vC={kernelName:rt,backendName:"cpu",kernelFunc:kC},IC=xS(st,(e=>Math.atanh(e))),NC={kernelName:st,backendName:"cpu",kernelFunc:IC};function SC(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,d=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ga(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*y,m=t*s[0];for(let t=0;t<r.inChannels;++t)for(let y=0;y<r.outHeight;++y){const w=y*i-p,k=Math.max(0,w),v=Math.min(r.inHeight,c+w),I=n+y*b;for(let n=0;n<r.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(r.inWidth,h+i);let y=f,b=0,w=0;for(let n=k;n<v;n+=l){const r=m+n*s[1];for(let n=c;n<p;n+=u){const i=e[r+n*s[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===a?b/w:y}}}return m}function CC(e,t,n,s,r=!1,a=!1){const i=Ga(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,p=s.effectiveFilterWidth,d=s.padInfo.top,f=s.padInfo.left,m=Ga(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(s.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,k=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>w&&(w=u,k=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*p+l)}}i.set(k,e,n,o,t)}}return i}function $C(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,d=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ga(r.outShape,n),w=x.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],v=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*k,x=t*s[0];for(let t=0;t<r.inChannels;++t)for(let k=0;k<r.outDepth;++k){const S=k*i-m;let C=S;for(;C<0;)C+=u;const $=Math.min(r.inDepth,p+S),T=n+k*v;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(r.inHeight,d+i),k=T+n*I;for(let n=0;n<r.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const d=Math.min(r.inWidth,f+i),g=k+n*N;let v=b,I=0,S=0;for(let n=C;n<$;n+=u){const r=x+n*s[1];for(let n=p;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<d;n+=h){const r=e[i+n*s[3]+t];if("max"===a&&r>v?v=r:"avg"===a&&(I+=r,S++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}w[g+t]="avg"===a?I/S:v}}}}return x}const TC={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;gS(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;Z(Il(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations \'1\'`));const u=dl(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&re(u.inShape,u.outShape))c=IS({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=Te(r.shape),s=SC(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},EC={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u,dilations:c}=s;gS(r,"avgPool3d");let h=c;null==h&&(h=[1,1,1]);const p=fl(r.shape,a,i,h,o,l,u),d=$C(n.data.get(r.dataId).values,r.shape,r.dtype,Te(r.shape),p,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}},AC={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dilations:u,dimRoundingMode:c}=s;gS([r,a],"avgPool3DGrad");const h=fl(a.shape,i,o,u,l,c),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=h.dilationDepth,x=h.dilationHeight,w=h.dilationWidth,k=h.effectiveFilterDepth,v=h.effectiveFilterHeight,I=h.effectiveFilterWidth,N=k-1-h.padInfo.front,S=I-1-h.padInfo.left,C=v-1-h.padInfo.top,$=Ga(a.shape,"float32"),T=1/(m*g*y),E=n.bufferSync(r);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let s=0;s<h.inHeight;++s)for(let r=0;r<h.inWidth;++r){const a=n-N,i=s-C,o=r-S;let l=0;for(let n=0;n<k;n+=b){const s=(a+n)/p;if(!(s<0||s>=h.outDepth||Math.floor(s)!==s))for(let n=0;n<v;n+=x){const r=(i+n)/d;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<I;n+=w){const a=(o+n)/f;a<0||a>=h.outWidth||Math.floor(a)!==a||(l+=E.get(e,s,r,a,t))}}}$.set(l*T,e,n,s,r,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},RC={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;gS([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=dl(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,k=Ga(i.shape,"float32"),v=1/(d*f),I=n.data.get(r.dataId).values,N=Ga(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-w,a=s-x;let i=0;for(let n=0;n<y;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<b;n+=g){const r=(a+n)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=N.get(e,s,r,t))}}k.set(i*v,e,n,s,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},DC={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:l}=t;Z(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Z(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Z(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),gS([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,k=0,v=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[k++])*d[v++]/Math.sqrt(p[I++]+u),w>=g&&(w=0),k>=x&&(k=0),v>=y&&(v=0),I>=b&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function FC(e,t,n,s,r){const a=Oi(s,t,n),i=ne(n),o=Te(s);if(a){const n=Mi(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=Ga(s,r,"string"===r?Rd(e):e),u=Ga(n,r);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));u.set(l.get(...s),...n)}return"string"===r?Dd(u.values):u.values}function _C(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;gS(r,"slice");const[o,l]=Li(r,a,i);Ii(r,o,l);const u=FC(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const OC={kernelName:cs,backendName:"cpu",kernelFunc:_C},MC={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;gS([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=nd(r.shape,a,o),u=sd(l.length,a.length),c=rd(r.shape,a,o),h=ad(i,a.length),p=id(c,i,a.length),d=XS({inputs:{x:r},backend:n,attrs:{shape:l}}),f=lC({inputs:{x:d},backend:n,attrs:{perm:u}}),m=XS({inputs:{x:f},backend:n,attrs:{shape:c}}),g=_C({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function LC(e,t,n,s,r){const a=ne(s),i=De(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i}function zC(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=Ga([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const PC={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=LC(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function BC(e){return(t,n,s)=>{const r=fe(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}const WC=BC((e=>Math.ceil(e))),VC=wS(ft,WC),UC={kernelName:ft,backendName:"cpu",kernelFunc:VC},GC=xS(mt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),HC={kernelName:mt,backendName:"cpu",kernelFunc:GC},jC={kernelName:yt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(ne(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function qC(e,t,n,s){const r=me(n,ne(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=ne(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?Rd(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}function KC(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const XC={kernelName:rn,backendName:"cpu",kernelFunc:KC};function YC(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=pe(r,t[0].shape)[0];let i=Zp(t.map((e=>e.shape)),a);if(0===ne(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ne(e.shape)>0));if(1===o.length)return IS({inputs:{x:o[0]},backend:n});if(Jp(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>PS({inputs:{input:e},backend:n}))),t=o.map((e=>KC({inputs:{input:e},backend:n}))),s=YC({inputs:e,backend:n,attrs:{axis:a}}),r=YC({inputs:t,backend:n,attrs:{axis:a}}),i=MS({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=ne(e.shape.slice(a));return XS({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Zp(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=qC(u,i,t[0].dtype,c),p=Zp(o.map((e=>e.shape)),a),d=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const JC={kernelName:bt,backendName:"cpu",kernelFunc:YC};function ZC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;gS([r,a],"conv2d");const h=Nl(l),p=ml(r.shape,a.shape,i,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new mr(p.outShape,r.dtype),k=Te(r.shape),v=Te(a.shape),I=k[0],N=x?k[1]:k[2],S=x?k[2]:1,C=x?1:k[1],$=w.strides[0],T=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(r.dataId).values,D=n.data.get(a.dataId).values,F=w.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*$;for(let e=0;e<p.outHeight;++e){const s=n+e*T,r=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=r+e*m;if(n<0||n>=p.inHeight)continue;const a=e*v[0],i=t+n*N;for(let e=0;e<p.outWidth;++e){const t=s+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const s=n+e*g;if(s<0||s>=p.inWidth)continue;const r=i+s*S;let o=a+e*v[1];for(let e=0;e<p.inChannels;++e){const n=R[r+e*C];for(let e=0;e<p.outChannels;++e)F[t+e*A]+=n*D[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const QC={kernelName:xt,backendName:"cpu",kernelFunc:ZC},e$={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;gS([r,a],"conv2dBackpropFilter");const h=Nl(l),p=ml(r.shape,c,i,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new mr(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,k=n.data.get(r.dataId).values,v=n.data.get(a.dataId).values,I=new mr(r.shape,r.dtype,k),N=new mr(a.shape,a.dtype,v);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/d)),n=Math.min(p.outHeight,(p.inHeight+w-e)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((x-s)/f)),a=Math.min(p.outWidth,(p.inWidth+x-s)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-w;for(let e=r;e<a;++e){const n=s+e*f-x;l+=y?I.get(u,t,n,i)*N.get(u,c,e,o):I.get(u,i,t,n)*N.get(u,o,c,e)}}b.set(l,e,s,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},t$={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;gS([r,a],"conv2dBackpropInput");const h=Te(a.shape),p=Te(r.shape);let d=Nl(u);const f=ml(i,a.shape,o,1,l,c,!1,d),m=new mr(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(a.dataId).values,[x,w,k]=h,{batchSize:v,filterHeight:I,filterWidth:N,inChannels:S,inHeight:C,inWidth:$,outChannels:T,outHeight:E,outWidth:A,strideHeight:R,strideWidth:D}=f;d=f.dataFormat;const F=I-1-f.padInfo.top,_=N-1-f.padInfo.left,O="channelsLast"===d,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=p[0],W=O?p[1]:p[2],V=O?p[2]:1,U=O?1:p[1];for(let e=0;e<v;++e)for(let t=0;t<S;++t)for(let n=0;n<C;++n){const s=n-F,r=Math.max(0,Math.ceil(s/R)),a=Math.min(E,(I+s)/R);for(let i=0;i<$;++i){const o=i-_,l=Math.max(0,Math.ceil(o/D)),u=Math.min(A,(N+o)/D);let c=0;for(let n=r;n<a;++n){const r=n*R-s;for(let s=l;s<u;++s){const a=B*e+W*n+V*s,i=x*(I-1-r)+w*(N-1-(s*D-o))+k*t;for(let e=0;e<T;++e)c+=y[a+U*e]*b[i+e]}}g[M*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},n$={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s;gS([r,a],"conv3d");const u=gl(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new mr(u.outShape,r.dtype),k=n.data.get(r.dataId).values,v=n.data.get(a.dataId).values,I=w.values,N=Te(r.shape),S=Te(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*N[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){const s=n+e*w.strides[1],r=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=r+e*d;if(n<0||n>=u.inDepth)continue;const a=e*S[0],i=t+n*N[1];for(let e=0;e<u.outHeight;++e){const t=s+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=a+e*S[1],o=i+s*N[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-b;for(let e=0;e<p;++e){const t=s+e*m;if(t<0||t>=u.inWidth)continue;const a=r+e*S[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=k[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*v[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},s$={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s;gS([r,a],"conv3dBackpropFilterV2");const u=Te(r.shape),c=Te(a.shape),h=gl(r.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new mr(h.filterShape,"float32"),x=b.values,[w,k,v,I]=b.strides,N=n.data.get(a.dataId).values,[S,C,$,T]=c,E=n.data.get(r.dataId).values,[A,R,D,F]=u,_=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((_-e)/p)),n=Math.min(h.outDepth,(h.inDepth+_-e)/p),s=e*w;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/d)),i=Math.min(h.outHeight,(h.inHeight+M-r)/d),o=r*k+s;for(let s=0;s<y;++s){const l=Math.max(0,Math.ceil((O-s)/f)),u=Math.min(h.outWidth,(h.inWidth+O-s)/f),c=s*v+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*S;for(let m=t;m<n;++m){const t=(e+m*p-_)*R+h,n=m*C+y;for(let e=a;e<i;++e){const a=(r+e*d-M)*D+t,i=e*$+n;for(let e=l;e<u;++e){const t=e*T+i;g+=E[(s+e*f-O)*F+a+o]*N[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},r$={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s;gS([r],"conv3dBackpropInputV2");const u=Te(r.shape),c=Te(a.shape),h=gl(l,a.shape,o,1,i),p=new mr(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(r.dataId).values,[x,w,k,v]=u,I=n.data.get(a.dataId).values,[N,S,C,$]=c,{batchSize:T,filterDepth:E,filterHeight:A,filterWidth:R,inChannels:D,inDepth:F,inHeight:_,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<D;++t)for(let n=0;n<F;++n){const s=n-U,r=Math.max(0,Math.ceil(s/B)),a=Math.min(L,(E+s)/B);for(let i=0;i<_;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(A+o)/W);for(let c=0;c<O;++c){const h=c-H,p=Math.max(0,Math.ceil(h/V)),T=Math.min(P,(R+h)/V);let D=0;for(let n=r;n<a;++n){const r=n*B-s;for(let s=l;s<u;++s){const a=s*W-o;for(let i=p;i<T;++i){const o=x*e+w*n+k*s+v*i,l=N*(E-1-r)+S*(A-1-a)+C*(R-1-(i*V-h))+$*t;for(let e=0;e<M;++e)D+=b[o+e]*I[l+e]}}}d[f*e+m*n+g*i+y*c+t]=D}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},a$=xS(St,(e=>Math.cos(e))),i$={kernelName:St,backendName:"cpu",kernelFunc:a$},o$=xS(Ct,(e=>Math.cosh(e))),l$={kernelName:Ct,backendName:"cpu",kernelFunc:o$},u$={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,p,d]=r.shape,f=a.shape[0],[m,g]=o,y=Ga([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,k=Te(r.shape),v=Te(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],s=b[t+1],r=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<d;s++){const r=s+n*v[2]+t*v[1]+e*v[0];y.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(p-1)+l*f:.5*(s+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const s=n+l*v[2]+t*v[1]+e*v[0];y.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let s=0;s<d;s++){let a=s+h*k[2]+n*k[1]+i*k[0];const u=w[a];a=s+m*k[2]+n*k[1]+i*k[0];const c=w[a];a=s+h*k[2]+r*k[1]+i*k[0];const p=w[a];a=s+m*k[2]+r*k[1]+i*k[0];const d=u+(c-u)*b,f=p+(w[a]-p)*b;a=s+l*v[2]+t*v[1]+e*v[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(p-1)+n*f:.5*(s+a)*(p-1);if(r<0||r>p-1){for(let s=0;s<d;s++){const r=s+n*v[2]+t*v[1]+e*v[0];y.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<d;s++){const r=s+o*k[2]+l*k[1]+i*k[0],a=s+n*v[2]+t*v[1]+e*v[0];y.values[a]=w[r]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},c$={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;gS(r,"cumsum");const l=Gu([a],r.shape.length);let u=r;null!=l&&(u=lC({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=ju(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=$r(u.dtype,"int32"),p=De(ne(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const s=m(e,t-1);p[n]=i?d[s]+p[s]:d[n]+p[s]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=lC({inputs:{x:g},backend:n,attrs:{perm:Hu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},h$={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=LC(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=zC(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},p$={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;Z("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),Z(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,p=u*a,d=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<p;++t){const r=Math.floor(t/a),i=(s*a+t%a)*d;for(let t=0;t<d;++t){const s=t+i+c*(r+u*(n+l*e));m[g++]=f[s]}}}return n.makeTensorInfo([o,h,p,d],r.dtype,m)}};function d$(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;gS([r,a],"depthwiseConv2DNative");const c=Te(r.shape),h=Te(a.shape);let p=l;null==p&&(p=[1,1]),Z(Il(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations \'${p}\'`));const d=ml(r.shape,a.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,k=d.outChannels/d.inChannels,v=new mr(d.outShape,r.dtype),I=n.data.get(r.dataId).values,N=n.data.get(a.dataId).values,S=v.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*v.strides[0];for(let e=0;e<d.outHeight;++e){const s=n+e*v.strides[1],r=e*d.strideHeight-x;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=d.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=s+e*v.strides[2],n=e*d.strideWidth-w;for(let e=0;e<m;++e){const s=n+e*y;if(s<0||s>=d.inWidth)continue;const r=a+e*h[1],o=i+s*d.inChannels;let l=t,u=r;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<k;++e)S[l+e]+=t*N[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const f$={kernelName:Rt,backendName:"cpu",kernelFunc:d$},m$={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;gS([r,a],"depthwiseConv2dNativeBackpropFilter");const h=ml(r.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new mr(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,k=new mr(r.shape,r.dtype,w),v=n.data.get(a.dataId).values,I=new mr(a.shape,a.dtype,v);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((y-s)/d)),a=Math.min(h.outWidth,(h.inWidth+y-s)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=r;e<a;++e){const n=s+e*d-y;u+=k.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},g$={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;gS([r,a],"depthwiseConv2DNativeBackpropInput");const h=Te(r.shape),p=Te(a.shape),d=ml(c,a.shape,i,o,l,u,!0),f=new mr(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[w,k,v]=h,I=n.data.get(a.dataId).values,[N,S,C]=p,{batchSize:$,filterHeight:T,filterWidth:E,inChannels:A,inHeight:R,inWidth:D,outChannels:F,outHeight:_,outWidth:O,strideHeight:M,strideWidth:L}=d,z=T-1-d.padInfo.top,P=E-1-d.padInfo.left,B=F/A;for(let e=0;e<$;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const s=n-z,r=Math.max(0,Math.ceil(s/M)),a=Math.min(_,(T+s)/M);for(let i=0;i<D;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(O,(E+o)/L);let c=0;for(let n=r;n<a;++n){const r=n*M-s;for(let s=l;s<u;++s){const a=w*e+k*n+v*s,i=N*(T-1-r)+S*(E-1-(s*L-o))+C*t;for(let e=0;e<B;++e)c+=x[a+(t*B+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},y$={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=ne(s.shape),a=n.data.get(s.dataId).values,i=Ga([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},b$={kernelName:Ot,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:v,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=pl(s.shape,r.shape,a,i,"NHWC",o),$=ne(C),T=C.length,E=me(s.dtype,$);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let a=0;a<b;++a){const i=a*k-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<v;++t){const a=n+t*N;if(a>=0&&a<f)for(let n=0;n<I;++n){const d=i+n*S;if(d>=0&&d<m){const i=Oe([e,a,d,o],c,Te(s.shape)),f=Oe([t,n,o],p,Te(r.shape)),m=u[i]+h[f];m>l&&(l=m)}}}E[Oe([e,t,a,o],T,Te(C))]=l}}}return{dataId:l.write(cr(E,s.dtype),C,s.dtype),shape:C,dtype:s.dtype}}},x$={kernelName:Lt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Ae(s.shape,u.data.get(s.dataId).values),h=Ae(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:v,dilationHeight:I,dilationWidth:N,outShape:S}=pl(s.shape,r.shape,i,o,"NHWC",l);Z(a.rank===S.length,(()=>`Error in ${Lt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const C=Ae(S,u.data.get(a.dataId).values),$=Fe(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<k;++t){const s=n+t*I;if(s>=0&&s<d)for(let n=0;n<v;++n){const u=r+n*N;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=t,l=n)}}}$[o][l][a]+=C[e][t][s][a]}}}return{dataId:u.write(cr($,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},w$={kernelName:Mt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Ae(s.shape,u.data.get(s.dataId).values),h=Ae(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:v,dilationHeight:I,dilationWidth:N,outShape:S}=pl(s.shape,r.shape,i,o,"NHWC",l);Z(a.rank===S.length,(()=>`Error in ${Mt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const C=Ae(S,u.data.get(a.dataId).values),$=Fe(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<k;++t){const s=n+t*I;if(s>=0&&s<d)for(let n=0;n<v;++n){const u=r+n*N;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=s,l=u)}}}$[e][o][l][a]+=C[e][t][s][a]}}}return{dataId:u.write(cr($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},k$={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;gS([s,r],"eluGrad");const a=new Float32Array(ne(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},v$=$S(((e,t)=>e===t?1:0)),I$=US(Vt,v$,null,"bool"),N$={kernelName:Vt,backendName:"cpu",kernelFunc:I$},S$=ud,C$=cd,$$=hd,T$=pd,E$=dd,A$=fd,R$=xS(Wt,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+S$*n);return t*(1-((((A$*s+E$)*s+T$)*s+$$)*s+C$)*s*Math.exp(-n*n))})),D$={kernelName:Wt,backendName:"cpu",kernelFunc:R$},F$=BC((e=>Math.exp(e))),_$=wS(Ut,F$),O$={kernelName:Ut,backendName:"cpu",kernelFunc:_$};function M$(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(Z(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),XS({inputs:{x:r},backend:n,attrs:{shape:o}})}const L$={kernelName:Gt,backendName:"cpu",kernelFunc:M$},z$=BC((e=>Math.expm1(e))),P$=wS(Ht,z$),B$={kernelName:Ht,backendName:"cpu",kernelFunc:P$},W$=$S(((e,t)=>e*t)),V$=GS(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),U$=US(_n,W$,V$),G$={kernelName:_n,backendName:"cpu",kernelFunc:U$},H$=$S(((e,t)=>e/t)),j$=US(zt,H$),q$={kernelName:zt,backendName:"cpu",kernelFunc:j$},K$=$S(((e,t)=>e-t)),X$=GS(((e,t,n,s)=>({real:e-n,imag:t-s}))),Y$=US(Is,K$,X$),J$={kernelName:Is,backendName:"cpu",kernelFunc:Y$};function Z$(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=ne(u),h=fe("float32",c),p=fe("float32",c);for(let e=0;e<r;e++){const s=_C({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=_C({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=MS({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=Q$(i,t,n),d=yd(u,c);for(let t=0;t<a;t++){const n=kd(d,t);h[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=MS({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function Q$(e,t,n){const s=ne(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=eT(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",ur(s,"float32")),i=IS({inputs:{x:a},backend:n}),l=q$.kernelFunc({inputs:{a:e,b:a},backend:n}),u=q$.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=Nd(r*s,t,n),l=kd(e,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),vd(s,a,i,r)}return s}(yd(a,i),s,t);return bd(e)}var o}function eT(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=yd(e,t),i=n/2,o=xd(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),p=r.makeTensorInfo(c,"float32",u),d=MS({inputs:{real:h,imag:p},backend:r}),f=wd(a),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),w=MS({inputs:{real:b,imag:x},backend:r}),k=eT(l,u,i,s,r),v=k.real,I=k.imag,N=[v.length],S=r.makeTensorInfo(N,"float32",v),C=r.makeTensorInfo(N,"float32",I),$=MS({inputs:{real:S,imag:C},backend:r}),T=eT(m,g,i,s,r),E=T.real,A=T.imag,R=[E.length],D=r.makeTensorInfo(R,"float32",E),F=r.makeTensorInfo(R,"float32",A),_=MS({inputs:{real:D,imag:F},backend:r}),O=Id(n,s),M=[O.real.length],L=r.makeTensorInfo(M,"float32",O.real),z=r.makeTensorInfo(M,"float32",O.imag),P=MS({inputs:{real:L,imag:z},backend:r}),B=U$({inputs:{a:P,b:_},backend:r}),W=qS({inputs:{a:$,b:B},backend:r}),V=Y$({inputs:{a:$,b:B},backend:r}),U=PS({inputs:{input:W},backend:r}),G=PS({inputs:{input:V},backend:r}),H=KC({inputs:{input:W},backend:r}),j=KC({inputs:{input:V},backend:r}),q=YC({inputs:[U,G],backend:r,attrs:{axis:0}}),K=YC({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const tT={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=ne(s.shape),a=s.shape[s.shape.length-1],i=XS({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=Z$(i,!1,n),l=XS({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function nT(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||Se(r),o=me(i,ne(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const sT={kernelName:qt,backendName:"cpu",kernelFunc:nT},rT={kernelName:Kt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=fe(s.dtype,ne(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let s=0;s<l;s++){const r=s*u;for(let o=0;o<u;o++){const h=[i,e,s,o][2],p=Math.round(l-h),d=t+n+r+o;let f=c[d];p>=0&&p<l&&(f=c[t+n+p*u+o]),a[d]=f}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},aT=BC((e=>Math.floor(e))),iT=wS(Xt,aT),oT={kernelName:Xt,backendName:"cpu",kernelFunc:iT},lT=$S(((e,t)=>Math.floor(e/t))),uT=US(Yt,lT,null,"int32"),cT={kernelName:Yt,backendName:"cpu",kernelFunc:uT},hT={kernelName:Ps,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=ZC({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=qS({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=OS(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},pT={kernelName:Bs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=d$({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=qS({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=OS(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},dT={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=ne(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=xi(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const p=Ga([u,c],s.dtype),d=n.data.get(r.dataId).values,f=n.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=[];let n=0;for(let s=0;s<o;s++){const r=d[e*o+s];n+=r*h[s],t.push(r)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${t} does not index into ${s.shape}`);for(let t=0;t<c;t++)p.values[e*c+t]=f[n*c+t]}return n.makeTensorInfo(l,p.dtype,p.values)}};function fT(e,t,n){const s=Ga(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);s.values[n]=e.values[l]}return s}const mT={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;gS([r,a],"gatherV2");let l=o;null==o&&(l=0);const u=ne(a.shape),c=Td(r,a,pe(i,r.shape)[0],l),h=XS({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=XS({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),d=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(p),m=fT(n.bufferSync(h),f,d);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},gT=$S(((e,t)=>e>t?1:0)),yT=US(en,gT,null,"bool"),bT={kernelName:en,backendName:"cpu",kernelFunc:yT},xT=$S(((e,t)=>e>=t?1:0)),wT=US(tn,xT,null,"bool"),kT={kernelName:tn,backendName:"cpu",kernelFunc:wT},vT={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=ne(s.shape),a=s.shape[s.shape.length-1],i=XS({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=Z$(i,!0,n),l=XS({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},IT=xS(an,(e=>Number.isFinite(e)?1:0),"bool"),NT={kernelName:an,backendName:"cpu",kernelFunc:IT},ST=xS(on,(e=>Math.abs(e)===1/0?1:0),"bool"),CT={kernelName:on,backendName:"cpu",kernelFunc:ST},$T=xS(ln,(e=>Number.isNaN(e)?1:0),"bool"),TT={kernelName:ln,backendName:"cpu",kernelFunc:$T},ET=$S(((e,t)=>e<t?1:0)),AT=US(cn,ET,null,"bool"),RT={kernelName:cn,backendName:"cpu",kernelFunc:AT},DT=$S(((e,t)=>e<=t?1:0)),FT=US(hn,DT,null,"bool"),_T={kernelName:hn,backendName:"cpu",kernelFunc:FT};function OT(e,t,n){const s=(t-e)/(n-1),r=De(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}const MT={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=OT(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},LT=BC((e=>Math.log(e))),zT=wS(dn,LT),PT={kernelName:dn,backendName:"cpu",kernelFunc:zT},BT=xS(fn,(e=>Math.log1p(e))),WT={kernelName:fn,backendName:"cpu",kernelFunc:BT},VT=$S(((e,t)=>e&&t)),UT=US(mn,VT,null,"bool"),GT={kernelName:mn,backendName:"cpu",kernelFunc:UT},HT=xS(gn,(e=>e?0:1),"bool"),jT={kernelName:gn,backendName:"cpu",kernelFunc:HT},qT=$S(((e,t)=>e||t)),KT=US(yn,qT,null,"bool"),XT={kernelName:yn,backendName:"cpu",kernelFunc:KT},YT={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s;gS(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,p=ne(r.shape),d=new Float32Array(p);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);d[e]=n}return n.makeTensorInfo(r.shape,r.dtype,d)}},JT={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;gS(i,"LRNGrad");const h=ne(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),s=e-t+Math.min(p,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<s;t++){let n=-2*u*c*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function ZT(e,t,n,s){const r=fe(s,ne(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];t>a&&(a=t)}r[n]=a}return r}function QT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=pe(a,l);let h=c;const p=Gu(h,u);let d=o.data.get(r.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];d=oC(d,l,r.dtype,p,e),h=ju(h.length,u),l=e}gS(r,"max"),Uu("max",h,u);const[f,m]=Wu(l,h),g=ZT(d,ne(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;return i&&(b=Vu(f,c)),{dataId:y,shape:b,dtype:r.dtype}}const eE={kernelName:kn,backendName:"cpu",kernelFunc:QT},tE=$S(((e,t)=>Math.max(e,t))),nE=US(vn,tE),sE={kernelName:vn,backendName:"cpu",kernelFunc:nE},rE={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;gS(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;Z(Il(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations \'1\'`));const u=dl(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&re(u.inShape,u.outShape))c=IS({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=Te(r.shape),s=SC(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},aE={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u,dilations:c}=s;gS(r,"maxPool3d");let h=c;null==h&&(h=[1,1,1]);const p=fl(r.shape,a,i,h,o,l,u),d=$C(n.data.get(r.dataId).values,r.shape,r.dtype,Te(r.shape),p,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}},iE={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dilations:u,dimRoundingMode:c}=s;gS([r,a],"maxPool3DGrad");const h=fl(a.shape,i,o,u,l,c),p=function(e,t){const n=Ga(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*s-p;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,u+b);for(let s=0;s<t.outHeight;++s){const u=s*r-d;let p=u;for(;p<0;)p+=o;const k=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const d=r*a-f;let v=d;for(;v<0;)v+=l;const I=Math.min(t.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let s=p;s<k;s+=o){const r=s-u;for(let a=v;a<I;a+=l){const i=a-d,o=e.get(m,t,s,a,g);o>=N&&(N=o,S=n*c*h+r*c+i)}}}n.set(S,m,y,s,r,g)}}}return n}(n.bufferSync(a),h),d=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.dilationDepth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterDepth,w=h.effectiveFilterHeight,k=h.effectiveFilterWidth,v=x-1-h.padInfo.front,I=k-1-h.padInfo.left,N=w-1-h.padInfo.top,S=Ga(a.shape,"float32"),C=n.bufferSync(r);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let s=0;s<h.inHeight;++s)for(let r=0;r<h.inWidth;++r){const a=n-v,i=s-N,o=r-I;let l=0;for(let n=0;n<x;n+=g){const s=(a+n)/d;if(!(s<0||s>=h.outDepth||Math.floor(s)!==s))for(let r=0;r<w;r+=y){const a=(i+r)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let i=0;i<k;i+=b){const u=(o+i)/m;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;const c=x*w*k-1-p.get(e,s,a,u,t)===n*w*k+r*k+i?1:0;0!==c&&(l+=C.get(e,s,a,u,t)*c)}}}S.set(l,e,n,s,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},oE={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;gS([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=dl(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=Ga(p.outShape,o.dtype,CC(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,v=x-1-p.padInfo.top,I=Ga(o.shape,"float32"),N=n.data.get(r.dataId).values,S=Ga(r.shape,"float32",N);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let s=0;s<p.inWidth;++s){const r=n-v,a=s-k;let i=0;for(let n=0;n<x;n+=y){const s=(r+n)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let r=0;r<w;r+=b){const o=(a+r)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*w-1-f.get(e,s,o,t)===n*w+r?1:0;0!==l&&(i+=S.get(e,s,o,t)*l)}}I.set(i,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},lE={kernelName:$n,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;gS(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=dl(s.shape,r,a,[1,1],i),[h,p]=function(e,t,n,s,r){const a=SC(e,0,n,Te(t),r,"max"),i=CC(e,t,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),d=l.write(h,c.outShape,s.dtype),f=l.write(p,c.outShape,s.dtype);return[{dataId:d,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function uE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;gS(r,"sum"),o="bool"===r.dtype?WS({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):IS({inputs:{x:r},backend:n});const l=o.shape.length,u=pe(a,o.shape),c=Gu(u,l);let h=u,p=o;null!=c&&(p=lC({inputs:{x:o},backend:n,attrs:{perm:c}}),h=ju(h.length,l)),Uu("sum",h,p.shape.length);const[d,f]=Wu(p.shape,h);let m=zS(n,d,$r(p.dtype,"int32"));const g=ne(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=XS({inputs:{x:m},backend:n,attrs:{shape:Vu(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const cE={kernelName:ys,backendName:"cpu",kernelFunc:uE},hE={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=pe(a,r.shape),l=ne(Wu(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=WS({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=j$({inputs:{a:h,b:c},backend:n});u.push(p);const d=uE({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},pE={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;gS(r,"min");const o=pe(a,r.shape);let l=o;const u=Gu(l,r.shape.length);let c=r;null!=u&&(c=lC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=ju(l.length,r.shape.length)),Uu("min",l,c.shape.length);const[h,p]=Wu(c.shape,l),d=ne(p),f=De(ne(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];s<n&&(n=s)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=XS({inputs:{x:g},backend:n,attrs:{shape:Vu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},dE=$S(((e,t)=>Math.min(e,t))),fE=US(An,dE),mE={kernelName:An,backendName:"cpu",kernelFunc:fE},gE={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;gS(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,d=Te(r.shape),f=ne(o),m=o.length,g=Te(o),y=fe(r.dtype,f);for(let e=0;e<f;e++){let t=Me(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Oe(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},yE=$S(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),bE=US(Dn,yE),xE={kernelName:Dn,backendName:"cpu",kernelFunc:bE};function wE(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=pe([o],r.shape),u=QT({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Vu(u.shape,l),h=XS({inputs:{x:u},backend:n,attrs:{shape:c}}),p=Y$({inputs:{a:r,b:h},backend:n}),d=_$({inputs:{x:p},backend:n}),f=uE({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=XS({inputs:{x:f},backend:n,attrs:{shape:c}}),g=j$({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const kE={kernelName:ws,backendName:"cpu",kernelFunc:wE},vE={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;gS(r,"multinomial");const l=o?r:wE({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,a],d=De(ne(p),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const s=Nc.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();d[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){d[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function IE(e,t,n){const s=ur(-1,n);return W$([],t,s,e,n)}const NE={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;gS(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=IE(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},SE=yp,CE={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;gS(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=SE(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},$E=bp,TE={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;gS(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=$E(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},EE=xp,AE={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;gS(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=EE(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},RE=$S(((e,t)=>e!==t?1:0)),DE=US(Mn,RE,null,"bool"),FE={kernelName:Mn,backendName:"cpu",kernelFunc:DE},_E={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;gS(r,"oneHot");const l=ne(r.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(r.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<a&&(u[e*a+c[e]]=i);return n.makeTensorInfo([...r.shape,a],"int32",u)}};function OE(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=PS({inputs:{input:s},backend:n}),t=OE({inputs:{x:e},backend:n}),r=KC({inputs:{input:s},backend:n}),a=OE({inputs:{x:r},backend:n}),i=MS({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return nT({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const ME={kernelName:_s,backendName:"cpu",kernelFunc:OE},LE={kernelName:Bn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=PS({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=KC({inputs:{input:r},backend:s}),i=OE({inputs:{x:a},backend:s}),o=MS({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return nT({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function zE(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return M$({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{Q(a,e.shape,"All tensors passed to stack must have matching shapes"),Z(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=YC({inputs:t.map((e=>{const t=M$({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const PE={kernelName:Vn,backendName:"cpu",kernelFunc:zE},BE={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;gS(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(r.dataId).values,c=ne(r.shape),h=r.shape.length,p=Te(r.shape),d=ne(o),f=o.length,m=Te(o),g=fe(r.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[Oe(Me(e,h,p).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},WE=$S(((e,t)=>Math.pow(e,t))),VE=US(Hn,WE),UE={kernelName:Hn,backendName:"cpu",kernelFunc:VE};function GE(e,t,n,s){const[r,a]=Wu(e,s),i=$r(t,"int32"),o=De(ne(r),i),l=ne(a);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}}const HE={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;gS(r,"prod");const o=r.shape.length,l=pe(a,r.shape),u=Gu(l,o);let c=l,h=r;const p=[];null!=u&&(h=lC({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(h),c=ju(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=GE(h.shape,h.dtype,d,c);let y=m;return i&&(y=Vu(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function jE(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return De(0,s);const r=De(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}const qE={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=jE(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},KE=xS(Yn,(e=>1/e)),XE={kernelName:Yn,backendName:"cpu",kernelFunc:KE},YE={kernelName:ts,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;gS(r,"resizeBilinear");const l=Te(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(ne([h,u,c,f])),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],k=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(p-1,Math.ceil(n)),o=e*l[0]+s*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(d-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],p=o+a*l[2],y=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*s,i=a+(n+(m[y+e]-n)*s-a)*r;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},JE={kernelName:ns,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;gS([a,r],"resizeBilinearGrad");const o=Te(r.shape),[l,u,c,h]=r.shape,[,p,d]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&p>1?u-1:u,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=t+s*o[1],i=t+r*o[1],l=n-s,p=1-l;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,d=a+n*o[2],m=a+s*o[2],g=i+n*o[2],y=i+s*o[2],k=p*u,v=p*r,I=l*u,N=l*r;for(let e=0;e<h;e++){const t=x[w++];f[d+e]+=t*k,f[m+e]+=t*v,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},ZE={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;gS(r,"resizeNearestNeighbor");const l=Te(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let k=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let s=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=m[s+e];g[k++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}},QE={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;gS([a,r],"resizeNearestNeighborGrad");const o=Te(r.shape),l=Te(a.shape),[u,c,h,p]=r.shape,[,d,f]=a.shape,m=new Float32Array(u*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],k=1/x,v=1/w,I=2*Math.ceil(k)+2,N=2*Math.ceil(v)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*k),r=Math.floor(s-I/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*v),y=Math.floor(u-N/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<I;a++){const u=a+r;if(u<0||u>=d)continue;const p=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const r=p+t*l[2],a=t*w;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},eA={kernelName:rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;gS(r,"reverse");const i=r.shape.length,o=pe(a,r.shape);if(0===i)return IS({inputs:{x:r},backend:n});const l=new mr(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},tA={kernelName:Ls,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=fe(s.dtype,ne(s.shape)),[u,c,h,p]=s.shape,[d,f]=td(i,c,h),m=Math.sin(r),g=Math.cos(r),y=o.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let s=0;s<h;s++){const r=s*p;for(let i=0;i<p;i++){const o=[u,e,s,i],b=o[2],x=o[1];let w=(b-d)*g-(x-f)*m,k=(b-d)*m+(x-f)*g;w=Math.round(w+d),k=Math.round(k+f);let v=a;"number"!=typeof a&&(v=3===i?255:a[i]),w>=0&&w<h&&k>=0&&k<c&&(v=y[t+k*(h*p)+w*p+i]),l[t+n+r+i]=v}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},nA=xS(as,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),sA={kernelName:as,backendName:"cpu",kernelFunc:nA},rA=BC((e=>1/Math.sqrt(e))),aA=wS(is,rA),iA={kernelName:is,backendName:"cpu",kernelFunc:aA};function oA(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,p=t.values;if(0===s)return Ga(n,t.dtype);const d=Ga(c,t.dtype);d.values.fill(l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?d.values[l*r+n]+=p[e*r+n]:d.values[l*r+n]=0===t.rank?p[0]:p[e*r+n]}return d}const lA={kernelName:os,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=vi(0,r,i),p=oA(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},uA={kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;gS([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=$r(r.dtype,a.dtype),h=De(ne(r.shape),c);let p=0;const d=0===i||i>1||1===r.shape.length?1:ne(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=l[e]:h[p++]=u[e];return n.makeTensorInfo(r.shape,c,h)}},cA=od,hA=ld,pA=xS(us,(e=>e>=0?hA*e:cA*(Math.exp(e)-1))),dA={kernelName:us,backendName:"cpu",kernelFunc:pA},fA=xS(fs,(e=>1/(1+Math.exp(-e)))),mA={kernelName:fs,backendName:"cpu",kernelFunc:fA},gA=xS(ds,(e=>e<0?-1:e>0?1:0)),yA={kernelName:ds,backendName:"cpu",kernelFunc:gA},bA=xS(hs,(e=>Math.sin(e))),xA={kernelName:hs,backendName:"cpu",kernelFunc:bA},wA=xS(ps,(e=>Math.sinh(e))),kA={kernelName:ps,backendName:"cpu",kernelFunc:wA},vA=Math.log(1.1920928955078125e-7)+2,IA=xS(ms,(e=>{const t=e>-vA,n=e<vA,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),NA={kernelName:ms,backendName:"cpu",kernelFunc:IA},SA={kernelName:bs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;gS([r],"spaceToBatchND");const o=ne(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=BE.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=nd(u.shape,a,o,!1),h=sd(c.length,a.length,!1),p=rd(u.shape,a,o,!1),d=XS({inputs:{x:u},backend:n,attrs:{shape:c}}),f=lC({inputs:{x:d},backend:n,attrs:{perm:h}}),m=XS({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}},CA={kernelName:Ns,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=vi(0,r,o),d=oA(n.bufferSync(r),n.bufferSync(a),o,p,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}},$A={kernelName:xs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=pe(i,r.shape)[0],l=Sd(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=_C({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},TA=xS(gs,(e=>Math.sqrt(e))),EA={kernelName:gs,backendName:"cpu",kernelFunc:TA},AA={kernelName:vs,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;gS(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},RA=$S(((e,t)=>{const n=e-t;return n*n})),DA=US(ks,RA),FA={kernelName:ks,backendName:"cpu",kernelFunc:DA},_A=xS(Os,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),OA={kernelName:Os,backendName:"cpu",kernelFunc:_A};function MA(e,t,n,s){const r=Ga(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r}const LA={kernelName:Ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s;gS(r,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=zi(r.shape,a,i,o,l,u,c,h,p),x=XS({inputs:{x:r},backend:n,attrs:{shape:y}});let w;if(d){const e=_C({inputs:{x},backend:n,attrs:{begin:f,size:g}});w=XS({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))w=n.makeTensorInfo(b,r.dtype,[]);else{const e=MA(b,n.bufferSync(x),m,f);w=n.makeTensorInfo(e.shape,e.dtype,e.values)}const k=XS({inputs:{x:w},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),k}},zA=xS(Cs,(e=>Math.tan(e))),PA={kernelName:Cs,backendName:"cpu",kernelFunc:zA},BA=xS($s,(e=>Math.tanh(e)));function WA(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=Ga(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}const VA={kernelName:Ts,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;gS(r,"tile");const i=WA(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function UA(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=fe(n,i*s),u=fe("int32",i*s);for(let t=0;t<i;t++){const n=t*o,r=e.subarray(n,n+o),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*s,c=l.subarray(i,i+s),h=u.subarray(i,i+s);for(let e=0;e<s;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=s,[Ga(c,n,l),Ga(c,"int32",u)]}const GA={kernelName:Es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;gS(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=UA(o,r.shape,r.dtype,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};function HA(e,t,n,s){const r=pe(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[r]),l=new mr(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new mr(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)p.set(l.get(n,e,s),n,t,s)}));const d=n.slice();return d[r]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const jA={kernelName:Rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;gS(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=HA(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},qA={kernelName:Ds,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=_C({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});p[e]=XS({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},KA={kernelName:Fs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;gS(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=M$({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=ur(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=I$({inputs:{a:s,b:c},backend:n}),i=WS({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=U$({inputs:{a:i,b:r},backend:n}),h=uE({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=zE({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},XA=[QS,tC,sC,aC,KS,iC,cC,hC,pC,dC,mC,yC,xC,vC,NC,TC,EC,AC,RC,ZS,DC,MC,PC,VS,UC,HC,LS,jC,JC,e$,t$,QC,s$,r$,n$,i$,l$,u$,c$,h$,p$,f$,m$,g$,y$,b$,w$,x$,q$,vS,k$,N$,D$,O$,L$,B$,tT,sT,rT,oT,cT,hT,pT,dT,mT,bT,kT,NS,vT,XC,NT,CT,TT,CS,RT,_T,MT,PT,WT,GT,jT,XT,YT,JT,sE,rE,aE,iE,oE,lE,eE,hE,pE,mE,gE,xE,vE,G$,NE,CE,TE,AE,FE,_E,LE,PE,BE,UE,AS,HE,qE,BS,XE,DS,_S,YS,YE,JE,ZE,QE,eA,tA,sA,iA,lA,uA,dA,mA,yA,xA,kA,OC,kE,NA,SA,CA,$A,EA,AA,FA,OA,LA,J$,cE,PA,{kernelName:$s,backendName:"cpu",kernelFunc:BA},VA,GA,uC,jA,qA,KA,ME];for(const e of XA)js(e);const YA={},JA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ZA(e){if(!(e in YA)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete YA[e]}),!1),1===e?t.getContext("webgl",JA)||t.getContext("experimental-webgl",JA):t.getContext("webgl2",JA)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;YA[e]=t}const t=YA[e];return t.isContextLost()?(delete YA[e],ZA(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),YA[e])}var QA,eR,tR;function nR(e,t){return[t,e]}function sR(e){const t=ne(e);return oe(Math.ceil(t/4))}function rR(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function aR(e,t){const n=e;let s,r,a,i,o,l,u,c,h,p;return 2===Be().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),l=e.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function iR(e,t){const n=t();return Be().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(QA||(QA={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(eR||(eR={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(tR||(tR={}));const oR=5.96e-8,lR=65504;function uR(e){return!!(Be().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||oR<Math.abs(e)&&Math.abs(e)<lR)}function cR(e,t){return bR(e,(()=>e.getExtension(t)),\'Extension "\'+t+\'" not supported on this browser.\')}const hR=/ERROR: [0-9]+:([0-9]+):/g;function pR(e,t){if(iR(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function dR(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(iR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),iR(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),iR(e,(()=>e.enableVertexAttribArray(o))),!0)}function fR(e,t,n,s){iR(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),iR(e,(()=>e.activeTexture(e.TEXTURE0+n))),iR(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),iR(e,(()=>e.uniform1i(n,s)))}function mR(e,t,n){iR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),iR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function gR(e,t){iR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),iR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function yR(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function bR(e,t,n){const s=iR(e,(()=>t()));if(null==s)throw new Error(n);return s}function xR(e,t=2){return ne(e.slice(0,e.length-t))}function wR(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function kR(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[xR(e),...wR(e)]),t}function vR(e){return e%2==0}function IR(e,t){if(re(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(vR(n)&&vR(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&vR(e[0])&&vR(t[0])}let NR,SR;function CR(e,t){return null!=e.getExtension(t)}function $R(e){try{if(null!=ZA(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function TR(e){const t=aR(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function ER(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Z("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const AR=Be();function RR(){let e,t,n,s,r,a,i,o,l,u;return 2===Be().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o="\\n      bool isnan_custom(float val) {\\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\\n      }\\n\\n      bvec4 isnan_custom(vec4 val) {\\n        return bvec4(isnan_custom(val.x),\\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\\n      }\\n\\n      #define isnan(value) isnan_custom(value)\\n    ",l="",u="\\n      #define round(value) newRound(value)\\n      int newRound(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 newRound(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\\n      #define isnan(value) isnan_custom(value)\\n      bool isnan_custom(float val) {\\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\\n      }\\n      bvec4 isnan_custom(vec4 val) {\\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\\n      }\\n    ",l="\\n      uniform float INFINITY;\\n\\n      bool isinf(float val) {\\n        return abs(val) == INFINITY;\\n      }\\n      bvec4 isinf(vec4 val) {\\n        return equal(abs(val), vec4(INFINITY));\\n      }\\n    ",u="\\n      int round(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 round(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function DR(e,t,n="index"){const s=Te(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function FR(e){const t=Te(e).map((e=>e.toString()));return`\\n  int getFlatIndex(ivec3 coords) {\\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\\n  }\\n`}AR.registerFlag("HAS_WEBGL",(()=>AR.getNumber("WEBGL_VERSION")>0)),AR.registerFlag("WEBGL_VERSION",(()=>$R(2)?2:$R(1)?1:0)),AR.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),AR.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===AR.get("WEBGL_VERSION"))),AR.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),AR.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),AR.registerFlag("WEBGL_PACK",(()=>AR.getBool("HAS_WEBGL"))),AR.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>AR.getBool("WEBGL_PACK"))),AR.registerFlag("WEBGL_PACK_CLIP",(()=>AR.getBool("WEBGL_PACK"))),AR.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),AR.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>AR.getBool("WEBGL_PACK"))),AR.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>AR.getBool("WEBGL_PACK"))),AR.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>AR.getBool("WEBGL_PACK"))),AR.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>AR.getBool("WEBGL_PACK"))),AR.registerFlag("WEBGL_PACK_REDUCE",(()=>AR.getBool("WEBGL_PACK"))),AR.registerFlag("WEBGL_LAZILY_UNPACK",(()=>AR.getBool("WEBGL_PACK"))),AR.registerFlag("WEBGL_CONV_IM2COL",(()=>AR.getBool("WEBGL_PACK"))),AR.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==NR){const t=ZA(e);NR=t.getParameter(t.MAX_TEXTURE_SIZE)}return NR}(AR.getNumber("WEBGL_VERSION")))),AR.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==SR){const t=ZA(e);SR=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,SR)}(AR.getNumber("WEBGL_VERSION")))),AR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=AR.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=ZA(e);return t=CR(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:CR(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),AR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>AR.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Pr())),AR.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=ZA(e);if(1===e){if(!CR(t,"OES_texture_float"))return!1}else if(!CR(t,"EXT_color_buffer_float"))return!1;return TR(t)}(AR.getNumber("WEBGL_VERSION")))),AR.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!AR.getBool("WEBGL_FORCE_F16_TEXTURES")&&AR.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),AR.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=ZA(e);if(1!==e){if(CR(t,"EXT_color_buffer_float"))return TR(t);const e="EXT_color_buffer_half_float";if(CR(t,e)){const n=t.getExtension(e);return function(e,t){const n=aR(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!CR(t,"OES_texture_float")&&!!CR(t,"WEBGL_color_buffer_float")&&TR(t)}(AR.getNumber("WEBGL_VERSION")))),AR.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=AR.getNumber("WEBGL_VERSION"))&&null!=ZA(e).fenceSync;var e})),AR.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>AR.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),AR.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));const _R="\\n  const float FLOAT_MAX = 1.70141184e38;\\n  const float FLOAT_MIN = 1.17549435e-38;\\n\\n  lowp vec4 encode_float(highp float v) {\\n    if (isnan(v)) {\\n      return vec4(255, 255, 255, 255);\\n    }\\n\\n    highp float av = abs(v);\\n\\n    if(av < FLOAT_MIN) {\\n      return vec4(0.0, 0.0, 0.0, 0.0);\\n    } else if(v > FLOAT_MAX) {\\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\\n    } else if(v < -FLOAT_MAX) {\\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\\n    }\\n\\n    highp vec4 c = vec4(0,0,0,0);\\n\\n    highp float e = floor(log2(av));\\n    highp float m = exp2(fract(log2(av))) - 1.0;\\n\\n    c[2] = floor(128.0 * m);\\n    m -= c[2] / 128.0;\\n    c[1] = floor(32768.0 * m);\\n    m -= c[1] / 32768.0;\\n    c[0] = floor(8388608.0 * m);\\n\\n    highp float ebias = e + 127.0;\\n    c[3] = floor(ebias / 2.0);\\n    ebias -= c[3] * 2.0;\\n    c[2] += floor(ebias) * 128.0;\\n\\n    c[3] += 128.0 * step(0.0, -v);\\n\\n    return c / 255.0;\\n  }\\n";class OR{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=QA.DENSE;const t=sR(e),n=RR();this.outputShape=e,this.userCode=`\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        ${DR(["r","c","d"],e)}\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(${t[0]}, ${t[1]}));\\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getA(rc.x, rc.y, rc.z);\\n        }\\n\\n        ${n.output} = result;\\n      }\\n    `}}class MR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=QA.DENSE;const t=sR(e),n=RR();this.outputShape=e,this.userCode=`\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        ${DR(["r","c","d"],e)}\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(${t[0]}, ${t[1]}));\\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\\n        }\\n\\n        ${n.output} = result;\\n      }\\n    `}}class LR{constructor(e){this.variableNames=["A"],this.outTexUsage=eR.DOWNLOAD;const t=RR();this.outputShape=e,this.userCode=`\\n      ${_R}\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        ${t.output} = encode_float(x);\\n      }\\n    `}}class zR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=eR.DOWNLOAD;const t=RR();this.outputShape=e,this.userCode=`\\n      ${_R}\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\\n        ${t.output} = encode_float(x);\\n      }\\n    `}}class PR{constructor(e,t,n=!1){this.variableNames=["A"];const s=RR(),[r,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\\n      ${FR(e)}\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n\\n        int flatIndex = getFlatIndex(coords);\\n        int offset = imod(flatIndex, 4);\\n\\n        flatIndex = idiv(flatIndex, 4, 1.);\\n\\n        int r = flatIndex / ${a};\\n        int c = imod(flatIndex, ${a});\\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\\n        vec4 values = ${s.texture2D}(A, uv);\\n\\n        float result;\\n\\n        if(offset == 0) {\\n          result = values[0];\\n        } else if(offset == 1) {\\n          result = values[1];\\n        } else if(offset == 2) {\\n          result = values[2];\\n        } else {\\n          result = values[3];\\n        }\\n\\n        ${s.output} = vec4(${i}, 0., 0., 0.);\\n      }\\n    `}}class BR{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=RR(),[r,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\\n          localCoords = coords;\\n          if(localCoords[2] + ${n} < ${e[2]}) {\\n            localCoords[2] += ${n};\\n            if(localCoords[1] + ${t} < ${e[1]}) {\\n              localCoords[1] += ${t};\\n\\n              flatIndex = getFlatIndex(localCoords);\\n              offset = imod(flatIndex, 4);\\n\\n              flatIndex = idiv(flatIndex, 4, 1.);\\n\\n              r = flatIndex / ${a};\\n              c = imod(flatIndex, ${a});\\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\\n              values = ${s.texture2D}(A, uv);\\n\\n              if(offset == 0) {\\n                result[${o}] = values[0];\\n              } else if(offset == 1) {\\n                result[${o}] = values[1];\\n              } else if(offset == 2) {\\n                result[${o}] = values[2];\\n              } else {\\n                result[${o}] = values[3];\\n              }\\n            }\\n          }\\n        `}this.userCode=`\\n      ${FR(e)}\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n        int flatIndex, r, c, offset;\\n        ivec3 localCoords;\\n        vec2 uv;\\n        vec4 values;\\n\\n        ${i}\\n\\n        ${s.output} = ${o};\\n      }\\n    `}}function WR(e,t,n,s,r,a){!function(e,t){const n=Be().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return bR(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return iR(e,(()=>e.bindTexture(o,i))),iR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),iR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),iR(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),iR(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),iR(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))),iR(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function VR(e){return e.internalFormatFloat}function UR(e){return e.internalFormatHalfFloat}function GR(e){return e.downloadTextureFormat}function HR(e){return e.internalFormatPackedFloat}function jR(e){return e.internalFormatPackedHalfFloat}class qR{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Be().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){YA[e]=t}(t,e)):this.gl=ZA(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===Be().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=cR(this.gl,e),CR(this.gl,t))this.textureHalfFloatExtension=cR(this.gl,t);else if(Be().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),CR(this.gl,s))this.colorBufferHalfFloatExtension=cR(this.gl,s);else if(Be().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",CR(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!CR(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=bR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return iR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),iR(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=bR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return iR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),iR(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return bR(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=aR(this.gl,this.textureHalfFloatExtension)}get debug(){return Be().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;iR(e,(()=>e.finish())),iR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),iR(e,(()=>e.deleteFramebuffer(this.framebuffer))),iR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),iR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),iR(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=nR(t,n);return WR(e,r,a,VR(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=nR(t,n);return WR(e,r,a,UR(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=nR(t,n);return WR(e,r,a,GR(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){iR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?iR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):iR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),iR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;iR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),iR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),iR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=rR(t,n);return WR(e,r,a,jR(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=rR(t,n);return WR(e,r,a,HR(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(gR(this.gl,this.framebuffer),this.outputTexture=null),iR(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=nR(t,n),i=new Uint8Array(t*n*4);return iR(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return function(e,t,n,s,r,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,s]=rR(e,t);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();iR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return iR(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),iR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),iR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Be().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return iR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=bR(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(iR(e,(()=>e.shaderSource(n,t))),iR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=hR.exec(t);if(null==n)return console.log(`Couldn\'t parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>ue((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\\n")),console.log(t.split("\\n")[0]),console.log(`%c ${ue(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),s=function(e){const t=RR();return function(e,t){const n=bR(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(iR(e,(()=>e.shaderSource(n,t))),iR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\\n    precision highp float;\\n    ${t.attribute} vec3 clipSpacePos;\\n    ${t.attribute} vec2 uv;\\n    ${t.varyingVs} vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }`)}(t),r=function(e){return bR(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return iR(t,(()=>t.attachShader(r,s))),iR(t,(()=>t.attachShader(r,n))),function(e,t){if(iR(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&pR(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return iR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),dR(e,t,"clipSpacePos",n,3,20,0)&&dR(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&iR(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&pR(this.gl,this.program),iR(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return bR(e,(()=>e.getUniformLocation(t,n)),\'uniform "\'+n+\'" not present in program.\')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),iR(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),fR(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=rR(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&pR(this.gl,this.program),yR(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),iR(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),iR(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=cR(this.gl,2===Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ce((()=>this.disposed||this.isQueryAvailable(e,Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ce((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),mR(this.gl,e,this.framebuffer),this.debug&&yR(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(mR(this.gl,this.outputTexture,this.framebuffer),this.debug&&yR(this.gl)):gR(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;mR(s,e,this.framebuffer),this.debug&&yR(s),this.outputTexture=e,iR(s,(()=>s.viewport(0,0,t,n))),iR(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),iR(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:KR}=g;function XR(e,t,n,s){const r=[];e.forEach((e=>{const t=ne(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`))}));const a=r.join("\\n"),i=e.map((e=>function(e,t,n=!1){let s="";s+=n?JR(e):YR(e);const r=e.shapeInfo.logicalShape,a=t.logicalShape;return r.length<=a.length&&(s+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=KR(e.shapeInfo.logicalShape,t.logicalShape),l=rD(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let d="return outputValue;";const f=1===ne(e.shapeInfo.logicalShape),m=1===ne(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\\n      ":"\\n        return vec4(outputValue.x);\\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\\n      return vec4(outputValue.xy, outputValue.xy);\\n    ";return`\\n    vec4 ${r}() {\\n      ${l} coords = getOutputCoords();\\n      ${c}\\n      vec4 outputValue = get${s}(${p});\\n      ${d}\\n    }\\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&re(i,a))return`\\n      float ${r}() {\\n        return sampleTexture(${n}, resultUV);\\n      }\\n    `;const u=rD(l),c=KR(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\\n    float ${r}() {\\n      ${u} coords = getOutputCoords();\\n      ${p}\\n      return get${s}(${f});\\n    }\\n  `}(e,t)),s}(e,t,s))).join("\\n"),o=t.texShape,l=RR(),u=function(e){return`\\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\\n      return ${e.texture2D}(textureSampler, uv).r;\\n    }\\n  `}(l);let c,h,p=function(e){return`${e.version}\\n    precision highp float;\\n    precision highp int;\\n    precision highp sampler2D;\\n    ${e.varyingFs} vec2 resultUV;\\n    ${e.defineOutput}\\n    const vec2 halfCR = vec2(0.5, 0.5);\\n\\n    struct ivec5\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n    };\\n\\n    struct ivec6\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n      int v;\\n    };\\n\\n    uniform float NAN;\\n    ${e.defineSpecialNaN}\\n    ${e.defineSpecialInf}\\n    ${e.defineRound}\\n\\n    int imod(int x, int y) {\\n      return x - y * (x / y);\\n    }\\n\\n    int idiv(int a, int b, float sign) {\\n      int res = a / b;\\n      int mod = imod(a, b);\\n      if (sign < 0. && mod != 0) {\\n        res -= 1;\\n      }\\n      return res;\\n    }\\n\\n    //Based on the work of Dave Hoskins\\n    //https://www.shadertoy.com/view/4djSRW\\n    #define HASHSCALE1 443.8975\\n    float random(float seed){\\n      vec2 p = resultUV * seed;\\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\\n      p3 += dot(p3, p3.yzx + 19.19);\\n      return fract((p3.x + p3.y) * p3.z);\\n    }\\n\\n    ${ZR}\\n    ${QR}\\n    ${eD}\\n  `}(l);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.x * ${n[1]}.0);\\n      }\\n    `:1===n[1]?`\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.y * ${n[0]}.0);\\n      }\\n    `:`\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${n[0]}, ${n[1]}));\\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\\n    }\\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(re(e,t))return`\\n      ivec2 getOutputCoords() {\\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\\n      }\\n    `;const s=Math.ceil(e[1]/2);return`\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${n[0]}, ${n[1]}));\\n\\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\\n      int r = 2 * (index / ${s});\\n      int c = imod(index, ${s}) * 2;\\n\\n      return ivec2(r, c);\\n    }\\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),r=s*Math.ceil(e[1]/2);return`\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${n[0]}, ${n[1]}));\\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\\n\\n      int b = index / ${r};\\n      index -= b * ${r};\\n\\n      int r = 2 * (index / ${s});\\n      int c = imod(index, ${s}) * 2;\\n\\n      return ivec3(b, r, c);\\n    }\\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),r=s*Math.ceil(e[e.length-2]/2);let a=r,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\\n      int b${t} = index / ${a};\\n      index -= b${t} * ${a};\\n    `+i,o=`b${t}, `+o;return`\\n    ivec${e.length} getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${n[0]}, ${n[1]}));\\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\\n\\n      ${i}\\n\\n      int b = index / ${r};\\n      index -= b * ${r};\\n\\n      int r = 2 * (index / ${s});\\n      int c = imod(index, ${s}) * 2;\\n\\n      return ivec${e.length}(${o});\\n    }\\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\\n    void setOutput(vec4 val) {\\n      ${e.output} = val;\\n    }\\n  `}(l)):(c=function(e,t){switch(e.length){case 0:return"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  ";case 1:return 1===(n=t)[0]?`\\n      int getOutputCoords() {\\n        return int(resultUV.x * ${n[1]}.0);\\n      }\\n    `:1===n[1]?`\\n      int getOutputCoords() {\\n        return int(resultUV.y * ${n[0]}.0);\\n      }\\n    `:`\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${n[0]}, ${n[1]}));\\n      return resTexRC.x * ${n[1]} + resTexRC.y;\\n    }\\n  `;case 2:return function(e,t){return re(e,t)?`\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\\n      }\\n    `:1===e[1]?`\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(${t[0]}, ${t[1]}));\\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    `:1===e[0]?`\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(${t[0]}, ${t[1]}));\\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    `:`\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${t[0]}, ${t[1]}));\\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n      int r = index / ${e[1]};\\n      int c = index - r * ${e[1]};\\n      return ivec2(r, c);\\n    }\\n  `}(e,t);case 3:return function(e,t){const n=DR(["r","c","d"],e);return`\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${t[0]}, ${t[1]}));\\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n      ${n}\\n      return ivec3(r, c, d);\\n    }\\n  `}(e,t);case 4:return function(e,t){const n=DR(["r","c","d","d2"],e);return`\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(${t[0]}, ${t[1]}));\\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n      ${n}\\n      return ivec4(r, c, d, d2);\\n    }\\n  `}(e,t);case 5:return function(e,t){const n=DR(["r","c","d","d2","d3"],e);return`\\n    ivec5 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\\n                             ${t[1]}));\\n\\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n\\n      ${n}\\n\\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\\n      return outShape;\\n    }\\n  `}(e,t);case 6:return function(e,t){const n=DR(["r","c","d","d2","d3","d4"],e);return`\\n    ivec6 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(${t[0]}, ${t[1]}));\\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n\\n      ${n}\\n\\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\\n      return result;\\n    }\\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,o),h=function(e){return`\\n    void setOutput(float val) {\\n      ${e.output} = vec4(val, 0, 0, 0);\\n    }\\n  `}(l)),s&&(p+=tD),[p,u,h,a,c,i,n].join("\\n")}function YR(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[s,r]=e.shapeInfo.texShape;if(1===s&&1===r)return`\\n      float ${n}() {\\n        return sampleTexture(${t}, halfCR);\\n      }\\n    `;const[a,i]=e.shapeInfo.texShape;return`\\n    float ${n}() {\\n      vec2 uv = uvFromFlat(${a}, ${i}, ${nD(t)});\\n      return sampleTexture(${t}, uv);\\n    }\\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\\n      float ${n}(int index) {\\n        ${sD(e)}\\n      }\\n    `;const s=e.shapeInfo.texShape,r=s[0],a=s[1];if(1===a&&1===r)return`\\n      float ${n}(int index) {\\n        return sampleTexture(${t}, halfCR);\\n      }\\n    `;const i=nD(t);return 1===a?`\\n      float ${n}(int index) {\\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);\\n        return sampleTexture(${t}, uv);\\n      }\\n    `:1===r?`\\n      float ${n}(int index) {\\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\\n        return sampleTexture(${t}, uv);\\n      }\\n    `:`\\n    float ${n}(int index) {\\n      vec2 uv = uvFromFlat(${r}, ${a}, index + ${i});\\n      return sampleTexture(${t}, uv);\\n    }\\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape;if(null!=r&&re(t,r)){const e=r[0];return`\\n    float ${s}(int row, int col) {\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${e}.0);\\n      return sampleTexture(${n}, uv);\\n    }\\n  `}const{newShape:a,keptDims:i}=de(t),o=a;if(o.length<t.length){const t=["row","col"];return`\\n      ${YR(aD(e,o))}\\n      float ${s}(int row, int col) {\\n        return ${s}(${iD(t,i)});\\n      }\\n    `}if(e.shapeInfo.isUniform)return`\\n      float ${s}(int row, int col) {\\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\\n        ${sD(e)}\\n      }\\n    `;const l=r[0],u=r[1],c=nD(n);return 1===u?`\\n    float ${s}(int row, int col) {\\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\\n      return sampleTexture(${n}, uv);\\n    }\\n  `:1===l?`\\n    float ${s}(int row, int col) {\\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\\n      return sampleTexture(${n}, uv);\\n    }\\n  `:`\\n  float ${s}(int row, int col) {\\n    // Explicitly use integer operations as dot() only works on floats.\\n    int index = row * ${t[1]} + col + ${c};\\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\\n    return sampleTexture(${n}, uv);\\n  }\\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[1]*t[2],a=t[2],{newShape:i,keptDims:o}=de(t),l=i;if(l.length<t.length){const t=["row","col","depth"];return`\\n        ${YR(aD(e,l))}\\n        float ${s}(int row, int col, int depth) {\\n          return ${s}(${iD(t,o)});\\n        }\\n      `}if(e.shapeInfo.isUniform)return`\\n      float ${s}(int row, int col, int depth) {\\n        int index = round(dot(vec3(row, col, depth),\\n                          vec3(${r}, ${a}, 1)));\\n        ${sD(e)}\\n      }\\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],p=e.shapeInfo.flatOffset;if(h===r&&null==p)return`\\n        float ${s}(int row, int col, int depth) {\\n          float texR = float(row);\\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\n                     vec2(${h}.0, ${c}.0);\\n          return sampleTexture(${n}, uv);\\n        }\\n      `;if(h===a&&null==p)return`\\n    float ${s}(int row, int col, int depth) {\\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\\n      float texC = float(depth);\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\\n      return sampleTexture(${n}, uv);\\n    }\\n  `;return`\\n      float ${s}(int row, int col, int depth) {\\n        // Explicitly use integer operations as dot() only works on floats.\\n        int index = row * ${r} + col * ${a} + depth + ${nD(n)};\\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\\n        return sampleTexture(${n}, uv);\\n      }\\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[3],a=t[2]*r,i=t[1]*a,{newShape:o,keptDims:l}=de(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\\n      ${YR(aD(e,o))}\\n      float ${s}(int row, int col, int depth, int depth2) {\\n        return ${s}(${iD(t,l)});\\n      }\\n    `}if(e.shapeInfo.isUniform)return`\\n      float ${s}(int row, int col, int depth, int depth2) {\\n        int index = round(dot(vec4(row, col, depth, depth2),\\n                          vec4(${i}, ${a}, ${r}, 1)));\\n        ${sD(e)}\\n      }\\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],p=c[1];if(p===i&&null==u)return`\\n      float ${s}(int row, int col, int depth, int depth2) {\\n        float texR = float(row);\\n        float texC =\\n            dot(vec3(col, depth, depth2),\\n                vec3(${a}, ${r}, 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(${p}.0, ${h}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `;if(p===r&&null==u)return`\\n      float ${s}(int row, int col, int depth, int depth2) {\\n        float texR = dot(vec3(row, col, depth),\\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\\n        float texC = float(depth2);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(${p}.0, ${h}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `;return`\\n    float ${s}(int row, int col, int depth, int depth2) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * ${i} + col * ${a} +\\n          depth * ${r} + depth2;\\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${nD(n)});\\n      return sampleTexture(${n}, uv);\\n    }\\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=de(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\\n      ${YR(aD(e,l))}\\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\\n        return ${s}(${iD(t,u)});\\n      }\\n    `}if(e.shapeInfo.isUniform)return`\\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\\n        float index = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(${o}, ${i}, ${a}, ${r})) +\\n          depth3;\\n        ${sD(e)}\\n      }\\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n                         vec4(${i}, ${a}, ${r}, 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(${d}.0, ${p}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `;if(d===r&&null==c)return`\\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\\n        float texR = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(${t[1]*t[2]*t[3]},\\n               ${t[2]*t[3]}, ${t[3]}, 1));\\n        int texC = depth3;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(${d}.0, ${p}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `;return`\\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * ${o} + col * ${i} + depth * ${a} +\\n          depth2 * ${r} + depth3 + ${nD(n)};\\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\\n      return sampleTexture(${n}, uv);\\n    }\\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=de(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\\n      ${YR(aD(e,r))}\\n      float ${s}(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        return ${s}(${iD(t,a)});\\n      }\\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\\n      float ${s}(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n        int index = round(dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(${c}, ${u}, ${l}, ${o})) +\\n          dot(\\n            vec2(depth3, depth4),\\n            vec2(${i}, 1)));\\n        ${sD(e)}\\n      }\\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\\n      float ${s}(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n          vec4(${u}, ${l}, ${o}, ${i})) +\\n               float(depth4);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(${f}.0, ${d}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `;if(f===i&&null==h)return`\\n      float ${s}(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        float texR = dot(vec4(row, col, depth, depth2),\\n          vec4(${t[1]*t[2]*t[3]*t[4]},\\n               ${t[2]*t[3]*t[4]},\\n               ${t[3]*t[4]},\\n               ${t[4]})) + float(depth3);\\n        int texC = depth4;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(${f}.0, ${d}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `;return`\\n    float ${s}(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * ${c} + col * ${u} + depth * ${l} +\\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${nD(n)};\\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\\n      return sampleTexture(${n}, uv);\\n    }\\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function JR(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\\n      return ${RR().texture2D}(${t}, halfCR);\\n    }\\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],a=RR();return`\\n    vec4 ${n}(int index) {\\n      vec2 uv = packedUVfrom1D(\\n        ${r[0]}, ${r[1]}, index);\\n      return ${a.texture2D}(${t}, uv);\\n    }\\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=r[0],i=r[1],o=RR();if(null!=r&&re(t,r))return`\\n      vec4 ${s}(int row, int col) {\\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\\n\\n        return ${o.texture2D}(${n}, uv);\\n      }\\n    `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\\n    vec4 ${s}(int row, int col) {\\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\\n      return ${o.texture2D}(${n}, uv);\\n    }\\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===t[0]){const n=[1,2],r=["b","row","col"];return`\\n        ${JR(aD(e,t.slice(1)))}\\n        vec4 ${s}(int b, int row, int col) {\\n          return ${s}(${iD(r,n)});\\n        }\\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2);return`\\n    vec4 ${s}(int b, int row, int col) {\\n      vec2 uv = packedUVfrom3D(\\n        ${i}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\\n      return ${RR().texture2D}(${n}, uv);\\n    }\\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],p=`b${e} * ${c} + `+p;return`\\n    vec4 ${r}(${h}) {\\n      int index = ${p};\\n      int texR = index / ${l};\\n      int texC = index - texR * ${l};\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\\n      return ${RR().texture2D}(${s}, uv);\\n    }\\n  `}(e)}}const ZR="\\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\\n  int texelIndex = index / 2;\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n",QR="\\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\\n  int texNumC, int row, int col) {\\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n",eD="\\nvec2 packedUVfrom3D(int texNumR, int texNumC,\\n    int texelsInBatch, int texelsInLogicalRow, int b,\\n    int row, int col) {\\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n",tD="\\n  float getChannel(vec4 frag, vec2 innerDims) {\\n    vec2 modCoord = mod(innerDims, 2.);\\n    return modCoord.x == 0. ?\\n      (modCoord.y == 0. ? frag.r : frag.g) :\\n      (modCoord.y == 0. ? frag.b : frag.a);\\n  }\\n  float getChannel(vec4 frag, int dim) {\\n    float modCoord = mod(float(dim), 2.);\\n    return modCoord == 0. ? frag.r : frag.g;\\n  }\\n";function nD(e){return`offset${e}`}function sD(e){const t=e.name,n=ne(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\\n    for (int i = 0; i < ${n}; i++) {\\n      if (i == index) {\\n        return ${t}[i];\\n      }\\n    }\\n  `}function rD(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function aD(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function iD(e,t){return t.map((t=>e[t])).join(", ")}function oD(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!re(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!re(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:lD,bincountImpl:uD,bincountReduceImpl:cD,ceilImpl:hD,concatImpl:pD,expImpl:dD,expm1Impl:fD,floorImpl:mD,gatherV2Impl:gD,greaterImpl:yD,lessImpl:bD,linSpaceImpl:xD,logImpl:wD,maxImpl:kD,maximumImpl:vD,minimumImpl:ID,multiplyImpl:ND,negImpl:SD,prodImpl:CD,rangeImpl:$D,rsqrtImpl:TD,simpleAbsImpl:ED,sliceImpl:AD,stridedSliceImpl:RD,subImpl:DD,tileImpl:FD,topKImpl:_D,transposeImpl:OD,uniqueImpl:MD}=V;function LD(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function zD(e,t){return 1===t?[e]:LD(e,t)}class PD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\\n        void main() {\\n          setOutput(vec4(getA(), 0., 0., 0.));\\n        }\\n      ";else{const n=zD("rc",t),s=rD(t),r=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let s="";for(let r=e-2;r<e;r++)s+=`${n[r]} >= ${t[r]}`,r<e-1&&(s+="||");return s}(t,e,n),a=function(e,t,n,s){if(1===e)return"";const r=s.slice(-2);return`\\n    int r = ${r[0]};\\n    int c = ${r[1]};\\n    int rp1 = r + 1;\\n    int cp1 = c + 1;\\n\\n    bool cEdge = cp1 >= ${t};\\n    bool rEdge = rp1 >= ${n};\\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,s=function(e,t){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\\n            0, 0`:`getA(${s[0]}),\\n          cEdge ? 0. : getA(${s[1]}),\\n          rEdge ? 0. : getA(${s[2]}),\\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(e,n);this.userCode=`\\n        void main() {\\n          ${s} rc = getOutputCoords();\\n\\n          if(${r}) {\\n            setOutput(vec4(0));\\n          } else {\\n            ${a}\\n\\n            setOutput(vec4(${i}));\\n          }\\n        }\\n      `}}}class BD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\\n        ${t}\\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\\n          int flatIndex = getFlatIndex(thisRC);\\n\\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\\n\\n          result[${e}] =\\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\\n        ${e>0?"}":""}\\n      `}var s;this.userCode=`\\n      ${s=t,`\\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\\n      ${DR(["r","c","d"],s)}\\n      return ivec3(r, c, d);\\n    }\\n  `}\\n      ${FR(e)}\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n\\n        ivec3 thisRC;\\n        int rows = ${e[1]};\\n        int cols = ${e[2]};\\n\\n        ${n}\\n\\n        setOutput(result);\\n      }\\n    `}}class WD{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=UD(t,n),r=GD(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=VD(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===tR.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===tR.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===tR.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===tR.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===tR.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=UD(n,s),a=GD(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=VD(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=Be().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function VD(e,t,n,s,r){const a=function(e,t){switch(e){case tR.PACKED_2X2_FLOAT32:return HR(t);case tR.PACKED_2X2_FLOAT16:return jR(t);case tR.UNPACKED_FLOAT32:return VR(t);case tR.UNPACKED_FLOAT16:return UR(t);case tR.PACKED_4X1_UNSIGNED_BYTE:return GR(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=rR(e[0],e[1]);i=t*n}else{const[t,n]=nR(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function UD(e,t){if(e===eR.UPLOAD)return tR.PACKED_2X2_FLOAT32;if(e===eR.RENDER||null==e)return function(e){return Be().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?tR.PACKED_2X2_FLOAT32:tR.UNPACKED_FLOAT32:e?tR.PACKED_2X2_FLOAT16:tR.UNPACKED_FLOAT16}(t);if(e===eR.DOWNLOAD||e===eR.PIXELS)return tR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function GD(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class HD{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\\n      float unaryOperation(float x) {\\n        ${t}\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    `}}const jD="if (isnan(x)) return x;",qD="return x;",KD="return abs(x);",XD="return (x >= 0.0) ? x : (exp(x) - 1.0);",YD=jD+"\\n  return (x < 0.0) ? 0.0 : x;\\n",JD=jD+"\\n  return (x < 0.0) ? 0.0 : min(6.0, x);\\n",ZD="return x;",QD="return x;",eF="\\n  vec4 result;\\n\\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\\n\\n  return result;\\n",tF="\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n",nF="\\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n";class sF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\\n      vec4 unaryOperation(vec4 x) {\\n        ${t}\\n      }\\n\\n      void main() {\\n        vec4 x = getAAtOutCoords();\\n        vec4 y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    `}}class rF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=zD("rc",t),s=rD(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\\n      void main() {\\n        ${s} rc = getOutputCoords();\\n        vec4 packedInput = getA(${r});\\n\\n        setOutput(getChannel(packedInput, ${i}));\\n      }\\n    `}}const aF=vh,iF={};class oF extends G{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Be().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=ZA(Be().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Be().getNumber("WEBGL_VERSION"))in iF||(iF[t]={}),iF[t]),this.gpgpu=new qR(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new WD(this.gpgpu),this.numMBBeforeWarning=null==Be().global.screen?1024:Be().global.screen.height*Be().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new U(this,io())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Be().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Be().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:eR.UPLOAD,refCount:1,complexParentRefCount:0}),s}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}decComplexRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,n,s){if(Be().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:eR.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new sF(i,ZD):new HD(i,ZD);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=hr()),c="complex64"===s?yd(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=hr()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new sF(s,ZD):new HD(s,ZD);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Be().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Be().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&Be().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...sR(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=yd(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=ne(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>fr(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ga(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!uR(n)){if(Be().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: \'tf.env().set(\'WEBGL_RENDER_FLOAT32_ENABLED\', true);\'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=ne(t);if(Be().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...sR(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=Be().getBool("WEBGL_PACK")&&!0===s,i=a?kR(t):t,o=a?new zR(i):new LR(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}async time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=te(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=te(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=X(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:hr(),endMs:null}}endTimer(e){return Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=hr(),e)}async getQueryTime(e){if(Be().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Be().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=io().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return Be().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&ne(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){md("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return aF(e.shape,t)}packedUnaryOp(e,t,n){const s=new sF(e.shape,t);return this.compileAndRun(s,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=ED(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Be().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,KD,e.dtype);const t=new HD(e.shape,KD);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&ve(n[0])){const r=n.map((e=>dr(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:s}=this.makeTensorInfo(e,t,n);return io().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){const t=new rF(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new PD(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[xR(e.shape),...wR(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[xR(t),...wR(t)],a=new BD(r,n),i=this.runWebGLProgram(a,[s],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:s,dtype:r}=t,a=kR(s);let i;return i=n?new MR(a):new OR(a),{dtype:r,shape:s,dataId:this.runWebGLProgram(i,[{shape:a,dtype:r,dataId:e}],r,null,!0).dataId}}runWebGLProgram(e,t,n,s,r=!1){const a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===QA.DENSE){const t=sR(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===ne(a.shape))return i.values=fe(a.dtype,0),a;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ne(t.shape)<=Be().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!IR(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),o.push(t),n=this.texData.get(t.dataId),e.shape=s}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},c=function(e,t,n){let s="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;s+=`${e.shape}_${n}_${t}`}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r,a}(e,l,u),h=this.getAndSaveBinary(c,(()=>function(e,t,n,s){const r=t.userCode,a=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=XR(a,o,r,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===Be().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const p={};for(let n=0;n<t.variableNames.length;n++){const s=t.variableNames[n],r=!1;p[s]=e.getUniformLocation(u,s,r),p[`offset${s}`]=e.getUniformLocation(u,`offset${s}`,r)}return{program:t,source:l,webGLProgram:u,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,l,u))),p=null!=this.activeTimers;let d;if(p&&(d=this.startTimer()),function(e,t,n,s,r){oD(t.inShapeInfos,n),oD([t.outShapeInfo],[s]);const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===Be().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],a=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`];if(null!=a)if(n.isUniform)if(ne(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,s)})),null!=r&&r(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,u,s),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)})),!Be().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,s,r=!1){n=n||t[0].dtype;const a=this.runWebGLProgram(e,t,n,s,r);return io().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Be().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=uo((()=>{if(!Be().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Be().getBool("DEBUG");Be().set("DEBUG",!1);const t=this.abs(Lo(1e-8)).dataSync()[0];if(Be().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=hr());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Be().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?K(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=de(e);e=t.newShape}let s=ne(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=xR(e);let n=2,r=2;return e.length&&([n,r]=wR(e)),s=t*(n/2)*(r/2),oe(s).map((e=>2*e))}return oe(s)}(n,o),t.texShape=c),null!=r){const e=kR(n);let a,i=c[1],h=c[0];const p=r instanceof Uint8Array;o?([i,h]=rR(c[0],c[1]),a=new BR(e,[h,i],p)):a=new PR(e,[h,i],p);const d=this.makeTensorInfo([h,i],s);this.texData.get(d.dataId).usage=p?eR.PIXELS:eR.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,h,r);const f=!0,m=this.runWebGLProgram(a,[d],s,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),t.values=null,l&&(this.uploadWaitMs+=hr()-u)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*we(t)}}Br()&&wo("webgl",(()=>new oF),2);const lF="\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n";class uF{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Ko(t,n),this.userCode=`\\n      float binaryOperation(float a, float b) {\\n        ${e}\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    `}}const cF="\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n";class hF{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ko(t,n);const r=this.outputShape.length;let a="";if(s)if(0===r||1===ne(this.outputShape))a="\\n          result.y = 0.;\\n          result.z = 0.;\\n          result.w = 0.;\\n        ";else if(a=`\\n          ${rD(r)} coords = getOutputCoords();\\n        `,1===r)a+=`\\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          `;else{const e=zD("coords",r);a+=`\\n            bool nextRowOutOfBounds =\\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\\n            bool nextColOutOfBounds =\\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          `}this.userCode=`\\n      vec4 binaryOperation(vec4 a, vec4 b) {\\n        ${e}\\n      }\\n\\n      void main() {\\n        vec4 a = getAAtOutCoords();\\n        vec4 b = getBAtOutCoords();\\n\\n        vec4 result = binaryOperation(a, b);\\n        ${a}\\n\\n        setOutput(result);\\n      }\\n    `}}function pF(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const dF={kernelName:nn,backendName:"webgl",kernelFunc:pF};function fF(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=pF({inputs:{x:s},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const l=pF({inputs:{x:r},backend:n});return n.texData.get(l.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:l},a}const mF={kernelName:gt,backendName:"webgl",kernelFunc:fF},gF="return (a < 0.) ? b * a : a;",yF="\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\n",bF={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",ur(a,"float32")),o=Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hF(yF,r.shape,i.shape):new uF(gF,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],r.dtype);return n.disposeIntermediateTensorInfo(i),l}},xF="return (a < 0.) ? b * a : a;",wF="\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\n",kF={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hF(wF,s.shape,r.shape):new uF(xF,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},vF="if (isnan(x)) return x;";function IF({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=Be().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new sF(i.shape,t):new HD(i.shape,e),o.runWebGLProgram(u,[i],l)}}function NF({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new uF(e,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],$r(n.dtype,s.dtype))})),a=fF({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||$r(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=r){const e=c.texData.get(l.dataId),t=c.texData.get(u.dataId),[n,s]=r(l.shape,u.shape,e.values,t.values,h),a=c.makeTensorInfo(s,h);return c.texData.get(a.dataId).values=n,a}let p;return p=Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new hF(t,l.shape,u.shape,n):new uF(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function SF(e,t=!1){if("linear"===e)return t?QD:qD;if("relu"===e)return t?tF:YD;if("elu"===e)return t?eF:XD;if("relu6"===e)return t?nF:JD;if("prelu"===e)return t?wF:xF;if("leakyrelu"===e)return t?yF:gF;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class CF{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          ${i}\\n        }`:l?`vec4 activation(vec4 a) {\\n          vec4 b = getLeakyreluAlphaAtOutCoords();\\n          ${i}\\n        }`:`vec4 activation(vec4 x) {\\n          ${i}\\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\\n      ${m}\\n\\n      const float sharedDimension = ${c}.0;\\n\\n      vec4 dot2x2ARowBCol(ivec3 rc) {\\n        vec4 result = vec4(0);\\n        for (int i = 0; i < ${c}; i++) {\\n          int batchA = ${b};\\n          int batchB = ${x};\\n          vec4 a = getMatrixA(batchA, ${h});\\n          vec4 b = getMatrixB(batchB, ${p});\\n\\n          // These swizzled products need to be separately added.\\n          // See: https://github.com/tensorflow/tfjs/issues/1735\\n          result += (${d[0]} * ${f[0]});\\n          result += (${d[1]} * ${f[1]});\\n        }\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n        vec4 result = dot2x2ARowBCol(rc);\\n\\n        ${y}\\n\\n        ${g}\\n\\n        setOutput(result);\\n      }\\n    `}}const $F={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class TF{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ko(t,n),this.userCode=`\\n      float binaryOpComplex(\\n          float areal, float aimag, float breal, float bimag) {\\n        ${e}\\n      }\\n\\n      void main() {\\n        float areal = getARealAtOutCoords();\\n        float aimag = getAImagAtOutCoords();\\n        float breal = getBRealAtOutCoords();\\n        float bimag = getBImagAtOutCoords();\\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\\n      }\\n    `}}const EF="return a * b;";function AF(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=$r(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new TF($F.REAL,s.shape,r.shape),i=new TF($F.IMAG,s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=fF({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=ND(s.shape,r.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hF(EF,s.shape,r.shape):new uF(EF,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const RF={kernelName:_n,backendName:"webgl",kernelFunc:AF};function DF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=ne(r.shape),l=he(a,o),u=ne(l);Z(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||IR(r.shape,l)||null!==c.texture&&IR(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[xR(e.shape),...wR(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[xR(t),...wR(t)],i=new BD(a,s),o=n.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(r,l,i)}const FF={kernelName:Zn,backendName:"webgl",kernelFunc:DF};class _F{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${ae(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\\n        if (inIdx < 0 || inIdx >= ${r}) {\\n          return 0.0;\\n        }\\n      `),this.userCode=`\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        ${u}\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * ${n};\\n\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < ${i}; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          ${l}\\n        }\\n\\n        int inIdx = inOffset + ${i};\\n        if (${1===o}) {\\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\\n\\n          ${l}\\n        } else if (${2===o}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1), 0.0, 0.0);\\n\\n          ${l}\\n        } else if (${3===o}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2), 0.0);\\n\\n          ${l}\\n        }\\n        setOutput(sumValue);\\n      }\\n    `}}class OF{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\\n      if (${"sum"===t}) {\\n        sumValue += dot(values, ones);\\n      } else if (${"prod"===t}) {\\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\\n        prodValue *= tmp[0] * tmp[1];\\n      } else {\\n        minMaxValue = ${o}(values, minMaxValue);\\n      }\\n    `,p="vec4";"all"===t?(i="1.0",h="\\n        bool reducedAllValue = all(values);\\n        float floatedReducedAllValue = float(reducedAllValue);\\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\\n        bool reducedAnyValue = any(values);\\n        float floatedReducedAnyValue = float(reducedAnyValue);\\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\\n      ",p="bvec4");let d="";r%n>0&&(d=`\\n        if (inIdx < 0 || inIdx >= ${r}) {\\n          return initializationValue;\\n        }\\n      `),this.userCode=`\\n      const float initializationValue = ${i};\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        ${d}\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * ${n};\\n\\n        vec4 minMaxValue = vec4(${i});\\n        float prodValue = 1.0;\\n        float sumValue = 0.0;\\n        float allValue = 1.0;\\n        float anyValue = 0.0;\\n\\n        for (int i = 0; i < ${u}; i += 4) {\\n          int inIdx = inOffset + i;\\n          ${p} values = ${p}(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          ${h}\\n        }\\n\\n        int inIdx = inOffset + ${u};\\n        if (${1===c}) {\\n          ${p} values = ${p}(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          ${h}\\n        } else if (${2===c}) {\\n          ${p} values = ${p}(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          ${h}\\n        } else if (${3===c}) {\\n          ${p} values = ${p}(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          ${h}\\n        }\\n        setOutput(${l});\\n      }\\n    `}}function MF(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=ed(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new _F({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new _F({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new OF({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class LF{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=rD(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\\n    void main() {\\n      ${s} resRC = getOutputCoords();\\n      setOutput(getA(${r}));\\n    }\\n    `}}class zF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=rD(this.rank),r=LD("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\\n    void main() {\\n      ${s} rc = getOutputCoords();\\n      vec4 result = vec4(0.);\\n      result[0] = ${l};\\n      if(${o}) {\\n        result[1] = ${l};\\n      }\\n      --${r[this.rank-1]};\\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\\n        result[2] = ${l};\\n        if(${o}) {\\n          result[3] = ${l};\\n        }\\n      }\\n      setOutput(result);\\n    }\\n    `}}function PF(e,t,n){const s=Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zF(e.shape,t):new LF(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function BF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=pe(r,e.shape);let o=i;const l=Gu(o,a),u=null!=l;let c=e;u&&(c=PF(e,l,s),o=ju(o.length,a)),Uu("sum",o,a);const[h,p]=Wu(c.shape,o);let d=h;n&&(d=Vu(h,i));const f=ne(p),m=DF({inputs:{x:c},attrs:{shape:[ne(e.shape)/f,f]},backend:s}),g=MF(m,Tr(e.dtype),"sum",s),y=DF({inputs:{x:g},attrs:{shape:d},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),u&&s.disposeIntermediateTensorInfo(c),y}(r,a,i,n)}const WF={kernelName:ys,backendName:"webgl",kernelFunc:BF};function VF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[a[e]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=OD(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=t}else u=PF(r,a,i);return u}const UF={kernelName:As,backendName:"webgl",kernelFunc:VF},GF=1e3;function HF({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=s?t.shape[c-1]:t.shape[c-2],d=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ne(m),b=ne(g);Z(u>=2&&c>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([d,f]);Z(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const w=n?[y,h,d]:[y,d,h],k=s?[b,f,p]:[b,p,f],v=DF({inputs:{x:e},backend:r,attrs:{shape:w}}),I=DF({inputs:{x:t},backend:r,attrs:{shape:k}}),N=[v,I],S=Math.max(y,b),C=n?v.shape[1]:v.shape[2],$=null!=a,T=null!=i,E="leakyrelu"===l,A=null!=l?SF(l,!0):null;let R;if((1===d||1===f)&&C>GF&&!1===($||T||E||null!=A)){let e=v,t=I;n&&(e=VF({inputs:{x:v},backend:r,attrs:{perm:[0,2,1]}}),N.push(e)),s&&(t=VF({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),N.push(t));const a=1===f;let i=e;1!==f&&(i=DF({inputs:{x:e},backend:r,attrs:{shape:[S,C,1]}}),N.push(i));const o=1===f?2:1;let l=t;a&&(l=DF({inputs:{x:t},backend:r,attrs:{shape:[S,1,C]}}),N.push(l));const u=AF({inputs:{a:i,b:l},backend:r});R=BF({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{const l=$r(e.dtype,t.dtype),u=new CF(w,k,[S,d,f],n,s,$,A,T,E),c=[v,I];if(null!=a&&c.push(a),T&&c.push(i),E){const e=r.makeTensorInfo([],"float32",ur(o,"float32"));c.push(e),N.push(e)}R=r.runWebGLProgram(u,c,l)}const D=DF({inputs:{x:R},backend:r,attrs:{shape:x}});N.push(R);for(const e of N)r.disposeIntermediateTensorInfo(e);return D}const jF={kernelName:zs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return HF({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},qF="return abs(x);",KF={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=ED(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=Be().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new sF(s.shape,qF):new HD(s.shape,qF),n.runWebGLProgram(r,[s],s.dtype)}},XF=IF({opSnippet:jD+"\\n  if (abs(x) > 1.) {\\n    return NAN;\\n  }\\n  return acos(x);\\n"}),YF={kernelName:je,backendName:"webgl",kernelFunc:XF},JF=IF({opSnippet:jD+"\\n  if (x < 1.0) return NAN;\\nreturn log(x + sqrt(x * x - 1.0));"}),ZF={kernelName:qe,backendName:"webgl",kernelFunc:JF},QF="return a + b;",e_=NF({opSnippet:QF,packedOpSnippet:QF,supportsComplex:!0,cpuKernelImpl:lD}),t_={kernelName:Ke,backendName:"webgl",kernelFunc:e_};class n_{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\\n      void main() {\\n        ${n.join("\\n        ")}\\n\\n        float result = ${s};\\n        setOutput(result);\\n      }\\n    `}}class s_{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\\n      void main() {\\n        ${n.join("\\n        ")}\\n\\n        vec4 result = ${s};\\n        setOutput(result);\\n      }\\n    `}}const r_={kernelName:Xe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return pF({inputs:{x:r[0]},backend:s});if(r.length>Be().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>$r(e,t))),i=r.map((e=>e.shape)),o=Be().getBool("WEBGL_PACK")?new s_(r[0].shape,i):new n_(r[0].shape,i);return s.runWebGLProgram(o,r,a)}},a_={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=pe(a,r.shape);let u=l;const c=Gu(u,o);let h=r;null!=c&&(h=VF({inputs:{x:r},backend:n,attrs:{perm:c}}),u=ju(u.length,o)),Uu("all",u,o);const[p,d]=Wu(h.shape,u),f=DF({inputs:{x:h},backend:n,attrs:{shape:[-1,ne(d)]}}),m=MF(f,f.dtype,"all",n);let g;return g=DF(i?{inputs:{x:m},backend:n,attrs:{shape:Vu(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},i_={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=pe(a,r.shape);let u=l;const c=Gu(u,o);let h=r;null!=c&&(h=VF({inputs:{x:r},backend:n,attrs:{perm:c}}),u=ju(u.length,o)),Uu("any",u,o);const[p,d]=Wu(h.shape,u),f=DF({inputs:{x:h},backend:n,attrs:{shape:[-1,ne(d)]}}),m=MF(f,f.dtype,"any",n);let g;return g=DF(i?{inputs:{x:m},backend:n,attrs:{shape:Vu(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class o_{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * ${s};\\n\\n        int bestIndex = inOffset;\\n        float bestValue = getA(batch, bestIndex);\\n\\n        for (int i = 0; i < ${s}; i++) {\\n          int inIdx = ${o};\\n          float candidate = getA(batch, inIdx);\\n          if (candidate ${i} bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    `}}class l_{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Z(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=rD(o),u=zD("coords",o);let c,h;if(1===a){h=o+1;const e=rD(h);c=`\\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\\n        ++${u[o-1]};\\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\\n        ++${u[o-2]};\\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\\n        --${u[o-1]};\\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\\n        --${u[o-2]};`}else h=o,c=`\\n        ${l} sourceLocR = coords;\\n        ++${u[o-1]};\\n        ${l} sourceLocG = coords;\\n        ++${u[o-2]};\\n        ${l} sourceLocA = coords;\\n        --${u[o-1]};\\n        ${l} sourceLocB = coords;\\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=zD("sourceLocR",h-1).concat("inIdx.r"),g=zD("sourceLocG",h-1).concat("inIdx.g"),y=zD("sourceLocB",h-1).concat("inIdx.b"),b=zD("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=s?"":`\\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\\n                             getBestIndicesAChannel(${g.join()}),\\n                             getBestIndicesAChannel(${y.join()}),\\n                             getBestIndicesAChannel(${b.join()})));`,k=`vec4(\\n            getAChannel(${m.join()}),\\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,v=s?"":`\\n      float getBestIndicesAChannel(${f.join()}) {\\n        return getChannel(getBestIndicesA(${p.join()}),\\n                                          vec2(${p.slice(-2).join()}));\\n      }`;this.userCode=`\\n      float getAChannel(${f.join()}) {\\n        return getChannel(getA(${p.join()}),\\n                               vec2(${p.slice(-2).join()}));\\n      }\\n      ${v}\\n      void main() {\\n        ${l} coords = getOutputCoords();\\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\\n        ${c}\\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\\n          sourceLocB${d}, sourceLocA${d}) * ${t};\\n        ivec4 inIdx = srcIdx;\\n        vec4 bestIndex = vec4(inIdx);\\n        vec4 bestValue = ${k};\\n\\n        for (int i = 0; i < ${t}; i++) {\\n          inIdx = srcIdx;\\n          ${w}\\n          vec4 candidate = ${k};\\n          bvec4 nan = isnan(candidate);\\n          bvec4 replace = bvec4(\\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\\n\\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\\n                           replace.y  ? candidate.y : bestValue.y,\\n                           replace.z  ? candidate.z : bestValue.z,\\n                           replace.w  ? candidate.w : bestValue.w);\\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\\n          srcIdx++;\\n        }\\n        setOutput(bestIndex);\\n      }\\n    `}}function u_(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=ed(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new o_(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=u_(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function c_(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=ed(r[r.length-1]),i=new l_(r,a,n,null==s),o=null==s?[t]:[t,s],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const s=c_(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function h_(e,t,n,s){const r=[n];if(Uu("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!Be().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,i]=Wu(t.shape,r),o=ne(i),l=DF({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);const u=u_(e,l,s);n.push(u);const c=DF({inputs:{x:u},backend:e,attrs:{shape:a}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return c_(e,t,s)}const p_={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=pe(a,r.shape);const o=Gu(i,r.shape.length);let l=r;const u=[];null!=o&&(l=VF({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=ju(i.length,l.shape.length)),Uu("argMax",[i[0]],l.shape.length);const c=h_(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},d_={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=pe(a,r.shape);const o=Gu(i,r.shape.length);let l=r;const u=[];null!=o&&(l=VF({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=ju(i.length,l.shape.length)),Uu("argMin",[i[0]],l.shape.length);const c=h_(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},f_=IF({opSnippet:jD+"\\n  if (abs(x) > 1.) {\\n    return NAN;\\n  }\\n  return asin(x);\\n"}),m_={kernelName:et,backendName:"webgl",kernelFunc:f_},g_=IF({opSnippet:jD+"return log(x + sqrt(x * x + 1.0));"}),y_={kernelName:tt,backendName:"webgl",kernelFunc:g_},b_=IF({opSnippet:jD+"\\n  return atan(x);\\n"}),x_={kernelName:nt,backendName:"webgl",kernelFunc:b_},w_=NF({opSnippet:"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\\n  return atan(a, b);\\n",packedOpSnippet:"\\n  vec4 result = atan(a, b);\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n"}),k_={kernelName:rt,backendName:"webgl",kernelFunc:w_},v_=IF({opSnippet:jD+"\\n  if ((x < -1.0) || (x > 1.0)) return NAN;\\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),I_={kernelName:st,backendName:"webgl",kernelFunc:v_};class N_{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\\n        const ivec2 strides = ivec2(${i}, ${o});\\n        const ivec2 pads = ivec2(${p}, ${d});\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < ${c};\\n              wR += ${l}) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= ${e.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < ${h};\\n                wC += ${u}) {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= ${e.inWidth}) {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value ${t} currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,k=`\\n      if (${f}) {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = max(values, minMaxValue);\\n      }\\n    `;this.userCode=`\\n      const ivec2 strides = ivec2(${i}, ${o});\\n      const ivec2 pads = ivec2(${p}, ${d});\\n      const float initializationValue = ${y};\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= ${e.inWidth}) {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(${y});\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wR = 0; wR < ${c};\\n            wR += ${l}) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= ${e.inHeight}) {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < ${x}; wC += 4) {\\n            int xC = xCCorner + wC * ${u};\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + ${u}, d),\\n              getValue(batch, xR, xC + 2 * ${u}, d),\\n              getValue(batch, xR, xC + 3 * ${u}, d)\\n            );\\n\\n            ${k}\\n          }\\n\\n          int xC = xCCorner + ${x};\\n          if (${1===w}) {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            ${k}\\n          } else if (${2===w}) {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + ${u}, d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            ${k}\\n          } else if (${3===w}) {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + ${u}, d),\\n              getValue(batch, xR, xC + 2 * ${u}, d),\\n              initializationValue\\n            );\\n\\n            ${k}\\n          }\\n        }\\n        setOutput(${b});\\n      }\\n    `}}class S_{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\\n        const ivec3 strides =\\n            ivec3(${i}, ${o}, ${l});\\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\\n\\n        void main() {\\n          ivec5 coords = getOutputCoords();\\n          int batch = coords.x;\\n          int ch = coords.u;\\n\\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n          int xDCorner = xCorner.x;\\n          int xRCorner = xCorner.y;\\n          int xCCorner = xCorner.z;\\n\\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n\\n          for (int wD = 0; wD < ${p};\\n              wD += ${u}) {\\n            int xD = xDCorner + wD;\\n\\n            if (xD < 0 || xD >= ${e.inDepth}) {\\n              continue;\\n            }\\n\\n            for (int wR = 0; wR < ${d};\\n                wR += ${c}) {\\n              int xR = xRCorner + wR;\\n\\n              if (xR < 0 || xR >= ${e.inHeight}) {\\n                continue;\\n              }\\n\\n              for (int wC = 0; wC < ${f};\\n                  wC += ${h}) {\\n                int xC = xCCorner + wC;\\n\\n                if (xC < 0 || xC >= ${e.inWidth}) {\\n                  continue;\\n                }\\n\\n                float value = getX(batch, xD, xR, xC, ch);\\n\\n                // If a min / max value has already been found, use it. If not,\\n                // use the current value.\\n                float currMinMaxValue = mix(\\n                    value, minMaxValue, minMaxValueFound);\\n                if (value ${t} currMinMaxValue) {\\n                  minMaxValue = value;\\n                  minMaxValueFound = 1.0;\\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\\n                      wR * ${f} + wC`};\\n                }\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const k=4*Math.floor(a/4),v=a%4,I=`\\n      if (${b}) {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = max(values, minMaxValue);\\n      }\\n    `;this.userCode=`\\n      const ivec3 strides =\\n        ivec3(${i}, ${o}, ${l});\\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\\n      const float initializationValue = ${x};\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\\n        if (xC < 0 || xC >= ${e.inWidth}) {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xD, xR, xC, ch);\\n      }\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xDCorner = xCorner.x;\\n        int xRCorner = xCorner.y;\\n        int xCCorner = xCorner.z;\\n\\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(${x});\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wD = 0; wD < ${p};\\n            wD += ${u}) {\\n          int xD = xDCorner + wD;\\n\\n          if (xD < 0 || xD >= ${e.inDepth}) {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < ${d};\\n            wR += ${c}) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= ${e.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < ${k}; wC += 4) {\\n              int xC = xCCorner + wC * ${h};\\n\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + ${h}, ch),\\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\\n              );\\n\\n              ${I}\\n            }\\n\\n            int xC = xCCorner + ${k};\\n            if (${1===v}) {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                initializationValue,\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              ${I}\\n            } else if (${2===v}) {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + ${h}, ch),\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              ${I}\\n            } else if (${3===v}) {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + ${h}, ch),\\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\\n                initializationValue\\n              );\\n\\n              ${I}\\n            }\\n          }\\n          setOutput(${w});\\n        }\\n      }\\n    `}}const C_={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;ER(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;Z(Il(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations \'1\'`));const u=dl(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&re(u.inShape,u.outShape))return pF({inputs:{x:r},backend:n});const c=new N_(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},$_={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=fl(r.shape,a,i,[1,1,1],o,l,u),h=new S_(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class T_{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\\n      const ivec2 pads = ivec2(${u}, ${c});\\n      const float avgMultiplier = float(${h});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < ${o};\\n            wR += ${a}) {\\n          float dyR = float(dyRCorner + wR) / ${s}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < ${l};\\n            wC+= ${i}) {\\n            float dyC = float(dyCCorner + wC) / ${r}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n\\n            dotProd += dyValue * avgMultiplier;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class E_{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\\n      const float avgMultiplier = float(${g});\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < ${c};\\n            wD += ${o}) {\\n          float dyD = float(dyDCorner + wD) / ${r}.0;\\n\\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < ${h};\\n              wR += ${l}) {\\n            float dyR = float(dyRCorner + wR) / ${a}.0;\\n\\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < ${p};\\n                wC += ${u}) {\\n              float dyC = float(dyCCorner + wC) / ${i}.0;\\n\\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n\\n              dotProd += dyValue * avgMultiplier;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}const A_={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=fl(i.shape,o,l,[1,1,1],u,c),p=new E_(h);return n.runWebGLProgram(p,[r],i.dtype)}},R_={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;ER([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=dl(i.shape,o,l,1,u),h=new T_(c);return n.runWebGLProgram(h,[r],i.dtype)}},D_={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return HF({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class F_{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ko(e,t),Ko(e,n);let i="0.0";null!=s&&(Ko(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(Ko(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = ${i};\\n        float scale = ${o};\\n        float inv = scale * inversesqrt(variance + float(${a}));\\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\\n      }\\n    `}}class __{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ko(e,t),Ko(e,n);let i="vec4(0.0)";null!=s&&(Ko(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(Ko(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\\n      void main() {\\n        vec4 offset = ${i};\\n        vec4 scale = ${o};\\n\\n        vec4 x = getXAtOutCoords();\\n        vec4 mean = getMeanAtOutCoords();\\n        vec4 variance = getVarianceAtOutCoords();\\n\\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\\n\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    `}}const O_={kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=e;Z(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Z(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Z(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=Be().getBool("WEBGL_PACK_NORMALIZATION")?new __(s.shape,r.shape,a.shape,c,h,l):new F_(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class M_{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=rD(this.rank),n=`uniform int start[${this.rank}];`,s=function(e){if(1===e)return"sourceLoc";if(e<=6)return L_.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\\n        ${t} sourceLoc;\\n        ${t} coords = getOutputCoords();\\n        ${e.map(((e,t)=>`sourceLoc.${L_[t]} = start[${t}] + coords.${L_[t]};`)).join("\\n")}\\n      `,this.userCode=`\\n      ${n}\\n      void main() {\\n        ${r}\\n        setOutput(getSource(${s}));\\n      }\\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const L_=["x","y","z","w","u","v"];class z_{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=rD(this.rank),n=zD("coords",this.rank),s=zD("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\\n      result.x = ${a};\\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\\n        ++${s[this.rank-1]};\\n        result.y = ${a};\\n        --${s[this.rank-1]};\\n      }\\n    `,o=1===this.rank?"":`\\n      --${n[this.rank-1]};\\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\\n        ++${s[this.rank-2]};\\n        result.z = ${a};\\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\\n          ++${s[this.rank-1]};\\n          result.w = ${a};\\n        }\\n      }\\n    `,l=this.rank<=4?`sourceLoc = coords +\\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\\n");this.userCode=`\\n      uniform int start[${this.rank}];\\n      void main() {\\n        ${t} coords = getOutputCoords();\\n        ${t} sourceLoc;\\n        ${l}\\n        vec4 result = vec4(0.);\\n        ${i}\\n        ${o}\\n        setOutput(result);\\n      }\\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function P_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,l]=Li(r,a,i);if(Ii(r,o,l),0===ne(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=AD(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=Oi(r.shape,o,l);if(u||!c){const e=Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new z_(l):new M_(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.complexParentRefCount=0,i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Mi(t,Te(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const B_={kernelName:cs,backendName:"webgl",kernelFunc:P_},W_={kernelName:ct,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;Z(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=nd(r.shape,a,o),u=sd(l.length,a.length),c=rd(r.shape,a,o),h=ad(i,a.length),p=id(c,i,a.length),d=[],f=DF({inputs:{x:r},backend:n,attrs:{shape:l}}),m=VF({inputs:{x:f},backend:n,attrs:{perm:u}}),g=DF({inputs:{x:m},backend:n,attrs:{shape:c}}),y=P_({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},V_={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=uD(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},U_=NF({opSnippet:"return float(a != b);",dtype:"bool"}),G_={kernelName:Mn,backendName:"webgl",kernelFunc:U_};function H_(e){const{inputs:t,backend:n}=e,{input:s}=t;return pF({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const j_={kernelName:Xn,backendName:"webgl",kernelFunc:H_},q_={kernelName:dt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return pF({inputs:{x:a},backend:s});const t=cc(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=fF({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=H_({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!be(a.dtype,i)){const e=pF({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new HD(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",fe("bool",1)),t=U_({inputs:{a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},K_="return ceil(x);",X_=IF({opSnippet:K_,packedOpSnippet:K_,cpuKernelImpl:hD}),Y_={kernelName:ft,backendName:"webgl",kernelFunc:X_};class J_{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\\n      uniform float minVal;\\n      uniform float maxVal;\\n\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isnan(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, minVal, maxVal));\\n      }\\n    "}getCustomSetupFunc(e,t){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class Z_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\\n      uniform float minVal;\\n      uniform float maxVal;\\n\\n      void main() {\\n        vec4 value = getAAtOutCoords();\\n\\n        if (any(isnan(value))) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\\n      }\\n    "}getCustomSetupFunc(e,t){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const Q_={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=Be().getBool("WEBGL_PACK_CLIP")?new Z_(r.shape):new J_(r.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[r],r.dtype,l)}};class eO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\\n      void main() {\\n        float re = abs(getRealAtOutCoords());\\n        float im = abs(getImagAtOutCoords());\\n        float mx = max(re, im);\\n\\n        // sadly the length function in glsl is not underflow-safe\\n        // (at least not on Intel GPUs). So the safe solution is\\n        // to ensure underflow-safety in all cases.\\n        setOutput(\\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\\n        );\\n      }\\n    "}}function tO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const nO={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new eO(s.shape),i=[tO(s,r.complexTensorInfos.real),tO(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class sO{constructor(e){this.outputShape=[],this.outputShape=Zp(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        ${n.join("\\n        ")}\\n      }\\n    `}}class rO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Zp(e,t);const n=this.outputShape,s=n.length,r=rD(s),a=zD("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\\n        return getChannel(\\n            getT0(${c}), vec2(${u.join()}));\\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\\n          return getChannel(\\n            getT${e}(${aO(i,l,t)}),\\n            vec2(${aO(u,l,t)}));\\n        }`}const p=o.length,d=o[o.length-1];h+=`\\n        return getChannel(\\n          getT${p}(${aO(i,l,d)}),\\n          vec2(${aO(u,l,d)}));`,this.userCode=`\\n      float getValue(${i.map((e=>"int "+e))}) {\\n        ${h}\\n      }\\n\\n      void main() {\\n        ${r} coords = getOutputCoords();\\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\\n\\n        ${a[s-1]} = ${a[s-1]} + 1;\\n        if (${a[s-1]} < ${n[s-1]}) {\\n          result.g = getValue(${a});\\n        }\\n\\n        ${a[s-2]} = ${a[s-2]} + 1;\\n        if (${a[s-2]} < ${n[s-2]}) {\\n          result.a = getValue(${a});\\n        }\\n\\n        ${a[s-1]} = ${a[s-1]} - 1;\\n        if (${a[s-2]} < ${n[s-2]} &&\\n            ${a[s-1]} < ${n[s-1]}) {\\n          result.b = getValue(${a});\\n        }\\n        setOutput(result);\\n      }\\n    `}}function aO(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function iO(e){const{inputs:t,backend:n}=e,{input:s}=t;return pF({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const oO={kernelName:rn,backendName:"webgl",kernelFunc:iO};function lO(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>H_({inputs:{input:e},backend:n}))),r=e.map((e=>iO({inputs:{input:e},backend:n}))),a=lO(s,t,n),i=lO(r,t,n),o=fF({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if("string"===s){const{tensors2D:r,outShape:a}=uO(e,t,n),i=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=1===r[0].shape[0],l=pD(i,a,s,o),u=Zp(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Be().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(e.length/2),r=lO(e.slice(0,s),t,n),a=lO(e.slice(s),t,n),i=lO([r,a],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if(Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new rO(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,s)}const{tensors2D:r,outShape:a}=uO(e,t,n),i=new sO(r.map((e=>e.shape))),o=n.runWebGLProgram(i,r,s);r.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=DF({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(o),l}function uO(e,t,n){const s=Zp(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>DF({inputs:{x:e},attrs:{shape:[-1,ne(e.shape.slice(t))]},backend:n}))),outShape:s}}function cO(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=pe(r,t[0].shape)[0],i=Zp(t.map((e=>e.shape)),a);if(0===ne(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ne(e.shape)>0));return 1===o.length?pF({inputs:{x:o[0]},backend:n}):(Jp(o.map((e=>e.shape)),a),lO(o,a,n))}const hO={kernelName:bt,backendName:"webgl",kernelFunc:cO};class pO{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=s?`float activation(float a) {\\n          float b = getPreluActivationWeightsAtOutCoords();\\n          ${n}\\n        }`:r?`float activation(float a) {\\n          float b = getLeakyreluAlphaAtOutCoords();\\n          ${n}\\n        }`:`\\n          float activation(float x) {\\n            ${n}\\n          }\\n        `,w="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\\n      ${x}\\n\\n      const ivec2 strides = ivec2(${o}, ${l});\\n      const ivec2 pads = ivec2(${a}, ${i});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d2 = coords[${b}];\\n\\n        ivec2 xRCCorner =\\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < ${h}; wR++) {\\n          int xR = xRCorner + wR * ${u};\\n\\n          if (xR < 0 || xR >= ${e.inHeight}) {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < ${p}; wC++) {\\n            int xC = xCCorner + wC * ${c};\\n\\n            if (xC < 0 || xC >= ${e.inWidth}) {\\n              continue;\\n            }\\n\\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\\n              vec4 wValues = vec4(\\n                getW(wR, wC, d1, d2),\\n                getW(wR, wC, d1 + 1, d2),\\n                getW(wR, wC, d1 + 2, d2),\\n                getW(wR, wC, d1 + 3, d2)\\n              );\\n\\n              if (${m}) {\\n                vec4 xValues = vec4(\\n                  getX(batch, xR, xC, d1),\\n                  getX(batch, xR, xC, d1 + 1),\\n                  getX(batch, xR, xC, d1 + 2),\\n                  getX(batch, xR, xC, d1 + 3)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec4 xValues = vec4(\\n                  getX(batch, d1, xR, xC),\\n                  getX(batch, d1 + 1, xR, xC),\\n                  getX(batch, d1 + 2, xR, xC),\\n                  getX(batch, d1 + 3, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n\\n            if (${1===f}) {\\n\\n              if (${m}) {\\n                dotProd +=\\n                    getX(batch, xR, xC, ${d}) *\\n                    getW(wR, wC, ${d}, d2);\\n              } else {\\n                dotProd +=\\n                    getX(batch, ${d}, xR, xC) *\\n                    getW(wR, wC, ${d}, d2);\\n              }\\n\\n            } else if (${2===f}) {\\n              vec2 wValues = vec2(\\n                getW(wR, wC, ${d}, d2),\\n                getW(wR, wC, ${d} + 1, d2)\\n              );\\n\\n              if (${m}) {\\n                vec2 xValues = vec2(\\n                  getX(batch, xR, xC, ${d}),\\n                  getX(batch, xR, xC, ${d} + 1)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec2 xValues = vec2(\\n                  getX(batch, ${d}, xR, xC),\\n                  getX(batch, ${d} + 1, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n            } else if (${3===f}) {\\n              vec3 wValues = vec3(\\n                getW(wR, wC, ${d}, d2),\\n                getW(wR, wC, ${d} + 1, d2),\\n                getW(wR, wC, ${d} + 2, d2)\\n              );\\n\\n              if (${m}) {\\n                vec3 xValues = vec3(\\n                  getX(batch, xR, xC, ${d}),\\n                  getX(batch, xR, xC, ${d} + 1),\\n                  getX(batch, xR, xC, ${d} + 2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec3 xValues = vec3(\\n                  getX(batch, ${d}, xR, xC),\\n                  getX(batch, ${d} + 1, xR, xC),\\n                  getX(batch, ${d} + 2, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n            }\\n          }\\n        }\\n\\n        float result = dotProd;\\n        ${k}\\n        ${w}\\n        setOutput(result);\\n      }\\n    `}}class dO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d2 = coords.u;\\n\\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xFCorner = xFRCCorner.x;\\n        int xRCorner = xFRCCorner.y;\\n        int xCCorner = xFRCCorner.z;\\n\\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\\n        // values in that axis.\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < ${c}; wF++) {\\n          int xF = xFCorner + wF * ${o};\\n\\n          if (xF < 0 || xF >= ${e.inDepth}) {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < ${h}; wR++) {\\n            int xR = xRCorner + wR * ${l};\\n\\n            if (xR < 0 || xR >= ${e.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < ${p}; wC++) {\\n              int xC = xCCorner + wC * ${u};\\n\\n              if (xC < 0 || xC >= ${e.inWidth}) {\\n                continue;\\n              }\\n\\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\\n                vec4 xValues = vec4(\\n                  getX(batch, xF, xR, xC, d1),\\n                  getX(batch, xF, xR, xC, d1 + 1),\\n                  getX(batch, xF, xR, xC, d1 + 2),\\n                  getX(batch, xF, xR, xC, d1 + 3)\\n                );\\n                vec4 wValues = vec4(\\n                  getW(wF, wR, wC, d1, d2),\\n                  getW(wF, wR, wC, d1 + 1, d2),\\n                  getW(wF, wR, wC, d1 + 2, d2),\\n                  getW(wF, wR, wC, d1 + 3, d2)\\n                );\\n\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n              if (${1===f}) {\\n                dotProd +=\\n                  getX(batch, xF, xR, xC, ${d}) *\\n                  getW(wF, wR, wC, ${d}, d2);\\n              } else if (${2===f}) {\\n                vec2 xValues = vec2(\\n                  getX(batch, xF, xR, xC, ${d}),\\n                  getX(batch, xF, xR, xC, ${d} + 1)\\n                );\\n                vec2 wValues = vec2(\\n                  getW(wF, wR, wC, ${d}, d2),\\n                  getW(wF, wR, wC, ${d} + 1, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else if (${3===f}) {\\n                vec3 xValues = vec3(\\n                  getX(batch, xF, xR, xC, ${d}),\\n                  getX(batch, xF, xR, xC, ${d} + 1),\\n                  getX(batch, xF, xR, xC, ${d} + 2)\\n                );\\n                vec3 wValues = vec3(\\n                  getW(wF, wR, wC, ${d}, d2),\\n                  getW(wF, wR, wC, ${d} + 1, d2),\\n                  getW(wF, wR, wC, ${d} + 2, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class fO{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:s,inChannels:r,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=r*s,m=RR(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let s=0;s<=1;s++)x+=`\\n          blockIndex = rc.y + ${s};\\n          pos = rc.x + ${n};\\n\\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\\n            offsetY = int(blockIndex / (${l})) * ${i} - ${d};\\n            d0 = offsetY + ${c} * (pos / ${f});\\n\\n            if(d0 < ${t[y]} && d0 >= 0) {\\n\\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${p}.);\\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${r}.));\\n\\n              if(d1 < ${t[b]} && d1 >= 0) {\\n\\n                ch = int(mod(float(pos), ${r}.));\\n\\n                if (${g}) {\\n                  innerDims = vec2(d1, ch);\\n                  result[${2*n+s}] = getChannel(\\n                    getA(d0, int(innerDims.x),\\n                    int(innerDims.y)), innerDims);\\n                } else {\\n                  innerDims = vec2(d0, d1);\\n                  result[${2*n+s}] = getChannel(\\n                    getA(ch, int(innerDims.x),\\n                    int(innerDims.y)), innerDims);\\n                }\\n              }\\n            }\\n          }\\n        `;this.userCode=`\\n      void main() {\\n        ivec2 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0);\\n\\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\\n        vec2 innerDims;\\n\\n        ${x}\\n\\n        ${m.output} = result;\\n      }\\n    `}}function mO({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===p)&&c>GF,y=l[2]%2!=0&&!!u.isPacked;if(!g&&Be().getBool("WEBGL_LAZILY_UNPACK")&&Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=d?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,Z(IR(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn\'t free`));const g=DF({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const y=HF({a:h,b:g,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=s.texData.get(y.dataId);Z(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,b.shape=n.outShape,f=pF({inputs:{x:y},backend:s}),f.shape=n.outShape,m.push(y)}else{const u=DF({inputs:{x:e},backend:s,attrs:{shape:[1,d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=DF({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=HF({a:u,b:c,transposeA:!1,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=DF({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)s.disposeIntermediateTensorInfo(e);return f}function gO({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[m,g],b=[],x=DF({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),w=DF({inputs:{x:t},backend:s,attrs:{shape:[1,m,ne(t.shape)/m]}});b.push(x),b.push(w);const k=new fO(y,x.shape,n),v=s.runWebGLProgram(k,[x],"float32"),I=DF({inputs:{x:v},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(v),b.push(I);const N=null!=r,S=null!=a,C="leakyrelu"===o,$=o?SF(o,!0):null,T=new CF(I.shape,w.shape,[1,g,n.outChannels],!0,!1,N,$,S,C),E=[I,w];if(r&&E.push(r),S&&E.push(a),C){const e=s.makeTensorInfo([],"float32",ur(i,"float32"));E.push(e),b.push(e)}const A=s.runWebGLProgram(T,E,"float32"),R=DF({inputs:{x:A},backend:s,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push(A);for(const e of b)s.disposeIntermediateTensorInfo(e);return R}const yO={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Nl(l),p=ml(r.shape,a.shape,i,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Be().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])d=gO({x:r,filter:a,convInfo:p,backend:n});else{const e=new pO(p);d=n.runWebGLProgram(e,[r,a],"float32")}else d=mO({x:r,filter:a,convInfo:p,backend:n});const f=DF({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class bO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < ${e.batchSize}; b++) {\\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\\n            int xR = wR + yR * ${t} - ${s};\\n\\n            if (xR < 0 || xR >= ${e.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\\n              int xC = wC + yC * ${n} - ${r};\\n\\n              if (xC < 0 || xC >= ${e.inWidth}) {\\n                continue;\\n              }\\n\\n              if (${a}) {\\n                float dyValue = getDy(b, yR, yC, d2);\\n                float xValue = getX(b, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              } else {\\n                float dyValue = getDy(b, d2, yR, yC);\\n                float xValue = getX(b, d1, xR, xC);\\n                dotProd += (xValue * dyValue);\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class xO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\\n      const ivec2 pads = ivec2(${i}, ${o});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[${c}];\\n\\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < ${t}; wR++) {\\n          float dyR = float(dyRCorner + wR) / ${s}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = ${t} - 1 - wR;\\n\\n          for (int wC = 0; wC < ${n}; wC++) {\\n            float dyC = float(dyCCorner + wC) / ${r}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = ${n} - 1 - wC;\\n\\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\\n\\n              if (${a}) {\\n                float xValue = getDy(batch, idyR, idyC, d2);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              } else {\\n                float xValue = getDy(batch, d2, idyR, idyC);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class wO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int wF = coords.x;\\n        int wR = coords.y;\\n        int wC = coords.z;\\n        int d1 = coords.w;\\n        int d2 = coords.u;\\n\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < ${e.batchSize}; b++) {\\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\\n            int xF = wF + yF * ${t} - ${r};\\n\\n            if (xF < 0 || xF >= ${e.inDepth}) {\\n              continue;\\n            }\\n\\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\\n              int xR = wR + yR * ${n} - ${a};\\n\\n              if (xR < 0 || xR >= ${e.inHeight}) {\\n                continue;\\n              }\\n\\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\\n                int xC = wC + yC * ${s} - ${i};\\n\\n                if (xC < 0 || xC >= ${e.inWidth}) {\\n                  continue;\\n                }\\n\\n                float dyValue = getDy(b, yF, yR, yC, d2);\\n                float xValue = getX(b, xF, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class kO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.u;\\n\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyFCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < ${t}; wF++) {\\n          float dyF = float(dyFCorner + wF) / ${r}.0;\\n\\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\\n            continue;\\n          }\\n          int idyF = int(dyF);\\n\\n          int wFPerm = ${t} - 1 - wF;\\n\\n          for (int wR = 0; wR < ${n}; wR++) {\\n            float dyR = float(dyRCorner + wR) / ${a}.0;\\n\\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\\n              fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            int wRPerm = ${n} - 1 - wR;\\n\\n            for (int wC = 0; wC < ${s}; wC++) {\\n              float dyC = float(dyCCorner + wC) / ${i}.0;\\n\\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              int wCPerm = ${s} - 1 - wC;\\n\\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}const vO={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Nl(l),p=ml(r.shape,c,i,1,o,u,!1,h),d=new bO(p);return n.runWebGLProgram(d,[r,a],"float32")}},IO={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Nl(u),p=ml(i,a.shape,o,1,l,c,!1,h),d=new xO(p);return n.runWebGLProgram(d,[r,a],"float32")}},NO={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=gl(r.shape,a.shape,i,l,o),c=new dO(u);return n.runWebGLProgram(c,[r,a],"float32")}},SO={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s,u=gl(r.shape,l,i,1,o),c=new wO(u);return n.runWebGLProgram(c,[r,a],"float32")}},CO={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s,u=gl(l,a.shape,o,1,i),c=new kO(u);return n.runWebGLProgram(c,[r,a],"float32")}},$O=IF({opSnippet:vF+"\\n  return cos(x);\\n"}),TO={kernelName:St,backendName:"webgl",kernelFunc:$O},EO=IF({opSnippet:"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n"}),AO={kernelName:Ct,backendName:"webgl",kernelFunc:EO};class RO{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===s?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\\n      const float height_ratio = float(${m});\\n      const float width_ratio = float(${b});\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int y = coords[1];\\n        int x = coords[2];\\n        int d = coords[3];\\n\\n        // get box vals\\n        float y1 = getBoxes(b,0);\\n        float x1 = getBoxes(b,1);\\n        float y2 = getBoxes(b,2);\\n        float x2 = getBoxes(b,3);\\n\\n        // get image in batch index\\n        int bInd = round(getBoxInd(b));\\n        if(bInd < 0 || bInd >= ${a}) {\\n          return;\\n        }\\n\\n        float height_scale = ${g};\\n        float width_scale = ${x};\\n\\n        float in_y = ${y};\\n        if( in_y < 0.0 || in_y > ${d} ) {\\n          setOutput(float(${r}));\\n          return;\\n        }\\n        float in_x = ${w};\\n        if( in_x < 0.0 || in_x > ${f} ) {\\n          setOutput(float(${r}));\\n          return;\\n        }\\n\\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\\n        if(${p} == 1) {\\n          // Compute the four integer indices.\\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\\n\\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\\n\\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\\n\\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\\n          float newValue = top + (bottom - top) * fracCR.y;\\n          setOutput(newValue);\\n        } else {\\n          // Compute the coordinators of nearest neighbor point.\\n          ivec2 sourceNearestCR = ivec2(floor(\\n            sourceFracIndexCR + vec2(0.5,0.5)));\\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\\n          setOutput(newValue);\\n        }\\n      }\\n    `}}const DO={kernelName:Tt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new RO(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};class FO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const s=e.length,r=t?"0.0":`getX(${_O(s,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\\n      uniform float index;\\n      void main() {\\n        ${rD(s)} coords = getOutputCoords();\\n        int end = ${OO(s,"coords")};\\n        float val = ${r};\\n        int pow2 = int(pow(2.0, index));\\n        if (${i}) {\\n          int idx = ${o};\\n          ${OO(s,"coords")} = idx;\\n          val += getX(${_O(s,"coords")});\\n        }\\n        setOutput(val);\\n      }\\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function _O(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function OO(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const MO={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,l=r.shape.length,u=Gu([a],l);let c=r;null!=u&&(c=VF({inputs:{x:r},backend:n,attrs:{perm:u}}));const h=ju(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);const p=c.shape[h];let d=pF({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new FO(c.shape,!1,o),s=t.getCustomSetupFunc(e),r=d;d=n.runWebGLProgram(t,[d],d.dtype,s),n.disposeIntermediateTensorInfo(r)}if(i){const e=new FO(c.shape,i,o),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=VF({inputs:{x:d},backend:n,attrs:{perm:Hu(u)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}},LO={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=uD(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=cD(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class zO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\\n    void main() {\\n      ivec4 coords = getOutputCoords();\\n      int b = coords[0];\\n      int h = ${this.getHeightCoordString()};\\n      int w = ${this.getWidthCoordString()};\\n      int d = ${this.getDepthCoordString()};\\n\\n      int in_h = h / ${t};\\n      int offset_h = imod(h, ${t});\\n      int in_w = w / ${t};\\n      int offset_w = imod(w, ${t});\\n      int offset_d = (offset_h * ${t} + offset_w) *\\n        ${this.getOutputDepthSize()};\\n      int in_d = d + offset_d;\\n\\n      float result = ${this.getInputSamplingString()};\\n      setOutput(result);\\n    }\\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const PO={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;Z(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=r.shape[0],l="NHWC"===i?r.shape[1]:r.shape[2],u="NHWC"===i?r.shape[2]:r.shape[3],c="NHWC"===i?r.shape[3]:r.shape[1],h=l*a,p=u*a,d=c/(a*a),f=new zO("NHWC"===i?[o,h,p,d]:[o,d,h,p],a,i);return n.runWebGLProgram(f,[r],r.dtype)}};class BO{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=s?`float activation(float a) {\\n          float b = getPreluActivationWeightsAtOutCoords();\\n          ${n}\\n        }`:r?`float activation(float a) {\\n          float b = getLeakyreluAlphaAtOutCoords();\\n          ${n}\\n        }`:`\\n          float activation(float x) {\\n            ${n}\\n          }\\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\\n      ${g}\\n\\n      const ivec2 strides = ivec2(${u}, ${c});\\n      const ivec2 pads = ivec2(${o}, ${l});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / ${m};\\n        int q = d2 - d1 * ${m};\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < ${d}; wR++) {\\n          int xR = xRCorner + wR * ${h};\\n\\n          if (xR < 0 || xR >= ${a}) {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < ${f}; wC++) {\\n            int xC = xCCorner + wC * ${p};\\n\\n            if (xC < 0 || xC >= ${i}) {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n\\n        float result = dotProd;\\n        ${b}\\n        ${y}\\n        setOutput(result);\\n      }\\n    `}}class WO{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let e=0;e<d;e++)for(let t=0;t<f;t++)g+=`\\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\\n          vec4 wR${e}C${t} = vec4(0.);\\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<d;e++)for(let t=0;t<m;t++){const n=2*t;if(g+=`\\n          xR = xRCorner + ${e*h};\\n          xC = xCCorner + ${n*p};\\n        `,1===c){if(n<f&&(g+=l%2==1?`\\n                xCOffset = xC + 1;\\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\\n\\n                  // Need to manually clear unused channels in case\\n                  // we\'re reading from recycled texture.\\n                  if(xCOffset + 1 >= ${i}) {\\n                    xTexelR${e}C${n}.zw = vec2(0.);\\n                  }\\n                } else {\\n                  xTexelR${e}C${n} = vec4(0.);\\n                }\\n\\n                xCOffset = xC + 1 - 2;\\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\\n\\n                  // Need to manually clear unused channels in case\\n                  // we\'re reading from recycled texture.\\n                  if(xCOffset + 1 >= ${i}) {\\n                    previous.zw = vec2(0.);\\n                  }\\n\\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\\n                } else {\\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\\n                }\\n              `:`\\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\\n                } else {\\n                  xTexelR${e}C${n} = vec4(0.);\\n                }\\n\\n                xR${e}C${n} = xTexelR${e}C${n};\\n              `,n+1<f)){const t=l%2==0?K(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(g+=`\\n                  xCOffset = xC + ${l%2} + ${t};\\n\\n                  if(xR >= 0 && xR < ${a} &&\\n                    xCOffset >= 0 && xCOffset < ${i}) {\\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\\n                  }\\n                `,p>1&&(g+=`\\n                    xCOffset -= 2;\\n                    if(xR >= 0 && xR < ${a} &&\\n                      xCOffset >= 0 && xCOffset < ${i}) {\\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\\n                    } else {\\n                      xTexelR${e}C${n} = vec4(0.);\\n                    }\\n                  `),g+=`\\n                  xR${e}C${n+1} = vec4(\\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\\n                `):g+=`\\n                  xCOffset = xC + ${t};\\n\\n                  if(xR >= 0 && xR < ${a} &&\\n                    xCOffset >= 0 && xCOffset < ${i}) {\\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\\n                  }\\n\\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\\n                `}}else n<f&&(g+=`\\n              if(xR >= 0 && xR < ${a}) {\\n            `,l%2==1?(g+=`\\n                xCOffset = xC + 1 - ${c};\\n                if(xCOffset >= 0 && xCOffset < ${i}) {\\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR${e}C${n} = vec4(0.);\\n                }\\n\\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\\n                } else {\\n                  xTexelR${e}C${n+2} = vec4(0.);\\n                }\\n\\n                xR${e}C${n} = vec4(\\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\\n              `,n+1<f&&(g+=`\\n                  vec4 final = vec4(0.);\\n                  xCOffset = xC + 1 + ${c};\\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\\n                    final = getX(batch, xR, xCOffset, d1);\\n                  }\\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\\n                `)):(g+=`\\n                if(xC >= 0 && xC < ${i}) {\\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\\n                } else {\\n                  xTexelR${e}C${n} = vec4(0.);\\n                }\\n\\n                xCOffset = xC + ${c};\\n                if(xCOffset >= 0 && xCOffset < ${i}) {\\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR${e}C${n+2} = vec4(0.);\\n                }\\n\\n                xR${e}C${n} = vec4(\\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\\n              `,n+1<f&&(g+=`\\n                  xR${e}C${n+1} = vec4(\\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\\n                `)),g+="}");n<f&&(g+=`\\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\\n          `,n+1<f&&(g+=`\\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\\n              wR${e}C${n+1} =\\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<d;e++)for(let t=0;t<f;t++)g+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let y="",b="";n&&(y=s?`vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          ${n}\\n        }`:r?`vec4 activation(vec4 a) {\\n          vec4 b = getLeakyreluAlphaAtOutCoords();\\n          ${n}\\n        }`:`vec4 activation(vec4 x) {\\n          ${n}\\n        }`,b="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\\n      ${y}\\n\\n      const ivec2 strides = ivec2(${u}, ${c});\\n      const ivec2 pads = ivec2(${o}, ${l});\\n\\n      void main() {\\n\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2;\\n        int q = 0;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        vec4 dotProd = vec4(0.);\\n\\n        ${g}\\n\\n        vec4 result = dotProd;\\n        ${x}\\n        ${b}\\n        setOutput(result);\\n      }\\n    `}}const VO={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),Z(Il(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations \'${c}\'`));const h=ml(r.shape,a.shape,i,c,o,u,!0);let p;return p=Be().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new WO(h):new BO(h),n.runWebGLProgram(p,[r,a],"float32")}};class UO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int dm = coords.w;\\n        int d2 = d1 * ${a} + dm;\\n\\n        float dotProd = 0.0;\\n\\n        // TO DO: Vec4 over the batch size\\n        for (int b = 0; b < ${e.batchSize}; b++) {\\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\\n            int xR = wR + yR * ${t} - ${s};\\n\\n            if (xR < 0 || xR >= ${e.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\\n              int xC = wC + yC * ${n} - ${r};\\n\\n              if (xC < 0 || xC >= ${e.inWidth}) {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class GO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\\n      const ivec2 pads = ivec2(${a}, ${i});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        float dotProd = 0.0;\\n\\n        for (int wR = 0; wR < ${t}; wR++) {\\n          float dyR = float(dyRCorner + wR) / ${s}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = ${t} - 1 - wR;\\n\\n          for (int wC = 0; wC < ${n}; wC++) {\\n            float dyC = float(dyCCorner + wC) / ${r}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = ${n} - 1 - wC;\\n\\n            // TO DO: Vec4 over the channelMul\\n            for (int dm = 0; dm < ${o}; dm++) {\\n              int d2 = d1 * ${o} + dm;\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}const HO={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=ml(r.shape,c,i,o,l,u,!0),p=new UO(h);return n.runWebGLProgram(p,[r,a],"float32")}},jO={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=ml(c,a.shape,i,o,l,u,!0),p=new GO(h);return n.runWebGLProgram(p,[r,a],"float32")}};class qO{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\\n      void main() {\\n          ivec2 coords = getOutputCoords();\\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\\n          setOutput(val);\\n      }\\n    "}}const KO={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=ne(s.shape),i=DF({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new qO(a),l=n.runWebGLProgram(o,[i],i.dtype),u=DF({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class XO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\\n      const ivec2 strides = ivec2(${r}, ${a});\\n      const ivec2 pads = ivec2(${c}, ${h});\\n      const float neg_infinity = -3.4e38;\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.w;\\n        ivec2 outTopLeftCorner =\\n            coords.yz * strides - pads;\\n        int hBeg = outTopLeftCorner.x;\\n        int wBeg = outTopLeftCorner.y;\\n\\n        float curVal = neg_infinity;\\n        for (int h = 0; h < ${i}; h++) {\\n          int hIn = hBeg + h * ${l};\\n\\n          if (hIn >= 0 && hIn < ${t}) {\\n            for (int w = 0; w < ${o}; w++) {\\n              int wIn = wBeg + w * ${u};\\n\\n              if (wIn >= 0 && wIn < ${n}) {\\n                float xVal = getX(batch, hIn, wIn, d1);\\n                float wVal = getW(h, w, d1);\\n\\n                float val = xVal + wVal;\\n                if (val > curVal) {\\n                  curVal = val;\\n                }\\n              }\\n            }\\n          }\\n        }\\n\\n        float result = curVal;\\n        setOutput(result);\\n      }\\n    `}}const YO={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=pl(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new XO(u);c=n.runWebGLProgram(h,[r,a],"float32");const p=DF({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},JO=IF({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\\n  vec4 result;\\n\\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\\n\\n  return result;\\n"}),ZO={kernelName:Pt,backendName:"webgl",kernelFunc:JO},QO={kernelName:Bt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=Be().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hF("\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\n",s.shape,r.shape):new uF("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},eM=NF({opSnippet:"return float(a == b);",packedOpSnippet:"\\n  return vec4(equal(a, b));\\n",dtype:"bool"}),tM={kernelName:Vt,backendName:"webgl",kernelFunc:eM},nM=IF({opSnippet:`\\n  // Error function is calculated approximately with elementary function.\\n  // See "Handbook of Mathematical Functions with Formulas,\\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\\n  float p = ${ud};\\n  float a1 = ${cd};\\n  float a2 = ${hd};\\n  float a3 = ${pd};\\n  float a4 = ${dd};\\n  float a5 = ${fd};\\n\\n  float sign = sign(x);\\n  x = abs(x);\\n  float t = 1.0 / (1.0 + p * x);\\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\\n`}),sM={kernelName:Wt,backendName:"webgl",kernelFunc:nM},rM="return exp(x);",aM=IF({opSnippet:rM,packedOpSnippet:rM,cpuKernelImpl:dD}),iM={kernelName:Ut,backendName:"webgl",kernelFunc:aM};function oM(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(Z(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),DF({inputs:{x:a},backend:s,attrs:{shape:o}})}const lM={kernelName:Gt,backendName:"webgl",kernelFunc:oM},uM="return exp(x) - 1.0;",cM=IF({opSnippet:uM,packedOpSnippet:uM,cpuKernelImpl:fD}),hM={kernelName:Ht,backendName:"webgl",kernelFunc:cM};class pM{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\\n      const float exponentMultiplier = ${r};\\n\\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\\n        ${i}\\n      }\\n\\n      float mulMatDFT(int batch, int index) {\\n        float indexRatio = float(index) / float(${s});\\n        float exponentMultiplierTimesIndexRatio =\\n            exponentMultiplier * indexRatio;\\n\\n        float result = 0.0;\\n\\n        for (int i = 0; i < ${s}; i++) {\\n          // x = (-2|2 * PI / N) * index * i;\\n          float x = exponentMultiplierTimesIndexRatio * float(i);\\n          float expR = cos(x);\\n          float expI = sin(x);\\n          float real = getReal(batch, i);\\n          float imag = getImag(batch, i);\\n\\n          result +=\\n              unaryOpComplex(real, expR, imag, expI) / ${a};\\n        }\\n\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        setOutput(mulMatDFT(coords[0], coords[1]));\\n      }\\n    `}}function dM(e,t,n){const s=n.texData.get(e.dataId),r=ne(e.shape),a=e.shape[e.shape.length-1],i=DF({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new pM("real",o,t),u=new pM("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=fF({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=DF({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const fM={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return dM(s,!1,n)}};class mM{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\\n      uniform float value;\\n      void main() {\\n        // Input can be obtained from uniform value.\\n        setOutput(value);\\n      }\\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function gM(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||Se(r),"string"===a){const e=me(a,ne(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new mM(s,r),n=e.getCustomSetupFunc(r);return t.runWebGLProgram(e,[],a,n)}}const yM={kernelName:qt,backendName:"webgl",kernelFunc:gM};class bM{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int x = coords[2];\\n\\n          int coordX = ${t} - x;\\n          float outputValue;\\n          if(coordX >= 0 && coordX < ${t}) {\\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\\n          } else {\\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\\n          }\\n          setOutput(outputValue);\\n        }\\n    `}}const xM={kernelName:Kt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new bM(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},wM="return floor(x);",kM=IF({opSnippet:wM,packedOpSnippet:wM,cpuKernelImpl:mD}),vM={kernelName:Xt,backendName:"webgl",kernelFunc:kM},IM=NF({opSnippet:"\\n  float s = sign(a) * sign(b);\\n  int ia = round(a);\\n  int ib = round(b);\\n  if (ib != 0) {\\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n    return float(idiv(ia, ib, s));\\n  } else {\\n    return NAN;\\n  }\\n",packedOpSnippet:"\\n  ivec4 ia = round(a);\\n  ivec4 ib = round(b);\\n  bvec4 cond = notEqual(ib, ivec4(0));\\n  ivec4 result = ivec4(0);\\n  vec4 s = sign(a) * sign(b);\\n\\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n  if (cond[0]) {\\n    result[0] = idiv(ia[0], ib[0], s[0]);\\n  }\\n  if (cond[1]) {\\n    result[1] = idiv(ia[1], ib[1], s[1]);\\n  }\\n  if (cond[2]) {\\n    result[2] = idiv(ia[2], ib[2], s[2]);\\n  }\\n  if (cond[3]) {\\n    result[3] = idiv(ia[3], ib[3], s[3]);\\n  }\\n  return vec4(result);\\n",dtype:"int32"}),NM={kernelName:Yt,backendName:"webgl",kernelFunc:IM};class SM{constructor(e){this.variableNames=["A"];const t=RR(),[n,s]=e;this.outputShape=e,this.userCode=`\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\\n\\n        vec4 values = ${t.texture2D}(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    `}}class CM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=RR(),[n,s]=e;this.outputShape=e,this.userCode=`\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n\\n        vec4 result = vec4(0.);\\n\\n        for(int row=0; row<=1; row++) {\\n          for(int col=0; col<=1; col++) {\\n            texC = coords[1] + row;\\n            depth = coords[2] + col;\\n\\n            vec2 uv = (vec2(texC, texR) + halfCR) /\\n                       vec2(${s}.0, ${n}.0);\\n            vec4 values = ${t.texture2D}(A, uv);\\n            float value;\\n            if (depth == 0) {\\n              value = values.r;\\n            } else if (depth == 1) {\\n              value = values.g;\\n            } else if (depth == 2) {\\n              value = values.b;\\n            } else if (depth == 3) {\\n              value = values.a;\\n            }\\n\\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\\n          }\\n        }\\n\\n        ${t.output} = result;\\n      }\\n    `}}const $M={kernelName:Ms,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,l="undefined"!=typeof ImageBitmap&&r instanceof ImageBitmap,[u,c]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[c,u],p=[c,u,a];(o||i||l)&&(null==TM&&(TM=document.createElement("canvas").getContext("2d")),TM.canvas.width=u,TM.canvas.height=c,TM.drawImage(r,0,0,u,c),r=TM.canvas);const d=n.makeTensorInfo(h,"int32");n.texData.get(d.dataId).usage=eR.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const f=Be().getBool("WEBGL_PACK")?new CM(p):new SM(p),m=n.runWebGLProgram(f,[d],"int32");return n.disposeData(d.dataId),m}};let TM;const EM={kernelName:Ps,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=Nl(c),g=ml(r.shape,a.shape,l,h,u,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Be().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=gO({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,s="leakyrelu"===d,l=d?SF(d,!1):null,u=new pO(g,e,l,t,s),c=[r,a];if(i&&c.push(i),o&&c.push(o),s){const e=n.makeTensorInfo([],"float32",ur(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(u,c,"float32")}else y=mO({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=DF({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},AM={kernelName:Bs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=s,f=[];let m=c;null==m&&(m=[1,1]),Z(Il(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations \'${m}\'`));const g=ml(r.shape,a.shape,l,m,u,h,!0),y=Be().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?SF(p,y):null,x=[r,a],w=null!=i,k=null!=o,v="leakyrelu"===p;if(w&&x.push(i),k&&x.push(o),v){const e=n.makeTensorInfo([],"float32",ur(d,"float32"));x.push(e),f.push(e)}let I;I=y?new WO(g,w,b,k,v):new BO(g,w,b,k,v);const N=n.runWebGLProgram(I,x,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class RM{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const s=rD(t.length),r=rD(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\\n        ${s} strides = ${s}(${this.strides});\\n         void main() {\\n          ${r} coords = getOutputCoords();\\n          int flattenIndex = 0;\\n          for (int j = 0; j < ${this.sliceDim}; j++) {\\n            int index = round(getIndices(coords[0], j));\\n            flattenIndex += index * ${a};\\n          }\\n          setOutput(getX(flattenIndex, coords[1]));\\n        }\\n      `}}const DM={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],[o,l,u,c]=xi(s,r),h=DF({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),p=DF({inputs:{x:s},backend:n,attrs:{shape:[ne(s.shape)/u,u]}}),d=new RM(i,c,[l,u]),f=n.runWebGLProgram(d,[p,h],p.dtype),m=DF({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};class FM{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=rD(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\\n      void main() {\\n        ${n} resRC = getOutputCoords();\\n        setOutput(getA(${s}));\\n      }\\n    `}}const _M={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,l=Td(r,a,pe(i,r.shape)[0],o),u=ne(a.shape),c=[],h=DF({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=DF({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(p);const d=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),s=gD(t,e,d);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,s.dtype,s.values)}const f=new FM(h.shape,d),m=n.runWebGLProgram(f,[h,p],h.dtype);c.push(m);const g=DF({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},OM=NF({opSnippet:"return float(a > b);",packedOpSnippet:"\\n  return vec4(greaterThan(a, b));\\n",cpuKernelImpl:yD,dtype:"bool"}),MM={kernelName:en,backendName:"webgl",kernelFunc:OM},LM=NF({opSnippet:"return float(a >= b);",packedOpSnippet:"\\n  return vec4(greaterThanEqual(a, b));\\n",dtype:"bool"}),zM={kernelName:tn,backendName:"webgl",kernelFunc:LM},PM={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return dM(s,!0,n)}},BM=IF({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),WM={kernelName:an,backendName:"webgl",kernelFunc:BM},VM=IF({opSnippet:"return float(isinf(x));",dtype:"bool"}),UM={kernelName:on,backendName:"webgl",kernelFunc:VM},GM=IF({opSnippet:"return float(isnan(x));",dtype:"bool"}),HM={kernelName:ln,backendName:"webgl",kernelFunc:GM},jM=NF({opSnippet:"return float(a < b);",packedOpSnippet:"\\n  return vec4(lessThan(a, b));\\n",cpuKernelImpl:bD,dtype:"bool"}),qM={kernelName:cn,backendName:"webgl",kernelFunc:jM},KM=NF({opSnippet:"return float(a <= b);",packedOpSnippet:"\\n  return vec4(lessThanEqual(a, b));\\n",dtype:"bool"}),XM={kernelName:hn,backendName:"webgl",kernelFunc:KM},YM={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=xD(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},JM=IF({opSnippet:"if (x < 0.0) return NAN;\\n  return log(x);",packedOpSnippet:"\\n  vec4 result = log(x);\\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\\n\\n  return result;\\n",cpuKernelImpl:wD}),ZM={kernelName:dn,backendName:"webgl",kernelFunc:JM},QM=IF({opSnippet:"return log(1.0 + x);"}),eL={kernelName:fn,backendName:"webgl",kernelFunc:QM},tL=NF({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\\n  return vec4(\\n    vec4(greaterThanEqual(a, vec4(1.0))) *\\n    vec4(greaterThanEqual(b, vec4(1.0))));\\n",dtype:"bool"}),nL={kernelName:mn,backendName:"webgl",kernelFunc:tL},sL=IF({opSnippet:"return float(!(x >= 1.0));"}),rL={kernelName:gn,backendName:"webgl",kernelFunc:sL},aL=NF({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\\n  return min(\\n    vec4(greaterThanEqual(a, vec4(1.0))) +\\n    vec4(greaterThanEqual(b, vec4(1.0))),\\n    vec4(1.0));\\n",dtype:"bool"}),iL={kernelName:yn,backendName:"webgl",kernelFunc:aL};class oL{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n        int d = coords[3];\\n        float x = getX(b, r, c, d);\\n        float sum = 0.0;\\n        for (int j = -${a}; j <= ${a}; j++) {\\n          int idx = d + j;\\n          if (idx >= 0 && idx <=  ${i}) {\\n            float z = getX(b, r, c, idx);\\n            sum += z * z;\\n          }\\n        }\\n        float val = x * ${o};\\n        setOutput(val);\\n      }\\n    `}}class lL{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords.x;\\n        int r = coords.y;\\n        int c = coords.z;\\n        int d = coords.w;\\n\\n        bool hasNextCol = d < ${this.outputShape[3]};\\n        bool hasNextRow = c < ${this.outputShape[2]};\\n\\n        vec4 sum = vec4(0.);\\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\\n\\n        vec4 xAtOutputCoords = vec4(\\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\\n          hasNextCol ?\\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\\n          hasNextRow ?\\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\\n        );\\n\\n        int firstChannel = d - ${a};\\n        vec2 cache = vec2(0.);\\n        if(firstChannel >= 0){\\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\\n            if(hasNextRow){\\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\\n            }\\n        }\\n\\n        ivec2 depth = ivec2(d, d + 1);\\n        for (int j = - ${a}; j <= ${a}; j++) {\\n          ivec2 idx = depth + j;\\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\\n\\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\\n\\n          if(depthInRange || depthPlusOneInRange){\\n            vec4 z = vec4(0.);\\n            vec4 xFragAtCurrentDepth;\\n            z.xz = cache.xy;\\n            if(depthPlusOneInRange && hasNextCol){\\n              xFragAtCurrentDepth = idx.y != d ?\\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\\n              if(hasNextRow){\\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\\n              }\\n            }\\n            cache.xy = z.yw;\\n            sum += z * z;\\n          }\\n        }\\n        vec4 result = xAtOutputCoords * ${o};\\n        setOutput(result);\\n      }\\n    `}}const uL={kernelName:xn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=Be().getBool("WEBGL_PACK_NORMALIZATION")?new lL(r.shape,a,i,o,l):new oL(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class cL{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float result = 0.0;\\n        for (int d = 0; d < ${this.depth}; ++d) {\\n          int depthBegin = int(max(0.0, float(d - ${t})));\\n          int depthEnd = int(min(float(${this.depth}),\\n              float(d + ${t} + 1)));\\n\\n          const int MIN_DEPTH_BEGIN = 0;\\n          const int MAX_DEPTH_END = ${this.depth};\\n\\n          float norm = 0.0;\\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd) {\\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n\\n          norm = float(${s}) * norm + float(${n});\\n\\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd){\\n              float dyi = -2.0 * float(${s})\\n                * float(${r})\\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\\n                / norm;\\n              if (k == d) {\\n                dyi += pow(norm, -1.0 * ${r});\\n              }\\n              if (k == coords[3]) {\\n                dyi *= getDy(b, r, c, d);\\n                result += dyi;\\n              }\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n      }\\n      setOutput(result);\\n      }\\n    `}}const hL={kernelName:wn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new cL(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function pL(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=pe(a,r.shape);let u=l;const c=Gu(u,o),h=null!=c,p=n.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=OD(e,r.shape,r.dtype,c,t);d=n.makeTensorInfo(t,r.dtype),n.texData.get(d.dataId).values=s}else d=PF(r,c,n);u=ju(u.length,o)}Uu("max",u,o);const[f,m]=Wu(d.shape,u);let g,y=f;if(i&&(y=Vu(f,l)),p){const e=n.texData.get(d.dataId).values,t=kD(e,ne(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,s){const r=ne(t),a=DF({inputs:{x:e},attrs:{shape:[ne(e.shape)/r,r]},backend:s}),i=MF(a,e.dtype,"max",s),o=DF({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const dL={kernelName:kn,backendName:"webgl",kernelFunc:pL},fL=NF({opSnippet:lF+"\\n  return max(a, b);\\n",packedOpSnippet:"\\n  vec4 result = vec4(max(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  "+cF+"\\n  return result;\\n",cpuKernelImpl:vD}),mL={kernelName:vn,backendName:"webgl",kernelFunc:fL},gL={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;ER(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;Z(Il(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations \'1\'`));const u=dl(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&re(u.inShape,u.outShape))return pF({inputs:{x:r},backend:n});const c=new N_(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},yL={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=fl(r.shape,a,i,[1,1,1],o,u,l),h=new S_(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class bL{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\\n      const ivec2 pads = ivec2(${i}, ${o});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < ${r};\\n          wR += ${s}) {\\n          float dyR = float(dyRCorner + wR) / ${t}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < ${a}; wC++) {\\n            float dyC = float(dyCCorner + wC) / ${n}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\\n\\n            // Get the current value, check it against the value from the\\n            // position matrix.\\n            int curPosValue = wR * ${a} + wC;\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n            dotProd += dyValue * mask;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class xL{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=o*l*u-1;this.userCode=`\\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < ${o};\\n           wD += ${r}) {\\n          float dyD = float(dyDCorner + wD) / ${t}.0;\\n\\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < ${l};\\n              wR += ${a}) {\\n            float dyR = float(dyRCorner + wR) / ${n}.0;\\n\\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < ${u};\\n                wC += ${i}) {\\n              float dyC = float(dyCCorner + wC) / ${s}.0;\\n\\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n              int maxPosValue = ${d} -\\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\\n\\n              // Get the current value, check it against the value from the\\n              // position matrix.\\n              int curPosValue =\\n                  wD * ${l} * ${u} +\\n                  wR * ${u} + wC;\\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n              dotProd += dyValue * mask;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}const wL={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=fl(i.shape,o,l,[1,1,1],u,c),p=new S_(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new xL(h),m=n.runWebGLProgram(f,[r,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},kL={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;ER([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=dl(o.shape,l,u,1,c,h),d=new N_(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new bL(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},vL={kernelName:$n,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;Z(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];Z(Il(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations \'${u}\'`));const c=dl(s.shape,r,a,u,i),[h,p]=function(e,t,n,s){let r=new N_(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new N_(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,l);return[h,p]}},IL={kernelName:Tn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,l=pe(a,s.shape);let u=l;const c=Gu(u,o),h=null!=c,p=i.shouldExecuteOnCPU([s]),d=[];let f=s;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=OD(e,s.shape,s.dtype,c,t);f=i.makeTensorInfo(t,s.dtype),i.texData.get(f.dataId).values=n}else f=PF(s,c,i);d.push(f),u=ju(u.length,o)}Uu("sum",u,o);const[m,g]=Wu(f.shape,u);let y=m;r&&(y=Vu(m,l));const b=function(e,t,n,s){const r=ne(t),a=DF({inputs:{x:e},attrs:{shape:[ne(e.shape)/r,r]},backend:s}),i=MF(a,"float32","mean",s),o=DF({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},NL={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=pe(a,r.shape);let u=l;const c=Gu(u,o);let h=r;null!=c&&(h=VF({inputs:{x:r},backend:n,attrs:{perm:c}}),u=ju(u.length,r.shape.length)),Uu("min",u,o);const[p,d]=Wu(h.shape,u),f=DF({inputs:{x:h},backend:n,attrs:{shape:[-1,ne(d)]}}),m=MF(f,f.dtype,"min",n);let g;return g=DF(i?{inputs:{x:m},backend:n,attrs:{shape:Vu(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},SL=NF({opSnippet:lF+"\\n  return min(a, b);\\n",packedOpSnippet:"\\n  vec4 result = vec4(min(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  "+cF+"\\n  return result;\\n",cpuKernelImpl:ID}),CL={kernelName:An,backendName:"webgl",kernelFunc:SL};class $L{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=rD(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\\n      ${r} start = ${r}(${a});\\n      ${r} end = ${r}(${i});\\n\\n      void main() {\\n        ${r} outC = getOutputCoords();\\n        for (int i = 0; i < ${s}; i++) {\\n          if (outC[i] < start[i]) {\\n            outC[i] = start[i] * 2 - outC[i] - ${l};\\n          } else if(outC[i] >= end[i]) {\\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\\n          }\\n        }\\n        ${r} coords = outC - start;\\n        setOutput(getX(${o}));\\n      }\\n    `:`\\n        int start = ${a};\\n        int end = ${i};\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start) {\\n            outC = start * 2 - outC - ${l};\\n          } else if(outC >= end) {\\n            outC = (end - 1) * 2 - outC + ${l};\\n          }\\n          setOutput(getX(outC - start));\\n        }\\n      `}}class TL{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=rD(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=zD("rc",s),l=zD("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const e=`\\n        ${r} source = rc;\\n        if (source < start) {\\n          source = start * 2 - source - ${h};\\n        } else if (source >= end) {\\n          source = (end - 1) * 2 - source + ${h};\\n        }\\n        source -= start;\\n      `;p=`\\n        ${r} rc = outputLoc;\\n        ${e}\\n        result[0] = getChannel(getX(${l.join()}), ${c});\\n        ${o[s-1]} += 1;\\n        if(${u}) {\\n          ${e}\\n          result[1] = getChannel(getX(${l.join()}), ${c});\\n        }\\n      `}else{const e=`\\n        ${r} source = rc;\\n        ${r} lt = ${r}(lessThan(source, start));\\n        ${r} gte = ${r}(greaterThanEqual(source, end));\\n        ${r} orig = 1 - (lt + gte);\\n        source = orig * source +\\n                lt * (start * 2 - source - ${h}) +\\n                gte * ((end - 1) * 2 - source + ${h});\\n        source -= start;\\n      `;p=`\\n        ${r} rc = outputLoc;\\n        ${e}\\n        result[0] = getChannel(getX(${l.join()}), ${c});\\n        ${o[s-1]} += 1;\\n        if(${u}) {\\n          ${e}\\n          result[1] = getChannel(getX(${l.join()}), ${c});\\n        }\\n        rc = outputLoc;\\n        ${o[s-2]} += 1;\\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\\n          ${e}\\n          result[2] = getChannel(getX(${l.join()}), ${c});\\n          ${o[s-1]} += 1;\\n          if(${u}) {\\n            ${e}\\n            result[3] = getChannel(getX(${l.join()}), ${c});\\n          }\\n        }\\n      `}this.userCode=`\\n      const ${r} start = ${r}(${a});\\n      const ${r} end = ${r}(${i});\\n\\n      void main() {\\n        ${r} outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        ${p}\\n        setOutput(result);\\n      }\\n    `}}const EL={kernelName:Rn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TL(s.shape,r,a):new $L(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},AL=NF({opSnippet:"if (b == 0.0) return NAN;\\n  return mod(a, b);",packedOpSnippet:"\\n  vec4 result = mod(a, b);\\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\\n  "+cF+"\\n  return result;\\n"}),RL={kernelName:Dn,backendName:"webgl",kernelFunc:AL};class DL{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\\n      uniform float seed;\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < ${t-1}; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(${t-1}));\\n      }\\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const FL=NF({opSnippet:"\\nif (a == b) {\\n  return 1.0;\\n};\\nreturn a / b;",packedOpSnippet:"\\n  // vec4 one = vec4(equal(a, b));\\n  // return one + (vec4(1.0) - one) * a / b;\\n  vec4 result = a / b;\\n  if(a.x == b.x) {\\n    result.x = 1.;\\n  }\\n  if(a.y == b.y) {\\n    result.y = 1.;\\n  }\\n  if(a.z == b.z) {\\n    result.z = 1.;\\n  }\\n  if(a.w == b.w) {\\n    result.w = 1.;\\n  }\\n\\n  return result;\\n",checkOutOfBounds:!0}),_L={kernelName:zt,backendName:"webgl",kernelFunc:FL},OL="return a - b;",ML=NF({opSnippet:OL,packedOpSnippet:OL,supportsComplex:!0,cpuKernelImpl:DD}),LL={kernelName:Is,backendName:"webgl",kernelFunc:ML};function zL(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=pe([a],r.shape),o=pL({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Vu(o.shape,i),u=DF({inputs:{x:o},backend:n,attrs:{shape:l}}),c=ML({inputs:{a:r,b:u},backend:n}),h=aM({inputs:{x:c},backend:n}),p=BF({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=DF({inputs:{x:p},backend:n,attrs:{shape:l}}),f=FL({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const PL={kernelName:ws,backendName:"webgl",kernelFunc:zL},BL={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:zL({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new DL(u,c,a),p=h.getCustomSetupFunc(i),d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},WL="return -x;",VL={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=SD(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=Be().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new sF(s.shape,WL):new HD(s.shape,WL),n.runWebGLProgram(r,[s],s.dtype)}},UL=yp,GL={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){md("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=UL(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},HL=bp,jL={kernelName:zn,backendName:"webgl",kernelFunc:function(e){md("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=HL(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},qL=xp,KL={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){md("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=qL(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class XL{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(${s}), float(${n}),\\n                      float(index == coords.y)));\\n      }\\n    `}}const YL={kernelName:Wn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,l=ne(r.shape),u=new XL(l,a,i,o),c=DF({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const p=DF({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(h),p}};function JL(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=H_({inputs:{input:s},backend:n}),t=JL({inputs:{x:e},backend:n}),r=iO({inputs:{input:s},backend:n}),a=JL({inputs:{x:r},backend:n}),i=fF({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return gM({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const ZL={kernelName:_s,backendName:"webgl",kernelFunc:JL},QL={kernelName:Bn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=H_({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=iO({inputs:{input:r},backend:s}),i=JL({inputs:{x:a},backend:s}),o=fF({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return gM({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},ez={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return oM({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{Q(a,e.shape,"All tensors passed to stack must have matching shapes"),Z(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=cO({inputs:t.map((e=>{const t=oM({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class tz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=rD(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\\n      ${r} start = ${r}(${a});\\n      ${r} end = ${r}(${i});\\n\\n      void main() {\\n        ${r} outC = getOutputCoords();\\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\\n          setOutput(float(${n}));\\n        } else {\\n          ${r} coords = outC - start;\\n          setOutput(getX(${o}));\\n        }\\n      }\\n    `:`\\n        int start = ${a};\\n        int end = ${i};\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start || outC >= end) {\\n            setOutput(float(${n}));\\n          } else {\\n            setOutput(getX(outC - start));\\n          }\\n        }\\n      `}}class nz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=rD(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=zD("rc",s),l=zD("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\\n       if(${u}) {\\n      `,1===s?"":`}\\n       rc = outputLoc;\\n       ${o[s-2]} += 1;\\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\\n         if(${u}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===s?2:4;e<t;e++)d+=`\\n        ${h[e]}\\n        if (${p}) {\\n          result[${e}] = float(${n});\\n        } else {\\n          ${r} source = rc - start;\\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\\n        }\\n      `;d+=1===s?"} ":"}}",this.userCode=`\\n      const ${r} start = ${r}(${a});\\n      const ${r} end = ${r}(${i});\\n\\n      void main() {\\n        ${r} outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        ${d}\\n        setOutput(result);\\n      }\\n    `}}const sz=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s,o=Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nz(r.shape,a,i):new tz(r.shape,a,i);return n.runWebGLProgram(o,[r],r.dtype)},rz={kernelName:Un,backendName:"webgl",kernelFunc:sz},az=NF({opSnippet:"\\n  if(a < 0.0 && floor(b) < b){\\n    return NAN;\\n  }\\n  if (b == 0.0) {\\n    return 1.0;\\n  }\\n  return (round(mod(b, 2.0)) != 1) ?\\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n",packedOpSnippet:"\\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\\n  vec4 result = multiplier * pow(abs(a), b);\\n\\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\\n  bvec4 isExpZero = equal(b, vec4(0.0));\\n  result.r = isExpZero.r ? 1.0 : result.r;\\n  result.g = isExpZero.g ? 1.0 : result.g;\\n  result.b = isExpZero.b ? 1.0 : result.b;\\n  result.a = isExpZero.a ? 1.0 : result.a;\\n\\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\\n  "+cF+"\\n  return result;\\n"}),iz={kernelName:Hn,backendName:"webgl",kernelFunc:az},oz={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=pe(a,r.shape);let c=u;const h=Gu(c,o);let p,d=r;if(null!=h&&(d=VF({inputs:{x:r},backend:n,attrs:{perm:h}}),c=ju(c.length,o),l.push(d)),Uu("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:s,outDtype:r}=CD(d.shape,d.dtype,e,c);p=n.makeTensorInfo(s,r,t)}else{const[e,t]=Wu(d.shape,c),s=ne(t),a=DF({inputs:{x:d},backend:n,attrs:{shape:[-1,s]}}),i=MF(a,Tr(r.dtype),"prod",n);p=DF({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(p);const e=Vu(p.shape,u);p=DF({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},lz=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=$D(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},uz={kernelName:Kn,backendName:"webgl",kernelFunc:lz},cz=IF({opSnippet:"return 1.0 / x;"}),hz={kernelName:Yn,backendName:"webgl",kernelFunc:cz},pz=IF({opSnippet:jD+"\\n  return (x < 0.0) ? 0.0 : x;\\n",packedOpSnippet:"\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n"}),dz={kernelName:Jn,backendName:"webgl",kernelFunc:pz},fz=IF({opSnippet:jD+"\\n  return (x < 0.0) ? 0.0 : min(6.0, x);\\n",packedOpSnippet:"\\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n"}),mz={kernelName:ss,backendName:"webgl",kernelFunc:fz};class gz{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          ${u[0]/c[0]},\\n          ${u[1]/c[1]});\\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = ${h};\\n\\n        // Compute the four integer indices.\\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\\n        ivec2 sourceCeilRC = ivec2(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\\n\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\n\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\n        float newValue = top + (bottom - top) * fracRC.x;\\n\\n        setOutput(newValue);\\n      }\\n    `}}class yz{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\\n          ${u[0]/c[0]},\\n          ${u[1]/c[1]},\\n          ${u[1]/c[1]});\\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\\n                                     ${o}.0);\\n\\n      float getAValue(int b, int r, int c, int d) {\\n        return getChannel(getA(b, r, c, d), vec2(c, d));\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        // Calculate values for next column in yRC.z.\\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\\n\\n        // Fractional source index.\\n        vec3 sourceFracIndexRC = ${h};\\n\\n        // Compute the four integer indices.\\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\\n        ivec3 sourceCeilRC = ivec3(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        // Should we calculate next column and row elements in 2x2 packed cell.\\n        bool hasNextCol = d < ${l-1};\\n        bool hasNextRow = coords.z < ${n-1};\\n\\n        // In parallel, construct four corners for all four components in\\n        // packed 2x2 cell.\\n        vec4 topLeft = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomLeft = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 topRight = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomRight = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\\n\\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\\n        vec4 newValue = mix(top, bottom, fracRC.x);\\n\\n        setOutput(newValue);\\n      }\\n    `}}const bz={kernelName:ts,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=Be().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yz(r.shape,l,u,a,i):new gz(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class xz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(${u});\\n        const float widthScale = float(${c});\\n\\n        const float invHeightScale = float(${h});\\n        const float invWidthScale = float(${p});\\n\\n        const int winHeight = int(${d});\\n        const int winWidth = int(${f});\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(startRLerp - float(winHeight / 2));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(startCLerp - float(winWidth / 2));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= ${a}) {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= ${i}) {\\n              continue;\\n            }\\n\\n            float dxR = float(dyR) * heightScale;\\n            int topDxRIndex = int(floor(dxR));\\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\\n            float dxRLerp = dxR - float(topDxRIndex);\\n            float inverseDxRLerp = 1.0 - dxRLerp;\\n\\n            float dxC = float(dyC) * widthScale;\\n            int leftDxCIndex = int(floor(dxC));\\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\\n            float dxCLerp = dxC - float(leftDxCIndex);\\n            float inverseDxCLerp = 1.0 - dxCLerp;\\n\\n            if (r == topDxRIndex && c == leftDxCIndex) {\\n              // topLeft\\n              accumulator +=\\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == topDxRIndex && c == rightDxCIndex) {\\n              // topRight\\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\\n              // bottomLeft\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\\n              // bottomRight\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    `}}const wz={kernelName:ns,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new xz(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class kz{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          ${u[0]/c[0]},\\n          ${u[1]/c[1]});\\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = ${p};\\n\\n        // Compute the coordinators of nearest neighbor point.\\n        ivec2 sourceNearestRC = ivec2(\\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\\n\\n        setOutput(newValue);\\n      }\\n    `}}const vz={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=new kz(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class Iz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(${u});\\n        const float widthScale = float(${c});\\n\\n        const float invHeightScale = float(${h});\\n        const float invWidthScale = float(${p});\\n\\n        const int winHeight = int(${d});\\n        const int winWidth = int(${f});\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= ${a}) {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= ${i}) {\\n              continue;\\n            }\\n\\n            float sourceFracRow =\\n              float(${o[0]}) *\\n                (float(dyR) / float(${l[0]}));\\n\\n            float sourceFracCol =\\n                float(${o[1]}) *\\n                  (float(dyC) / float(${l[1]}));\\n\\n            int sourceNearestRow = int(min(\\n                float(int(${s}) - 1),\\n                ${n} ? float(round(sourceFracRow)) :\\n                                  float(floor(sourceFracRow))));\\n\\n            int sourceNearestCol = int(min(\\n                float(int(${r}) - 1),\\n                ${n} ? float(round(sourceFracCol)) :\\n                                  float(floor(sourceFracCol))));\\n\\n            if (r == sourceNearestRow && c == sourceNearestCol) {\\n              accumulator += getDy(b, dyR, dyC, d);\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    `}}const Nz={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new Iz(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class Sz{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\\n        void main() {\\n          int coord = getOutputCoords();\\n          setOutput(getX(${e[0]} - coord - 1));\\n        }\\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=rD(n);this.userCode=`\\n      void main() {\\n        ${r} coords = getOutputCoords();\\n        setOutput(getX(${s}));\\n      }\\n    `}}class Cz{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=zD("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=rD(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\\n        void main(){\\n          int rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = getChannel(getX(${e[0]} - rc - 1),\\n            ${e[0]} - rc - 1);\\n          if(${r}){\\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\\n                ${e[0]} - (rc  + 1) - 1);\\n          }\\n          setOutput(result);\\n        }\\n      `:`\\n        void main() {\\n          ${i} rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = ${function(e){return o(e)}(s.slice())};\\n          if(${r}){\\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\\n          }\\n          if(${a}) {\\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\\n            if(${r}) {\\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\\n            }\\n          }\\n          setOutput(result);\\n        }\\n    `}}const $z={kernelName:rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=pe(a,r.shape);if(0===i)return pF({inputs:{x:r},backend:n});const l=Be().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cz(r.shape,o):new Sz(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class Tz{constructor(e,t,n,s){this.variableNames=["Image"],this.outputShape=[];const r=e[1],a=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[l,u]=td(s,r,a),c=l.toFixed(3),h=u.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\\n        vec3 fill = vec3(${n.join(",")});\\n        float outputValue = fill[coords[3]];`,this.userCode=`\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int x = coords[2];\\n          int y = coords[1];\\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\\n          int coordX = int(round(coordXFloat + ${c}));\\n          int coordY = int(round(coordYFloat + ${h}));\\n          ${p}\\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${r}) {\\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\\n          }\\n          setOutput(outputValue);\\n        }\\n    `}}const Ez={kernelName:Ls,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=new Tz(s.shape,r,a,i);return o.runWebGLProgram(l,[s],s.dtype)}},Az=IF({opSnippet:"\\n  // OpenGL ES does not support round function.\\n  // The algorithm is based on banker\'s rounding.\\n  float base = floor(x);\\n  if ((x - base) < 0.5) {\\n    return floor(x);\\n  } else if ((x - base) > 0.5) {\\n    return ceil(x);\\n  } else {\\n    if (mod(base, 2.0) == 0.0) {\\n      return base;\\n    } else {\\n      return base + 1.0;\\n    }\\n  }\\n"}),Rz={kernelName:as,backendName:"webgl",kernelFunc:Az},Dz=IF({opSnippet:"return inversesqrt(x);",cpuKernelImpl:TD}),Fz={kernelName:is,backendName:"webgl",kernelFunc:Dz};class _z{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=rD(r.length),l=rD(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\\n        ${o} strides = ${o}(${r});\\n\\n        void main() {\\n          ${l} coords = getOutputCoords();\\n          float sum = 0.0;\\n          bool found = false;\\n          for (int i = 0; i < ${e}; i++) {\\n            int flattenedIndex = 0;\\n            for (int j = 0; j < ${t}; j++) {\\n              int index = round(${c});\\n              flattenedIndex += index * ${d};\\n            }\\n            if (flattenedIndex == coords[0]) {\\n              sum += ${p};\\n              found = true;\\n            }\\n          }\\n          setOutput(mix(getDefaultValue(), sum, float(found)));\\n        }\\n      `}}const Oz={kernelName:os,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=vi(0,r,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const d=DF({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=DF({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new _z(l,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=DF({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class Mz{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=rD(n);this.userCode=`\\n      void main() {\\n        ${a} resRC = getOutputCoords();\\n        float cVal = getC(${s});\\n        if (cVal >= 1.0) {\\n          setOutput(getA(${r}));\\n        } else {\\n          setOutput(getB(${r}));\\n        }\\n      }\\n    `}}const Lz={kernelName:ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new Mz(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],$r(r.dtype,a.dtype))}},zz=IF({opSnippet:`\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = ${od};\\n  float scale = ${ld};\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n`}),Pz={kernelName:us,backendName:"webgl",kernelFunc:zz},Bz=IF({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),Wz={kernelName:fs,backendName:"webgl",kernelFunc:Bz},Vz=IF({opSnippet:"\\n  if (isnan(x)) { return 0.0; }\\n  return sign(x);\\n"}),Uz={kernelName:ds,backendName:"webgl",kernelFunc:Vz},Gz=IF({opSnippet:vF+"\\n  return sin(x);\\n"}),Hz={kernelName:hs,backendName:"webgl",kernelFunc:Gz},jz=IF({opSnippet:"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n"}),qz={kernelName:ps,backendName:"webgl",kernelFunc:jz},Kz=IF({opSnippet:"\\n  float epsilon = 1.1920928955078125e-7;\\n  float threshold = log(epsilon) + 2.0;\\n\\n  bool too_large = x > -threshold;\\n  bool too_small = x < threshold;\\n\\n  float result;\\n  float exp_x = exp(x);\\n\\n  if (too_large){\\n    result = x;\\n  }\\n  else if (too_small){\\n    result = exp_x;\\n  }\\n  else{\\n    result = log(exp_x + 1.0);\\n  }\\n  return result;\\n"}),Xz={kernelName:ms,backendName:"webgl",kernelFunc:Kz},Yz={kernelName:bs,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;Z(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=[],c=sz({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=nd(c.shape,a,o,!1),p=sd(h.length,a.length,!1),d=rd(c.shape,a,o,!1),f=DF({inputs:{x:c},backend:n,attrs:{shape:h}}),m=VF({inputs:{x:f},backend:n,attrs:{perm:p}}),g=DF({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},Jz={kernelName:Ns,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=vi(0,r,o),p=new _z(u,l,r.shape.length,a.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[a,r,i],a.dtype),f=DF({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}},Zz={kernelName:xs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=pe(i,r.shape)[0],l=Sd(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=P_({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},Qz=IF({opSnippet:"return sqrt(x);"}),eP={kernelName:gs,backendName:"webgl",kernelFunc:Qz},tP=IF({opSnippet:"return x * x;"}),nP={kernelName:vs,backendName:"webgl",kernelFunc:tP},sP="return (a - b) * (a - b);",rP=NF({opSnippet:sP,packedOpSnippet:sP}),aP={kernelName:ks,backendName:"webgl",kernelFunc:rP},iP={kernelName:Os,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=jD+`\\n    return x > 0.0 ? 1.0 : float(${t.alpha});\\n  `,a=new HD(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class oP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=rD(n.length),a=rD(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\\n      ${r} begin = ${r}(${e});\\n      ${r} strides = ${r}(${t});\\n\\n      void main() {\\n        ${a} coords = getOutputCoords();\\n        setOutput(getX(${i}));\\n      }\\n    `}}const lP={kernelName:Ss,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s,{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=zi(r.shape,a,i,o,l,u,c,h,p),x=DF({inputs:{x:r},backend:n,attrs:{shape:y}});let w;if(d){const e=P_({inputs:{x},backend:n,attrs:{begin:f,size:g}});w=DF({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))w=n.makeTensorInfo(b,r.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=Ga(x.shape,x.dtype,e),s=RD(b,t,m,f);w=n.makeTensorInfo(b,x.dtype,s.values)}else{const e=new oP(f,m,b);w=n.runWebGLProgram(e,[x],x.dtype)}const k=DF({inputs:{x:w},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),k}},uP=IF({opSnippet:"return tan(x);"}),cP={kernelName:Cs,backendName:"webgl",kernelFunc:uP},hP=IF({opSnippet:"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n"}),pP={kernelName:$s,backendName:"webgl",kernelFunc:hP};class dP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=rD(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\\n      void main() {\\n        ${s} resRC = getOutputCoords();\\n        setOutput(getA(${r}));\\n      }\\n    `}}function fP(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype){const e=n.readSync(r.dataId).map((e=>fr(e))),t=Ga(r.shape,r.dtype,e),s=FD(t,a);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const i=new dP(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const mP={kernelName:Ts,backendName:"webgl",kernelFunc:fP},gP={kernelName:Es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=n.readSync(r.dataId),[l,u]=_D(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},yP={kernelName:Rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;ER(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=MD(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},bP={kernelName:Ds,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[a]=e;const t=P_({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),s=DF({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class xP{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\\n        sumValue += dot(values, segFilter);\\n    ";let c="";r%n>0&&(c=`\\n        if (inIdx < 0 || inIdx >= ${r}) {\\n          return initializationValue;\\n        }\\n      `);let h="";r%n>0&&(h=`\\n        if (inIdx < 0 || inIdx >= ${r}) {\\n          return -1.0;\\n        }\\n      `),this.userCode=`\\n      const float initializationValue = 0.0;\\n\\n      float getValue(int batch, int inIdx) {\\n        ${c}\\n        return getX(batch, inIdx);\\n      }\\n\\n      float getSegmentIdAtIndex(int inIdx) {\\n        ${h}\\n        return getSegmentIds(inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = int(floor(float(outIdx) / float(\\n          ${a})) * float(${n}));\\n        int currentSeg = int(mod(float(outIdx), float(${a})));\\n\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < ${o}; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\\n          );\\n\\n          ${u}\\n        }\\n\\n        int inIdx = inOffset + ${o};\\n        if (${1===l}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            0,\\n            0,\\n            0\\n          );\\n\\n          ${u}\\n        } else if (${2===l}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n              0,\\n              0\\n          );\\n\\n          ${u}\\n        } else if (${3===l}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            0\\n          );\\n\\n          ${u}\\n        }\\n        setOutput(sumValue);\\n      }\\n    `}}const wP={kernelName:Fs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=Gu([u],o);let h=r;null!=c&&(h=VF({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=ju(1,o)[0]);const p=$d(h.shape,u,i),d=ne([h.shape[u]]),f=DF({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=Tr(r.dtype),g=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],u=Cd(o,a),c=new xP({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===a)return h;const p=lz({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=fP({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,t,d,r,a)},y=DF({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const e=Hu(c);b=VF({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},kP=[uL,hL,jF,KF,YF,ZF,t_,r_,a_,i_,p_,d_,m_,y_,k_,x_,I_,$_,C_,A_,R_,D_,O_,W_,V_,q_,Y_,Q_,nO,mF,hO,vO,IO,yO,SO,CO,NO,TO,AO,DO,MO,LO,PO,HO,jO,VO,KO,YO,ZO,QO,tM,sM,iM,lM,hM,fM,yM,xM,vM,NM,$M,EM,AM,DM,_M,MM,zM,dF,PM,oO,WM,UM,HM,bF,qM,XM,YM,eL,ZM,nL,rL,iL,dL,yL,gL,wL,kL,vL,mL,IL,NL,CL,EL,RL,BL,RF,VL,GL,jL,KL,G_,YL,QL,ez,rz,iz,kF,oz,uz,j_,_L,hz,mz,dz,FF,bz,wz,vz,Nz,$z,Ez,Rz,Fz,Oz,Lz,Pz,Wz,Uz,Hz,qz,B_,PL,Xz,Yz,Jz,Zz,eP,nP,aP,iP,lP,LL,WF,cP,pP,mP,gP,UF,yP,bP,wP,ZL];for(const e of kP)js(e);const vP={"tfjs-core":eo,"tfjs-backend-cpu":"2.8.6","tfjs-backend-webgl":"2.8.6","tfjs-data":mS,"tfjs-layers":pb,"tfjs-converter":lN,tfjs:"2.8.6"}},377:(e,t,n)=>{var s=n(832),r=n(652),a=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},832:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.alea=l}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.tychei=l}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor128=l}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var s;!function(r,a){var i,o=this,l=256,u=6,c="random",h=a.pow(l,u),p=a.pow(2,52),d=2*p,f=l-1;function m(e,t,n){var s=[],f=x(b((t=1==t?{entropy:!0}:t||{}).entropy?[e,w(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),w(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,w(r)]}}():e,3),s),m=new g(s),k=function(){for(var e=m.g(u),t=h,n=0;e<p;)e=(e+n)*l,t*=l,n=m.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return k.int32=function(){return 0|m.g(4)},k.quick=function(){return m.g(4)/4294967296},k.double=k,x(w(m.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&y(s,m),e.state=function(){return y(m,{})}),n?(a[c]=e,t):e})(k,f,"global"in t?t.global:this==a,t.state)}function g(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=f&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=f&r+1],n=n*l+i[f&(i[r]=i[a=f&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function y(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function b(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(b(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\\0"}function x(e,t){for(var n,s=e+"",r=0;r<s.length;)t[f&r]=f&(n^=19*t[f&r])+s.charCodeAt(r++);return w(t)}function w(e){return String.fromCharCode.apply(0,e)}if(a["seed"+c]=m,x(a.random(),r),e.exports){e.exports=m;try{i=n(906)}catch(e){}}else void 0===(s=function(){return m}.call(t,n,t,e))||(e.exports=s)}([],Math)},416:(e,t,n)=>{const s=n(563),{FREAKPOINTS:r}=n(793),a=(r.length-1)*r.length/2;e.exports={Detector:class{constructor(e,t){this.width=e,this.height=t;let n=0;for(;e>=8&&t>=8&&(e/=2,t/=2,n++,5!==n););this.numOctaves=n,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let n=0;n<e.length;n++)t[4*n]=e[n],t[4*n+1]=e[n],t[4*n+2]=e[n],t[4*n+3]=255;const n=new ImageData(t,this.width,this.height);return this.detect(n)}detect(e){const t=[];for(let n=0;n<this.numOctaves;n++){0===n?t.push(this._applyFilter(e)):t.push(this._downsampleBilinear(t[t.length-1]));for(let e=0;e<2;e++)t.push(this._applyFilter(t[t.length-1]))}const n=[];for(let e=0;e<this.numOctaves;e++)for(let s=0;s<2;s++)0!==e||0!==s?n.push(this._differenceImageBinomial(t[3*e+s],t[3*e+s+1])):n.push(null);const s=[],r=[];for(let e=1;e<n.length-1;e++){if(e%2==1)continue;s.push(e);const t=n[e-1],a=n[e],i=n[e+1],o=this._buildExtremas(e,t,a,i);r.push(o)}const a=this._applyPrune(r,s),i=this._computeOrientationHistograms(a,t,s),o=this._smoothHistograms(i),l=this._computeExtremaAngles(o),u=this._computeExtremaFreak(t,this.numOctaves,a,l),c=this._computeFreakDescriptors(u),h=this._combine(a,l,c),p=h.arraySync();t.forEach((e=>e.dispose())),n.forEach((e=>e&&e.dispose())),r.forEach((e=>e.dispose())),a.dispose(),i.dispose(),o.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose();const d=[];for(let e=0;e<p.length;e++)for(let t=0;t<p[e].length;t++)if(0!==p[e][t][0]){const n=p[e][t],s=n.slice(5),r=[];let a=0,i=0;for(let e=0;e<s.length;e++)s[e]&&(a+=1),i+=1,32===i?(r.push(a),a=0,i=0):a*=2;r.push(a),d.push({maxima:n[0]>0,x:n[1],y:n[2],scale:n[3],angle:n[4],descriptors:r})}return d}_combine(e,t,n){if(!this.kernelCaches.combine){const e={variableNames:["extrema","angles","desc"],outputShape:[100,5,5+a],userCode:"\\n\\t  void main() {\\n\\t    ivec3 coords = getOutputCoords();\\n\\t    int bucketIndex = coords[0];\\n\\t    int featureIndex = coords[1];\\n\\t    int propertyIndex = coords[2];\\n\\n\\t    if (propertyIndex == 0) {\\n\\t      setOutput(getExtrema(bucketIndex, featureIndex, 0));\\n\\t      return;\\n\\t    }\\n\\t    if (propertyIndex == 1) {\\n\\t      int extremaIndex = int(getExtrema(bucketIndex, featureIndex, 1));\\n\\t      int octave = extremaIndex + 1; // ref to buildExtrema, it starts at 2nd octave\\n\\t      float x = getExtrema(bucketIndex, featureIndex, 3);\\n\\t      float originalX = x * pow(2.0, float(octave)) + pow(2.0, float(octave-1)) - 0.5;\\n\\t      setOutput(originalX);\\n\\t      return;\\n\\t    }\\n\\t    if (propertyIndex == 2) {\\n\\t      int extremaIndex = int(getExtrema(bucketIndex, featureIndex, 1));\\n\\t      int octave = extremaIndex + 1; // ref to buildExtrema, it starts at 2nd octave\\n\\t      float y = getExtrema(bucketIndex, featureIndex, 2);\\n\\t      float originalY = y * pow(2.0, float(octave)) + pow(2.0, float(octave-1)) - 0.5;\\n\\t      setOutput(originalY);\\n\\t      return;\\n\\t    }\\n\\t    if (propertyIndex == 3) {\\n\\t      int extremaIndex = int(getExtrema(bucketIndex, featureIndex, 1));\\n\\t      int octave = extremaIndex + 1; // ref to buildExtrema, it starts at 2nd octave\\n\\t      float inputSigma = pow(2., float(octave));\\n\\t      setOutput(inputSigma);\\n\\t      return;\\n\\t    }\\n\\t    if (propertyIndex == 4) {\\n\\t      setOutput(getAngles(bucketIndex, featureIndex));\\n\\t      return;\\n\\t    }\\n\\t    setOutput( getDesc(bucketIndex, featureIndex, propertyIndex - 5));\\n\\t  }\\n\\t"};this.kernelCaches.combine=[e]}return s.tidy((()=>{const[r]=this.kernelCaches.combine;return s.backend().compileAndRun(r,[e,t,n])}))}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const t=[],n=[];for(let s=0;s<e.shape[2];s++)for(let r=s+1;r<e.shape[2];r++)t.push(s),n.push(r);const r=s.tensor(t,[t.length]).cast("int32"),a=s.tensor(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:s.keep(s.stack([r,a],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors;if(r.length,!this.kernelCaches.computeFreakDescriptors){const e={variableNames:["freak","p"],outputShape:[100,5,a],userCode:"\\n\\t  void main() {\\n\\t    ivec3 coords = getOutputCoords();\\n\\t    int bucketIndex = coords[0];\\n\\t    int featureIndex = coords[1];\\n\\t    int descIndex = coords[2];\\n\\n            int p1 = int(getP(descIndex, 0));\\n            int p2 = int(getP(descIndex, 1));\\n\\n\\t    float v1 = getFreak(bucketIndex, featureIndex, p1);\\n\\t    float v2 = getFreak(bucketIndex, featureIndex, p2);\\n\\n\\t    if (v1 < v2 + 0.01) {\\n\\t      setOutput(1.);\\n\\t      return;\\n\\t    }\\n\\t    setOutput(0.);\\n\\t  }\\n\\t"};this.kernelCaches.computeFreakDescriptors=[e]}return s.tidy((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return s.backend().compileAndRun(n,[e,t])}))}_computeExtremaFreak(e,t,n,a){const i=Math.pow(2,.5),o=1/Math.log(i);this.tensorCaches._computeExtremaFreak||s.tidy((()=>{const e=s.tensor(r);this.tensorCaches._computeExtremaFreak={freakPointsT:s.keep(e)}}));const l=[];for(let e=0;e<t;e++)for(let n=0;n<3;n++)2===n&&e!==t-1||l.push(3*e+n);const{freakPointsT:u}=this.tensorCaches._computeExtremaFreak;if(!this.kernelCaches._computeExtremaFreak){const n={variableNames:["extrema","angles","freakPoints"],outputShape:[100,5,r.length,3],userCode:`\\n\\t  void main() {\\n\\t    ivec4 coords = getOutputCoords();\\n\\n\\t    int bucketIndex = coords[0];\\n\\t    int featureIndex = coords[1];\\n\\t    int freakIndex = coords[2];\\n\\t    int propertyIndex = coords[3];\\n\\n\\t    float freakSigma = getFreakPoints(freakIndex, 0);\\n\\t    float freakX = getFreakPoints(freakIndex, 1);\\n\\t    float freakY = getFreakPoints(freakIndex, 2);\\n\\n\\t    int extremaIndex = int(getExtrema(bucketIndex, featureIndex, 1));\\n\\t    float inputY = getExtrema(bucketIndex, featureIndex, 2);\\n\\t    float inputX = getExtrema(bucketIndex, featureIndex, 3);\\n\\n            int inputOctave = extremaIndex + 1; // ref to buildExtrema, it starts at 2nd octave\\n\\n\\t    float inputSigma = pow(2., float(inputOctave));\\n\\t    float inputAngle = getAngles(bucketIndex, featureIndex);\\n\\n            // Ensure the scale of the similarity transform is at least "1".\\n            float transformScale = max(1., inputSigma * 7.);\\n            float cos = transformScale * cos(inputAngle);\\n            float sin = transformScale * sin(inputAngle);\\n\\n\\t    float sigma = transformScale * freakSigma;\\n\\n\\t    int octave = int(floor(log(sigma) / ${Math.log(2)}));\\n\\t    float fscale = log( sigma / pow(2., float(octave))) * ${o};\\n            int scale = int(floor(fscale + 0.5)); // round() has problem in ios\\n\\n            // sgima of last scale = sigma of the first scale in next octave\\n            // prefer coarser octaves for efficiency\\n            if ( scale == 3 - 1) {\\n              octave = octave + 1;\\n              scale = 0;\\n            }\\n            // clip octave and scale\\n            if (octave < 0) {\\n              octave = 0;\\n              scale = 0;\\n            }\\n            if ( int(octave) >= ${t}) {\\n              octave = ${t} - 1;\\n              scale = 3 - 1;\\n            }\\n\\n            int imageIndex = octave * 3 + scale;\\n\\t    if (propertyIndex == 0) {\\n\\t      setOutput(float(imageIndex));\\n\\t      return;\\n\\t    }\\n\\n\\t    // 1) inputX, Y is the coordinate in the octave scale. scale it back respect to the original size (i.e. octave 0)\\n\\n\\t    // 2) compute the freak point location, according to the orientation\\n\\n            // 3) scale the freak point back into the octave scale\\n\\n\\t    if (propertyIndex == 1) {\\n\\t      float originalY = inputY * pow(2.0, float(inputOctave)) + pow(2.0, float(inputOctave-1)) - 0.5;\\n\\t      float y = originalY + freakX * sin + freakY * cos;\\n\\t      float a = 1.0 / pow(2., float(octave));\\n\\t      float b = 0.5 * a - 0.5;\\n\\t      float yp = y * a + b; // y in octave\\n\\t      setOutput(yp);\\n\\t      return;\\n\\t    }\\n\\t    if (propertyIndex == 2) {\\n\\t      float originalX = inputX * pow(2.0, float(inputOctave)) + pow(2.0, float(inputOctave-1)) - 0.5;\\n\\t      float x = originalX + freakX * cos + freakY * -sin;\\n\\t      float a = 1.0 / pow(2., float(octave));\\n\\t      float b = 0.5 * a - 0.5;\\n\\t      float xp = x * a + b; // x in octave\\n\\t      setOutput(xp);\\n\\t      return;\\n\\t    }\\n\\t  }\\n\\t`},s=[];for(let t=0;t<l.length;t++){const n=l[t],a=e[n].shape[0],i=e[n].shape[1],o={variableNames:["pixel","position","combine"],outputShape:[100,5,r.length],userCode:`\\n\\t    void main() {\\n\\t      ivec3 coords = getOutputCoords();\\n\\t      int bucketIndex = coords[0];\\n\\t      int featureIndex = coords[1];\\n\\t      int freakIndex = coords[2];\\n\\n\\t      int imageIndex = int(getPosition(bucketIndex, featureIndex, freakIndex, 0));\\n\\t      if (imageIndex != ${n}) {\\n\\t\\tsetOutput(getCombine(bucketIndex, featureIndex, freakIndex));\\n\\t\\treturn;\\n\\t      }\\n\\n\\t      float yp = getPosition(bucketIndex, featureIndex, freakIndex, 1);\\n\\t      float xp = getPosition(bucketIndex, featureIndex, freakIndex, 2);\\n\\n\\t      int x0 = int(floor(xp));\\n\\t      int x1 = x0 + 1;\\n\\t      int y0 = int(floor(yp));\\n\\t      int y1 = y0 + 1;\\n\\n\\t      if (x0 < 0 || x1 >= ${i} || y0 < 0 || y1 >= ${a}) {\\n\\t\\tsetOutput(0.);\\n\\t\\treturn;\\n\\t      }\\n\\n\\t      float f1 = getPixel(y0, x0);\\n\\t      float f2 = getPixel(y0, x1);\\n\\t      float f3 = getPixel(y1, x0);\\n\\t      float f4 = getPixel(y1, x1);\\n\\n\\t      float x1f = float(x1);\\n\\t      float y1f = float(y1);\\n\\t      float x0f = float(x0);\\n\\t      float y0f = float(y0);\\n\\n\\t      // ratio for interpolation between four neighbouring points\\n\\t      float value = (x1f - xp) * (y1f - yp) * f1\\n\\t\\t\\t  + (xp - x0f) * (y1f - yp) * f2\\n\\t\\t\\t  + (x1f - xp) * (yp - y0f) * f3\\n\\t\\t\\t  + (xp - x0f) * (yp - y0f) * f4;\\n\\n\\t      setOutput(value);\\n\\t    }\\n\\t  `};s.push(o)}this.kernelCaches._computeExtremaFreak=[n,s]}return s.tidy((()=>{const[t,i]=this.kernelCaches._computeExtremaFreak,o=s.backend().compileAndRun(t,[n,a,u]);let c=s.zeros([100,5,r.length]);for(let t=0;t<l.length;t++){const n=l[t];c=s.backend().compileAndRun(i[t],[e[n],o,c])}return c}))}_computeExtremaAngles(e){if(!this.kernelCaches.computeExtremaAngles){const e={variableNames:["histogram"],outputShape:[100,5],userCode:`\\n\\t  void main() {\\n\\t    ivec2 coords = getOutputCoords();\\n\\n\\t    int bucketIndex = coords[0];\\n\\t    int featureIndex = coords[1];\\n\\n\\t    int maxIndex = 0;\\n\\t    for (int i = 1; i < 36; i++) {\\n\\t      if (getHistogram(bucketIndex, featureIndex, i) > getHistogram(bucketIndex, featureIndex, maxIndex)) {\\n\\t\\tmaxIndex = i;\\n\\t      }\\n\\t    }\\n\\n\\t    int prev = imod(maxIndex - 1 + 36, 36);\\n\\t    int next = imod(maxIndex + 1, 36);\\n\\n\\t    /**\\n\\t     * Fit a quatratic to 3 points. The system of equations is:\\n\\t     *\\n\\t     * y0 = A*x0^2 + B*x0 + C\\n\\t     * y1 = A*x1^2 + B*x1 + C\\n\\t     * y2 = A*x2^2 + B*x2 + C\\n\\t     *\\n\\t     * This system of equations is solved for A,B,C.\\n\\t     */\\n\\t    float p10 = float(maxIndex - 1);\\n\\t    float p11 = getHistogram(bucketIndex, featureIndex, prev); \\n\\t    float p20 = float(maxIndex);\\n\\t    float p21 = getHistogram(bucketIndex, featureIndex, maxIndex); \\n\\t    float p30 = float(maxIndex + 1);\\n\\t    float p31 = getHistogram(bucketIndex, featureIndex, next); \\n\\n\\t    float d1 = (p30-p20)*(p30-p10);\\n\\t    float d2 = (p10-p20)*(p30-p10);\\n\\t    float d3 = p10-p20;\\n\\n\\t    // If any of the denominators are zero then, just use maxIndex.\\n            float fbin = float(maxIndex);\\n\\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\\n\\t      float a = p10*p10;\\n\\t      float b = p20*p20;\\n\\n\\t      // Solve for the coefficients A,B,C\\n\\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\\n\\t      float B = ((p11-p21)+(A*(b-a)))/d3;\\n\\t      float C = p11-(A*a)-(B*p10);\\n\\t      fbin = -B / (2. * A);\\n\\t    }\\n\\n\\t    float an =  2.0 * ${Math.PI} * ((fbin + 0.5 + 36.) / 36.);\\n\\n\\t    for (int i = 0; i < 3; i++) { // stupid modula, while loop not support\\n\\t      if (an > 2.0 * ${Math.PI}) {\\n\\t\\tan -= 2.0 * ${Math.PI};\\n\\t      }\\n\\t    }\\n\\t    setOutput(an);\\n\\t  }\\n\\t`};this.kernelCaches.computeExtremaAngles=e}return s.tidy((()=>{const t=this.kernelCaches.computeExtremaAngles;return s.backend().compileAndRun(t,[e])}))}_computeOrientationHistograms(e,t,n){const r=[];for(let e=0;e<n.length;e++){const s=n[e],a=3*Math.floor(s/2)+(s%2+1);r.push(t[a])}this.tensorCaches.orientationHistograms||s.tidy((()=>{const e=Math.max(1,3),t=-1/(2*e*e),n=1.5*e,a=Math.ceil(n),i=[];for(let e=-a;e<=a;e++)for(let s=-a;s<=a;s++){const r=s*s+e*e;if(r<=n*n){const n=r*t,a=.0013888888*(720+n*(720+n*(360+n*(120+n*(30+n*(6+n))))));i.push([e,s,a])}}const o=[];for(let e=0;e<r.length;e++)o.push([r[e].shape[0],r[e].shape[1]]);this.tensorCaches.orientationHistograms={radialPropertiesT:s.keep(s.tensor(i,[i.length,3])),imageSizesT:s.keep(s.tensor(o,[o.length,2]))}}));const{radialPropertiesT:a,imageSizesT:i}=this.tensorCaches.orientationHistograms;if(!this.kernelCaches.computeOrientationHistograms){const e=[];for(let t=0;t<r.length;t++)e.push("image"+t);let t="float getPixel(int gaussianIndex, int y, int x) {";for(let e=0;e<r.length;e++)t+=`\\n\\t  if (gaussianIndex == ${e}) {\\n\\t    return getImage${e}(y, x);\\n\\t  }\\n\\t`;t+="}";const n={variableNames:[...e,"imageSizes","extrema","radial"],outputShape:[100,5,a.shape[0],2],userCode:`\\n\\t  ${t}\\n\\n\\t  void main() {\\n\\t    ivec4 coords = getOutputCoords();\\n\\t    int bucketIndex = coords[0];\\n\\t    int featureIndex = coords[1];\\n\\t    int radialIndex = coords[2];\\n\\t    int propertyIndex = coords[3];\\n\\n\\t    int radialY = int(getRadial(radialIndex, 0));\\n\\t    int radialX = int(getRadial(radialIndex, 1));\\n\\t    float radialW = getRadial(radialIndex, 2);\\n\\n\\t    int extremaIndex = int(getExtrema(bucketIndex, featureIndex, 1));\\n\\t    int y = int(getExtrema(bucketIndex, featureIndex, 2));\\n\\t    int x = int(getExtrema(bucketIndex, featureIndex, 3));\\n\\n\\t    int imageHeight = int(getImageSizes(extremaIndex, 0));\\n\\t    int imageWidth = int(getImageSizes(extremaIndex, 1));\\n\\n\\t    int xp = x + radialX;\\n\\t    int yp = y + radialY;\\n\\n\\t    if (xp < 1 || xp >= imageWidth - 1 || yp < 1 || yp >= imageHeight - 1) {\\n\\t      setOutput(0.);\\n\\t      return;\\n\\t    }\\n\\n\\t    float dy = getPixel(extremaIndex, yp+1, xp) - getPixel(extremaIndex, yp-1, xp);\\n\\t    float dx = getPixel(extremaIndex, yp, xp+1) - getPixel(extremaIndex, yp, xp-1);\\n\\n\\t    if (propertyIndex == 0) {\\n\\t      float angle = atan(dy, dx) + ${Math.PI};\\n\\t      float fbin = angle * 36. * 0.159154943091895;\\n\\t      setOutput(fbin);\\n\\t      return;\\n\\t    }\\n\\n\\t    if (propertyIndex == 1) {\\n\\t      float mag = sqrt(dx * dx + dy * dy);\\n\\t      float magnitude = radialW * mag;\\n\\t      setOutput(magnitude);\\n\\t      return;\\n\\t    }\\n\\t  }\\n\\n\\t`},s={variableNames:["fbinMag"],outputShape:[100,5,36],userCode:`\\n\\t  void main() {\\n\\t    ivec3 coords = getOutputCoords();\\n\\t    int bucketIndex = coords[0];\\n\\t    int featureIndex = coords[1];\\n\\t    int binIndex = coords[2];\\n\\n\\t    float sum = 0.;\\n\\t    for (int i = 0; i < ${a.shape[0]}; i++) {\\n\\t      float fbin = getFbinMag(bucketIndex, featureIndex, i, 0);\\n\\t      int bin = int(floor(fbin - 0.5));\\n\\t      int b1 = imod(bin + 36, 36);\\n\\t      int b2 = imod(bin + 1 + 36, 36);\\n\\n\\t      if (b1 == binIndex || b2 == binIndex) {\\n\\t\\tfloat magnitude = getFbinMag(bucketIndex, featureIndex, i, 1);\\n\\t\\tfloat w2 = fbin - float(bin) - 0.5;\\n\\t\\tfloat w1 = w2 * -1. + 1.;\\n\\n\\t\\tif (b1 == binIndex) {\\n\\t\\t  sum += w1 * magnitude;\\n\\t\\t}\\n\\t\\tif (b2 == binIndex) {\\n\\t\\t  sum += w2 * magnitude;\\n\\t\\t}\\n\\t      }\\n\\t    }\\n\\t    setOutput(sum);\\n\\t  }\\n\\t`};this.kernelCaches.computeOrientationHistograms=[n,s]}return s.tidy((()=>{const[t,n]=this.kernelCaches.computeOrientationHistograms,o=s.backend().compileAndRun(t,[...r,i,e,a]);return s.backend().compileAndRun(n,[o])}))}_smoothHistograms(e){if(!this.kernelCaches.smoothHistograms){const e={variableNames:["histogram"],outputShape:[100,5,36],userCode:"\\n\\t  void main() {\\n\\t    ivec3 coords = getOutputCoords();\\n\\n\\t    int bucketIndex = coords[0];\\n\\t    int featureIndex = coords[1];\\n\\t    int binIndex = coords[2];\\n\\n\\t    int prevBin = imod(binIndex - 1 + 36, 36);\\n\\t    int nextBin = imod(binIndex + 1, 36);\\n\\n            float result = 0.274068619061197 * getHistogram(bucketIndex, featureIndex, prevBin) + 0.451862761877606 * getHistogram(bucketIndex, featureIndex, binIndex) + 0.274068619061197 * getHistogram(bucketIndex, featureIndex, nextBin);\\n\\n\\t    setOutput(result);\\n\\t  }\\n\\t"};this.kernelCaches.smoothHistograms=e}return s.tidy((()=>{const t=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)e=s.backend().compileAndRun(t,[e]);return e}))}_applyPrune(e,t){const n=[],r=[];for(let e=0;e<100;e++){r.push([]),n.push([]);for(let t=0;t<5;t++)r[e].push([0,0,0,0]),n[e].push(0)}for(let t=0;t<e.length;t++){const s=e[t],a=s.arraySync(),i=s.shape[0],o=s.shape[1],l=o/10,u=i/10;for(let e=0;e<i;e++)for(let s=0;s<o;s++){const i=Math.floor(s/l),o=10*Math.floor(e/u)+i,c=a[e][s],h=Math.abs(c);let p=5;for(;p>=1&&h>n[o][p-1];)p-=1;if(p<5){for(let e=4;e>=p+1;e--)n[o][e]=n[o][e-1],r[o][e][0]=r[o][e-1][0],r[o][e][1]=r[o][e-1][1],r[o][e][2]=r[o][e-1][2],r[o][e][3]=r[o][e-1][3];n[o][p]=h,r[o][p][0]=c,r[o][p][1]=t,r[o][p][2]=e,r[o][p][3]=s}}}return s.tensor(r,[r.length,r[0].length,r[0][0].length])}_buildExtremas(e,t,n,r){const a=n.shape[0],i=n.shape[1],o="w"+i;if(this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),!this.kernelCaches.buildExtremas[o]){const e={variableNames:["image0","image1","image2"],outputShape:[a,i],userCode:`\\n\\t  void main() {\\n\\t    ivec2 coords = getOutputCoords();\\n\\n\\t    int y = coords[0];\\n\\t    int x = coords[1];\\n\\n\\t    // Step 1: find local maxima/minima\\n\\t    if (y == 0 || y == ${a} - 1 || x == 0 || x == ${i} - 1) {\\n\\t      setOutput(0.);\\n\\t      return;\\n\\t    }\\n\\t    if (getImage1(y, x) * getImage1(y, x) < 9.) {\\n\\t      setOutput(0.);\\n\\t      return;\\n\\t    }\\n\\n\\t    bool isMax = true;\\n\\t    for (int dy = -1; dy <= 1; dy++) {\\n\\t      for (int dx = -1; dx <= 1; dx++) {\\n\\t        if (getImage1(y, x) < getImage0(y+dy, x+dx)) {\\n\\t\\t  isMax = false;\\n\\t\\t}\\n\\t        if (getImage1(y, x) < getImage2(y+dy, x+dx)) {\\n\\t\\t  isMax = false;\\n\\t\\t}\\n\\t        if (getImage1(y, x) < getImage1(y+dy, x+dx)) {\\n\\t\\t  isMax = false;\\n\\t\\t}\\n\\t      }\\n\\t    }\\n\\t    bool isMin = false;\\n\\t    if (!isMax) {\\n\\t      isMin = true;\\n\\n\\t      for (int dy = -1; dy <= 1; dy++) {\\n\\t\\tfor (int dx = -1; dx <= 1; dx++) {\\n\\t\\t  if (getImage1(y, x) > getImage0(y+dy, x+dx)) {\\n\\t\\t    isMin = false;\\n\\t\\t  }\\n\\t\\t  if (getImage1(y, x) > getImage2(y+dy, x+dx)) {\\n\\t\\t    isMin = false;\\n\\t\\t  }\\n\\t\\t  if (getImage1(y, x) > getImage1(y+dy, x+dx)) {\\n\\t\\t    isMin = false;\\n\\t\\t  }\\n\\t\\t}\\n\\t      }\\n\\t    }\\n\\n\\t    if (!isMax && !isMin) {\\n\\t      setOutput(0.);\\n\\t      return;\\n\\t    }\\n\\n\\t    // Step 2: sub-pixel refinement (I\'m not sure what that means. Any educational ref?)\\n\\t    \\n\\t    // Compute spatial derivatives\\n\\t    float dx = 0.5 * (getImage1(y, x+1) - getImage1(y, x-1));\\n\\t    float dy = 0.5 * (getImage1(y+1, x) - getImage1(y-1, x));\\n\\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\\n\\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\\n\\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\\n\\n\\t    // Compute scale derivates\\n\\t    float ds = 0.5 * (getImage2(y, x) - getImage0(y, x)); \\n\\t    float dss = getImage2(y, x) + getImage0(y, x) - 2. * getImage1(y, x);\\n\\t    float dxs = 0.25 * ((getImage0(y, x-1) - getImage0(y, x+1)) + (getImage2(y, x+1) - getImage2(y, x-1)));\\n\\t    float dys = 0.25 * ((getImage0(y-1, x) - getImage0(y+1, x)) + (getImage2(y+1, x) - getImage2(y-1, x)));\\n\\n\\t    // Solve Hessian A * u = b;\\n\\t    float A0 = dxx;\\n\\t    float A1 = dxy;\\n\\t    float A2 = dxs;\\n\\t    float A3 = dxy;\\n\\t    float A4 = dyy;\\n\\t    float A5 = dys;\\n\\t    float A6 = dxs;\\n\\t    float A7 = dys;\\n\\t    float A8 = dss;\\n\\t    float b0 = -dx;\\n\\t    float b1 = -dy;\\n\\t    float b2 = -ds;\\n\\n\\t    float detA = A0 * A4 * A8\\n\\t\\t       - A0 * A5 * A5\\n\\t\\t       - A4 * A2 * A2\\n\\t\\t       - A8 * A1 * A1\\n\\t\\t       + 2. * A1 * A2 * A5;\\n\\n\\t    // B = inverse of A\\n\\t    float B0 = A4 * A8 - A5 * A7;\\n\\t    float B1 = A2 * A7 - A1 * A8;\\n\\t    float B2 = A1 * A5 - A2 * A4;\\n\\t    float B3 = B1;\\n\\t    float B4 = A0 * A8 - A2 * A6;\\n\\t    float B5 = A2 * A3 - A0 * A5;\\n\\t    float B6 = B2;\\n\\t    float B7 = B5;\\n\\t    float B8 = A0 * A4 - A1 * A3;\\n\\n\\t    float u0 = (B0 * b0 + B1 * b1 + B2 * b2) / detA;\\n\\t    float u1 = (B3 * b0 + B4 * b1 + B5 * b2) / detA;\\n\\t    float u2 = (B6 * b0 + B7 * b1 + B8 * b2) / detA;\\n\\n\\t    // If points move too much in the sub-pixel update, then the point probably unstable.\\n\\t    if (u0 * u0 + u1 * u1 > 9.) {\\n\\t      setOutput(0.);\\n\\t      return;\\n\\t    }\\n\\n\\t    // compute edge score\\n\\t    float det = (dxx * dyy) - (dxy * dxy);\\n\\n\\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\\n\\t      setOutput(0.);\\n\\t      return;\\n\\t    }\\n\\n\\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\\n\\n\\t    if (abs(edgeScore) >= 6.25 ) {\\n\\t      setOutput(0.);\\n\\t      return;\\n\\t    }\\n\\n\\t    float score = getImage1(y, x) - (b0 * u0 + b1 * u1 + b2 * u2);\\n\\n\\t    if (score * score < 9.) {\\n\\t      setOutput(0.);\\n\\t      return;\\n\\t    }\\n\\n\\t    setOutput(score);\\n\\t  }\\n\\t`};this.kernelCaches.buildExtremas[o]=e}return s.tidy((()=>{const e=this.kernelCaches.buildExtremas[o];return Math.floor(t.shape[1]/2)===n.shape[1]&&(t=this._downsampleBilinear(t)),s.backend().compileAndRun(e,[t,n,r])}))}_differenceImageBinomial(e,t){return s.tidy((()=>e.sub(t)))}_applyFilter(e){const t=e.shape[0],n=e.shape[1],r="w"+n;if(this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),!this.kernelCaches.applyFilter[r]){const e="\\n\\tint imax(int a, int b) {\\n\\t  if (a > b) return a;\\n\\t  return b;\\n\\t}\\n\\tint imin(int a, int b) {\\n\\t  if (a < b) return a;\\n\\t  return b;\\n\\t}\\n\\n      ",s={variableNames:["p"],outputShape:[t,n],userCode:`\\n \\t  ${e}\\n\\t  void main() {\\n\\t    ivec2 coords = getOutputCoords();\\n\\n\\t    float sum = getP(coords[0], imax(0, coords[1]-2));\\n\\t    sum += getP(coords[0], imax(0, coords[1]-1)) * 4.;\\n\\t    sum += getP(coords[0], coords[1]) * 6.;\\n\\t    sum += getP(coords[0], imin(${n}-1, coords[1]+1)) * 4.;\\n\\t    sum += getP(coords[0], imin(${n}-1, coords[1]+2));\\n\\t    setOutput(sum);\\n\\t  }\\n\\t`},a={variableNames:["p"],outputShape:[t,n],userCode:`\\n \\t  ${e}\\n\\t  void main() {\\n\\t    ivec2 coords = getOutputCoords();\\n\\n\\t    float sum = getP(imax(coords[0]-2, 0), coords[1]);\\n\\t    sum += getP(imax(coords[0]-1, 0), coords[1]) * 4.;\\n\\t    sum += getP(coords[0], coords[1]) * 6.;\\n\\t    sum += getP(imin(coords[0]+1, ${t}-1), coords[1]) * 4.;\\n\\t    sum += getP(imin(coords[0]+2, ${t}-1), coords[1]);\\n\\t    sum /= 256.;\\n\\t    setOutput(sum);\\n\\t  }\\n\\t`};this.kernelCaches.applyFilter[r]=[s,a]}return s.tidy((()=>{const[t,n]=this.kernelCaches.applyFilter[r],a=s.backend().compileAndRun(t,[e]);return s.backend().compileAndRun(n,[a])}))}_downsampleBilinear(e){const t=e.shape[0],n=e.shape[1],r="w"+n;if(this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),!this.kernelCaches.downsampleBilinear[r]){const e={variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(n/2)],userCode:"\\n\\t  void main() {\\n\\t    ivec2 coords = getOutputCoords();\\n\\t    int y = coords[0] * 2;\\n\\t    int x = coords[1] * 2;\\n\\t    float sum = getP(y, x) + getP(y+1,x) + getP(y, x+1) + getP(y+1,x+1);\\n\\t    sum *= 0.25;\\n\\t    setOutput(sum);\\n\\t  }\\n\\t"};this.kernelCaches.downsampleBilinear[r]=e}return s.tidy((()=>{const t=this.kernelCaches.downsampleBilinear[r];return s.backend().compileAndRun(t,[e])}))}}}},793:e=>{const t=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],n=[];for(let e=0;e<t.length;e++){const s=t[e].sigma;for(let r=0;r<t[e].points.length;r++){const a=t[e].points[r];n.push([s,a[0],a[1]])}}e.exports={FREAKPOINTS:n}},508:(e,t,n)=>{const{resize:s}=n(140);e.exports={buildImageList:e=>{const t=[];let n=28/Math.min(e.width,e.height);for(;;)if(t.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}t.push(n),t.reverse();const r=[];for(let n=0;n<t.length;n++)e.width,t[n],e.height,t[n],r.push(Object.assign(s({image:e,ratio:t[n]}),{scale:t[n]}));return r}}},233:e=>{e.exports={compute:e=>{const{v1:t,v2:n}=e;let s=0;for(let e=0;e<t.length;e++){let i=(t[e]^n[e])>>>0;s+=(a=void 0,((a=((a=((a=((a=(r=i)-(r>>1&1431655765))>>2&858993459)+(858993459&a))>>4)+a&252645135)>>8)+a&16711935)>>16)+a&65535)}var r,a;return s}}},723:(e,t,n)=>{const{compute:s}=n(233),{createRandomizer:r}=n(48),a=e=>{const{points:t,pointIndexes:n,centerPointIndex:s,randomizer:r}=e;let i=!1;(n.length<=8||n.length<=16)&&(i=!0);const o={};if(!i){const e=_computeKMedoids({points:t,pointIndexes:n,randomizer:r});for(let t=0;t<e.length;t++)void 0===o[n[e[t]]]&&(o[n[e[t]]]=[]),o[n[e[t]]].push(n[t])}1===Object.keys(o).length&&(i=!0);const l={centerPointIndex:s};if(i){l.leaf=!0,l.pointIndexes=[];for(let e=0;e<n.length;e++)l.pointIndexes.push(n[e]);return l}return l.leaf=!1,l.children=[],Object.keys(o).forEach((e=>{l.children.push(a({points:t,pointIndexes:o[e],centerPointIndex:e,randomizer:r}))})),l};_computeKMedoids=e=>{const{points:t,pointIndexes:n,randomizer:r}=e,a=[];for(let e=0;e<n.length;e++)a.push(e);let i=Number.MAX_SAFE_INTEGER,o=-1;const l=[];for(let e=0;e<128;e++){r.arrayShuffle({arr:a,sampleSize:8});let u=0;const c=[];for(let e=0;e<n.length;e++){let r=Number.MAX_SAFE_INTEGER;for(let i=0;i<8;i++){const o=n[a[i]],l=s({v1:t[n[e]].descriptors,v2:t[o].descriptors});l<r&&(c[e]=a[i],r=l)}u+=r}l.push(c),u<i&&(i=u,o=e)}return l[o]},e.exports={build:({points:e})=>{const t=[];for(let n=0;n<e.length;n++)t.push(n);const n=r();return{rootNode:a({points:e,pointIndexes:t,centerPointIndex:null,randomizer:n})}}}},589:(e,t,n)=>{const{Cumsum:s}=n(535),r=22,a=({image:e,cx:t,cy:n,sdThresh:s,imageDataCumsum:a,imageDataSqrCumsum:i})=>{if(t-r<0||t+r>=e.width)return null;if(n-r<0||n+r>=e.height)return null;const o=2025;let l=a.query(t-r,n-r,t+r,n+r);l/=o;let u=i.query(t-r,n-r,t+r,n+r);return u-=2*l*a.query(t-r,n-r,t+r,n+r),u+=o*l*l,u/o<s*s?null:(u=Math.sqrt(u),u)},i=e=>{const{image:t,cx:n,cy:s,vlen:a,tx:i,ty:o,imageDataCumsum:l,imageDataSqrCumsum:u}=e,{data:c,width:h,height:p}=t,d=r;if(n-d<0||n+d>=h)return null;if(s-d<0||s+d>=p)return null;let f=l.query(n-d,s-d,n+d,s+d),m=u.query(n-d,s-d,n+d,s+d),g=0,y=(s-d)*h+(n-d),b=(o-d)*h+(i-d),x=h-45;for(let e=0;e<45;e++){for(let e=0;e<45;e++)g+=c[y]*c[b],y+=1,b+=1;y+=x,b+=x}let w=l.query(i-d,o-d,i+d,o+d);w/=2025,g-=w*f;let k=m-f*f/2025;return 0==k?null:(k=Math.sqrt(k),1*g/(a*k))};e.exports={extract:e=>{const{data:t,width:n,height:o,scale:l}=e,u=[n*o];for(let e=0;e<u.length;e++)u[e]=!1;const c=new Float32Array(t.length);for(let e=0;e<n;e++)c[e]=-1,c[n*(o-1)+e]=-1;for(let e=0;e<o;e++)c[e*n]=-1,c[e*n+n-1]=-1;for(let e=1;e<n-1;e++)for(let s=1;s<o-1;s++){let r=e+n*s,a=0,i=0;for(let e=-1;e<=1;e++)a+=t[r+n*e+1]-t[r+n*e-1],i+=t[r+n+e]-t[r-n+e];a/=768,i/=768,c[r]=Math.sqrt((a*a+i*i)/2)}const h=new Uint32Array(1e3);for(let e=0;e<1e3;e++)h[e]=0;const p=[-1,1,-n,n];let d=0;for(let e=1;e<n-1;e++)for(let t=1;t<o-1;t++){let s=e+n*t,r=!0;for(let e=0;e<p.length;e++)if(c[s]<=c[s+p[e]]){r=!1;break}if(r){let e=Math.floor(1e3*c[s]);e>999&&(e=999),e<0&&(e=0),h[e]+=1,d+=1,u[s]=!0}}const f=.02*n*o;let m=999,g=0;for(;m>=0&&(g+=h[m],!(g>f));)m--;for(let e=0;e<u.length;e++)u[e]&&1e3*c[e]<m&&(u[e]=!1);const y=[];for(let e=0;e<t.length;e++)y[e]=t[e]*t[e];const b=new s(t,n,o),x=new s(y,n,o),w=new Float32Array(t.length);for(let t=0;t<n;t++)for(let s=0;s<o;s++){const r=s*n+t;if(!u[r]){w[r]=1;continue}const o=a({image:e,cx:t,cy:s,sdThresh:5,imageDataCumsum:b,imageDataSqrCumsum:x});if(null===o){w[r]=1;continue}let l=-1;for(let n=-10;n<=10;n++){for(let r=-10;r<=10;r++){if(r*r+n*n<=4)continue;const a=i({image:e,cx:t+r,cy:s+n,vlen:o,tx:t,ty:s,imageDataCumsum:b,imageDataSqrCumsum:x});if(null!==a&&a>l&&(l=a,l>.95))break}if(l>.95)break}w[r]=l}return(e=>{let{image:t,featureMap:n,templateSize:s,searchSize:r,occSize:o,maxSimThresh:l,minSimThresh:u,sdThresh:c,imageDataCumsum:h,imageDataSqrCumsum:p}=e;const{data:d,width:f,height:m,scale:g}=t;o=Math.floor(Math.min(t.width,t.height)/10);const y=3*(2*s+1),b=Math.floor(f/y),x=Math.floor(m/y);let w=Math.floor(f/o)*Math.floor(m/o)+b*x;const k=[],v=new Float32Array(d.length);for(let e=0;e<v.length;e++)v[e]=n[e];let I=0;for(;I<w;){let e=l,n=-1,d=-1;for(let t=0;t<m;t++)for(let s=0;s<f;s++)v[t*f+s]<e&&(e=v[t*f+s],n=s,d=t);if(-1===n)break;const g=a({image:t,cx:n,cy:d,sdThresh:0,imageDataCumsum:h,imageDataSqrCumsum:p});if(null===g){v[d*f+n]=1;continue}if(g/(2*s+1)<c){v[d*f+n]=1;continue}let y=1,b=-1;for(let s=-r;s<=r;s++){for(let a=-r;a<=r;a++){if(a*a+s*s>r*r)continue;if(0===a&&0===s)continue;const o=i({image:t,vlen:g,cx:n+a,cy:d+s,tx:n,ty:d,imageDataCumsum:h,imageDataSqrCumsum:p});if(null!==o){if(o<y&&(y=o,y<u&&y<e))break;if(o>b&&(b=o,b>.99))break}}if(y<u&&y<e||b>.99)break}if(y<u&&y<e||b>.99)v[d*f+n]=1;else{k.push({x:n,y:d}),I+=1;for(let e=-o;e<=o;e++)for(let t=-o;t<=o;t++)d+e<0||d+e>=m||n+t<0||n+t>=f||(v[(d+e)*f+(n+t)]=1)}}return k})({image:e,featureMap:w,templateSize:r,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.55,sdThresh:8,imageDataCumsum:b,imageDataSqrCumsum:x})}}},535:e=>{e.exports={Cumsum:class{constructor(e,t,n){this.cumsum=[];for(let e=0;e<n;e++){this.cumsum.push([]);for(let n=0;n<t;n++)this.cumsum[e].push(0)}this.cumsum[0][0]=e[0];for(let n=1;n<t;n++)this.cumsum[0][n]=this.cumsum[0][n-1]+e[n];for(let s=1;s<n;s++)this.cumsum[s][0]=this.cumsum[s-1][0]+e[s*t];for(let s=1;s<n;s++)for(let n=1;n<t;n++)this.cumsum[s][n]=e[s*t+n]+this.cumsum[s-1][n]+this.cumsum[s][n-1]-this.cumsum[s-1][n-1]}query(e,t,n,s){let r=this.cumsum[s][n];return t>0&&(r-=this.cumsum[t-1][n]),e>0&&(r-=this.cumsum[s][e-1]),e>0&&t>0&&(r+=this.cumsum[t-1][e-1]),r}}}},140:e=>{e.exports={downsampleBilinear:({image:e})=>{const{data:t,width:n,height:s}=e,r=Math.floor(n/2),a=Math.floor(s/2),i=new Float32Array(r*a),o=[0,1,n,n+1];for(let e=0;e<a;e++)for(let s=0;s<r;s++){let a=2*e*n+2*s,l=0;for(let e=0;e<o.length;e++)l+=t[a+o[e]];l*=.25,i[e*r+s]=l}return{data:i,width:r,height:a}},upsampleBilinear:({image:e,padOneWidth:t,padOneHeight:n})=>{const{width:s,height:r,data:a}=e,i=2*e.width+(t?1:0),o=2*e.height+(n?1:0),l=new Float32Array(i*o);for(let e=0;e<i;e++){const t=.5*e-.25;let n=Math.floor(t),u=Math.ceil(t);n<0&&(n=0),u>=s&&(u=s-1);for(let c=0;c<o;c++){const o=.5*c-.25;let h=Math.floor(o),p=Math.ceil(o);h<0&&(h=0),p>=r&&(p=r-1);const d=(u-t)*(p-o)*a[h*s+n]+(u-t)*(o-h)*a[p*s+n]+(t-n)*(p-o)*a[h*s+u]+(t-n)*(o-h)*a[p*s+u];l[c*i+e]=d}}return{data:l,width:i,height:o}},resize:({image:e,ratio:t})=>{const n=Math.round(e.width*t),s=Math.round(e.height*t),r=new Uint8Array(n*s);for(let a=0;a<n;a++){let i=Math.round(1*a/t),o=Math.round(1*(a+1)/t)-1;o>=e.width&&(o=e.width-1);for(let l=0;l<s;l++){let s=Math.round(1*l/t),u=Math.round(1*(l+1)/t)-1;u>=e.height&&(u=e.height-1);let c=0,h=0;for(let t=i;t<=o;t++)for(let n=s;n<=u;n++)c+=1*e.data[n*e.width+t],h+=1;r[l*n+a]=Math.floor(c/h)}}return{data:r,width:n,height:s}}}},48:e=>{e.exports={createRandomizer:()=>({seed:1234,arrayShuffle(e){const{arr:t,sampleSize:n}=e;for(let e=0;e<n;e++){this.seed=(214013*this.seed+2531011)%(1<<31);let n=this.seed>>16&32767;n%=t.length;let s=t[e];t[e]=t[n],t[n]=s}},nextInt(e){this.seed=(214013*this.seed+2531011)%(1<<31);let t=this.seed>>16&32767;return t%=e,t}})}},906:()=>{},993:()=>{},352:()=>{},312:()=>{},758:()=>{}},t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={id:s,loaded:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{const{extract:e}=n(589),{Detector:t}=n(416),{build:s}=n(723),{buildImageList:r}=n(508),a=n(563);onmessage=e=>{const{data:t}=e;if("compile"===t.type){console.log("worker compile...");const{targetImages:e}=t,n=100/e.length;let s=0;const a=[];for(let t=0;t<e.length;t++){const l=e[t],u=r(l),c=n/u.length/2;console.log("compiling tracking...",t);const h=o(u,(e=>{console.log("done tracking",t,e),s+=c,postMessage({type:"progress",percent:s})}));console.log("compiling matching...",t);const p=i(u,(e=>{console.log("done matching",t,e),s+=c,postMessage({type:"progress",percent:s})}));a.push({targetImage:l,imageList:u,trackingData:h,matchingData:p})}postMessage({type:"compileDone",list:a})}};const i=(e,n)=>{const r=[];for(let i=0;i<e.length;i++){const o=e[i],l=new t(o.width,o.height);a.tidy((()=>{const e=a.tensor(o.data,[o.data.length]).reshape([o.height,o.width]),t=l.detect(e),u=s({points:t});r.push({points:t,pointsCluster:u,width:o.width,height:o.height,scale:o.scale}),n(i)}))}return r},o=(t,n)=>{const s=[];for(let r=0;r<t.length;r++){const a=t[r],i=e(a),o={scale:a.scale,width:a.width,height:a.height,points:i};s.push(o),n(r)}return s}})()})();',n.p+"compiler.worker.prod.js")}},4129:(e,t,n)=>{e.exports=function(){return n(9855)('(()=>{var t={331:(t,e,r)=>{"use strict";r.r(e),r.d(e,{AbstractMatrix:()=>v,CHO:()=>tt,CholeskyDecomposition:()=>tt,EVD:()=>K,EigenvalueDecomposition:()=>K,LU:()=>_,LuDecomposition:()=>_,Matrix:()=>k,MatrixColumnSelectionView:()=>T,MatrixColumnView:()=>I,MatrixFlipColumnView:()=>A,MatrixFlipRowView:()=>q,MatrixRowSelectionView:()=>V,MatrixRowView:()=>C,MatrixSelectionView:()=>P,MatrixSubView:()=>N,MatrixTransposeView:()=>j,NIPALS:()=>et,Nipals:()=>et,QR:()=>$,QrDecomposition:()=>$,SVD:()=>L,SingularValueDecomposition:()=>L,WrapperMatrix1D:()=>z,WrapperMatrix2D:()=>F,correlation:()=>J,covariance:()=>B,default:()=>k,determinant:()=>X,inverse:()=>O,linearDependencies:()=>Q,pseudoInverse:()=>W,solve:()=>U,wrap:()=>D});const s=Object.prototype.toString;function o(t){return s.call(t).endsWith("Array]")}const n=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,s=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(s<0||s>=t.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[s],l=s+1;l<i;l++)t[l]>h&&(h=t[l]);return h},i=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,s=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(s<0||s>=t.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[s],l=s+1;l<i;l++)t[l]<h&&(h=t[l]);return h},h=function(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!o(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var s=i(t),h=n(t);if(s===h)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var l=r.min,u=void 0===l?r.autoMinMax?s:0:l,a=r.max,c=void 0===a?r.autoMinMax?h:1:a;if(u>=c)throw new RangeError("min option must be smaller than max option");for(var f=(c-u)/(h-s),m=0;m<t.length;m++)e[m]=(t[m]-s)*f+u;return e},l=" ".repeat(2),u=" ".repeat(4);function a(t,e={}){const{maxRows:r=15,maxColumns:s=10,maxNumSize:o=8}=e;return`${t.constructor.name} {\\n${l}[\\n${u}${function(t,e,r,s){const{rows:o,columns:n}=t,i=Math.min(o,e),h=Math.min(n,r),l=[];for(let e=0;e<i;e++){let r=[];for(let o=0;o<h;o++)r.push(c(t.get(e,o),s));l.push(`${r.join(" ")}`)}return h!==n&&(l[l.length-1]+=` ... ${n-r} more columns`),i!==o&&l.push(`... ${o-e} more rows`),l.join(`\\n${u}`)}(t,r,s,o)}\\n${l}]\\n${l}rows: ${t.rows}\\n${l}columns: ${t.columns}\\n}`}function c(t,e){const r=String(t);if(r.length<=e)return r.padEnd(e," ");const s=t.toPrecision(e-2);if(s.length<=e)return s;const o=t.toExponential(e-2),n=o.indexOf("e"),i=o.slice(n);return o.slice(0,e-i.length)+i}function f(t,e,r){let s=r?t.rows:t.rows-1;if(e<0||e>s)throw new RangeError("Row index out of range")}function m(t,e,r){let s=r?t.columns:t.columns-1;if(e<0||e>s)throw new RangeError("Column index out of range")}function g(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function w(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function p(t,e,r){return{row:d(t,e),column:y(t,r)}}function d(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for row indices");if(e.some((e=>e<0||e>=t.rows)))throw new RangeError("row indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function y(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for column indices");if(e.some((e=>e<0||e>=t.columns)))throw new RangeError("column indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function M(t,e,r,s,o){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(x("startRow",e),x("endRow",r),x("startColumn",s),x("endColumn",o),e>r||s>o||e<0||e>=t.rows||r<0||r>=t.rows||s<0||s>=t.columns||o<0||o>=t.columns)throw new RangeError("Submatrix indices are out of range")}function b(t,e=0){let r=[];for(let s=0;s<t;s++)r.push(e);return r}function x(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function E(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class v{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let s=new k(t,e);for(let o=0;o<t;o++)for(let t=0;t<e;t++)s.set(o,t,r[o*e+t]);return s}static rowVector(t){let e=new k(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new k(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new k(t,e)}static ones(t,e){return new k(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:s=Math.random}=r;let o=new k(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)o.set(r,t,s());return o}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:s=0,max:o=1e3,random:n=Math.random}=r;if(!Number.isInteger(s))throw new TypeError("min must be an integer");if(!Number.isInteger(o))throw new TypeError("max must be an integer");if(s>=o)throw new RangeError("min must be smaller than max");let i=o-s,h=new k(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=s+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let s=Math.min(t,e),o=this.zeros(t,e);for(let t=0;t<s;t++)o.set(t,t,r);return o}static diag(t,e,r){let s=t.length;void 0===e&&(e=s),void 0===r&&(r=e);let o=Math.min(s,e,r),n=this.zeros(e,r);for(let e=0;e<o;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new k(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return o}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new this(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return o}static checkMatrix(t){return v.isMatrix(t)?t:new k(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);t++}return s}isReducedEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(s=!1);t++}return s}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let s=e;for(let o=e;o<t.rows;o++)t.get(o,r)>t.get(s,r)&&(s=o);if(0===t.get(s,r))r++;else{t.swapRows(e,s);let o=t.get(e,r);for(let s=r;s<t.columns;s++)t.set(e,s,t.get(e,s)/o);for(let s=e+1;s<t.rows;s++){let o=t.get(s,r)/t.get(e,r);t.set(s,r,0);for(let n=r+1;n<t.columns;n++)t.set(s,n,t.get(s,n)-t.get(e,n)*o)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,s=r-1;for(;s>=0;)if(0===t.maxRow(s))s--;else{let o=0,n=!1;for(;o<r&&!1===n;)1===t.get(s,o)?n=!0:o++;for(let r=0;r<s;r++){let n=t.get(r,o);for(let i=o;i<e;i++){let e=t.get(r,i)-n*t.get(s,i);t.set(r,i,e)}}s--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let s=new k(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)s.setSubMatrix(this,this.rows*t,this.columns*e);return s}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){f(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return k.rowVector(this.getRow(t))}setRow(t,e){f(this,t),e=g(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){f(this,t),f(this,e);for(let r=0;r<this.columns;r++){let s=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,s)}return this}getColumn(t){m(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return k.columnVector(this.getColumn(t))}setColumn(t,e){m(this,t),e=w(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){m(this,t),m(this,e);for(let r=0;r<this.rows;r++){let s=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,s)}return this}addRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){f(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){m(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}maxIndex(){E(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)>t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}min(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}minIndex(){E(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)<t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}maxRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){f(this,t),E(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)>e&&(e=this.get(t,s),r[1]=s);return r}minRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){f(this,t),E(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)<e&&(e=this.get(t,s),r[1]=s);return r}maxColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){m(this,t),E(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)>e&&(e=this.get(s,t),r[0]=s);return r}minColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){m(this,t),E(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)<e&&(e=this.get(s,t),r[0]=s);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){v.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let s=0;s<e.length;s++)r+=e[s]*t[s];return r}mmul(t){t=k.checkMatrix(t);let e=this.rows,r=this.columns,s=t.columns,o=new k(e,s),n=new Float64Array(r);for(let i=0;i<s;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let s=0;s<r;s++)e+=this.get(t,s)*n[s];o.set(t,i,e)}}return o}strassen2x2(t){t=k.checkMatrix(t);let e=new k(2,2);const r=this.get(0,0),s=t.get(0,0),o=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(s+u),c=(i+l)*s,f=r*(n-u),m=l*(h-s),g=(r+o)*u,w=a+m-g+(o-l)*(h+u),p=f+g,d=c+m,y=a-c+f+(i-r)*(s+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=k.checkMatrix(t);let e=new k(3,3);const r=this.get(0,0),s=this.get(0,1),o=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-f+w),x=(-r+n+i)*(c-f+w),E=(n+i)*(-c+f),v=r*c,S=(-r+l+u)*(c-m+p),R=(-r+l)*(m-p),I=(l+u)*(-c+m),T=(-o+u+a)*(w+d-y),A=(o-a)*(w-y),q=o*d,C=(u+a)*(-d+y),V=(-o+i+h)*(p+d-M),P=(o-h)*(p-M),N=(i+h)*(-d+M),j=v+q+s*g,z=(r+s+o-n-i-u-a)*w+x+E+v+T+q+C,F=v+S+I+(r+s+o-i-h-l-u)*p+q+V+N,D=b+i*(-c+f+g-w-p-d+M)+x+v+q+V+P,_=b+x+E+v+h*y,H=q+V+P+N+n*m,$=v+S+R+u*(-c+m+g-w-p-d+y)+T+A+q,L=T+A+q+C+l*f,O=v+S+R+I+a*M;return e.set(0,0,j),e.set(0,1,z),e.set(0,2,F),e.set(1,0,D),e.set(1,1,_),e.set(1,2,H),e.set(2,0,$),e.set(2,1,L),e.set(2,2,O),e}mmulStrassen(t){t=k.checkMatrix(t);let e=this.clone(),r=e.rows,s=e.columns,o=t.rows,n=t.columns;function i(t,e,r){let s=t.rows,o=t.columns;if(s===e&&o===r)return t;{let s=v.zeros(e,r);return s=s.setSubMatrix(t,0,0),s}}s!==o&&console.warn(`Multiplying ${r} x ${s} and ${o} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,o),l=Math.max(s,n);return e=i(e,h,l),function t(e,r,s,o){if(s<=512||o<=512)return e.mmul(r);s%2==1&&o%2==1?(e=i(e,s+1,o+1),r=i(r,s+1,o+1)):s%2==1?(e=i(e,s+1,o),r=i(r,s+1,o)):o%2==1&&(e=i(e,s,o+1),r=i(r,s,o+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),c=r.subMatrix(0,n-1,h,r.columns-1),f=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(v.add(l,g),v.add(u,w),n,h),d=t(v.add(f,g),u,n,h),y=t(l,v.sub(c,w),n,h),M=t(g,v.sub(m,u),n,h),b=t(v.add(l,a),w,n,h),x=t(v.sub(f,l),v.add(u,c),n,h),E=t(v.sub(a,g),v.add(m,w),n,h),S=v.add(p,M);S.sub(b),S.add(E);let k=v.add(y,b),R=v.add(d,M),I=v.sub(p,d);I.add(y),I.add(x);let T=v.zeros(2*S.rows,2*S.columns);return T=T.setSubMatrix(S,0,0),T=T.setSubMatrix(k,S.rows,0),T=T.setSubMatrix(R,0,S.columns),T=T.setSubMatrix(I,S.rows,S.columns),T.subMatrix(0,s-1,0,o-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new k(this.rows,this.columns);for(let t=0;t<this.rows;t++){const o=this.getRow(t);o.length>0&&h(o,{min:e,max:r,output:o}),s.setRow(t,o)}return s}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new k(this.rows,this.columns);for(let t=0;t<this.columns;t++){const o=this.getColumn(t);o.length&&h(o,{min:e,max:r,output:o}),s.setColumn(t,o)}return s}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),s=this.get(e,this.columns-1-r);this.set(e,r,s),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),s=this.get(this.rows-1-r,e);this.set(r,e,s),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=k.checkMatrix(t);let e=this.rows,r=this.columns,s=t.rows,o=t.columns,n=new k(e*s,r*o);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<s;r++)for(let h=0;h<o;h++)n.set(s*i+r,o*e+h,this.get(i,e)*t.get(r,h));return n}transpose(){let t=new k(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=S){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=S){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,s){M(this,t,e,r,s);let o=new k(e-t+1,s-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=s;e++)o.set(n-t,e-r,this.get(n,e));return o}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let s=new k(t.length,r-e+1);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.rows)throw new RangeError(`Row index out of range: ${t[o]}`);s.set(o,n-e,this.get(t[o],n))}return s}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let s=new k(r-e+1,t.length);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.columns)throw new RangeError(`Column index out of range: ${t[o]}`);s.set(n-e,o,this.get(n,t[o]))}return s}setSubMatrix(t,e,r){if((t=k.checkMatrix(t)).isEmpty())return this;M(this,e,e+t.rows-1,r,r+t.columns-1);for(let s=0;s<t.rows;s++)for(let o=0;o<t.columns;o++)this.set(e+s,r+o,t.get(s,o));return this}selection(t,e){let r=p(this,t,e),s=new k(t.length,e.length);for(let t=0;t<r.row.length;t++){let e=r.row[t];for(let o=0;o<r.column.length;o++){let n=r.column[o];s.set(t,o,this.get(e,n))}}return s}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new k(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return function(t){let e=b(t.rows);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]+=t.get(r,s);return e}(this);case"column":return function(t){let e=b(t.columns);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]+=t.get(r,s);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e+=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=b(t.rows,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]*=t.get(r,s);return e}(this);case"column":return function(t){let e=b(t.columns,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]*=t.get(r,s);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e*=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:s=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!Array.isArray(s))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(i,e)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,s);case"column":if(!Array.isArray(s))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(e,i)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,s);case void 0:if("number"!=typeof s)throw new TypeError("mean must be a number");return function(t,e,r){const s=t.rows,o=t.columns,n=s*o;let i=0,h=0,l=0;for(let e=0;e<s;e++)for(let s=0;s<o;s++)l=t.get(e,s)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,s);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[r])}(this,r),this;case"column":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[s])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let s=0;for(let e=0;e<t.columns;e++)s+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(s))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let s=0;for(let e=0;e<t.rows;e++)s+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(s))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[s])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let s=0;s<t.columns;s++)for(let o=0;o<t.rows;o++)r+=Math.pow(t.get(o,s),2)/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return a(this,t)}}function S(t,e){return t-e}v.prototype.klass="Matrix","undefined"!=typeof Symbol&&(v.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return a(this)}),v.random=v.rand,v.randomInt=v.randInt,v.diagonal=v.diag,v.prototype.diagonal=v.prototype.diag,v.identity=v.eye,v.prototype.negate=v.prototype.neg,v.prototype.tensorProduct=v.prototype.kroneckerProduct;class k extends v{constructor(t,e){if(super(),k.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!Array.isArray(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let s=0;s<t;s++){if(r[s].length!==e)throw new RangeError("Inconsistent array dimensions");this.data.push(Float64Array.from(r[s]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return f(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),f(this,t,!0),e=Float64Array.from(g(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){m(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let s=0;s<t;s++)r[s]=this.data[e][s];for(let s=t+1;s<this.columns;s++)r[s-1]=this.data[e][s];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),m(this,t,!0),e=w(this,e);for(let r=0;r<this.rows;r++){const s=new Float64Array(this.columns+1);let o=0;for(;o<t;o++)s[o]=this.data[r][o];for(s[o++]=e[r];o<this.columns+1;o++)s[o]=this.data[r][o-1];this.data[r]=s}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}(v,k);class R extends v{constructor(t,e,r){super(),this.matrix=t,this.rows=e,this.columns=r}}class I extends R{constructor(t,e){m(t,e),super(t,t.rows,1),this.column=e}set(t,e,r){return this.matrix.set(t,this.column,r),this}get(t){return this.matrix.get(t,this.column)}}class T extends R{constructor(t,e){e=y(t,e),super(t,t.rows,e.length),this.columnIndices=e}set(t,e,r){return this.matrix.set(t,this.columnIndices[e],r),this}get(t,e){return this.matrix.get(t,this.columnIndices[e])}}class A extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(t,this.columns-e-1,r),this}get(t,e){return this.matrix.get(t,this.columns-e-1)}}class q extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(this.rows-t-1,e,r),this}get(t,e){return this.matrix.get(this.rows-t-1,e)}}class C extends R{constructor(t,e){f(t,e),super(t,1,t.columns),this.row=e}set(t,e,r){return this.matrix.set(this.row,e,r),this}get(t,e){return this.matrix.get(this.row,e)}}class V extends R{constructor(t,e){super(t,(e=d(t,e)).length,t.columns),this.rowIndices=e}set(t,e,r){return this.matrix.set(this.rowIndices[t],e,r),this}get(t,e){return this.matrix.get(this.rowIndices[t],e)}}class P extends R{constructor(t,e,r){let s=p(t,e,r);super(t,s.row.length,s.column.length),this.rowIndices=s.row,this.columnIndices=s.column}set(t,e,r){return this.matrix.set(this.rowIndices[t],this.columnIndices[e],r),this}get(t,e){return this.matrix.get(this.rowIndices[t],this.columnIndices[e])}}class N extends R{constructor(t,e,r,s,o){M(t,e,r,s,o),super(t,r-e+1,o-s+1),this.startRow=e,this.startColumn=s}set(t,e,r){return this.matrix.set(this.startRow+t,this.startColumn+e,r),this}get(t,e){return this.matrix.get(this.startRow+t,this.startColumn+e)}}class j extends R{constructor(t){super(t,t.columns,t.rows)}set(t,e,r){return this.matrix.set(e,t,r),this}get(t,e){return this.matrix.get(e,t)}}class z extends v{constructor(t,e={}){const{rows:r=1}=e;if(t.length%r!=0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=r,this.columns=t.length/r,this.data=t}set(t,e,r){let s=this._calculateIndex(t,e);return this.data[s]=r,this}get(t,e){let r=this._calculateIndex(t,e);return this.data[r]}_calculateIndex(t,e){return t*this.columns+e}}class F extends v{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}function D(t,e){if(Array.isArray(t))return t[0]&&Array.isArray(t[0])?new F(t):new z(t,e);throw new Error("the argument is not an array")}class _{constructor(t){let e,r,s,o,n,i,h,l,u,a=(t=F.checkMatrix(t)).clone(),c=a.rows,f=a.columns,m=new Float64Array(c),g=1;for(e=0;e<c;e++)m[e]=e;for(l=new Float64Array(c),r=0;r<f;r++){for(e=0;e<c;e++)l[e]=a.get(e,r);for(e=0;e<c;e++){for(u=Math.min(e,r),n=0,s=0;s<u;s++)n+=a.get(e,s)*l[s];l[e]-=n,a.set(e,r,l[e])}for(o=r,e=r+1;e<c;e++)Math.abs(l[e])>Math.abs(l[o])&&(o=e);if(o!==r){for(s=0;s<f;s++)i=a.get(o,s),a.set(o,s,a.get(r,s)),a.set(r,s,i);h=m[o],m[o]=m[r],m[r]=h,g=-g}if(r<c&&0!==a.get(r,r))for(e=r+1;e<c;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=k.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,s,o,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(o=0;o<h;o++)for(r=o+1;r<h;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o));for(o=h-1;o>=0;o--){for(s=0;s<n;s++)i.set(o,s,i.get(o,s)/e.get(o,o));for(r=0;r<o;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let s=0;s<r;s++)e*=t.get(s,s);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new k(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o>e?s.set(o,e,t.get(o,e)):o===e?s.set(o,e,1):s.set(o,e,0);return s}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new k(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o<=e?s.set(o,e,t.get(o,e)):s.set(o,e,0);return s}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function H(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class ${constructor(t){let e,r,s,o,n=(t=F.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(s=0;s<h;s++){let t=0;for(e=s;e<i;e++)t=H(t,n.get(e,s));if(0!==t){for(n.get(s,s)<0&&(t=-t),e=s;e<i;e++)n.set(e,s,n.get(e,s)/t);for(n.set(s,s,n.get(s,s)+1),r=s+1;r<h;r++){for(o=0,e=s;e<i;e++)o+=n.get(e,s)*n.get(e,r);for(o=-o/n.get(s,s),e=s;e<i;e++)n.set(e,r,n.get(e,r)+o*n.get(e,s))}}l[s]=-t}this.QR=n,this.Rdiag=l}solve(t){t=k.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let s,o,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(o=0;o<h;o++){for(i=0,s=n;s<r;s++)i+=e.get(s,n)*l.get(s,o);for(i=-i/e.get(n,n),s=n;s<r;s++)l.set(s,o,l.get(s,o)+i*e.get(s,n))}for(n=u-1;n>=0;n--){for(o=0;o<h;o++)l.set(n,o,l.get(n,o)/this.Rdiag[n]);for(s=0;s<n;s++)for(o=0;o<h;o++)l.set(s,o,l.get(s,o)-l.get(n,o)*e.get(s,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,s=r.columns,o=new k(s,s);for(t=0;t<s;t++)for(e=0;e<s;e++)t<e?o.set(t,e,r.get(t,e)):t===e?o.set(t,e,this.Rdiag[t]):o.set(t,e,0);return o}get orthogonalMatrix(){let t,e,r,s,o=this.QR,n=o.rows,i=o.columns,h=new k(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==o.get(r,r)){for(s=0,t=r;t<n;t++)s+=o.get(t,r)*h.get(t,e);for(s=-s/o.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+s*o.get(t,r))}}return h}}class L{constructor(t,e={}){if((t=F.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,s=t.columns;const{computeLeftSingularVectors:o=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(o),u=Boolean(n),a=!1;if(r<s)if(i){h=t.transpose(),r=h.rows,s=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let c=Math.min(r,s),f=Math.min(r+1,s),m=new Float64Array(f),g=new k(r,c),w=new k(s,s),p=new Float64Array(s),d=new Float64Array(r),y=new Float64Array(f);for(let t=0;t<f;t++)y[t]=t;let M=Math.min(r-1,s),b=Math.max(0,Math.min(s-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=H(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<s;e++){if(t<M&&0!==m[t]){let s=0;for(let o=t;o<r;o++)s+=h.get(o,t)*h.get(o,e);s=-s/h.get(t,t);for(let o=t;o<r;o++)h.set(o,e,h.get(o,e)+s*h.get(o,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<s;e++)p[t]=H(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<s;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<s;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<s;e++){let s=-p[e]/p[t+1];for(let o=t+1;o<r;o++)h.set(o,e,h.get(o,e)+s*d[o])}}if(u)for(let e=t+1;e<s;e++)w.set(e,t,p[e])}}let E=Math.min(s,r+1);if(M<s&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<c;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<c;e++){let s=0;for(let o=t;o<r;o++)s+=g.get(o,t)*g.get(o,e);s=-s/g.get(t,t);for(let o=t;o<r;o++)g.set(o,e,g.get(o,e)+s*g.get(o,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=s-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<s;e++){let r=0;for(let o=t+1;o<s;o++)r+=w.get(o,t)*w.get(o,e);r=-r/w.get(t+1,t);for(let o=t+1;o<s;o++)w.set(o,e,w.get(o,e)+r*w.get(o,t))}for(let e=0;e<s;e++)w.set(e,t,0);w.set(t,t,1)}let v=E-1,S=0,R=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+R*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=R*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let o=H(m[r],e),n=m[r]/o,i=e/o;if(m[r]=o,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<s;t++)o=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,o)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let s=t;s<E;s++){let o=H(m[s],e),n=m[s]/o,i=e/o;if(m[s]=o,e=-i*p[s],p[s]=n*p[s],l)for(let e=0;e<r;e++)o=n*g.get(e,s)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,s)+n*g.get(e,t-1)),g.set(e,s,o)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),o=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,c=((n+o)*(n-o)+i*i)/2,f=o*i*(o*i);let d=0;0===c&&0===f||(d=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),d=f/(c+d));let y=(h+o)*(h-o)+d,M=h*a;for(let e=t;e<E-1;e++){let o=H(y,M);0===o&&(o=Number.MIN_VALUE);let n=y/o,i=M/o;if(e!==t&&(p[e-1]=o),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<s;t++)o=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,o);if(o=H(y,M),0===o&&(o=Number.MIN_VALUE),n=y/o,i=M/o,m[e]=o,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)o=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,o)}p[E-2]=y,S+=1;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=v;e++)w.set(e,t,-w.get(e,t));for(;t<v&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<s-1)for(let r=0;r<s;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let s=0;s<r;s++)e=g.get(s,t+1),g.set(s,t+1,g.get(s,t)),g.set(s,t,e);t++}S=0,E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=s,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,s=this.s.length,o=k.zeros(s,s);for(let t=0;t<s;t++)Math.abs(this.s[t])<=r?o.set(t,t,0):o.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(o),l=i.rows,u=n.rows,a=k.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let o=0;o<s;o++)r+=h.get(t,o)*n.get(e,o);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(k.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,s=t.columns,o=new k(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<s;r++)Math.abs(this.s[r])>e&&o.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new k(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let s=0;s<h;s++)r+=o.get(t,s)*n.get(e,s);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let s=0,o=r.length;s<o;s++)r[s]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return k.diag(this.s)}}function O(t,e=!1){return t=F.checkMatrix(t),e?new L(t).inverse():U(t,k.eye(t.rows))}function U(t,e,r=!1){return t=F.checkMatrix(t),e=F.checkMatrix(e),r?new L(t).solve(e):t.isSquare()?new _(t).solve(e):new $(t).solve(e)}function X(t){if((t=k.checkMatrix(t)).isSquare()){if(0===t.columns)return 1;let e,r,s,o;if(2===t.columns)return e=t.get(0,0),r=t.get(0,1),s=t.get(1,0),o=t.get(1,1),e*o-r*s;if(3===t.columns){let o,n,i;return o=new P(t,[1,2],[1,2]),n=new P(t,[1,2],[0,2]),i=new P(t,[1,2],[0,1]),e=t.get(0,0),r=t.get(0,1),s=t.get(0,2),e*X(o)-r*X(n)+s*X(i)}return new _(t).determinant}throw Error("determinant can only be calculated for a square matrix")}function Y(t,e){let r=[];for(let s=0;s<t;s++)s!==e&&r.push(s);return r}function G(t,e,r,s=1e-9,o=1e-9){if(t>o)return new Array(e.rows+1).fill(0);{let t=e.addRow(r,[0]);for(let e=0;e<t.rows;e++)Math.abs(t.get(e,0))<s&&t.set(e,0,0);return t.to1DArray()}}function Q(t,e={}){const{thresholdValue:r=1e-9,thresholdError:s=1e-9}=e;let o=(t=k.checkMatrix(t)).rows,n=new k(o,o);for(let e=0;e<o;e++){let i=k.columnVector(t.getRow(e)),h=t.subMatrixRow(Y(o,e)).transpose(),l=new L(h).solve(i),u=k.sub(i,h.mmul(l)).abs().max();n.setRow(e,G(u,l,e,r,s))}return n}function W(t,e=Number.EPSILON){if((t=k.checkMatrix(t)).isEmpty())return t.transpose();let r=new L(t,{autoTranspose:!0}),s=r.leftSingularVectors,o=r.rightSingularVectors,n=r.diagonal;for(let t=0;t<n.length;t++)Math.abs(n[t])>e?n[t]=1/n[t]:n[t]=0;return o.mmul(k.diag(n).mmul(s.transpose()))}function B(t,e=t,r={}){t=new k(t);let s=!1;if("object"!=typeof e||k.isMatrix(e)||Array.isArray(e)?e=new k(e):(r=e,e=t,s=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:o=!0}=r;o&&(t=t.center("column"),s||(e=e.center("column")));const n=t.transpose().mmul(e);for(let e=0;e<n.rows;e++)for(let r=0;r<n.columns;r++)n.set(e,r,n.get(e,r)*(1/(t.rows-1)));return n}function J(t,e=t,r={}){t=new k(t);let s=!1;if("object"!=typeof e||k.isMatrix(e)||Array.isArray(e)?e=new k(e):(r=e,e=t,s=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:o=!0,scale:n=!0}=r;o&&(t.center("column"),s||e.center("column")),n&&(t.scale("column"),s||e.scale("column"));const i=t.standardDeviation("column",{unbiased:!0}),h=s?i:e.standardDeviation("column",{unbiased:!0}),l=t.transpose().mmul(e);for(let e=0;e<l.rows;e++)for(let r=0;r<l.columns;r++)l.set(e,r,l.get(e,r)*(1/(i[e]*h[r]))*(1/(t.rows-1)));return l}class K{constructor(t,e={}){const{assumeSymmetric:r=!1}=e;if(!(t=F.checkMatrix(t)).isSquare())throw new Error("Matrix is not a square matrix");if(t.isEmpty())throw new Error("Matrix must be non-empty");let s,o,n=t.columns,i=new k(n,n),h=new Float64Array(n),l=new Float64Array(n),u=t,a=!1;if(a=!!r||t.isSymmetric(),a){for(s=0;s<n;s++)for(o=0;o<n;o++)i.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c;for(l=0;l<t;l++)r[l]=s.get(t-1,l);for(h=t-1;h>0;h--){for(c=0,i=0,u=0;u<h;u++)c+=Math.abs(r[u]);if(0===c)for(e[h]=r[h-1],l=0;l<h;l++)r[l]=s.get(h-1,l),s.set(h,l,0),s.set(l,h,0);else{for(u=0;u<h;u++)r[u]/=c,i+=r[u]*r[u];for(o=r[h-1],n=Math.sqrt(i),o>0&&(n=-n),e[h]=c*n,i-=o*n,r[h-1]=o-n,l=0;l<h;l++)e[l]=0;for(l=0;l<h;l++){for(o=r[l],s.set(l,h,o),n=e[l]+s.get(l,l)*o,u=l+1;u<=h-1;u++)n+=s.get(u,l)*r[u],e[u]+=s.get(u,l)*o;e[l]=n}for(o=0,l=0;l<h;l++)e[l]/=i,o+=e[l]*r[l];for(a=o/(i+i),l=0;l<h;l++)e[l]-=a*r[l];for(l=0;l<h;l++){for(o=r[l],n=e[l],u=l;u<=h-1;u++)s.set(u,l,s.get(u,l)-(o*e[u]+n*r[u]));r[l]=s.get(h-1,l),s.set(h,l,0)}}r[h]=i}for(h=0;h<t-1;h++){if(s.set(t-1,h,s.get(h,h)),s.set(h,h,1),i=r[h+1],0!==i){for(u=0;u<=h;u++)r[u]=s.get(u,h+1)/i;for(l=0;l<=h;l++){for(n=0,u=0;u<=h;u++)n+=s.get(u,h+1)*s.get(u,l);for(u=0;u<=h;u++)s.set(u,l,s.get(u,l)-n*r[u])}}for(u=0;u<=h;u++)s.set(u,h+1,0)}for(l=0;l<t;l++)r[l]=s.get(t-1,l),s.set(t-1,l,0);s.set(t-1,t-1,1),e[0]=0}(n,l,h,i),function(t,e,r,s){let o,n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b;for(i=1;i<t;i++)e[i-1]=e[i];e[t-1]=0;let x=0,E=0,v=Number.EPSILON;for(u=0;u<t;u++){for(E=Math.max(E,Math.abs(r[u])+Math.abs(e[u])),a=u;a<t&&!(Math.abs(e[a])<=v*E);)a++;if(a>u){b=0;do{for(b+=1,o=r[u],c=(r[u+1]-o)/(2*e[u]),f=H(c,1),c<0&&(f=-f),r[u]=e[u]/(c+f),r[u+1]=e[u]*(c+f),m=r[u+1],n=o-r[u],i=u+2;i<t;i++)r[i]-=n;for(x+=n,c=r[a],g=1,w=g,p=g,d=e[u+1],y=0,M=0,i=a-1;i>=u;i--)for(p=w,w=g,M=y,o=g*e[i],n=g*c,f=H(c,e[i]),e[i+1]=y*f,y=e[i]/f,g=c/f,c=g*r[i]-y*o,r[i+1]=n+y*(g*o+y*r[i]),l=0;l<t;l++)n=s.get(l,i+1),s.set(l,i+1,y*s.get(l,i)+g*n),s.set(l,i,g*s.get(l,i)-y*n);c=-y*M*p*d*e[u]/m,e[u]=y*c,r[u]=g*c}while(Math.abs(e[u])>v*E)}r[u]=r[u]+x,e[u]=0}for(i=0;i<t-1;i++){for(l=i,c=r[i],h=i+1;h<t;h++)r[h]<c&&(l=h,c=r[h]);if(l!==i)for(r[l]=r[i],r[i]=c,h=0;h<t;h++)c=s.get(h,i),s.set(h,i,s.get(h,l)),s.set(h,l,c)}}(n,l,h,i)}else{let t=new k(n,n),e=new Float64Array(n);for(o=0;o<n;o++)for(s=0;s<n;s++)t.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c=t-1;for(u=1;u<=c-1;u++){for(a=0,h=u;h<=c;h++)a+=Math.abs(e.get(h,u-1));if(0!==a){for(i=0,h=c;h>=u;h--)r[h]=e.get(h,u-1)/a,i+=r[h]*r[h];for(n=Math.sqrt(i),r[u]>0&&(n=-n),i-=r[u]*n,r[u]=r[u]-n,l=u;l<t;l++){for(o=0,h=c;h>=u;h--)o+=r[h]*e.get(h,l);for(o/=i,h=u;h<=c;h++)e.set(h,l,e.get(h,l)-o*r[h])}for(h=0;h<=c;h++){for(o=0,l=c;l>=u;l--)o+=r[l]*e.get(h,l);for(o/=i,l=u;l<=c;l++)e.set(h,l,e.get(h,l)-o*r[l])}r[u]=a*r[u],e.set(u,u-1,a*n)}}for(h=0;h<t;h++)for(l=0;l<t;l++)s.set(h,l,h===l?1:0);for(u=c-1;u>=1;u--)if(0!==e.get(u,u-1)){for(h=u+1;h<=c;h++)r[h]=e.get(h,u-1);for(l=u;l<=c;l++){for(n=0,h=u;h<=c;h++)n+=r[h]*s.get(h,l);for(n=n/r[u]/e.get(u,u-1),h=u;h<=c;h++)s.set(h,l,s.get(h,l)+n*r[h])}}}(n,t,e,i),function(t,e,r,s,o){let n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b=t-1,x=t-1,E=Number.EPSILON,v=0,S=0,k=0,R=0,I=0,T=0,A=0,q=0;for(n=0;n<t;n++)for((n<0||n>x)&&(r[n]=o.get(n,n),e[n]=0),i=Math.max(n-1,0);i<t;i++)S+=Math.abs(o.get(n,i));for(;b>=0;){for(l=b;l>0&&(T=Math.abs(o.get(l-1,l-1))+Math.abs(o.get(l,l)),0===T&&(T=S),!(Math.abs(o.get(l,l-1))<E*T));)l--;if(l===b)o.set(b,b,o.get(b,b)+v),r[b]=o.get(b,b),e[b]=0,b--,q=0;else if(l===b-1){if(c=o.get(b,b-1)*o.get(b-1,b),k=(o.get(b-1,b-1)-o.get(b,b))/2,R=k*k+c,A=Math.sqrt(Math.abs(R)),o.set(b,b,o.get(b,b)+v),o.set(b-1,b-1,o.get(b-1,b-1)+v),f=o.get(b,b),R>=0){for(A=k>=0?k+A:k-A,r[b-1]=f+A,r[b]=r[b-1],0!==A&&(r[b]=f-c/A),e[b-1]=0,e[b]=0,f=o.get(b,b-1),T=Math.abs(f)+Math.abs(A),k=f/T,R=A/T,I=Math.sqrt(k*k+R*R),k/=I,R/=I,i=b-1;i<t;i++)A=o.get(b-1,i),o.set(b-1,i,R*A+k*o.get(b,i)),o.set(b,i,R*o.get(b,i)-k*A);for(n=0;n<=b;n++)A=o.get(n,b-1),o.set(n,b-1,R*A+k*o.get(n,b)),o.set(n,b,R*o.get(n,b)-k*A);for(n=0;n<=x;n++)A=s.get(n,b-1),s.set(n,b-1,R*A+k*s.get(n,b)),s.set(n,b,R*s.get(n,b)-k*A)}else r[b-1]=f+k,r[b]=f+k,e[b-1]=A,e[b]=-A;b-=2,q=0}else{if(f=o.get(b,b),m=0,c=0,l<b&&(m=o.get(b-1,b-1),c=o.get(b,b-1)*o.get(b-1,b)),10===q){for(v+=f,n=0;n<=b;n++)o.set(n,n,o.get(n,n)-f);T=Math.abs(o.get(b,b-1))+Math.abs(o.get(b-1,b-2)),f=m=.75*T,c=-.4375*T*T}if(30===q&&(T=(m-f)/2,T=T*T+c,T>0)){for(T=Math.sqrt(T),m<f&&(T=-T),T=f-c/((m-f)/2+T),n=0;n<=b;n++)o.set(n,n,o.get(n,n)-T);v+=T,f=m=c=.964}for(q+=1,u=b-2;u>=l&&(A=o.get(u,u),I=f-A,T=m-A,k=(I*T-c)/o.get(u+1,u)+o.get(u,u+1),R=o.get(u+1,u+1)-A-I-T,I=o.get(u+2,u+1),T=Math.abs(k)+Math.abs(R)+Math.abs(I),k/=T,R/=T,I/=T,u!==l)&&!(Math.abs(o.get(u,u-1))*(Math.abs(R)+Math.abs(I))<E*(Math.abs(k)*(Math.abs(o.get(u-1,u-1))+Math.abs(A)+Math.abs(o.get(u+1,u+1)))));)u--;for(n=u+2;n<=b;n++)o.set(n,n-2,0),n>u+2&&o.set(n,n-3,0);for(h=u;h<=b-1&&(y=h!==b-1,h!==u&&(k=o.get(h,h-1),R=o.get(h+1,h-1),I=y?o.get(h+2,h-1):0,f=Math.abs(k)+Math.abs(R)+Math.abs(I),0!==f&&(k/=f,R/=f,I/=f)),0!==f);h++)if(T=Math.sqrt(k*k+R*R+I*I),k<0&&(T=-T),0!==T){for(h!==u?o.set(h,h-1,-T*f):l!==u&&o.set(h,h-1,-o.get(h,h-1)),k+=T,f=k/T,m=R/T,A=I/T,R/=k,I/=k,i=h;i<t;i++)k=o.get(h,i)+R*o.get(h+1,i),y&&(k+=I*o.get(h+2,i),o.set(h+2,i,o.get(h+2,i)-k*A)),o.set(h,i,o.get(h,i)-k*f),o.set(h+1,i,o.get(h+1,i)-k*m);for(n=0;n<=Math.min(b,h+3);n++)k=f*o.get(n,h)+m*o.get(n,h+1),y&&(k+=A*o.get(n,h+2),o.set(n,h+2,o.get(n,h+2)-k*I)),o.set(n,h,o.get(n,h)-k),o.set(n,h+1,o.get(n,h+1)-k*R);for(n=0;n<=x;n++)k=f*s.get(n,h)+m*s.get(n,h+1),y&&(k+=A*s.get(n,h+2),s.set(n,h+2,s.get(n,h+2)-k*I)),s.set(n,h,s.get(n,h)-k),s.set(n,h+1,s.get(n,h+1)-k*R)}}}if(0!==S){for(b=t-1;b>=0;b--)if(k=r[b],R=e[b],0===R)for(l=b,o.set(b,b,1),n=b-1;n>=0;n--){for(c=o.get(n,n)-k,I=0,i=l;i<=b;i++)I+=o.get(n,i)*o.get(i,b);if(e[n]<0)A=c,T=I;else if(l=n,0===e[n]?o.set(n,b,0!==c?-I/c:-I/(E*S)):(f=o.get(n,n+1),m=o.get(n+1,n),R=(r[n]-k)*(r[n]-k)+e[n]*e[n],a=(f*T-A*I)/R,o.set(n,b,a),o.set(n+1,b,Math.abs(f)>Math.abs(A)?(-I-c*a)/f:(-T-m*a)/A)),a=Math.abs(o.get(n,b)),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b,o.get(i,b)/a)}else if(R<0)for(l=b-1,Math.abs(o.get(b,b-1))>Math.abs(o.get(b-1,b))?(o.set(b-1,b-1,R/o.get(b,b-1)),o.set(b-1,b,-(o.get(b,b)-k)/o.get(b,b-1))):(M=Z(0,-o.get(b-1,b),o.get(b-1,b-1)-k,R),o.set(b-1,b-1,M[0]),o.set(b-1,b,M[1])),o.set(b,b-1,0),o.set(b,b,1),n=b-2;n>=0;n--){for(g=0,w=0,i=l;i<=b;i++)g+=o.get(n,i)*o.get(i,b-1),w+=o.get(n,i)*o.get(i,b);if(c=o.get(n,n)-k,e[n]<0)A=c,I=g,T=w;else if(l=n,0===e[n]?(M=Z(-g,-w,c,R),o.set(n,b-1,M[0]),o.set(n,b,M[1])):(f=o.get(n,n+1),m=o.get(n+1,n),p=(r[n]-k)*(r[n]-k)+e[n]*e[n]-R*R,d=2*(r[n]-k)*R,0===p&&0===d&&(p=E*S*(Math.abs(c)+Math.abs(R)+Math.abs(f)+Math.abs(m)+Math.abs(A))),M=Z(f*I-A*g+R*w,f*T-A*w-R*g,p,d),o.set(n,b-1,M[0]),o.set(n,b,M[1]),Math.abs(f)>Math.abs(A)+Math.abs(R)?(o.set(n+1,b-1,(-g-c*o.get(n,b-1)+R*o.get(n,b))/f),o.set(n+1,b,(-w-c*o.get(n,b)-R*o.get(n,b-1))/f)):(M=Z(-I-m*o.get(n,b-1),-T-m*o.get(n,b),A,R),o.set(n+1,b-1,M[0]),o.set(n+1,b,M[1]))),a=Math.max(Math.abs(o.get(n,b-1)),Math.abs(o.get(n,b))),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b-1,o.get(i,b-1)/a),o.set(i,b,o.get(i,b)/a)}for(n=0;n<t;n++)if(n<0||n>x)for(i=n;i<t;i++)s.set(n,i,o.get(n,i));for(i=t-1;i>=0;i--)for(n=0;n<=x;n++){for(A=0,h=0;h<=Math.min(i,x);h++)A+=s.get(n,h)*o.get(h,i);s.set(n,i,A)}}}(n,l,h,i,t)}this.n=n,this.e=l,this.d=h,this.V=i}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let t,e,r=this.n,s=this.e,o=this.d,n=new k(r,r);for(t=0;t<r;t++){for(e=0;e<r;e++)n.set(t,e,0);n.set(t,t,o[t]),s[t]>0?n.set(t,t+1,s[t]):s[t]<0&&n.set(t,t-1,s[t])}return n}}function Z(t,e,r,s){let o,n;return Math.abs(r)>Math.abs(s)?(o=s/r,n=r+o*s,[(t+o*e)/n,(e-o*t)/n]):(o=r/s,n=s+o*r,[(o*t+e)/n,(o*e-t)/n])}class tt{constructor(t){if(!(t=F.checkMatrix(t)).isSymmetric())throw new Error("Matrix is not symmetric");let e,r,s,o=t,n=o.rows,i=new k(n,n),h=!0;for(r=0;r<n;r++){let t=0;for(s=0;s<r;s++){let n=0;for(e=0;e<s;e++)n+=i.get(s,e)*i.get(r,e);n=(o.get(r,s)-n)/i.get(s,s),i.set(r,s,n),t+=n*n}for(t=o.get(r,r)-t,h&=t>0,i.set(r,r,Math.sqrt(Math.max(t,0))),s=r+1;s<n;s++)i.set(r,s,0)}this.L=i,this.positiveDefinite=Boolean(h)}isPositiveDefinite(){return this.positiveDefinite}solve(t){t=F.checkMatrix(t);let e=this.L,r=e.rows;if(t.rows!==r)throw new Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw new Error("Matrix is not positive definite");let s,o,n,i=t.columns,h=t.clone();for(n=0;n<r;n++)for(o=0;o<i;o++){for(s=0;s<n;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(n,s));h.set(n,o,h.get(n,o)/e.get(n,n))}for(n=r-1;n>=0;n--)for(o=0;o<i;o++){for(s=n+1;s<r;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(s,n));h.set(n,o,h.get(n,o)/e.get(n,n))}return h}get lowerTriangularMatrix(){return this.L}}class et{constructor(t,e={}){t=F.checkMatrix(t);let{Y:r}=e;const{scaleScores:s=!1,maxIterations:o=1e3,terminationCriteria:n=1e-10}=e;let i;if(r){if(r=Array.isArray(r)&&"number"==typeof r[0]?k.columnVector(r):F.checkMatrix(r),!r.isColumnVector()||r.rows!==t.rows)throw new Error("Y must be a column vector of length X.rows");i=r}else i=t.getColumnVector(0);let h,l,u,a,c=1;for(let e=0;e<o&&c>n;e++)u=t.transpose().mmul(i).div(i.transpose().mmul(i).get(0,0)),u=u.div(u.norm()),h=t.mmul(u).div(u.transpose().mmul(u).get(0,0)),e>0&&(c=h.clone().sub(a).pow(2).sum()),a=h.clone(),r?(l=r.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),l=l.div(l.norm()),i=r.mmul(l).div(l.transpose().mmul(l).get(0,0))):i=h;if(r){let e=t.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0));e=e.div(e.norm());let s=t.clone().sub(h.clone().mmul(e.transpose())),o=i.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),n=r.clone().sub(h.clone().mulS(o.get(0,0)).mmul(l.transpose()));this.t=h,this.p=e.transpose(),this.w=u.transpose(),this.q=l,this.u=i,this.s=h.transpose().mmul(h),this.xResidual=s,this.yResidual=n,this.betas=o}else this.w=u.transpose(),this.s=h.transpose().mmul(h).sqrt(),this.t=s?h.clone().div(this.s.get(0,0)):h,this.xResidual=t.sub(h.mmul(u.transpose()))}}},842:(t,e,r)=>{"use strict";r.d(e,{Z:()=>s});class s{constructor(t=[],e=o){if(this.data=t,this.length=this.data.length,this.compare=e,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,s=e[t];for(;t>0;){const o=t-1>>1,n=e[o];if(r(s,n)>=0)break;e[t]=n,t=o}e[t]=s}_down(t){const{data:e,compare:r}=this,s=this.length>>1,o=e[t];for(;t<s;){let s=1+(t<<1),n=e[s];const i=s+1;if(i<this.length&&r(e[i],n)<0&&(s=i,n=e[i]),r(n,o)>=0)break;e[t]=n,t=s}e[t]=o}}function o(t,e){return t<e?-1:t>e?1:0}},902:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{solveHomography:n}=r(450);t.exports={estimate:({screenCoords:t,worldCoords:e,projectionTransform:r})=>{const i=n(e.map((t=>[t.x,t.y])),t.map((t=>[t.x,t.y]))),h=new s([[i[0],i[1],i[2]],[i[3],i[4],i[5]],[i[6],i[7],i[8]]]),l=new s(r),u=o(l).mmul(h).to1DArray(),a=Math.sqrt(u[0]*u[0]+u[3]*u[3]+u[6]*u[6]),c=Math.sqrt(u[1]*u[1]+u[4]*u[4]+u[7]*u[7]),f=(a+c)/2,m=[];m[0]=u[0]/a,m[3]=u[3]/a,m[6]=u[6]/a,m[1]=u[1]/c,m[4]=u[4]/c,m[7]=u[7]/c,m[2]=m[3]*m[7]-m[6]*m[4],m[5]=m[6]*m[1]-m[0]*m[7],m[8]=m[0]*m[4]-m[1]*m[3];const g=Math.sqrt(m[2]*m[2]+m[5]*m[5]+m[8]*m[8]);m[2]/=g,m[5]/=g,m[8]/=g;const w=[];return w[0]=u[2]/f,w[1]=u[5]/f,w[2]=u[8]/f,[[m[0],m[1],m[2],w[0]],[m[3],m[4],m[5],w[1]],[m[6],m[7],m[8],w[2]]]}}},421:(t,e,r)=>{const{estimate:s}=r(902),{refineEstimate:o}=r(269);t.exports={Estimator:class{constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return s({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return o({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}}}},269:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{normalizePoints:n,applyModelViewProjectionTransform:i,buildModelViewProjectionTransform:h,computeScreenCoordiate:l}=r(420);let u=[[],[],[]],a=[[],[]],c=[[],[],[]];const f=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s,inlierProb:o})=>{const n=o<1;let i=t,u=0,a=0,c=new Array(r.length),f=new Array(r.length),p=new Array(r.length),d=new Array(r.length);for(let t=0;t<=10;t++){const y=h(e,i);for(let t=0;t<r.length;t++){const e=l(y,r[t].x,r[t].y,r[t].z),o=s[t].x-e.x,n=s[t].y-e.y;p[t]=o,d[t]=n,c[t]=o*o+n*n}let M;if(a=0,n){const t=Math.max(3,Math.floor(r.length*o)-1);for(let t=0;t<r.length;t++)f[t]=c[t];f.sort(((t,e)=>t-e)),M=Math.max(4*f[t],16);for(let t=0;t<r.length;t++)f[t]>M?a+=M/6:a+=M/6*(1-(1-f[t]/M)*(1-f[t]/M)*(1-f[t]/M))}else for(let t=0;t<r.length;t++)a+=c[t];if(a/=r.length,a<.1)break;if(t>0&&a/u>.99)break;if(10===t)break;u=a;const b=[],x=[];for(let t=0;t<r.length;t++){if(n&&c[t]>M)continue;const s=w({modelViewProjectionTransform:y,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-c[t]/M)*(1-c[t]/M);for(let t=0;t<2;t++)for(let r=0;r<6;r++)s[t][r]*=e;b.push([p[t]*e]),b.push([d[t]*e])}else b.push([p[t]]),b.push([d[t]]);for(let t=0;t<s.length;t++)x.push(s[t])}const E=g({dU:b,J_U_S:x});if(null===E)break;i=m({modelViewTransform:i,dS:E})}return{modelViewTransform:i,err:a}},m=({modelViewTransform:t,dS:e})=>{let r,s,o,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];n<1e-6?(r=1,s=0,o=0,n=0):(n=Math.sqrt(n),r=e[0]/n,s=e[1]/n,o=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;u[0][0]=r*r*l+i,u[0][1]=r*s*l-o*h,u[0][2]=r*o*l+s*h,u[0][3]=e[3],u[1][0]=s*r*l+o*h,u[1][1]=s*s*l+i,u[1][2]=s*o*l-r*h,u[1][3]=e[4],u[2][0]=o*r*l-s*h,u[2][1]=o*s*l+r*h,u[2][2]=o*o*l+i,u[2][3]=e[5];const a=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)a[e][r]=t[e][0]*u[0][r]+t[e][1]*u[1][r]+t[e][2]*u[2][r];a[e][3]+=t[e][3]}return a},g=({dU:t,J_U_S:e})=>{const r=new s(e),n=new s(t),i=r.transpose(),h=i.mmul(r),l=i.mmul(n);let u;try{u=o(h)}catch(t){return null}return u.mmul(l).to1DArray()},w=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:s})=>{const o=e,{x:n,y:h,z:l}=s,u=i(t,n,h,l),f=u.z*u.z;a[0][0]=r[0][0]*u.z/f,a[0][1]=r[0][1]*u.z/f,a[0][2]=(r[0][2]*u.z-r[2][2]*u.x)/f,a[1][0]=r[1][0]*u.z/f,a[1][1]=r[1][1]*u.z/f,a[1][2]=(r[1][2]*u.z-r[2][2]*u.y)/f,c[0][0]=o[0][2]*h,c[0][1]=-o[0][2]*n,c[0][2]=o[0][1]*n-o[0][0]*h,c[0][3]=o[0][0],c[0][4]=o[0][1],c[0][5]=o[0][2],c[1][0]=o[1][2]*h,c[1][1]=-o[1][2]*n,c[1][2]=o[1][1]*n-o[1][0]*h,c[1][3]=o[1][0],c[1][4]=o[1][1],c[1][5]=o[1][2],c[2][0]=o[2][2]*h,c[2][1]=-o[2][2]*n,c[2][2]=o[2][1]*n-o[2][0]*h,c[2][3]=o[2][0],c[2][4]=o[2][1],c[2][5]=o[2][2];const m=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){m[t][e]=0;for(let r=0;r<3;r++)m[t][e]+=a[t][r]*c[r][e]}return m};t.exports={refineEstimate:({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s})=>{let o=0,n=0;for(let t=0;t<r.length;t++)o+=r[t].x,n+=r[t].y;o/=r.length,n/=r.length;const i=[];for(let t=0;t<r.length;t++)i.push({x:r[t].x-o,y:r[t].y-n,z:r[t].z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*o+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*o+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*o+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(let t=0;t<l.length;t++){const r=f({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:s,inlierProb:l[t]});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*o-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*o-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*o-a[2][1]*n,a)}}},420:t=>{const e=(t,e,r,s)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]});t.exports={buildModelViewProjectionTransform:(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],applyModelViewProjectionTransform:e,computeScreenCoordiate:(t,r,s,o)=>{const{x:n,y:i,z:h}=e(t,r,s);return{x:n/h,y:i/h}}}},233:t=>{t.exports={compute:t=>{const{v1:e,v2:r}=t;let s=0;for(let t=0;t<e.length;t++){let i=(e[t]^r[t])>>>0;s+=(n=void 0,((n=((n=((n=((n=(o=i)-(o>>1&1431655765))>>2&858993459)+(858993459&n))>>4)+n&252645135)>>8)+n&16711935)>>16)+n&65535)}var o,n;return s}}},934:t=>{const e=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:s,scaleOneOverLogK:o})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],c=t.x-a[0],f=t.y-a[1];return{x:u[0]*r+u[1]*s+c,y:u[2]*r+u[3]*s+f,angle:n,scale:Math.log(i)*o}};t.exports={computeHoughMatches:t=>{const{keypoints:r,querypoints:s,keywidth:o,keyheight:n,querywidth:i,queryheight:h,matches:l}=t,u=1.2*i,a=-u,c=1.2*h,f=-c,m=12,g=1/Math.log(10),w=Math.max(o,n),p=Math.floor(o/2),d=Math.floor(n/2),y=[];for(let t=0;t<l.length;t++){const e=s[l[t].querypointIndex].scale,o=r[l[t].keypointIndex].scale;0==o&&console.log("ERROR divide zero");const n=e/o;y.push(n*w)}y.sort(((t,e)=>t-e));const M=.25*y[Math.floor(y.length/2)-(y.length%2==0?1:0)-1],b=Math.max(5,Math.ceil((u-a)/M)),x=Math.max(5,Math.ceil((c-f)/M)),E=b*x,v=E*m,S=[],k=[],R={};for(let t=0;t<l.length;t++){const o=s[l[t].querypointIndex],n=r[l[t].keypointIndex],{x:i,y:h,scale:w,angle:y}=e({querypoint:o,keypoint:n,keycenterX:p,keycenterY:d,scaleOneOverLogK:g});if(i<a||i>=u||h<f||h>=c||y<=-Math.PI||y>Math.PI||w<-1||w>=1){S[t]=!1;continue}let M=b*(i-a)/(u-a),I=x*(h-f)/(c-f),T=m*(y+Math.PI)/(2*Math.PI),A=10*(w- -1)/2;k[t]={binX:M,binY:I,binAngle:T,binScale:A};let q=Math.floor(M-.5),C=Math.floor(I-.5),V=Math.floor(A-.5),P=(Math.floor(T-.5)+m)%m;if(q<0||q+1>=b||C<0||C+1>=x||V<0||V+1>=10)S[t]=!1;else{for(let t=0;t<2;t++){let e=q+t;for(let t=0;t<2;t++){let r=C+t;for(let t=0;t<2;t++){let s=(P+t)%m;for(let t=0;t<2;t++){const o=e+r*b+s*E+(V+t)*v;void 0===R[o]&&(R[o]=0),R[o]+=1}}}}S[t]=!0}}let I=0,T=-1;if(Object.keys(R).forEach((t=>{R[t]>I&&(I=R[t],T=t)})),I<3)return[];const A=Math.floor(T%v%E%b),q=Math.floor((T-A)%v%E/b),C=Math.floor((T-A-q*b)%v/E),V=Math.floor((T-A-q*b-C*E)/v),P=[];for(let t=0;t<l.length;t++){if(!S[t])continue;const e=k[t];if(Math.abs(e.binX-(A+.5))>=1)continue;if(Math.abs(e.binY-(q+.5))>=1)continue;if(Math.abs(e.binScale-(V+.5))>=1)continue;const r=Math.abs(e.binAngle-(C+.5));Math.min(r,m-r)>=1||P.push(l[t])}return P}}},582:(t,e,r)=>{const{match:s}=r(492);t.exports={Matcher:class{constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){const{result:r,debugExtra:o}=s({keyframes:t,querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});if(null===r)return{keyframeIndex:-1,debugExtra:o};const n=[],i=[],h=t[r.keyframeIndex];for(let t=0;t<r.matches.length;t++){const s=r.matches[t].querypointIndex,o=r.matches[t].keypointIndex;n.push({x:e[s].x,y:e[s].y}),i.push({x:(h.points[o].x+.5)/h.scale,y:(h.points[o].y+.5)/h.scale,z:0})}return{screenCoords:n,worldCoords:i,keyframeIndex:r.keyframeIndex,debugExtra:o}}}}},492:(t,e,r)=>{const s=r(842).Z,{compute:o}=r(233),{computeHoughMatches:n}=r(934),{computeHomography:i}=r(838),{multiplyPointHomographyInhomogenous:h,matrixInverse33:l}=r(289),u=({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i})=>{if(t.leaf){for(let e=0;e<t.pointIndexes.length;e++)n.push(t.pointIndexes[e]);return}const h=[];for(let s=0;s<t.children.length;s++){const n=t.children[s].centerPointIndex,i=o({v1:e[n].descriptors,v2:r.descriptors});h.push(i)}let l=Number.MAX_SAFE_INTEGER;for(let e=0;e<t.children.length;e++)l=Math.min(l,h[e]);for(let e=0;e<t.children.length;e++)h[e]!==l&&s.push({node:t.children[e],d:h[e]});for(let o=0;o<t.children.length;o++)h[o]===l&&u({node:t.children[o],keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i});if(i<8&&s.length>0){const{node:t,d:o}=s.pop();u({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i+=1})}},a=t=>{const{keypoints:e,querypoints:r,H:s,matches:o,threshold:n}=t,i=n*n,l=[];for(let t=0;t<o.length;t++){const n=r[o[t].querypointIndex],u=e[o[t].keypointIndex],a=h([u.x,u.y],s);(a[0]-n.x)*(a[0]-n.x)+(a[1]-n.y)*(a[1]-n.y)<=i&&l.push(o[t])}return l};t.exports={match:({keyframes:t,querypoints:e,querywidth:r,queryheight:c,debugMode:f})=>{let m=null;f&&(m=[]);let g=null;for(let w=0;w<t.length;w++){const p=t[w],d=p.points;f&&(m[w]={});const y=[];for(let t=0;t<e.length;t++){const r=p.pointsCluster.rootNode,n=e[t],i=[],h=new s([],((t,e)=>t.d-e.d));u({node:r,keypoints:d,querypoint:n,queue:h,keypointIndexes:i,numPop:0});let l=-1,a=Number.MAX_SAFE_INTEGER,c=Number.MAX_SAFE_INTEGER;for(let t=0;t<i.length;t++){const e=d[i[t]];if(e.maxima!=n.maxima)continue;const r=o({v1:e.descriptors,v2:n.descriptors});r<a?(c=a,a=r,l=i[t]):r<c&&(c=r)}-1!==l&&(c===Number.MAX_SAFE_INTEGER||1*a/c<.7)&&y.push({querypointIndex:t,keypointIndex:l})}if(f&&(m[w].matches=y),y.length<6)continue;const M=n({keypoints:p.points,querypoints:e,keywidth:p.width,keyheight:p.height,querywidth:r,queryheight:c,matches:y});f&&(m[w].houghMatches=M);const b=[],x=[];for(let t=0;t<M.length;t++){const r=e[M[t].querypointIndex],s=d[M[t].keypointIndex];b.push([s.x,s.y]),x.push([r.x,r.y])}const E=i({srcPoints:b,dstPoints:x,keyframe:p});if(null===E)continue;const v=a({querypoints:e,keypoints:p.points,H:E,matches:M,threshold:3});if(f&&(m[w].inlierMatches=v),v.length<6)continue;const S=l(E,1e-5),k=100,R=[];for(let t=0;t<e.length;t++){const r=e[t],s=h([r.x,r.y],S);let n=-1,i=Number.MAX_SAFE_INTEGER,l=Number.MAX_SAFE_INTEGER;for(let t=0;t<d.length;t++){const e=d[t];if(e.maxima!=r.maxima)continue;if((e.x-s[0])*(e.x-s[0])+(e.y-s[1])*(e.y-s[1])>k)continue;const h=o({v1:e.descriptors,v2:r.descriptors});h<i?(l=i,i=h,n=t):h<l&&(l=h)}-1!==n&&(l===Number.MAX_SAFE_INTEGER||1*i/l<.7)&&R.push({querypointIndex:t,keypointIndex:n})}f&&(m[w].matches2=R);const I=n({keypoints:p.points,querypoints:e,keywidth:p.width,keyheight:p.height,querywidth:r,queryheight:c,matches:R});f&&(m[w].houghMatches2=I);const T=[],A=[];for(let t=0;t<I.length;t++){const r=e[I[t].querypointIndex],s=d[I[t].keypointIndex];T.push([s.x,s.y]),A.push([r.x,r.y])}const q=i({srcPoints:T,dstPoints:A,keyframe:p});if(null===q)continue;const C=a({querypoints:e,keypoints:p.points,H:q,matches:I,threshold:3});C.length<6||(f&&(m[w].inlierMatches2=C,m[w].H2=q),(null===g||g.matches.length<C.length)&&(g={keyframeIndex:w,matches:C,H:q}))}return{result:g,debugExtra:m}}}},838:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{createRandomizer:n}=r(48),{quadrilateralConvex:i,matrixInverse33:h,smallestTriangleArea:l,multiplyPointHomographyInhomogenous:u,checkThreePointsConsistent:a,checkFourPointsConsistent:c,determinant:f}=r(289),{solveHomography:m}=r(450),g=({H:t,srcPoint:e,dstPoint:r,oneOverScale2:s})=>{const o=u(e,t),n=[o[0]-r[0],o[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*s)},w=({H:t,testPoints:e})=>{const r=[];for(let s=0;s<e.length;s++)r[s]=u(e[s],t);for(let t=0;t<e.length;t++){const s=t,o=(t+1)%e.length,n=(t+2)%e.length;if(!a(e[s],e[o],e[n],r[s],r[o],r[n]))return!1}return!0};t.exports={computeHomography:t=>{const{srcPoints:e,dstPoints:r,keyframe:s}=t,o=[[0,0],[s.width,0],[s.width,s.height],[0,s.height]];if(e.length<4)return null;const a=Math.min(50,e.length),f=n(),p=[];for(let t=0;t<e.length;t++)p[t]=t;f.arrayShuffle({arr:p,sampleSize:p.length});let d=0;const y=[];for(;d<100&&y.length<1024;){if(f.arrayShuffle({arr:p,sampleSize:4}),d+=1,!c(e[p[0]],e[p[1]],e[p[2]],e[p[3]],r[p[0]],r[p[1]],r[p[2]],r[p[3]]))continue;const t=m([e[p[0]],e[p[1]],e[p[2]],e[p[3]]],[r[p[0]],r[p[1]],r[p[2]],r[p[3]]]);null!==t&&w({H:t,testPoints:o})&&y.push(t)}if(0===y.length)return null;const M=[];for(let t=0;t<y.length;t++)M.push({H:y[t],cost:0});let b=a;for(let t=0;t<e.length&&M.length>2;t+=b){b=Math.min(a,e.length-t);let s=t+b;for(let o=0;o<M.length;o++)for(let n=t;n<s;n++){const t=g({H:M[o].H,srcPoint:e[n],dstPoint:r[n],oneOverScale2:1e4});M[o].cost+=t}M.sort(((t,e)=>t.cost-e.cost)),M.splice(-Math.floor((M.length+1)/2))}let x=0;for(let t=1;t<M.length;t++)M[t].cost<M[x].cost&&(x=t);const E=(({inH:t})=>{const e=1/t[8],r=[];for(let s=0;s<8;s++)r[s]=t[s]*e;return r[8]=1,r})({inH:M[x].H});return(({H:t,testPoints:e,keyframe:r})=>{const s=h(t,1e-5);if(null===s)return!1;const o=[];for(let t=0;t<e.length;t++)o.push(u(e[t],s));return!(l(o[0],o[1],o[2],o[3])<r.width*r.height*1e-4||!i(o[0],o[1],o[2],o[3]))})({H:E,testPoints:o,keyframe:s})?E:null}}},289:t=>{const e=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),r=t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],s=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*s},s=(t,e)=>[t[0]-e[0],t[1]-e[1]],o=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)};t.exports={matrixInverse33:(t,e)=>{const s=r(t);if(Math.abs(s)<=e)return null;const o=1/s;return[(t[4]*t[8]-t[5]*t[7])*o,(t[2]*t[7]-t[1]*t[8])*o,(t[1]*t[5]-t[2]*t[4])*o,(t[5]*t[6]-t[3]*t[8])*o,(t[0]*t[8]-t[2]*t[6])*o,(t[2]*t[3]-t[0]*t[5])*o,(t[3]*t[7]-t[4]*t[6])*o,(t[1]*t[6]-t[0]*t[7])*o,(t[0]*t[4]-t[1]*t[3])*o]},matrixMul33:(t,e)=>{const r=[];return r[0]=t[0]*e[0]+t[1]*e[3]+t[2]*e[6],r[1]=t[0]*e[1]+t[1]*e[4]+t[2]*e[7],r[2]=t[0]*e[2]+t[1]*e[5]+t[2]*e[8],r[3]=t[3]*e[0]+t[4]*e[3]+t[5]*e[6],r[4]=t[3]*e[1]+t[4]*e[4]+t[5]*e[7],r[5]=t[3]*e[2]+t[4]*e[5]+t[5]*e[8],r[6]=t[6]*e[0]+t[7]*e[3]+t[8]*e[6],r[7]=t[6]*e[1]+t[7]*e[4]+t[8]*e[7],r[8]=t[6]*e[2]+t[7]*e[5]+t[8]*e[8],r},quadrilateralConvex:(t,r,s,o)=>{const n=e(t,r,s)<=0;return e(r,s,o)<=0===n&&e(s,o,t)<=0===n&&e(o,t,r)<=0===n},smallestTriangleArea:(t,e,r,n)=>{const i=s(e,t),h=s(r,t),l=s(n,t),u=s(e,r),a=s(n,r),c=o(i,h),f=o(h,l),m=o(i,l),g=o(u,a);return Math.min(Math.min(Math.min(c,f),m),g)},multiplyPointHomographyInhomogenous:(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8],s=[];return s[0]=(e[0]*t[0]+e[1]*t[1]+e[2])/r,s[1]=(e[3]*t[0]+e[4]*t[1]+e[5])/r,s},checkThreePointsConsistent:(t,r,s,o,n,i)=>e(t,r,s)>0==e(o,n,i)>0,checkFourPointsConsistent:(t,r,s,o,n,i,h,l)=>e(t,r,s)>0==e(n,i,h)>0&&e(r,s,o)>0==e(i,h,l)>0&&e(s,o,t)>0==e(h,l,n)>0&&e(o,t,r)>0==e(l,n,i)>0,determinant:r}},450:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),n=t=>{let e=0,r=0;for(let s=0;s<t.length;s++)e+=t[s][0],r+=t[s][1];let s=e/t.length,o=r/t.length,n=0;for(let e=0;e<t.length;e++){const r=t[e][0]-s,i=t[e][1]-o;n+=Math.sqrt(r*r+i*i)}let i=Math.sqrt(2)*t.length/n;const h=[];for(let e=0;e<t.length;e++)h.push([(t[e][0]-s)*i,(t[e][1]-o)*i]);return{normPoints:h,param:{meanX:s,meanY:o,s:i}}};t.exports={solveHomography:(t,e)=>{const{normPoints:r,param:i}=n(t),{normPoints:h,param:l}=n(e),u=h.length,a=[],c=[];for(let t=0;t<u;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*h[t][0],-r[t][1]*h[t][0]],s=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*h[t][1],-r[t][1]*h[t][1]];a.push(e),a.push(s),c.push([h[t][0]]),c.push([h[t][1]])}try{const t=new s(a),e=new s(c),r=t.transpose(),n=r.mmul(t),h=r.mmul(e);return((t,e,r)=>{const s=r.s*r.meanX,o=r.s*r.meanY,n=[t[0]+s*t[6],t[1]+s*t[7],(t[0]+s*t[6])*-e.meanX+(t[1]+s*t[7])*-e.meanY+(t[2]+s)/e.s,t[3]+o*t[6],t[4]+o*t[7],(t[3]+o*t[6])*-e.meanX+(t[4]+o*t[7])*-e.meanY+(t[5]+o)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n})(o(n).mmul(h).to1DArray(),i,l)}catch(t){return null}}}},48:t=>{t.exports={createRandomizer:()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;let s=e[t];e[t]=e[r],e[r]=s}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}})}}},e={};function r(s){if(e[s])return e[s].exports;var o=e[s]={exports:{}};return t[s](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var s in e)r.o(e,s)&&!r.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{const{Matcher:t}=r(582),{Estimator:e}=r(421);let s=null,o=null,n=!1,i=null,h=null;onmessage=r=>{const{data:l}=r;if("setup"===l.type)s=l.projectionTransform,o=l.matchingDataList,n=l.debugMode,i=new t(l.inputWidth,l.inputHeight,n),h=new e(l.projectionTransform);else if("match"===l.type){const t=l.skipTargetIndexes;let e=-1,r=null,s=null;n&&(s=[]);for(let u=0;u<o.length;u++){if(t.includes(u))continue;const{keyframeIndex:a,screenCoords:c,worldCoords:f,debugExtra:m}=i.matchDetection(o[u],l.featurePoints);if(n&&s.push(m),-1===a)continue;const g=h.estimate({screenCoords:c,worldCoords:f});if(null!==g){e=u,r=g;break}}postMessage({type:"matchDone",targetIndex:e,modelViewTransform:r,debugExtras:s})}else if("trackUpdate"===l.type){const{modelViewTransform:t,worldCoords:e,screenCoords:r}=l,s=h.refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r});postMessage({type:"trackUpdateDone",modelViewTransform:s})}}})()})();',n.p+"controller.worker.prod.js")}},9855:e=>{"use strict";var t=window.URL||window.webkitURL;e.exports=function(e,n){try{try{var r;try{(r=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)).append(e),r=r.getBlob()}catch(t){r=new Blob([e])}return new Worker(t.createObjectURL(r))}catch(t){return new Worker("data:application/javascript,"+encodeURIComponent(e))}}catch(e){if(!n)throw Error("Inline worker is not supported");return new Worker(n)}}},8481:(e,t,n)=>{const{Controller:r}=n(9356),{UI:s}=n(2749);n(5905),n(401);const i=n(2792);AFRAME.registerSystem("mindar-system",{container:null,video:null,processingImage:!1,init:function(){this.anchorEntities=[]},tick:function(){},setup:function({imageTargetSrc:e,maxTrack:t,showStats:n,uiLoading:r,uiScanning:i,uiError:a}){this.imageTargetSrc=e,this.maxTrack=t,this.showStats=n,this.ui=new s({uiLoading:r,uiScanning:i,uiError:a})},registerAnchor:function(e,t){this.anchorEntities.push({el:e,targetIndex:t})},start:function(){this.container=this.el.sceneEl.parentNode,this.showStats&&(this.mainStats=new i,this.mainStats.showPanel(0),this.mainStats.domElement.style.cssText="position:absolute;top:0px;left:0px;z-index:999",this.container.appendChild(this.mainStats.domElement)),this.ui.showLoading(),this._startVideo()},stop:function(){this.pause(),this.video.srcObject.getTracks().forEach((function(e){e.stop()})),this.video.remove()},pause:function(e=!1){e||this.video.pause(),this.controller.stopProcessVideo()},unpause:function(){this.video.play(),this.controller.processVideo(this.video)},_startVideo:function(){if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.el.emit("arError",{error:"VIDEO_FAIL"}),void this.ui.showCompatibility();navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then((e=>{this.video.addEventListener("loadedmetadata",(()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),this._startAR()})),this.video.srcObject=e})).catch((e=>{console.log("getUserMedia error",e),this.el.emit("arError",{error:"VIDEO_FAIL"})}))},_startAR:async function(){const e=this.video,t=this.container;let n,s;const i=e.videoWidth/e.videoHeight;i>t.clientWidth/t.clientHeight?(s=t.clientHeight,n=s*i):(n=t.clientWidth,s=n/i),this.controller=new r({inputWidth:e.videoWidth,inputHeight:e.videoHeight,maxTrack:this.maxTrack,onUpdate:e=>{if("processDone"===e.type)this.mainStats&&this.mainStats.update();else if("updateMatrix"===e.type){const{targetIndex:t,worldMatrix:n}=e;for(let e=0;e<this.anchorEntities.length;e++)this.anchorEntities[e].targetIndex===t&&(this.anchorEntities[e].el.updateWorldMatrix(n),n&&this.ui.hideScanning())}}});const a=this.controller.getProjectionMatrix(),o=2*Math.atan(1/a[5]/s*t.clientHeight)*180/Math.PI,l=a[14]/(a[10]-1),u=a[14]/(a[10]+1),c=(a[5],a[0],t.clientWidth/t.clientHeight),h=t.getElementsByTagName("a-camera")[0].getObject3D("camera");h.fov=o,h.aspect=c,h.near=l,h.far=u,h.updateProjectionMatrix(),this.video.style.top=-(s-t.clientHeight)/2+"px",this.video.style.left=-(n-t.clientWidth)/2+"px",this.video.style.width=n+"px",this.video.style.height=s+"px";const{dimensions:d}=await this.controller.addImageTargets(this.imageTargetSrc);for(let e=0;e<this.anchorEntities.length;e++){const{el:t,targetIndex:n}=this.anchorEntities[e];n<d.length&&t.setupMarker(d[n])}await this.controller.dummyRun(this.video),this.el.emit("arReady"),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video)}}),AFRAME.registerComponent("mindar",{dependencies:["mindar-system"],schema:{imageTargetSrc:{type:"string"},maxTrack:{type:"int",default:1},showStats:{type:"boolean",default:!1},autoStart:{type:"boolean",default:!0},uiLoading:{type:"string",default:"yes"},uiScanning:{type:"string",default:"yes"},uiError:{type:"string",default:"yes"}},init:function(){const e=this.el.sceneEl.systems["mindar-system"];e.setup({imageTargetSrc:this.data.imageTargetSrc,maxTrack:this.data.maxTrack,showStats:this.data.showStats,uiLoading:this.data.uiLoading,uiScanning:this.data.uiScanning,uiError:this.data.uiError}),this.data.autoStart&&this.el.sceneEl.addEventListener("renderstart",(()=>{e.start()}))}}),AFRAME.registerComponent("mindar-image-target",{dependencies:["mindar-system"],schema:{targetIndex:{type:"number"}},postMatrix:null,init:function(){this.el.sceneEl.systems["mindar-system"].registerAnchor(this,this.data.targetIndex);const e=this.el.object3D;e.visible=!1,e.matrixAutoUpdate=!1},setupMarker([e,t]){const n=new AFRAME.THREE.Vector3,r=new AFRAME.THREE.Quaternion,s=new AFRAME.THREE.Vector3;n.x=e/2,n.y=e/2+(t-e)/2,s.x=e,s.y=e,s.z=e,this.postMatrix=new AFRAME.THREE.Matrix4,this.postMatrix.compose(n,r,s)},updateWorldMatrix(e){if(this.el.object3D.visible||null===e?this.el.object3D.visible&&null===e&&this.el.emit("targetLost"):this.el.emit("targetFound"),this.el.object3D.visible=null!==e,null!==e){var t=new AFRAME.THREE.Matrix4;t.elements=e,t.multiply(this.postMatrix),this.el.object3D.matrix=t}}})},2138:(e,t,n)=>{const r=n(780),{buildImageList:s}=n(7508),i=n(1113);e.exports={Compiler:class{constructor(e){this.data=e}compileImageTargets(e,t){return new Promise(((n,s)=>{const i=[];for(let t=0;t<e.length;t++){const n=e[t],r=document.createElement("canvas");r.width=n.width,r.height=n.height;const s=r.getContext("2d");s.drawImage(n,0,0,n.width,n.height);const a=s.getImageData(0,0,n.width,n.height),o=new Uint8Array(n.width*n.height);for(let e=0;e<o.length;e++){const t=4*e;o[e]=Math.floor((a.data[t]+a.data[t+1]+a.data[t+2])/3)}const l={data:o,height:n.height,width:n.width};i.push(l)}const a=new r;a.onmessage=e=>{if("progress"===e.data.type)t(e.data.percent);else if("compileDone"===e.data.type){const{list:t}=e.data;for(let e=0;e<t.length;e++)this.data.push({targetImage:t[e].targetImage,trackingData:t[e].trackingData,matchingData:t[e].matchingData});n(this.data)}},a.postMessage({type:"compile",targetImages:i})}))}exportData(){const e=this.data;return i.encode({v:1,dataList:e})}importData(e){const t=i.decode(new Uint8Array(e));if(!t.v||1!==t.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=t;this.data=[];for(let e=0;e<n.length;e++)this.data.push({targetImage:n[e].targetImage,trackingData:n[e].trackingData,matchingData:n[e].matchingData});return this.data}}}},9356:(e,t,n)=>{const r=n(2563),s=n(4129),{Tracker:i}=n(6417),{Detector:a}=n(6416),{Compiler:o}=n(2138),{InputLoader:l}=n(7325);e.exports={Controller:class{constructor({inputWidth:e,inputHeight:t,onUpdate:n=null,maxTrack:r=1,debugMode:i=!1}){this.inputWidth=e,this.inputHeight=t,this.detector=new a(this.inputWidth,this.inputHeight),this.inputLoader=new l(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=i,this.processingVideo=!1,this.maxTrack=r,this.imageTargetStates=[];const o=45*Math.PI/180,u=this.inputHeight/2/Math.tan(o/2);this.projectionTransform=[[u,0,this.inputWidth/2],[0,u,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e4}),this.worker=new s,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=e=>{"matchDone"===e.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(e.data),"trackUpdateDone"===e.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(e.data)}}showTFStats(){console.log(r.memory().numTensors),console.table(r.memory())}addImageTargets(e){return new Promise((async(t,n)=>{const r=new o,s=await fetch(e),a=await s.arrayBuffer(),l=r.importData(a),u=[],c=[],h=[],d=[];for(let e=0;e<l.length;e++){const t=[],n=[],r=[];for(let s=0;s<l[e].imageList.length&&!(l[e].imageList[s].width<80||l[e].imageList[s].height<80);s++)t.push(l[e].imageList[s]),n.push(l[e].matchingData[s]),r.push(l[e].trackingData[s]);c.push(n),u.push(r),h.push(t),d.push([l[e].targetImage.width,l[e].targetImage.height]),this.imageTargetStates[e]={isTracking:!1}}this.tracker=new i(u,h,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:c}),this.markerDimensions=d,t({dimensions:d,matchingDataList:c,trackingDataList:u,imageListList:h})}))}dummyRun(e){const t=this.inputLoader.loadInput(e);this.detector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}processVideo(e){this.processingVideo||(this.processingVideo=!0,(async()=>{for(;this.processingVideo;){const t=this.inputLoader.loadInput(e),n=[];for(let e=0;e<this.imageTargetStates.length;e++)this.imageTargetStates[e].isTracking&&n.push(e);if(n.length<this.maxTrack){const e=this.detector.detect(t),{targetIndex:r,modelViewTransform:s}=await this._workerMatch(e,n);-1!==r&&(n.push(r),this.imageTargetStates[r].isTracking=!0,this.imageTargetStates[r].missCount=0,this.imageTargetStates[r].lastModelViewTransform=s,this.imageTargetStates[r].lastModelViewTransforms=[s,s,s],this.imageTargetStates[r].trackingMatrix=null)}for(let e=0;e<this.imageTargetStates.length;e++)if(this.imageTargetStates[e].isTracking){const{worldCoords:n,screenCoords:r}=this.tracker.track(t,this.imageTargetStates[e].lastModelViewTransforms,e);let s=null;if(n.length>=4&&(s=await this._workerTrackUpdate(this.imageTargetStates[e].lastModelViewTransform,{worldCoords:n,screenCoords:r})),null===s)this.imageTargetStates[e].missCount+=1,this.imageTargetStates[e].missCount>10&&(this.imageTargetStates[e].isTracking=!1,this.imageTargetStates[e].lastModelViewTransforms=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:e,worldMatrix:null}));else{this.imageTargetStates[e].missCount=0,this.imageTargetStates[e].lastModelViewTransforms.unshift(s),this.imageTargetStates[e].lastModelViewTransforms.pop();const t=this._glModelViewMatrix(s,e);if(null===this.imageTargetStates[e].trackingMatrix)this.imageTargetStates[e].trackingMatrix=t;else for(let n=0;n<t.length;n++)this.imageTargetStates[e].trackingMatrix[n]=this.imageTargetStates[e].trackingMatrix[n]+(t[n]-this.imageTargetStates[e].trackingMatrix[n])/10;const n=[];for(let r=0;r<t.length;r++)n[r]=this.imageTargetStates[e].trackingMatrix[r];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:e,worldMatrix:n})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await r.nextFrame()}})())}stopProcessVideo(){this.processingVideo=!1}async detect(e){const t=this.inputLoader.loadInput(e),n=await this.detector.detect(t);return t.dispose(),n}async match(e){const{targetIndex:t,modelViewTransform:n,debugExtras:r}=await this._workerMatch(e,[]);return{modelViewTransform:n,debugExtras:r}}async track(e,t,n){const r=this.inputLoader.loadInput(e),s=this.tracker.track(r,t,n);return r.dispose(),s}async trackAllFrames(e,t,n,r){const s=this.inputLoader.loadInput(e),i=[];for(let e=0;e<r;e++){const r=this.tracker.track(s,t,n,e);i.push(r)}return s.dispose(),i}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise((async(n,r)=>{this.workerMatchDone=e=>{n({targetIndex:e.targetIndex,modelViewTransform:e.modelViewTransform,debugExtras:e.debugExtras})},this.worker.postMessage({type:"match",featurePoints:e,skipTargetIndexes:t})}))}_workerTrackUpdate(e,t){return new Promise((async(n,r)=>{this.workerTrackDone=e=>{n(e.modelViewTransform)};const{worldCoords:s,screenCoords:i}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:s,screenCoords:i})}))}_glModelViewMatrix(e,t){const n=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*n+e[0][3],-(e[1][1]*n+e[1][3]),-(e[2][1]*n+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:n,near:r,far:s}){const i=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/n,-(2*e[1][2]/n-1),0],[0,0,-(s+r)/(s-r),-2*s*r/(s-r)],[0,0,-1,0]],a=[];for(let e=0;e<4;e++)for(let t=0;t<4;t++)a.push(i[t][e]);return a}}}},6416:(e,t,n)=>{const r=n(2563),{FREAKPOINTS:s}=n(2793),i=(s.length-1)*s.length/2;e.exports={Detector:class{constructor(e,t){this.width=e,this.height=t;let n=0;for(;e>=8&&t>=8&&(e/=2,t/=2,n++,5!==n););this.numOctaves=n,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let n=0;n<e.length;n++)t[4*n]=e[n],t[4*n+1]=e[n],t[4*n+2]=e[n],t[4*n+3]=255;const n=new ImageData(t,this.width,this.height);return this.detect(n)}detect(e){const t=[];for(let n=0;n<this.numOctaves;n++){0===n?t.push(this._applyFilter(e)):t.push(this._downsampleBilinear(t[t.length-1]));for(let e=0;e<2;e++)t.push(this._applyFilter(t[t.length-1]))}const n=[];for(let e=0;e<this.numOctaves;e++)for(let r=0;r<2;r++)0!==e||0!==r?n.push(this._differenceImageBinomial(t[3*e+r],t[3*e+r+1])):n.push(null);const r=[],s=[];for(let e=1;e<n.length-1;e++){if(e%2==1)continue;r.push(e);const t=n[e-1],i=n[e],a=n[e+1],o=this._buildExtremas(e,t,i,a);s.push(o)}const i=this._applyPrune(s,r),a=this._computeOrientationHistograms(i,t,r),o=this._smoothHistograms(a),l=this._computeExtremaAngles(o),u=this._computeExtremaFreak(t,this.numOctaves,i,l),c=this._computeFreakDescriptors(u),h=this._combine(i,l,c),d=h.arraySync();t.forEach((e=>e.dispose())),n.forEach((e=>e&&e.dispose())),s.forEach((e=>e.dispose())),i.dispose(),a.dispose(),o.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose();const p=[];for(let e=0;e<d.length;e++)for(let t=0;t<d[e].length;t++)if(0!==d[e][t][0]){const n=d[e][t],r=n.slice(5),s=[];let i=0,a=0;for(let e=0;e<r.length;e++)r[e]&&(i+=1),a+=1,32===a?(s.push(i),i=0,a=0):i*=2;s.push(i),p.push({maxima:n[0]>0,x:n[1],y:n[2],scale:n[3],angle:n[4],descriptors:s})}return p}_combine(e,t,n){if(!this.kernelCaches.combine){const e={variableNames:["extrema","angles","desc"],outputShape:[100,5,5+i],userCode:"\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int bucketIndex = coords[0];\n\t    int featureIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    if (propertyIndex == 0) {\n\t      setOutput(getExtrema(bucketIndex, featureIndex, 0));\n\t      return;\n\t    }\n\t    if (propertyIndex == 1) {\n\t      int extremaIndex = int(getExtrema(bucketIndex, featureIndex, 1));\n\t      int octave = extremaIndex + 1; // ref to buildExtrema, it starts at 2nd octave\n\t      float x = getExtrema(bucketIndex, featureIndex, 3);\n\t      float originalX = x * pow(2.0, float(octave)) + pow(2.0, float(octave-1)) - 0.5;\n\t      setOutput(originalX);\n\t      return;\n\t    }\n\t    if (propertyIndex == 2) {\n\t      int extremaIndex = int(getExtrema(bucketIndex, featureIndex, 1));\n\t      int octave = extremaIndex + 1; // ref to buildExtrema, it starts at 2nd octave\n\t      float y = getExtrema(bucketIndex, featureIndex, 2);\n\t      float originalY = y * pow(2.0, float(octave)) + pow(2.0, float(octave-1)) - 0.5;\n\t      setOutput(originalY);\n\t      return;\n\t    }\n\t    if (propertyIndex == 3) {\n\t      int extremaIndex = int(getExtrema(bucketIndex, featureIndex, 1));\n\t      int octave = extremaIndex + 1; // ref to buildExtrema, it starts at 2nd octave\n\t      float inputSigma = pow(2., float(octave));\n\t      setOutput(inputSigma);\n\t      return;\n\t    }\n\t    if (propertyIndex == 4) {\n\t      setOutput(getAngles(bucketIndex, featureIndex));\n\t      return;\n\t    }\n\t    setOutput( getDesc(bucketIndex, featureIndex, propertyIndex - 5));\n\t  }\n\t"};this.kernelCaches.combine=[e]}return r.tidy((()=>{const[s]=this.kernelCaches.combine;return r.backend().compileAndRun(s,[e,t,n])}))}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const t=[],n=[];for(let r=0;r<e.shape[2];r++)for(let s=r+1;s<e.shape[2];s++)t.push(r),n.push(s);const s=r.tensor(t,[t.length]).cast("int32"),i=r.tensor(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:r.keep(r.stack([s,i],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors;if(s.length,!this.kernelCaches.computeFreakDescriptors){const e={variableNames:["freak","p"],outputShape:[100,5,i],userCode:"\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int bucketIndex = coords[0];\n\t    int featureIndex = coords[1];\n\t    int descIndex = coords[2];\n\n            int p1 = int(getP(descIndex, 0));\n            int p2 = int(getP(descIndex, 1));\n\n\t    float v1 = getFreak(bucketIndex, featureIndex, p1);\n\t    float v2 = getFreak(bucketIndex, featureIndex, p2);\n\n\t    if (v1 < v2 + 0.01) {\n\t      setOutput(1.);\n\t      return;\n\t    }\n\t    setOutput(0.);\n\t  }\n\t"};this.kernelCaches.computeFreakDescriptors=[e]}return r.tidy((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return r.backend().compileAndRun(n,[e,t])}))}_computeExtremaFreak(e,t,n,i){const a=Math.pow(2,.5),o=1/Math.log(a);this.tensorCaches._computeExtremaFreak||r.tidy((()=>{const e=r.tensor(s);this.tensorCaches._computeExtremaFreak={freakPointsT:r.keep(e)}}));const l=[];for(let e=0;e<t;e++)for(let n=0;n<3;n++)2===n&&e!==t-1||l.push(3*e+n);const{freakPointsT:u}=this.tensorCaches._computeExtremaFreak;if(!this.kernelCaches._computeExtremaFreak){const n={variableNames:["extrema","angles","freakPoints"],outputShape:[100,5,s.length,3],userCode:`\n\t  void main() {\n\t    ivec4 coords = getOutputCoords();\n\n\t    int bucketIndex = coords[0];\n\t    int featureIndex = coords[1];\n\t    int freakIndex = coords[2];\n\t    int propertyIndex = coords[3];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int extremaIndex = int(getExtrema(bucketIndex, featureIndex, 1));\n\t    float inputY = getExtrema(bucketIndex, featureIndex, 2);\n\t    float inputX = getExtrema(bucketIndex, featureIndex, 3);\n\n            int inputOctave = extremaIndex + 1; // ref to buildExtrema, it starts at 2nd octave\n\n\t    float inputSigma = pow(2., float(inputOctave));\n\t    float inputAngle = getAngles(bucketIndex, featureIndex);\n\n            // Ensure the scale of the similarity transform is at least "1".\n            float transformScale = max(1., inputSigma * 7.);\n            float cos = transformScale * cos(inputAngle);\n            float sin = transformScale * sin(inputAngle);\n\n\t    float sigma = transformScale * freakSigma;\n\n\t    int octave = int(floor(log(sigma) / ${Math.log(2)}));\n\t    float fscale = log( sigma / pow(2., float(octave))) * ${o};\n            int scale = int(floor(fscale + 0.5)); // round() has problem in ios\n\n            // sgima of last scale = sigma of the first scale in next octave\n            // prefer coarser octaves for efficiency\n            if ( scale == 3 - 1) {\n              octave = octave + 1;\n              scale = 0;\n            }\n            // clip octave and scale\n            if (octave < 0) {\n              octave = 0;\n              scale = 0;\n            }\n            if ( int(octave) >= ${t}) {\n              octave = ${t} - 1;\n              scale = 3 - 1;\n            }\n\n            int imageIndex = octave * 3 + scale;\n\t    if (propertyIndex == 0) {\n\t      setOutput(float(imageIndex));\n\t      return;\n\t    }\n\n\t    // 1) inputX, Y is the coordinate in the octave scale. scale it back respect to the original size (i.e. octave 0)\n\n\t    // 2) compute the freak point location, according to the orientation\n\n            // 3) scale the freak point back into the octave scale\n\n\t    if (propertyIndex == 1) {\n\t      float originalY = inputY * pow(2.0, float(inputOctave)) + pow(2.0, float(inputOctave-1)) - 0.5;\n\t      float y = originalY + freakX * sin + freakY * cos;\n\t      float a = 1.0 / pow(2., float(octave));\n\t      float b = 0.5 * a - 0.5;\n\t      float yp = y * a + b; // y in octave\n\t      setOutput(yp);\n\t      return;\n\t    }\n\t    if (propertyIndex == 2) {\n\t      float originalX = inputX * pow(2.0, float(inputOctave)) + pow(2.0, float(inputOctave-1)) - 0.5;\n\t      float x = originalX + freakX * cos + freakY * -sin;\n\t      float a = 1.0 / pow(2., float(octave));\n\t      float b = 0.5 * a - 0.5;\n\t      float xp = x * a + b; // x in octave\n\t      setOutput(xp);\n\t      return;\n\t    }\n\t  }\n\t`},r=[];for(let t=0;t<l.length;t++){const n=l[t],i=e[n].shape[0],a=e[n].shape[1],o={variableNames:["pixel","position","combine"],outputShape:[100,5,s.length],userCode:`\n\t    void main() {\n\t      ivec3 coords = getOutputCoords();\n\t      int bucketIndex = coords[0];\n\t      int featureIndex = coords[1];\n\t      int freakIndex = coords[2];\n\n\t      int imageIndex = int(getPosition(bucketIndex, featureIndex, freakIndex, 0));\n\t      if (imageIndex != ${n}) {\n\t\tsetOutput(getCombine(bucketIndex, featureIndex, freakIndex));\n\t\treturn;\n\t      }\n\n\t      float yp = getPosition(bucketIndex, featureIndex, freakIndex, 1);\n\t      float xp = getPosition(bucketIndex, featureIndex, freakIndex, 2);\n\n\t      int x0 = int(floor(xp));\n\t      int x1 = x0 + 1;\n\t      int y0 = int(floor(yp));\n\t      int y1 = y0 + 1;\n\n\t      if (x0 < 0 || x1 >= ${a} || y0 < 0 || y1 >= ${i}) {\n\t\tsetOutput(0.);\n\t\treturn;\n\t      }\n\n\t      float f1 = getPixel(y0, x0);\n\t      float f2 = getPixel(y0, x1);\n\t      float f3 = getPixel(y1, x0);\n\t      float f4 = getPixel(y1, x1);\n\n\t      float x1f = float(x1);\n\t      float y1f = float(y1);\n\t      float x0f = float(x0);\n\t      float y0f = float(y0);\n\n\t      // ratio for interpolation between four neighbouring points\n\t      float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t  + (xp - x0f) * (y1f - yp) * f2\n\t\t\t  + (x1f - xp) * (yp - y0f) * f3\n\t\t\t  + (xp - x0f) * (yp - y0f) * f4;\n\n\t      setOutput(value);\n\t    }\n\t  `};r.push(o)}this.kernelCaches._computeExtremaFreak=[n,r]}return r.tidy((()=>{const[t,a]=this.kernelCaches._computeExtremaFreak,o=r.backend().compileAndRun(t,[n,i,u]);let c=r.zeros([100,5,s.length]);for(let t=0;t<l.length;t++){const n=l[t];c=r.backend().compileAndRun(a[t],[e[n],o,c])}return c}))}_computeExtremaAngles(e){if(!this.kernelCaches.computeExtremaAngles){const e={variableNames:["histogram"],outputShape:[100,5],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int bucketIndex = coords[0];\n\t    int featureIndex = coords[1];\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(bucketIndex, featureIndex, i) > getHistogram(bucketIndex, featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(bucketIndex, featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(bucketIndex, featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(bucketIndex, featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an =  2.0 * ${Math.PI} * ((fbin + 0.5 + 36.) / 36.);\n\n\t    for (int i = 0; i < 3; i++) { // stupid modula, while loop not support\n\t      if (an > 2.0 * ${Math.PI}) {\n\t\tan -= 2.0 * ${Math.PI};\n\t      }\n\t    }\n\t    setOutput(an);\n\t  }\n\t`};this.kernelCaches.computeExtremaAngles=e}return r.tidy((()=>{const t=this.kernelCaches.computeExtremaAngles;return r.backend().compileAndRun(t,[e])}))}_computeOrientationHistograms(e,t,n){const s=[];for(let e=0;e<n.length;e++){const r=n[e],i=3*Math.floor(r/2)+(r%2+1);s.push(t[i])}this.tensorCaches.orientationHistograms||r.tidy((()=>{const e=Math.max(1,3),t=-1/(2*e*e),n=1.5*e,i=Math.ceil(n),a=[];for(let e=-i;e<=i;e++)for(let r=-i;r<=i;r++){const s=r*r+e*e;if(s<=n*n){const n=s*t,i=.0013888888*(720+n*(720+n*(360+n*(120+n*(30+n*(6+n))))));a.push([e,r,i])}}const o=[];for(let e=0;e<s.length;e++)o.push([s[e].shape[0],s[e].shape[1]]);this.tensorCaches.orientationHistograms={radialPropertiesT:r.keep(r.tensor(a,[a.length,3])),imageSizesT:r.keep(r.tensor(o,[o.length,2]))}}));const{radialPropertiesT:i,imageSizesT:a}=this.tensorCaches.orientationHistograms;if(!this.kernelCaches.computeOrientationHistograms){const e=[];for(let t=0;t<s.length;t++)e.push("image"+t);let t="float getPixel(int gaussianIndex, int y, int x) {";for(let e=0;e<s.length;e++)t+=`\n\t  if (gaussianIndex == ${e}) {\n\t    return getImage${e}(y, x);\n\t  }\n\t`;t+="}";const n={variableNames:[...e,"imageSizes","extrema","radial"],outputShape:[100,5,i.shape[0],2],userCode:`\n\t  ${t}\n\n\t  void main() {\n\t    ivec4 coords = getOutputCoords();\n\t    int bucketIndex = coords[0];\n\t    int featureIndex = coords[1];\n\t    int radialIndex = coords[2];\n\t    int propertyIndex = coords[3];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int extremaIndex = int(getExtrema(bucketIndex, featureIndex, 1));\n\t    int y = int(getExtrema(bucketIndex, featureIndex, 2));\n\t    int x = int(getExtrema(bucketIndex, featureIndex, 3));\n\n\t    int imageHeight = int(getImageSizes(extremaIndex, 0));\n\t    int imageWidth = int(getImageSizes(extremaIndex, 1));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    if (xp < 1 || xp >= imageWidth - 1 || yp < 1 || yp >= imageHeight - 1) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float dy = getPixel(extremaIndex, yp+1, xp) - getPixel(extremaIndex, yp-1, xp);\n\t    float dx = getPixel(extremaIndex, yp, xp+1) - getPixel(extremaIndex, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * 0.159154943091895;\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`},r={variableNames:["fbinMag"],outputShape:[100,5,36],userCode:`\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int bucketIndex = coords[0];\n\t    int featureIndex = coords[1];\n\t    int binIndex = coords[2];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${i.shape[0]}; i++) {\n\t      float fbin = getFbinMag(bucketIndex, featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(bucketIndex, featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`};this.kernelCaches.computeOrientationHistograms=[n,r]}return r.tidy((()=>{const[t,n]=this.kernelCaches.computeOrientationHistograms,o=r.backend().compileAndRun(t,[...s,a,e,i]);return r.backend().compileAndRun(n,[o])}))}_smoothHistograms(e){if(!this.kernelCaches.smoothHistograms){const e={variableNames:["histogram"],outputShape:[100,5,36],userCode:"\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\n\t    int bucketIndex = coords[0];\n\t    int featureIndex = coords[1];\n\t    int binIndex = coords[2];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(bucketIndex, featureIndex, prevBin) + 0.451862761877606 * getHistogram(bucketIndex, featureIndex, binIndex) + 0.274068619061197 * getHistogram(bucketIndex, featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"};this.kernelCaches.smoothHistograms=e}return r.tidy((()=>{const t=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)e=r.backend().compileAndRun(t,[e]);return e}))}_applyPrune(e,t){const n=[],s=[];for(let e=0;e<100;e++){s.push([]),n.push([]);for(let t=0;t<5;t++)s[e].push([0,0,0,0]),n[e].push(0)}for(let t=0;t<e.length;t++){const r=e[t],i=r.arraySync(),a=r.shape[0],o=r.shape[1],l=o/10,u=a/10;for(let e=0;e<a;e++)for(let r=0;r<o;r++){const a=Math.floor(r/l),o=10*Math.floor(e/u)+a,c=i[e][r],h=Math.abs(c);let d=5;for(;d>=1&&h>n[o][d-1];)d-=1;if(d<5){for(let e=4;e>=d+1;e--)n[o][e]=n[o][e-1],s[o][e][0]=s[o][e-1][0],s[o][e][1]=s[o][e-1][1],s[o][e][2]=s[o][e-1][2],s[o][e][3]=s[o][e-1][3];n[o][d]=h,s[o][d][0]=c,s[o][d][1]=t,s[o][d][2]=e,s[o][d][3]=r}}}return r.tensor(s,[s.length,s[0].length,s[0][0].length])}_buildExtremas(e,t,n,s){const i=n.shape[0],a=n.shape[1],o="w"+a;if(this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),!this.kernelCaches.buildExtremas[o]){const e={variableNames:["image0","image1","image2"],outputShape:[i,a],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    // Step 1: find local maxima/minima\n\t    if (y == 0 || y == ${i} - 1 || x == 0 || x == ${a} - 1) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (getImage1(y, x) * getImage1(y, x) < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        if (getImage1(y, x) < getImage0(y+dy, x+dx)) {\n\t\t  isMax = false;\n\t\t}\n\t        if (getImage1(y, x) < getImage2(y+dy, x+dx)) {\n\t\t  isMax = false;\n\t\t}\n\t        if (getImage1(y, x) < getImage1(y+dy, x+dx)) {\n\t\t  isMax = false;\n\t\t}\n\t      }\n\t    }\n\t    bool isMin = false;\n\t    if (!isMax) {\n\t      isMin = true;\n\n\t      for (int dy = -1; dy <= 1; dy++) {\n\t\tfor (int dx = -1; dx <= 1; dx++) {\n\t\t  if (getImage1(y, x) > getImage0(y+dy, x+dx)) {\n\t\t    isMin = false;\n\t\t  }\n\t\t  if (getImage1(y, x) > getImage2(y+dy, x+dx)) {\n\t\t    isMin = false;\n\t\t  }\n\t\t  if (getImage1(y, x) > getImage1(y+dy, x+dx)) {\n\t\t    isMin = false;\n\t\t  }\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // Step 2: sub-pixel refinement (I'm not sure what that means. Any educational ref?)\n\t    \n\t    // Compute spatial derivatives\n\t    float dx = 0.5 * (getImage1(y, x+1) - getImage1(y, x-1));\n\t    float dy = 0.5 * (getImage1(y+1, x) - getImage1(y-1, x));\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    // Compute scale derivates\n\t    float ds = 0.5 * (getImage2(y, x) - getImage0(y, x)); \n\t    float dss = getImage2(y, x) + getImage0(y, x) - 2. * getImage1(y, x);\n\t    float dxs = 0.25 * ((getImage0(y, x-1) - getImage0(y, x+1)) + (getImage2(y, x+1) - getImage2(y, x-1)));\n\t    float dys = 0.25 * ((getImage0(y-1, x) - getImage0(y+1, x)) + (getImage2(y+1, x) - getImage2(y-1, x)));\n\n\t    // Solve Hessian A * u = b;\n\t    float A0 = dxx;\n\t    float A1 = dxy;\n\t    float A2 = dxs;\n\t    float A3 = dxy;\n\t    float A4 = dyy;\n\t    float A5 = dys;\n\t    float A6 = dxs;\n\t    float A7 = dys;\n\t    float A8 = dss;\n\t    float b0 = -dx;\n\t    float b1 = -dy;\n\t    float b2 = -ds;\n\n\t    float detA = A0 * A4 * A8\n\t\t       - A0 * A5 * A5\n\t\t       - A4 * A2 * A2\n\t\t       - A8 * A1 * A1\n\t\t       + 2. * A1 * A2 * A5;\n\n\t    // B = inverse of A\n\t    float B0 = A4 * A8 - A5 * A7;\n\t    float B1 = A2 * A7 - A1 * A8;\n\t    float B2 = A1 * A5 - A2 * A4;\n\t    float B3 = B1;\n\t    float B4 = A0 * A8 - A2 * A6;\n\t    float B5 = A2 * A3 - A0 * A5;\n\t    float B6 = B2;\n\t    float B7 = B5;\n\t    float B8 = A0 * A4 - A1 * A3;\n\n\t    float u0 = (B0 * b0 + B1 * b1 + B2 * b2) / detA;\n\t    float u1 = (B3 * b0 + B4 * b1 + B5 * b2) / detA;\n\t    float u2 = (B6 * b0 + B7 * b1 + B8 * b2) / detA;\n\n\t    // If points move too much in the sub-pixel update, then the point probably unstable.\n\t    if (u0 * u0 + u1 * u1 > 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float score = getImage1(y, x) - (b0 * u0 + b1 * u1 + b2 * u2);\n\n\t    if (score * score < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    setOutput(score);\n\t  }\n\t`};this.kernelCaches.buildExtremas[o]=e}return r.tidy((()=>{const e=this.kernelCaches.buildExtremas[o];return Math.floor(t.shape[1]/2)===n.shape[1]&&(t=this._downsampleBilinear(t)),r.backend().compileAndRun(e,[t,n,s])}))}_differenceImageBinomial(e,t){return r.tidy((()=>e.sub(t)))}_applyFilter(e){const t=e.shape[0],n=e.shape[1],s="w"+n;if(this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),!this.kernelCaches.applyFilter[s]){const e="\n\tint imax(int a, int b) {\n\t  if (a > b) return a;\n\t  return b;\n\t}\n\tint imin(int a, int b) {\n\t  if (a < b) return a;\n\t  return b;\n\t}\n\n      ",r={variableNames:["p"],outputShape:[t,n],userCode:`\n \t  ${e}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], imax(0, coords[1]-2));\n\t    sum += getP(coords[0], imax(0, coords[1]-1)) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], imin(${n}-1, coords[1]+1)) * 4.;\n\t    sum += getP(coords[0], imin(${n}-1, coords[1]+2));\n\t    setOutput(sum);\n\t  }\n\t`},i={variableNames:["p"],outputShape:[t,n],userCode:`\n \t  ${e}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(imax(coords[0]-2, 0), coords[1]);\n\t    sum += getP(imax(coords[0]-1, 0), coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(imin(coords[0]+1, ${t}-1), coords[1]) * 4.;\n\t    sum += getP(imin(coords[0]+2, ${t}-1), coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t`};this.kernelCaches.applyFilter[s]=[r,i]}return r.tidy((()=>{const[t,n]=this.kernelCaches.applyFilter[s],i=r.backend().compileAndRun(t,[e]);return r.backend().compileAndRun(n,[i])}))}_downsampleBilinear(e){const t=e.shape[0],n=e.shape[1],s="w"+n;if(this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),!this.kernelCaches.downsampleBilinear[s]){const e={variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(n/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\t    float sum = getP(y, x) + getP(y+1,x) + getP(y, x+1) + getP(y+1,x+1);\n\t    sum *= 0.25;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.downsampleBilinear[s]=e}return r.tidy((()=>{const t=this.kernelCaches.downsampleBilinear[s];return r.backend().compileAndRun(t,[e])}))}}}},2793:e=>{const t=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],n=[];for(let e=0;e<t.length;e++){const r=t[e].sigma;for(let s=0;s<t[e].points.length;s++){const i=t[e].points[s];n.push([r,i[0],i[1]])}}e.exports={FREAKPOINTS:n}},7420:e=>{const t=(e,t,n,r)=>({x:e[0][0]*t+e[0][1]*n+e[0][3],y:e[1][0]*t+e[1][1]*n+e[1][3],z:e[2][0]*t+e[2][1]*n+e[2][3]});e.exports={buildModelViewProjectionTransform:(e,t)=>[[e[0][0]*t[0][0]+e[0][2]*t[2][0],e[0][0]*t[0][1]+e[0][2]*t[2][1],e[0][0]*t[0][2]+e[0][2]*t[2][2],e[0][0]*t[0][3]+e[0][2]*t[2][3]],[e[1][1]*t[1][0]+e[1][2]*t[2][0],e[1][1]*t[1][1]+e[1][2]*t[2][1],e[1][1]*t[1][2]+e[1][2]*t[2][2],e[1][1]*t[1][3]+e[1][2]*t[2][3]],[t[2][0],t[2][1],t[2][2],t[2][3]]],applyModelViewProjectionTransform:t,computeScreenCoordiate:(e,n,r,s)=>{const{x:i,y:a,z:o}=t(e,n,r);return{x:i/o,y:a/o}}}},7508:(e,t,n)=>{const{resize:r}=n(9140);e.exports={buildImageList:e=>{const t=[];let n=28/Math.min(e.width,e.height);for(;;)if(t.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}t.push(n),t.reverse();const s=[];for(let n=0;n<t.length;n++)e.width,t[n],e.height,t[n],s.push(Object.assign(r({image:e,ratio:t[n]}),{scale:t[n]}));return s}}},7325:(e,t,n)=>{const r=n(2563);e.exports={InputLoader:class{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];const n=document.createElement("canvas").getContext("2d");n.canvas.width=e,n.canvas.height=t,this.context=n,this.program=this.buildProgram(e,t);const s=r.backend();this.tempPixelHandle=s.makeTensorInfo(this.texShape,"int32"),s.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return r.tidy((()=>{let t=r.browser.fromPixels(e);return t=t.mean(2),t}))}loadInput(e){this.context.drawImage(e,0,0,this.width,this.height);const t=r.backend();return t.gpgpu.uploadPixelDataToTexture(t.getTexture(this.tempPixelHandle.dataId),this.context.canvas),t.compileAndRun(this.program,[this.tempPixelHandle],"float32")}buildProgram(e,t){const n=2===r.env().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((values.r + values.g + values.b) * 255.0 / 3.0);\n\t}\n      `}}}}},6417:(e,t,n)=>{const r=n(2563),{buildModelViewProjectionTransform:s,computeScreenCoordiate:i}=n(7420);e.exports={Tracker:class{constructor(e,t,n,r,s,i=!1){this.trackingDataList=e,this.imageListList=t,this.projectionTransform=n,this.debugMode=i;let a=0;for(let t=0;t<e.length;t++)for(let n=0;n<e[t].length;n++)a=Math.max(a,e[t][n].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let n=0;n<e.length;n++){const{featureList:r,imagePixelsList:s,imagePropertiesList:i}=this._prebuild(e[n],t[n],a);this.featurePointsListT[n]=r,this.imagePixelsListT[n]=s,this.imagePropertiesListT[n]=i}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)for(let r=0;r<this.featurePointsListT[n].length;r++)this.track(e,[t,t,t],n,r)}track(e,t,n,r=-1){let i=null;const a=[],o=[];for(let e=0;e<t.length;e++)a.push(s(this.projectionTransform,t[e])),o.push(this._buildAdjustedModelViewTransform(a[e]));const l=a[0],u=o[0],c=-1!==r?r:this._computeExpectedKeyframe(l,n),h=this.featurePointsListT[n][c],d=this.imagePixelsListT[n][c],p=this.imagePropertiesListT[n][c],f=this._computeProjection(u,e,n,c),m=this._computeSearchPoints(h,o),{matchingPointsT:g,simT:y}=this._computeMatching(h,m,d,p,f),b=this._markerPointToScreen(g,u),v=this._combine(b,y);this.debugMode&&(i={keyframeIndex:c,matchingPoints:g.arraySync(),trackedPoints:b.arraySync(),searchPoints:m.arraySync(),projectedImage:f.arraySync(),sim:y.arraySync()});const x=v.arraySync();o.forEach((e=>{e.dispose()})),m.dispose(),f.dispose(),u.dispose(),g.dispose(),b.dispose(),y.dispose(),v.dispose();const w=this.trackingDataList[n][c],k=[],S=[];for(let e=0;e<w.points.length;e++)x[e][2]>.8&&(k.push({x:x[e][0],y:x[e][1]}),S.push({x:w.points[e].x/w.scale,y:w.points[e].y/w.scale,z:0}));return{worldCoords:S,screenCoords:k,debugExtra:i}}_combine(e,t){return r.tidy((()=>r.concat([e,t.expandDims(1)],1)))}_computeSearchPoints(e,t){const n=e.shape[0];if(!this.kernelCaches.computeSearchPoints){const e={variableNames:["point0","point1","point2"],outputShape:[3,n,2],userCode:"\n\t  void main() {\n\t      ivec3 coords = getOutputCoords();\n\n\t      int featureIndex = coords[1];\n\t      int xyIndex = coords[2];\n\n\t      if (coords[0] == 0) {\n\t\tsetOutput(getPoint0(featureIndex, xyIndex)); \n\t\treturn;\n\t      } else if (coords[0] == 1) {\n\t        setOutput(getPoint0(featureIndex, xyIndex) * 2. - getPoint1(featureIndex, xyIndex));\n\t\treturn;\n\t      } else if (coords[0] == 2) {\n\t        setOutput(getPoint0(featureIndex, xyIndex) * 3. - getPoint1(featureIndex, xyIndex) * 3. + getPoint2(featureIndex, xyIndex));\n\t\treturn;\n\t      }\n\t  }\n\t"},t={variableNames:["point","M"],outputShape:[3,n,2],userCode:"\n\t  void main() {\n\t      ivec3 coords = getOutputCoords();\n\n\t      // Note that all elements of M is scaled by the factor 1000\n\t      //   e.g. float m00 = getM(0, 0) * 1000;\n\t      //   but the computation somehow offset each other\n\t      float m00 = getM(0, 0);\n\t      float m01 = getM(0, 1);\n\t      float m03 = getM(0, 3);\n\t      float m10 = getM(1, 0);\n\t      float m11 = getM(1, 1);\n\t      float m13 = getM(1, 3);\n\t      float m20 = getM(2, 0);\n\t      float m21 = getM(2, 1);\n\t      float m23 = getM(2, 3);\n\n\t      float sx2 = getPoint(coords[0], coords[1], 0);\n\t      float sy2 = getPoint(coords[0], coords[1], 1);\n\n\t      float c11 = m20 * sx2 - m00;\n\t      float c12 = m21 * sx2 - m01;\n\t      float c21 = m20 * sy2 - m10;\n\t      float c22 = m21 * sy2 - m11;\n\t      float b1 = m03 - m23 * sx2;\n\t      float b2 = m13 - m23 * sy2;\n\n\t      float m = c11 * c22 - c12 * c21;\n\n\t      float mx2 = (c22 * b1 - c12 * b2) / m;\n\t      float my2 = (c11 * b2 - c21 * b1) / m;\n\n\t      if (coords[2] == 0) {\n\t\tsetOutput(mx2);\n\t      }\n\t      if (coords[2] == 1) {\n\t\tsetOutput(my2);\n\t      }\n\t    }\n\t"};this.kernelCaches.computeSearchPoints=[e,t]}const s=this.kernelCaches.computeSearchPoints;return r.tidy((()=>{const n=this._markerPointToScreen(e,t[0]),i=this._markerPointToScreen(e,t[1]),a=this._markerPointToScreen(e,t[2]),o=r.backend().compileAndRun(s[0],[n,i,a]);return r.backend().compileAndRun(s[1],[o,t[0]])}))}_markerPointToScreen(e,t){if(!this.kernelCaches.markerPointToScreen){const t={variableNames:["point","M"],outputShape:e.shape,userCode:"\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      // Note that all elements of M is scaled by the factor 1000\n\t      //   e.g. float m00 = getM(0, 0) * 1000;\n\t      //   but the computation somehow offset each other\n\t      float m00 = getM(0, 0);\n\t      float m01 = getM(0, 1);\n\t      float m03 = getM(0, 3);\n\t      float m10 = getM(1, 0);\n\t      float m11 = getM(1, 1);\n\t      float m13 = getM(1, 3);\n\t      float m20 = getM(2, 0);\n\t      float m21 = getM(2, 1);\n\t      float m23 = getM(2, 3);\n\n\t      float x = getPoint(coords.x, 0);\n\t      float y = getPoint(coords.x, 1);\n\t      float uz = (x * m20) + (y * m21) + m23;\n\n\t      if (coords.y == 0) {\n\t\t  float ux = (x * m00) + (y * m01) + m03;\n\t\t  setOutput(ux / uz);\n\t      }\n\t      if (coords.y == 1) {\n\t\t  float uy = (x * m10) + (y * m11) + m13;\n\t\t  setOutput(uy / uz);\n\t      }\n\t    }\n\t"};this.kernelCaches.markerPointToScreen=t}return r.tidy((()=>{const n=this.kernelCaches.markerPointToScreen;return r.backend().compileAndRun(n,[e,t])}))}_computeMatching(e,t,n,s,i){const a=i.shape[0],o=i.shape[1],l=t.shape[0],u=t.shape[1];if(!this.kernelCaches.computeMatching){const e={variableNames:["features","search","markerPixels","markerProperties","targetPixels"],outputShape:[u,21*l*21],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchLocationIndex = coords[1] / 441;\n\t    int searchOffsetIndex = imod(coords[1], 441);\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int fCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int fCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\t    //fCenterY = markerHeight - 1 - fCenterY;\n\n\t    int sCenterX = int(getSearch(searchLocationIndex, featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getSearch(searchLocationIndex, featureIndex, 1) * markerScale);\n\t    //sCenterY = markerHeight - 1 - sCenterY; // upside down\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\t    //int sy = sCenterY - searchOffsetY + 10; // upside down\n\n\t    //setOutput( float(1000 * sy2 + sx2));\n\t    //return;\n\n\t    if (sx < 6 || sx >= (${o} - 6) || sy < 6 || sy >= (${a} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n              for (int i = 0; i < 13 * 13; i++) {\n\t\tint templateOffsetX = imod(i, 13) * 1;\n\t\tint templateOffsetY = i / 13 * 1;\n\n\t\tint fx2 = fCenterX + templateOffsetX - 6;\n\t\tint fy2 = fCenterY + templateOffsetY - 6;\n\n\t\tint sx2 = sx + templateOffsetX - 6;\n\t\tint sy2 = sy + templateOffsetY - 6;\n\n\t\tint markerPixelIndex = fy2 * markerWidth + fx2;\n\t\tfloat markerPixel = getMarkerPixels(markerPixelIndex);\n\t\tfloat targetPixel = getTargetPixels(sy2, sx2);\n\n\t      \tsumTemplate += markerPixel;\n\t      \tsumTemplateSquare += markerPixel * markerPixel;\n\t\tsumPoint += targetPixel;\n\t\tsumPointSquare += targetPixel * targetPixel;\n\t\tsumPointTemplate += targetPixel * markerPixel;\n\t      }\n\t      \n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},t={variableNames:["searchPoints","markerProperties","maxIndex"],outputShape:[u,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      //setOutput(getSearchPoints(searchLocationIndex, featureIndex, 0) + float(searchOffsetX) - 10.);\n\t      setOutput(getSearchPoints(searchLocationIndex, featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      //setOutput(getSearchPoints(searchLocationIndex, featureIndex, 1) + float(searchOffsetY) - 10.);\n\t      setOutput(getSearchPoints(searchLocationIndex, featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},n={variableNames:["sims","maxIndex"],outputShape:[u],userCode:"\n\t  void main() {\n\t    int coord = getOutputCoords();\n\t    int featureIndex = coord;\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[e,t,n]}return r.tidy((()=>{const a=this.kernelCaches.computeMatching,o=r.backend().compileAndRun(a[0],[e,t,n,s,i]),l=o.argMax(1);return{matchingPointsT:r.backend().compileAndRun(a[1],[t,s,l]),simT:r.backend().compileAndRun(a[2],[o,l])}}))}_computeProjection(e,t,n,s){if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection=[]),!this.kernelCaches.computeProjection[s]){const e=this.imageListList[n][s].width,t=this.imageListList[n][s].height,r=this.imageListList[n][s].scale,i={variableNames:["M","pixel"],outputShape:[t,e],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      //float y = float( ${t} - coords[0]) / float(${r});\n\t      float y = float(coords[0]) / float(${r});\n\t      float x = float(coords[1]) / float(${r});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\n\t      setOutput(getPixel( int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[s]=i}return r.tidy((()=>{const n=this.kernelCaches.computeProjection[s];return r.backend().compileAndRun(n,[e,t])}))}_buildAdjustedModelViewTransform(e){return r.tidy((()=>{let t=[];for(let n=0;n<e.length;n++){t.push([]);for(let r=0;r<e[n].length;r++)t[n].push(e[n][r]/1e3)}return r.tensor(t,[3,4])}))}_prebuild(e,t,n){return r.tidy((()=>{const s=[],i=[];for(let e=0;e<t.length;e++)s.push(r.tensor(t[e].data,[t[e].width*t[e].height])),i.push(r.tensor([t[e].width,t[e].height,t[e].scale],[3]));const a=[];for(let s=0;s<e.length;s++){const i=t[s].scale;let o=[];for(let t=0;t<n;t++)t<e[s].points.length?o.push([e[s].points[t].x/i,e[s].points[t].y/i]):o.push([-1,-1]);a.push(r.tensor(o,[o.length,2],"float32"))}return{featureList:a,imagePixelsList:s,imagePropertiesList:i}}))}_computeExpectedKeyframe(e,t){const n=i(e,10,10,0),r=i(e,20,10,0),s=i(e,10,20,0);if(n&&r&&s){const e=(r.x-n.x)*(r.x-n.x)+(r.y-n.y)*(r.y-n.y),i=(s.x-n.x)*(s.x-n.x)+(s.y-n.y)*(s.y-n.y),a=Math.sqrt(Math.min(e,i))/10,o=this.imageListList[t];let l=0;for(let e=1;e<o.length;e++){const t=Math.abs(a-o[l].scale);Math.abs(a-o[e].scale)<t&&(l=e)}return l>=5?5:l}return 0}}}},9140:e=>{e.exports={downsampleBilinear:({image:e})=>{const{data:t,width:n,height:r}=e,s=Math.floor(n/2),i=Math.floor(r/2),a=new Float32Array(s*i),o=[0,1,n,n+1];for(let e=0;e<i;e++)for(let r=0;r<s;r++){let i=2*e*n+2*r,l=0;for(let e=0;e<o.length;e++)l+=t[i+o[e]];l*=.25,a[e*s+r]=l}return{data:a,width:s,height:i}},upsampleBilinear:({image:e,padOneWidth:t,padOneHeight:n})=>{const{width:r,height:s,data:i}=e,a=2*e.width+(t?1:0),o=2*e.height+(n?1:0),l=new Float32Array(a*o);for(let e=0;e<a;e++){const t=.5*e-.25;let n=Math.floor(t),u=Math.ceil(t);n<0&&(n=0),u>=r&&(u=r-1);for(let c=0;c<o;c++){const o=.5*c-.25;let h=Math.floor(o),d=Math.ceil(o);h<0&&(h=0),d>=s&&(d=s-1);const p=(u-t)*(d-o)*i[h*r+n]+(u-t)*(o-h)*i[d*r+n]+(t-n)*(d-o)*i[h*r+u]+(t-n)*(o-h)*i[d*r+u];l[c*a+e]=p}}return{data:l,width:a,height:o}},resize:({image:e,ratio:t})=>{const n=Math.round(e.width*t),r=Math.round(e.height*t),s=new Uint8Array(n*r);for(let i=0;i<n;i++){let a=Math.round(1*i/t),o=Math.round(1*(i+1)/t)-1;o>=e.width&&(o=e.width-1);for(let l=0;l<r;l++){let r=Math.round(1*l/t),u=Math.round(1*(l+1)/t)-1;u>=e.height&&(u=e.height-1);let c=0,h=0;for(let t=a;t<=o;t++)for(let n=r;n<=u;n++)c+=1*e.data[n*e.width+t],h+=1;s[l*n+i]=Math.floor(c/h)}}return{data:s,width:n,height:r}}}},8138:(e,t,n)=>{const{Controller:r}=n(9356),{Compiler:s}=n(2138);n(8481),e.exports=window.MINDAR={Controller:r,Compiler:s}},2749:(e,t,n)=>{n(4412);const r=n(9894).Z,s=n(7676).Z,i=n(2810).Z;e.exports={UI:class{constructor({uiLoading:e,uiScanning:t,uiError:n}){"yes"===e?this.loadingModal=this._loadHTML(r):"no"!==e&&(this.loadingModal=document.querySelector(e)),"yes"===n?this.compatibilityModal=this._loadHTML(s):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===t?this.scanningMask=this._loadHTML(i):"no"!==t&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const n=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}}},3906:()=>{},2993:()=>{},8352:()=>{},4589:()=>{},1758:()=>{},5968:()=>{}},t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="",n(8138)})();